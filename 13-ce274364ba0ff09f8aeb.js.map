{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js"],"names":["Object","defineProperty","exports","value","ColorSpace","_util","__webpack_require__","_primitives","unreachable","prototype","getRgb","src","srcOffset","rgb","Uint8Array","this","getRgbItem","dest","destOffset","getRgbBuffer","count","bits","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","bpc","comps","i","ii","rgbBuf","numComponentColors","needsResizing","numComps","name","key","allColors","Uint16Array","destPos","rgbPos","colorMap","w1","h1","w2","h2","j","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","Math","floor","usesZeroToOneRange","parse","cs","xref","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","Array","isArray","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFn","AlternateCS","range","LabCS","FormatError","arguments","length","fetchIfRef","isName","isDict","colorSpaces","get","resCS","params","mode","getArray","dict","altIR","warn","isStream","getBytes","create","isDefaultDecode","decode","n","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","pos","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","bytes","set","isString","charCodeAt","start","outputDelta","lookupPos","c","q","r","g","b","subarray","convertToRgb","srcScale","m","y","k","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","val","max","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","sRGBTransferFunction","color","adjustToRange","min","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","XYZ_D65","LMS_D65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","265","e","t","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","Error","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","shift","isCmd","tryShift","MissingDataException","cipherTransform","Cmd","cmd","makeInlineImage","array","isEOF","push","Dict","makeStream","Number","isInteger","num","ref","Ref","str","decryptString","findDefaultInlineStreamEnd","stream","startPos","state","ch","maybeEIPos","getByte","assert","followingBytes","peekBytes","skip","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","getUint16","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","peekByte","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","makeSubStream","cacheKey","imageBytes","reset","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","end","scanBytes","scanLength","makeFilter","maybeLength","filterArray","paramsArray","NullStream","xrefStreamStats","stats","streamTypes","StreamType","FLATE","PredictorStream","FlateStream","LZW","earlyChange","has","LZWStream","DCT","JpegStream","JPX","JpxStream","A85","Ascii85Stream","AHX","AsciiHexStream","CCF","CCITTFaxStream","RL","RunLengthStream","JBIG","Jbig2Stream","ex","knownCommands","strBuf","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","Name","getHexString","firstDigit","secondDigit","isFirstHex","comment","EOF","knownCommandFound","possibleCommand","getInt","allowZeroValue","obj","linDict","parser","obj1","obj2","obj3","isNum","hints","hintsLength","item","index","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","_jpg","DecodeStream","call","configurable","ensureBuffer","requested","readBlock","eof","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transform","Int32Array","transformNeeded","maxValue","decodeTransform","colorTransform","data","getData","drawWidth","drawHeight","buffer","bufferLength","getIR","forceDataSchema","createObjectURL","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","offset","kk","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","fn","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","Util","extendObj","lastChunk","transfers","cached","send","operatorList","getLookupTableFactory","getGlyphsUnicode","AE","AEacute","AEmacron","AEsmall","Aacute","Aacutesmall","Abreve","Abreveacute","Abrevecyrillic","Abrevedotbelow","Abrevegrave","Abrevehookabove","Abrevetilde","Acaron","Acircle","Acircumflex","Acircumflexacute","Acircumflexdotbelow","Acircumflexgrave","Acircumflexhookabove","Acircumflexsmall","Acircumflextilde","Acute","Acutesmall","Acyrillic","Adblgrave","Adieresis","Adieresiscyrillic","Adieresismacron","Adieresissmall","Adotbelow","Adotmacron","Agrave","Agravesmall","Ahookabove","Aiecyrillic","Ainvertedbreve","Alpha","Alphatonos","Amacron","Amonospace","Aogonek","Aring","Aringacute","Aringbelow","Aringsmall","Asmall","Atilde","Atildesmall","Aybarmenian","Bcircle","Bdotaccent","Bdotbelow","Becyrillic","Benarmenian","Beta","Bhook","Blinebelow","Bmonospace","Brevesmall","Bsmall","Btopbar","Caarmenian","Cacute","Caron","Caronsmall","Ccaron","Ccedilla","Ccedillaacute","Ccedillasmall","Ccircle","Ccircumflex","Cdot","Cdotaccent","Cedillasmall","Chaarmenian","Cheabkhasiancyrillic","Checyrillic","Chedescenderabkhasiancyrillic","Chedescendercyrillic","Chedieresiscyrillic","Cheharmenian","Chekhakassiancyrillic","Cheverticalstrokecyrillic","Chi","Chook","Circumflexsmall","Cmonospace","Coarmenian","Csmall","D","DZ","DZcaron","Daarmenian","Dafrican","Dcaron","Dcedilla","Dcircle","Dcircumflexbelow","Dcroat","Ddotaccent","Ddotbelow","Decyrillic","Deicoptic","Delta","Deltagreek","Dhook","Dieresis","DieresisAcute","DieresisGrave","Dieresissmall","Digammagreek","Djecyrillic","Dlinebelow","Dmonospace","Dotaccentsmall","Dslash","Dsmall","Dtopbar","Dz","Dzcaron","Dzeabkhasiancyrillic","Dzecyrillic","Dzhecyrillic","E","Eacute","Eacutesmall","Ebreve","Ecaron","Ecedillabreve","Echarmenian","Ecircle","Ecircumflex","Ecircumflexacute","Ecircumflexbelow","Ecircumflexdotbelow","Ecircumflexgrave","Ecircumflexhookabove","Ecircumflexsmall","Ecircumflextilde","Ecyrillic","Edblgrave","Edieresis","Edieresissmall","Edot","Edotaccent","Edotbelow","Efcyrillic","Egrave","Egravesmall","Eharmenian","Ehookabove","Eightroman","Einvertedbreve","Eiotifiedcyrillic","Elcyrillic","Elevenroman","Emacron","Emacronacute","Emacrongrave","Emcyrillic","Emonospace","Encyrillic","Endescendercyrillic","Eng","Enghecyrillic","Enhookcyrillic","Eogonek","Eopen","Epsilon","Epsilontonos","Ercyrillic","Ereversed","Ereversedcyrillic","Escyrillic","Esdescendercyrillic","Esh","Esmall","Eta","Etarmenian","Etatonos","Eth","Ethsmall","Etilde","Etildebelow","Euro","Ezh","Ezhcaron","Ezhreversed","F","Fcircle","Fdotaccent","Feharmenian","Feicoptic","Fhook","Fitacyrillic","Fiveroman","Fmonospace","Fourroman","Fsmall","GBsquare","Gacute","Gamma","Gammaafrican","Gangiacoptic","Gbreve","Gcaron","Gcedilla","Gcircle","Gcircumflex","Gcommaaccent","Gdot","Gdotaccent","Gecyrillic","Ghadarmenian","Ghemiddlehookcyrillic","Ghestrokecyrillic","Gheupturncyrillic","Ghook","Gimarmenian","Gjecyrillic","Gmacron","Gmonospace","Grave","Gravesmall","Gsmall","Gsmallhook","Gstroke","H","H18533","H18543","H18551","H22073","HPsquare","Haabkhasiancyrillic","Hadescendercyrillic","Hardsigncyrillic","Hbar","Hbrevebelow","Hcedilla","Hcircle","Hcircumflex","Hdieresis","Hdotaccent","Hdotbelow","Hmonospace","Hoarmenian","Horicoptic","Hsmall","Hungarumlaut","Hungarumlautsmall","Hzsquare","I","IAcyrillic","IJ","IUcyrillic","Iacute","Iacutesmall","Ibreve","Icaron","Icircle","Icircumflex","Icircumflexsmall","Icyrillic","Idblgrave","Idieresis","Idieresisacute","Idieresiscyrillic","Idieresissmall","Idot","Idotaccent","Idotbelow","Iebrevecyrillic","Iecyrillic","Ifraktur","Igrave","Igravesmall","Ihookabove","Iicyrillic","Iinvertedbreve","Iishortcyrillic","Imacron","Imacroncyrillic","Imonospace","Iniarmenian","Iocyrillic","Iogonek","Iota","Iotaafrican","Iotadieresis","Iotatonos","Ismall","Istroke","Itilde","Itildebelow","Izhitsacyrillic","Izhitsadblgravecyrillic","J","Jaarmenian","Jcircle","Jcircumflex","Jecyrillic","Jheharmenian","Jmonospace","Jsmall","K","KBsquare","KKsquare","Kabashkircyrillic","Kacute","Kacyrillic","Kadescendercyrillic","Kahookcyrillic","Kappa","Kastrokecyrillic","Kaverticalstrokecyrillic","Kcaron","Kcedilla","Kcircle","Kcommaaccent","Kdotbelow","Keharmenian","Kenarmenian","Khacyrillic","Kheicoptic","Khook","Kjecyrillic","Klinebelow","Kmonospace","Koppacyrillic","Koppagreek","Ksicyrillic","Ksmall","LJ","LL","Lacute","Lambda","Lcaron","Lcedilla","Lcircle","Lcircumflexbelow","Lcommaaccent","Ldot","Ldotaccent","Ldotbelow","Ldotbelowmacron","Liwnarmenian","Lj","Ljecyrillic","Llinebelow","Lmonospace","Lslash","Lslashsmall","Lsmall","MBsquare","Macron","Macronsmall","Macute","Mcircle","Mdotaccent","Mdotbelow","Menarmenian","Mmonospace","Msmall","Mturned","Mu","NJ","Nacute","Ncaron","Ncedilla","Ncircle","Ncircumflexbelow","Ncommaaccent","Ndotaccent","Ndotbelow","Nhookleft","Nineroman","Nj","Njecyrillic","Nlinebelow","Nmonospace","Nowarmenian","Nsmall","Ntilde","Ntildesmall","Nu","O","OE","OEsmall","Oacute","Oacutesmall","Obarredcyrillic","Obarreddieresiscyrillic","Obreve","Ocaron","Ocenteredtilde","Ocircle","Ocircumflex","Ocircumflexacute","Ocircumflexdotbelow","Ocircumflexgrave","Ocircumflexhookabove","Ocircumflexsmall","Ocircumflextilde","Ocyrillic","Odblacute","Odblgrave","Odieresis","Odieresiscyrillic","Odieresissmall","Odotbelow","Ogoneksmall","Ograve","Ogravesmall","Oharmenian","Ohm","Ohookabove","Ohorn","Ohornacute","Ohorndotbelow","Ohorngrave","Ohornhookabove","Ohorntilde","Ohungarumlaut","Oi","Oinvertedbreve","Omacron","Omacronacute","Omacrongrave","Omega","Omegacyrillic","Omegagreek","Omegaroundcyrillic","Omegatitlocyrillic","Omegatonos","Omicron","Omicrontonos","Omonospace","Oneroman","Oogonek","Oogonekmacron","Oopen","Oslash","Oslashacute","Oslashsmall","Osmall","Ostrokeacute","Otcyrillic","Otilde","Otildeacute","Otildedieresis","Otildesmall","P","Pacute","Pcircle","Pdotaccent","Pecyrillic","Peharmenian","Pemiddlehookcyrillic","Phi","Phook","Pi","Piwrarmenian","Pmonospace","Psi","Psicyrillic","Psmall","Q","Qcircle","Qmonospace","Qsmall","R","Raarmenian","Racute","Rcaron","Rcedilla","Rcircle","Rcommaaccent","Rdblgrave","Rdotaccent","Rdotbelow","Rdotbelowmacron","Reharmenian","Rfraktur","Rho","Ringsmall","Rinvertedbreve","Rlinebelow","Rmonospace","Rsmall","Rsmallinverted","Rsmallinvertedsuperior","S","SF010000","SF020000","SF030000","SF040000","SF050000","SF060000","SF070000","SF080000","SF090000","SF100000","SF110000","SF190000","SF200000","SF210000","SF220000","SF230000","SF240000","SF250000","SF260000","SF270000","SF280000","SF360000","SF370000","SF380000","SF390000","SF400000","SF410000","SF420000","SF430000","SF440000","SF450000","SF460000","SF470000","SF480000","SF490000","SF500000","SF510000","SF520000","SF530000","SF540000","Sacute","Sacutedotaccent","Sampigreek","Scaron","Scarondotaccent","Scaronsmall","Scedilla","Schwa","Schwacyrillic","Schwadieresiscyrillic","Scircle","Scircumflex","Scommaaccent","Sdotaccent","Sdotbelow","Sdotbelowdotaccent","Seharmenian","Sevenroman","Shaarmenian","Shacyrillic","Shchacyrillic","Sheicoptic","Shhacyrillic","Shimacoptic","Sigma","Sixroman","Smonospace","Softsigncyrillic","Ssmall","Stigmagreek","T","Tau","Tbar","Tcaron","Tcedilla","Tcircle","Tcircumflexbelow","Tcommaaccent","Tdotaccent","Tdotbelow","Tecyrillic","Tedescendercyrillic","Tenroman","Tetsecyrillic","Theta","Thook","Thorn","Thornsmall","Threeroman","Tildesmall","Tiwnarmenian","Tlinebelow","Tmonospace","Toarmenian","Tonefive","Tonesix","Tonetwo","Tretroflexhook","Tsecyrillic","Tshecyrillic","Tsmall","Twelveroman","Tworoman","U","Uacute","Uacutesmall","Ubreve","Ucaron","Ucircle","Ucircumflex","Ucircumflexbelow","Ucircumflexsmall","Ucyrillic","Udblacute","Udblgrave","Udieresis","Udieresisacute","Udieresisbelow","Udieresiscaron","Udieresiscyrillic","Udieresisgrave","Udieresismacron","Udieresissmall","Udotbelow","Ugrave","Ugravesmall","Uhookabove","Uhorn","Uhornacute","Uhorndotbelow","Uhorngrave","Uhornhookabove","Uhorntilde","Uhungarumlaut","Uhungarumlautcyrillic","Uinvertedbreve","Ukcyrillic","Umacron","Umacroncyrillic","Umacrondieresis","Umonospace","Uogonek","Upsilon","Upsilon1","Upsilonacutehooksymbolgreek","Upsilonafrican","Upsilondieresis","Upsilondieresishooksymbolgreek","Upsilonhooksymbol","Upsilontonos","Uring","Ushortcyrillic","Usmall","Ustraightcyrillic","Ustraightstrokecyrillic","Utilde","Utildeacute","Utildebelow","V","Vcircle","Vdotbelow","Vecyrillic","Vewarmenian","Vhook","Vmonospace","Voarmenian","Vsmall","Vtilde","W","Wacute","Wcircle","Wcircumflex","Wdieresis","Wdotaccent","Wdotbelow","Wgrave","Wmonospace","Wsmall","Xcircle","Xdieresis","Xdotaccent","Xeharmenian","Xi","Xmonospace","Xsmall","Yacute","Yacutesmall","Yatcyrillic","Ycircle","Ycircumflex","Ydieresis","Ydieresissmall","Ydotaccent","Ydotbelow","Yericyrillic","Yerudieresiscyrillic","Ygrave","Yhook","Yhookabove","Yiarmenian","Yicyrillic","Yiwnarmenian","Ymonospace","Ysmall","Ytilde","Yusbigcyrillic","Yusbigiotifiedcyrillic","Yuslittlecyrillic","Yuslittleiotifiedcyrillic","Zaarmenian","Zacute","Zcaron","Zcaronsmall","Zcircle","Zcircumflex","Zdot","Zdotaccent","Zdotbelow","Zecyrillic","Zedescendercyrillic","Zedieresiscyrillic","Zeta","Zhearmenian","Zhebrevecyrillic","Zhecyrillic","Zhedescendercyrillic","Zhedieresiscyrillic","Zlinebelow","Zmonospace","Zsmall","Zstroke","aabengali","aacute","aadeva","aagujarati","aagurmukhi","aamatragurmukhi","aarusquare","aavowelsignbengali","aavowelsigndeva","aavowelsigngujarati","abbreviationmarkarmenian","abbreviationsigndeva","abengali","abopomofo","abreve","abreveacute","abrevecyrillic","abrevedotbelow","abrevegrave","abrevehookabove","abrevetilde","acaron","acircle","acircumflex","acircumflexacute","acircumflexdotbelow","acircumflexgrave","acircumflexhookabove","acircumflextilde","acute","acutebelowcmb","acutecmb","acutecomb","acutedeva","acutelowmod","acutetonecmb","acyrillic","adblgrave","addakgurmukhi","adeva","adieresis","adieresiscyrillic","adieresismacron","adotbelow","adotmacron","ae","aeacute","aekorean","aemacron","afii00208","afii08941","afii10017","afii10018","afii10019","afii10020","afii10021","afii10022","afii10023","afii10024","afii10025","afii10026","afii10027","afii10028","afii10029","afii10030","afii10031","afii10032","afii10033","afii10034","afii10035","afii10036","afii10037","afii10038","afii10039","afii10040","afii10041","afii10042","afii10043","afii10044","afii10045","afii10046","afii10047","afii10048","afii10049","afii10050","afii10051","afii10052","afii10053","afii10054","afii10055","afii10056","afii10057","afii10058","afii10059","afii10060","afii10061","afii10062","afii10063","afii10064","afii10065","afii10066","afii10067","afii10068","afii10069","afii10070","afii10071","afii10072","afii10073","afii10074","afii10075","afii10076","afii10077","afii10078","afii10079","afii10080","afii10081","afii10082","afii10083","afii10084","afii10085","afii10086","afii10087","afii10088","afii10089","afii10090","afii10091","afii10092","afii10093","afii10094","afii10095","afii10096","afii10097","afii10098","afii10099","afii10100","afii10101","afii10102","afii10103","afii10104","afii10105","afii10106","afii10107","afii10108","afii10109","afii10110","afii10145","afii10146","afii10147","afii10148","afii10192","afii10193","afii10194","afii10195","afii10196","afii10831","afii10832","afii10846","afii299","afii300","afii301","afii57381","afii57388","afii57392","afii57393","afii57394","afii57395","afii57396","afii57397","afii57398","afii57399","afii57400","afii57401","afii57403","afii57407","afii57409","afii57410","afii57411","afii57412","afii57413","afii57414","afii57415","afii57416","afii57417","afii57418","afii57419","afii57420","afii57421","afii57422","afii57423","afii57424","afii57425","afii57426","afii57427","afii57428","afii57429","afii57430","afii57431","afii57432","afii57433","afii57434","afii57440","afii57441","afii57442","afii57443","afii57444","afii57445","afii57446","afii57448","afii57449","afii57450","afii57451","afii57452","afii57453","afii57454","afii57455","afii57456","afii57457","afii57458","afii57470","afii57505","afii57506","afii57507","afii57508","afii57509","afii57511","afii57512","afii57513","afii57514","afii57519","afii57534","afii57636","afii57645","afii57658","afii57664","afii57665","afii57666","afii57667","afii57668","afii57669","afii57670","afii57671","afii57672","afii57673","afii57674","afii57675","afii57676","afii57677","afii57678","afii57679","afii57680","afii57681","afii57682","afii57683","afii57684","afii57685","afii57686","afii57687","afii57688","afii57689","afii57690","afii57694","afii57695","afii57700","afii57705","afii57716","afii57717","afii57718","afii57723","afii57793","afii57794","afii57795","afii57796","afii57797","afii57798","afii57799","afii57800","afii57801","afii57802","afii57803","afii57804","afii57806","afii57807","afii57839","afii57841","afii57842","afii57929","afii61248","afii61289","afii61352","afii61573","afii61574","afii61575","afii61664","afii63167","afii64937","agrave","agujarati","agurmukhi","ahiragana","ahookabove","aibengali","aibopomofo","aideva","aiecyrillic","aigujarati","aigurmukhi","aimatragurmukhi","ainarabic","ainfinalarabic","aininitialarabic","ainmedialarabic","ainvertedbreve","aivowelsignbengali","aivowelsigndeva","aivowelsigngujarati","akatakana","akatakanahalfwidth","akorean","alef","alefarabic","alefdageshhebrew","aleffinalarabic","alefhamzaabovearabic","alefhamzaabovefinalarabic","alefhamzabelowarabic","alefhamzabelowfinalarabic","alefhebrew","aleflamedhebrew","alefmaddaabovearabic","alefmaddaabovefinalarabic","alefmaksuraarabic","alefmaksurafinalarabic","alefmaksurainitialarabic","alefmaksuramedialarabic","alefpatahhebrew","alefqamatshebrew","aleph","allequal","alpha","alphatonos","amacron","amonospace","ampersand","ampersandmonospace","ampersandsmall","amsquare","anbopomofo","angbopomofo","angbracketleft","angbracketright","angkhankhuthai","angle","anglebracketleft","anglebracketleftvertical","anglebracketright","anglebracketrightvertical","angleleft","angleright","angstrom","anoteleia","anudattadeva","anusvarabengali","anusvaradeva","anusvaragujarati","aogonek","apaatosquare","aparen","apostrophearmenian","apostrophemod","apple","approaches","approxequal","approxequalorimage","approximatelyequal","araeaekorean","araeakorean","arc","arighthalfring","aring","aringacute","aringbelow","arrowboth","arrowdashdown","arrowdashleft","arrowdashright","arrowdashup","arrowdblboth","arrowdbldown","arrowdblleft","arrowdblright","arrowdblup","arrowdown","arrowdownleft","arrowdownright","arrowdownwhite","arrowheaddownmod","arrowheadleftmod","arrowheadrightmod","arrowheadupmod","arrowhorizex","arrowleft","arrowleftdbl","arrowleftdblstroke","arrowleftoverright","arrowleftwhite","arrowright","arrowrightdblstroke","arrowrightheavy","arrowrightoverleft","arrowrightwhite","arrowtableft","arrowtabright","arrowup","arrowupdn","arrowupdnbse","arrowupdownbase","arrowupleft","arrowupleftofdown","arrowupright","arrowupwhite","arrowvertex","asciicircum","asciicircummonospace","asciitilde","asciitildemonospace","ascript","ascriptturned","asmallhiragana","asmallkatakana","asmallkatakanahalfwidth","asterisk","asteriskaltonearabic","asteriskarabic","asteriskmath","asteriskmonospace","asterisksmall","asterism","asuperior","asymptoticallyequal","at","atilde","atmonospace","atsmall","aturned","aubengali","aubopomofo","audeva","augujarati","augurmukhi","aulengthmarkbengali","aumatragurmukhi","auvowelsignbengali","auvowelsigndeva","auvowelsigngujarati","avagrahadeva","aybarmenian","ayin","ayinaltonehebrew","ayinhebrew","babengali","backslash","backslashmonospace","badeva","bagujarati","bagurmukhi","bahiragana","bahtthai","bakatakana","bar","barmonospace","bbopomofo","bcircle","bdotaccent","bdotbelow","beamedsixteenthnotes","because","becyrillic","beharabic","behfinalarabic","behinitialarabic","behiragana","behmedialarabic","behmeeminitialarabic","behmeemisolatedarabic","behnoonfinalarabic","bekatakana","benarmenian","bet","beta","betasymbolgreek","betdagesh","betdageshhebrew","bethebrew","betrafehebrew","bhabengali","bhadeva","bhagujarati","bhagurmukhi","bhook","bihiragana","bikatakana","bilabialclick","bindigurmukhi","birusquare","blackcircle","blackdiamond","blackdownpointingtriangle","blackleftpointingpointer","blackleftpointingtriangle","blacklenticularbracketleft","blacklenticularbracketleftvertical","blacklenticularbracketright","blacklenticularbracketrightvertical","blacklowerlefttriangle","blacklowerrighttriangle","blackrectangle","blackrightpointingpointer","blackrightpointingtriangle","blacksmallsquare","blacksmilingface","blacksquare","blackstar","blackupperlefttriangle","blackupperrighttriangle","blackuppointingsmalltriangle","blackuppointingtriangle","blank","blinebelow","block","bmonospace","bobaimaithai","bohiragana","bokatakana","bparen","bqsquare","braceex","braceleft","braceleftbt","braceleftmid","braceleftmonospace","braceleftsmall","bracelefttp","braceleftvertical","braceright","bracerightbt","bracerightmid","bracerightmonospace","bracerightsmall","bracerighttp","bracerightvertical","bracketleft","bracketleftbt","bracketleftex","bracketleftmonospace","bracketlefttp","bracketright","bracketrightbt","bracketrightex","bracketrightmonospace","bracketrighttp","breve","brevebelowcmb","brevecmb","breveinvertedbelowcmb","breveinvertedcmb","breveinverteddoublecmb","bridgebelowcmb","bridgeinvertedbelowcmb","brokenbar","bstroke","bsuperior","btopbar","buhiragana","bukatakana","bullet","bulletinverse","bulletoperator","bullseye","caarmenian","cabengali","cacute","cadeva","cagujarati","cagurmukhi","calsquare","candrabindubengali","candrabinducmb","candrabindudeva","candrabindugujarati","capslock","careof","caron","caronbelowcmb","caroncmb","carriagereturn","cbopomofo","ccaron","ccedilla","ccedillaacute","ccircle","ccircumflex","ccurl","cdot","cdotaccent","cdsquare","cedilla","cedillacmb","cent","centigrade","centinferior","centmonospace","centoldstyle","centsuperior","chaarmenian","chabengali","chadeva","chagujarati","chagurmukhi","chbopomofo","cheabkhasiancyrillic","checkmark","checyrillic","chedescenderabkhasiancyrillic","chedescendercyrillic","chedieresiscyrillic","cheharmenian","chekhakassiancyrillic","cheverticalstrokecyrillic","chi","chieuchacirclekorean","chieuchaparenkorean","chieuchcirclekorean","chieuchkorean","chieuchparenkorean","chochangthai","chochanthai","chochingthai","chochoethai","chook","cieucacirclekorean","cieucaparenkorean","cieuccirclekorean","cieuckorean","cieucparenkorean","cieucuparenkorean","circle","circlecopyrt","circlemultiply","circleot","circleplus","circlepostalmark","circlewithlefthalfblack","circlewithrighthalfblack","circumflex","circumflexbelowcmb","circumflexcmb","clear","clickalveolar","clickdental","clicklateral","clickretroflex","club","clubsuitblack","clubsuitwhite","cmcubedsquare","cmonospace","cmsquaredsquare","coarmenian","colon","colonmonetary","colonmonospace","colonsign","colonsmall","colontriangularhalfmod","colontriangularmod","comma","commaabovecmb","commaaboverightcmb","commaaccent","commaarabic","commaarmenian","commainferior","commamonospace","commareversedabovecmb","commareversedmod","commasmall","commasuperior","commaturnedabovecmb","commaturnedmod","compass","congruent","contourintegral","control","controlACK","controlBEL","controlBS","controlCAN","controlCR","controlDC1","controlDC2","controlDC3","controlDC4","controlDEL","controlDLE","controlEM","controlENQ","controlEOT","controlESC","controlETB","controlETX","controlFF","controlFS","controlGS","controlHT","controlLF","controlNAK","controlNULL","controlRS","controlSI","controlSO","controlSOT","controlSTX","controlSUB","controlSYN","controlUS","controlVT","copyright","copyrightsans","copyrightserif","cornerbracketleft","cornerbracketlefthalfwidth","cornerbracketleftvertical","cornerbracketright","cornerbracketrighthalfwidth","cornerbracketrightvertical","corporationsquare","cosquare","coverkgsquare","cparen","cruzeiro","cstretched","curlyand","curlyor","currency","cyrBreve","cyrFlex","cyrbreve","cyrflex","d","daarmenian","dabengali","dadarabic","dadeva","dadfinalarabic","dadinitialarabic","dadmedialarabic","dagesh","dageshhebrew","dagger","daggerdbl","dagujarati","dagurmukhi","dahiragana","dakatakana","dalarabic","dalet","daletdagesh","daletdageshhebrew","dalethebrew","dalfinalarabic","dammaarabic","dammalowarabic","dammatanaltonearabic","dammatanarabic","danda","dargahebrew","dargalefthebrew","dasiapneumatacyrilliccmb","dblGrave","dblanglebracketleft","dblanglebracketleftvertical","dblanglebracketright","dblanglebracketrightvertical","dblarchinvertedbelowcmb","dblarrowleft","dblarrowright","dbldanda","dblgrave","dblgravecmb","dblintegral","dbllowline","dbllowlinecmb","dbloverlinecmb","dblprimemod","dblverticalbar","dblverticallineabovecmb","dbopomofo","dbsquare","dcaron","dcedilla","dcircle","dcircumflexbelow","dcroat","ddabengali","ddadeva","ddagujarati","ddagurmukhi","ddalarabic","ddalfinalarabic","dddhadeva","ddhabengali","ddhadeva","ddhagujarati","ddhagurmukhi","ddotaccent","ddotbelow","decimalseparatorarabic","decimalseparatorpersian","decyrillic","degree","dehihebrew","dehiragana","deicoptic","dekatakana","deleteleft","deleteright","delta","deltaturned","denominatorminusonenumeratorbengali","dezh","dhabengali","dhadeva","dhagujarati","dhagurmukhi","dhook","dialytikatonos","dialytikatonoscmb","diamond","diamondsuitwhite","dieresis","dieresisacute","dieresisbelowcmb","dieresiscmb","dieresisgrave","dieresistonos","dihiragana","dikatakana","dittomark","divide","divides","divisionslash","djecyrillic","dkshade","dlinebelow","dlsquare","dmacron","dmonospace","dnblock","dochadathai","dodekthai","dohiragana","dokatakana","dollar","dollarinferior","dollarmonospace","dollaroldstyle","dollarsmall","dollarsuperior","dong","dorusquare","dotaccent","dotaccentcmb","dotbelowcmb","dotbelowcomb","dotkatakana","dotlessi","dotlessj","dotlessjstrokehook","dotmath","dottedcircle","doubleyodpatah","doubleyodpatahhebrew","downtackbelowcmb","downtackmod","dparen","dsuperior","dtail","dtopbar","duhiragana","dukatakana","dz","dzaltone","dzcaron","dzcurl","dzeabkhasiancyrillic","dzecyrillic","dzhecyrillic","eacute","earth","ebengali","ebopomofo","ebreve","ecandradeva","ecandragujarati","ecandravowelsigndeva","ecandravowelsigngujarati","ecaron","ecedillabreve","echarmenian","echyiwnarmenian","ecircle","ecircumflex","ecircumflexacute","ecircumflexbelow","ecircumflexdotbelow","ecircumflexgrave","ecircumflexhookabove","ecircumflextilde","ecyrillic","edblgrave","edeva","edieresis","edot","edotaccent","edotbelow","eegurmukhi","eematragurmukhi","efcyrillic","egrave","egujarati","eharmenian","ehbopomofo","ehiragana","ehookabove","eibopomofo","eight","eightarabic","eightbengali","eightcircle","eightcircleinversesansserif","eightdeva","eighteencircle","eighteenparen","eighteenperiod","eightgujarati","eightgurmukhi","eighthackarabic","eighthangzhou","eighthnotebeamed","eightideographicparen","eightinferior","eightmonospace","eightoldstyle","eightparen","eightperiod","eightpersian","eightroman","eightsuperior","eightthai","einvertedbreve","eiotifiedcyrillic","ekatakana","ekatakanahalfwidth","ekonkargurmukhi","ekorean","elcyrillic","element","elevencircle","elevenparen","elevenperiod","elevenroman","ellipsis","ellipsisvertical","emacron","emacronacute","emacrongrave","emcyrillic","emdash","emdashvertical","emonospace","emphasismarkarmenian","emptyset","enbopomofo","encyrillic","endash","endashvertical","endescendercyrillic","eng","engbopomofo","enghecyrillic","enhookcyrillic","enspace","eogonek","eokorean","eopen","eopenclosed","eopenreversed","eopenreversedclosed","eopenreversedhook","eparen","epsilon","epsilontonos","equal","equalmonospace","equalsmall","equalsuperior","equivalence","erbopomofo","ercyrillic","ereversed","ereversedcyrillic","escyrillic","esdescendercyrillic","esh","eshcurl","eshortdeva","eshortvowelsigndeva","eshreversedloop","eshsquatreversed","esmallhiragana","esmallkatakana","esmallkatakanahalfwidth","estimated","esuperior","eta","etarmenian","etatonos","eth","etilde","etildebelow","etnahtafoukhhebrew","etnahtafoukhlefthebrew","etnahtahebrew","etnahtalefthebrew","eturned","eukorean","euro","evowelsignbengali","evowelsigndeva","evowelsigngujarati","exclam","exclamarmenian","exclamdbl","exclamdown","exclamdownsmall","exclammonospace","exclamsmall","existential","ezh","ezhcaron","ezhcurl","ezhreversed","ezhtail","f","fadeva","fagurmukhi","fahrenheit","fathaarabic","fathalowarabic","fathatanarabic","fbopomofo","fcircle","fdotaccent","feharabic","feharmenian","fehfinalarabic","fehinitialarabic","fehmedialarabic","feicoptic","female","ff","ffi","ffl","fi","fifteencircle","fifteenparen","fifteenperiod","figuredash","filledbox","filledrect","finalkaf","finalkafdagesh","finalkafdageshhebrew","finalkafhebrew","finalmem","finalmemhebrew","finalnun","finalnunhebrew","finalpe","finalpehebrew","finaltsadi","finaltsadihebrew","firsttonechinese","fisheye","fitacyrillic","five","fivearabic","fivebengali","fivecircle","fivecircleinversesansserif","fivedeva","fiveeighths","fivegujarati","fivegurmukhi","fivehackarabic","fivehangzhou","fiveideographicparen","fiveinferior","fivemonospace","fiveoldstyle","fiveparen","fiveperiod","fivepersian","fiveroman","fivesuperior","fivethai","fl","florin","fmonospace","fmsquare","fofanthai","fofathai","fongmanthai","forall","four","fourarabic","fourbengali","fourcircle","fourcircleinversesansserif","fourdeva","fourgujarati","fourgurmukhi","fourhackarabic","fourhangzhou","fourideographicparen","fourinferior","fourmonospace","fournumeratorbengali","fouroldstyle","fourparen","fourperiod","fourpersian","fourroman","foursuperior","fourteencircle","fourteenparen","fourteenperiod","fourthai","fourthtonechinese","fparen","fraction","franc","gabengali","gacute","gadeva","gafarabic","gaffinalarabic","gafinitialarabic","gafmedialarabic","gagujarati","gagurmukhi","gahiragana","gakatakana","gammalatinsmall","gammasuperior","gangiacoptic","gbopomofo","gbreve","gcaron","gcedilla","gcircle","gcircumflex","gcommaaccent","gdot","gdotaccent","gecyrillic","gehiragana","gekatakana","geometricallyequal","gereshaccenthebrew","gereshhebrew","gereshmuqdamhebrew","germandbls","gershayimaccenthebrew","gershayimhebrew","getamark","ghabengali","ghadarmenian","ghadeva","ghagujarati","ghagurmukhi","ghainarabic","ghainfinalarabic","ghaininitialarabic","ghainmedialarabic","ghemiddlehookcyrillic","ghestrokecyrillic","gheupturncyrillic","ghhadeva","ghhagurmukhi","ghook","ghzsquare","gihiragana","gikatakana","gimarmenian","gimel","gimeldagesh","gimeldageshhebrew","gimelhebrew","gjecyrillic","glottalinvertedstroke","glottalstop","glottalstopinverted","glottalstopmod","glottalstopreversed","glottalstopreversedmod","glottalstopreversedsuperior","glottalstopstroke","glottalstopstrokereversed","gmacron","gmonospace","gohiragana","gokatakana","gparen","gpasquare","gradient","grave","gravebelowcmb","gravecmb","gravecomb","gravedeva","gravelowmod","gravemonospace","gravetonecmb","greater","greaterequal","greaterequalorless","greatermonospace","greaterorequivalent","greaterorless","greateroverequal","greatersmall","gscript","gstroke","guhiragana","guillemotleft","guillemotright","guilsinglleft","guilsinglright","gukatakana","guramusquare","gysquare","haabkhasiancyrillic","haaltonearabic","habengali","hadescendercyrillic","hadeva","hagujarati","hagurmukhi","haharabic","hahfinalarabic","hahinitialarabic","hahiragana","hahmedialarabic","haitusquare","hakatakana","hakatakanahalfwidth","halantgurmukhi","hamzaarabic","hamzalowarabic","hangulfiller","hardsigncyrillic","harpoonleftbarbup","harpoonrightbarbup","hasquare","hatafpatah","hatafpatah16","hatafpatah23","hatafpatah2f","hatafpatahhebrew","hatafpatahnarrowhebrew","hatafpatahquarterhebrew","hatafpatahwidehebrew","hatafqamats","hatafqamats1b","hatafqamats28","hatafqamats34","hatafqamatshebrew","hatafqamatsnarrowhebrew","hatafqamatsquarterhebrew","hatafqamatswidehebrew","hatafsegol","hatafsegol17","hatafsegol24","hatafsegol30","hatafsegolhebrew","hatafsegolnarrowhebrew","hatafsegolquarterhebrew","hatafsegolwidehebrew","hbar","hbopomofo","hbrevebelow","hcedilla","hcircle","hcircumflex","hdieresis","hdotaccent","hdotbelow","he","heart","heartsuitblack","heartsuitwhite","hedagesh","hedageshhebrew","hehaltonearabic","heharabic","hehebrew","hehfinalaltonearabic","hehfinalalttwoarabic","hehfinalarabic","hehhamzaabovefinalarabic","hehhamzaaboveisolatedarabic","hehinitialaltonearabic","hehinitialarabic","hehiragana","hehmedialaltonearabic","hehmedialarabic","heiseierasquare","hekatakana","hekatakanahalfwidth","hekutaarusquare","henghook","herutusquare","het","hethebrew","hhook","hhooksuperior","hieuhacirclekorean","hieuhaparenkorean","hieuhcirclekorean","hieuhkorean","hieuhparenkorean","hihiragana","hikatakana","hikatakanahalfwidth","hiriq","hiriq14","hiriq21","hiriq2d","hiriqhebrew","hiriqnarrowhebrew","hiriqquarterhebrew","hiriqwidehebrew","hlinebelow","hmonospace","hoarmenian","hohipthai","hohiragana","hokatakana","hokatakanahalfwidth","holam","holam19","holam26","holam32","holamhebrew","holamnarrowhebrew","holamquarterhebrew","holamwidehebrew","honokhukthai","hookabovecomb","hookcmb","hookpalatalizedbelowcmb","hookretroflexbelowcmb","hoonsquare","horicoptic","horizontalbar","horncmb","hotsprings","house","hparen","hsuperior","hturned","huhiragana","huiitosquare","hukatakana","hukatakanahalfwidth","hungarumlaut","hungarumlautcmb","hv","hyphen","hypheninferior","hyphenmonospace","hyphensmall","hyphensuperior","hyphentwo","iacute","iacyrillic","ibengali","ibopomofo","ibreve","icaron","icircle","icircumflex","icyrillic","idblgrave","ideographearthcircle","ideographfirecircle","ideographicallianceparen","ideographiccallparen","ideographiccentrecircle","ideographicclose","ideographiccomma","ideographiccommaleft","ideographiccongratulationparen","ideographiccorrectcircle","ideographicearthparen","ideographicenterpriseparen","ideographicexcellentcircle","ideographicfestivalparen","ideographicfinancialcircle","ideographicfinancialparen","ideographicfireparen","ideographichaveparen","ideographichighcircle","ideographiciterationmark","ideographiclaborcircle","ideographiclaborparen","ideographicleftcircle","ideographiclowcircle","ideographicmedicinecircle","ideographicmetalparen","ideographicmoonparen","ideographicnameparen","ideographicperiod","ideographicprintcircle","ideographicreachparen","ideographicrepresentparen","ideographicresourceparen","ideographicrightcircle","ideographicsecretcircle","ideographicselfparen","ideographicsocietyparen","ideographicspace","ideographicspecialparen","ideographicstockparen","ideographicstudyparen","ideographicsunparen","ideographicsuperviseparen","ideographicwaterparen","ideographicwoodparen","ideographiczero","ideographmetalcircle","ideographmooncircle","ideographnamecircle","ideographsuncircle","ideographwatercircle","ideographwoodcircle","ideva","idieresis","idieresisacute","idieresiscyrillic","idotbelow","iebrevecyrillic","iecyrillic","ieungacirclekorean","ieungaparenkorean","ieungcirclekorean","ieungkorean","ieungparenkorean","igrave","igujarati","igurmukhi","ihiragana","ihookabove","iibengali","iicyrillic","iideva","iigujarati","iigurmukhi","iimatragurmukhi","iinvertedbreve","iishortcyrillic","iivowelsignbengali","iivowelsigndeva","iivowelsigngujarati","ij","ikatakana","ikatakanahalfwidth","ikorean","ilde","iluyhebrew","imacron","imacroncyrillic","imageorapproximatelyequal","imatragurmukhi","imonospace","increment","infinity","iniarmenian","integral","integralbottom","integralbt","integralex","integraltop","integraltp","intersection","intisquare","invbullet","invcircle","invsmileface","iocyrillic","iogonek","iota","iotadieresis","iotadieresistonos","iotalatin","iotatonos","iparen","irigurmukhi","ismallhiragana","ismallkatakana","ismallkatakanahalfwidth","issharbengali","istroke","isuperior","iterationhiragana","iterationkatakana","itilde","itildebelow","iubopomofo","iucyrillic","ivowelsignbengali","ivowelsigndeva","ivowelsigngujarati","izhitsacyrillic","izhitsadblgravecyrillic","jaarmenian","jabengali","jadeva","jagujarati","jagurmukhi","jbopomofo","jcaron","jcircle","jcircumflex","jcrossedtail","jdotlessstroke","jecyrillic","jeemarabic","jeemfinalarabic","jeeminitialarabic","jeemmedialarabic","jeharabic","jehfinalarabic","jhabengali","jhadeva","jhagujarati","jhagurmukhi","jheharmenian","jis","jmonospace","jparen","jsuperior","kabashkircyrillic","kabengali","kacute","kacyrillic","kadescendercyrillic","kadeva","kaf","kafarabic","kafdagesh","kafdageshhebrew","kaffinalarabic","kafhebrew","kafinitialarabic","kafmedialarabic","kafrafehebrew","kagujarati","kagurmukhi","kahiragana","kahookcyrillic","kakatakana","kakatakanahalfwidth","kappa","kappasymbolgreek","kapyeounmieumkorean","kapyeounphieuphkorean","kapyeounpieupkorean","kapyeounssangpieupkorean","karoriisquare","kashidaautoarabic","kashidaautonosidebearingarabic","kasmallkatakana","kasquare","kasraarabic","kasratanarabic","kastrokecyrillic","katahiraprolongmarkhalfwidth","kaverticalstrokecyrillic","kbopomofo","kcalsquare","kcaron","kcedilla","kcircle","kcommaaccent","kdotbelow","keharmenian","kehiragana","kekatakana","kekatakanahalfwidth","kenarmenian","kesmallkatakana","kgreenlandic","khabengali","khacyrillic","khadeva","khagujarati","khagurmukhi","khaharabic","khahfinalarabic","khahinitialarabic","khahmedialarabic","kheicoptic","khhadeva","khhagurmukhi","khieukhacirclekorean","khieukhaparenkorean","khieukhcirclekorean","khieukhkorean","khieukhparenkorean","khokhaithai","khokhonthai","khokhuatthai","khokhwaithai","khomutthai","khook","khorakhangthai","khzsquare","kihiragana","kikatakana","kikatakanahalfwidth","kiroguramusquare","kiromeetorusquare","kirosquare","kiyeokacirclekorean","kiyeokaparenkorean","kiyeokcirclekorean","kiyeokkorean","kiyeokparenkorean","kiyeoksioskorean","kjecyrillic","klinebelow","klsquare","kmcubedsquare","kmonospace","kmsquaredsquare","kohiragana","kohmsquare","kokaithai","kokatakana","kokatakanahalfwidth","kooposquare","koppacyrillic","koreanstandardsymbol","koroniscmb","kparen","kpasquare","ksicyrillic","ktsquare","kturned","kuhiragana","kukatakana","kukatakanahalfwidth","kvsquare","kwsquare","l","labengali","lacute","ladeva","lagujarati","lagurmukhi","lakkhangyaothai","lamaleffinalarabic","lamalefhamzaabovefinalarabic","lamalefhamzaaboveisolatedarabic","lamalefhamzabelowfinalarabic","lamalefhamzabelowisolatedarabic","lamalefisolatedarabic","lamalefmaddaabovefinalarabic","lamalefmaddaaboveisolatedarabic","lamarabic","lambda","lambdastroke","lamed","lameddagesh","lameddageshhebrew","lamedhebrew","lamfinalarabic","lamhahinitialarabic","laminitialarabic","lamjeeminitialarabic","lamkhahinitialarabic","lamlamhehisolatedarabic","lammedialarabic","lammeemhahinitialarabic","lammeeminitialarabic","largecircle","lbar","lbelt","lbopomofo","lcaron","lcedilla","lcircle","lcircumflexbelow","lcommaaccent","ldot","ldotaccent","ldotbelow","ldotbelowmacron","leftangleabovecmb","lefttackbelowcmb","less","lessequal","lessequalorgreater","lessmonospace","lessorequivalent","lessorgreater","lessoverequal","lesssmall","lezh","lfblock","lhookretroflex","lira","liwnarmenian","lj","ljecyrillic","ll","lladeva","llagujarati","llinebelow","llladeva","llvocalicbengali","llvocalicdeva","llvocalicvowelsignbengali","llvocalicvowelsigndeva","lmiddletilde","lmonospace","lmsquare","lochulathai","logicaland","logicalnot","logicalnotreversed","logicalor","lolingthai","longs","lowlinecenterline","lowlinecmb","lowlinedashed","lozenge","lparen","lslash","lsquare","lsuperior","ltshade","luthai","lvocalicbengali","lvocalicdeva","lvocalicvowelsignbengali","lvocalicvowelsigndeva","lxsquare","mabengali","macron","macronbelowcmb","macroncmb","macronlowmod","macronmonospace","macute","madeva","magujarati","magurmukhi","mahapakhhebrew","mahapakhlefthebrew","mahiragana","maichattawalowleftthai","maichattawalowrightthai","maichattawathai","maichattawaupperleftthai","maieklowleftthai","maieklowrightthai","maiekthai","maiekupperleftthai","maihanakatleftthai","maihanakatthai","maitaikhuleftthai","maitaikhuthai","maitholowleftthai","maitholowrightthai","maithothai","maithoupperleftthai","maitrilowleftthai","maitrilowrightthai","maitrithai","maitriupperleftthai","maiyamokthai","makatakana","makatakanahalfwidth","male","mansyonsquare","maqafhebrew","mars","masoracirclehebrew","masquare","mbopomofo","mbsquare","mcircle","mcubedsquare","mdotaccent","mdotbelow","meemarabic","meemfinalarabic","meeminitialarabic","meemmedialarabic","meemmeeminitialarabic","meemmeemisolatedarabic","meetorusquare","mehiragana","meizierasquare","mekatakana","mekatakanahalfwidth","mem","memdagesh","memdageshhebrew","memhebrew","menarmenian","merkhahebrew","merkhakefulahebrew","merkhakefulalefthebrew","merkhalefthebrew","mhook","mhzsquare","middledotkatakanahalfwidth","middot","mieumacirclekorean","mieumaparenkorean","mieumcirclekorean","mieumkorean","mieumpansioskorean","mieumparenkorean","mieumpieupkorean","mieumsioskorean","mihiragana","mikatakana","mikatakanahalfwidth","minus","minusbelowcmb","minuscircle","minusmod","minusplus","minute","miribaarusquare","mirisquare","mlonglegturned","mlsquare","mmcubedsquare","mmonospace","mmsquaredsquare","mohiragana","mohmsquare","mokatakana","mokatakanahalfwidth","molsquare","momathai","moverssquare","moverssquaredsquare","mparen","mpasquare","mssquare","msuperior","mturned","mu","mu1","muasquare","muchgreater","muchless","mufsquare","mugreek","mugsquare","muhiragana","mukatakana","mukatakanahalfwidth","mulsquare","multiply","mumsquare","munahhebrew","munahlefthebrew","musicalnote","musicalnotedbl","musicflatsign","musicsharpsign","mussquare","muvsquare","muwsquare","mvmegasquare","mvsquare","mwmegasquare","mwsquare","nabengali","nabla","nacute","nadeva","nagujarati","nagurmukhi","nahiragana","nakatakana","nakatakanahalfwidth","napostrophe","nasquare","nbopomofo","nbspace","ncaron","ncedilla","ncircle","ncircumflexbelow","ncommaaccent","ndotaccent","ndotbelow","nehiragana","nekatakana","nekatakanahalfwidth","newsheqelsign","nfsquare","ngabengali","ngadeva","ngagujarati","ngagurmukhi","ngonguthai","nhiragana","nhookleft","nhookretroflex","nieunacirclekorean","nieunaparenkorean","nieuncieuckorean","nieuncirclekorean","nieunhieuhkorean","nieunkorean","nieunpansioskorean","nieunparenkorean","nieunsioskorean","nieuntikeutkorean","nihiragana","nikatakana","nikatakanahalfwidth","nikhahitleftthai","nikhahitthai","nine","ninearabic","ninebengali","ninecircle","ninecircleinversesansserif","ninedeva","ninegujarati","ninegurmukhi","ninehackarabic","ninehangzhou","nineideographicparen","nineinferior","ninemonospace","nineoldstyle","nineparen","nineperiod","ninepersian","nineroman","ninesuperior","nineteencircle","nineteenparen","nineteenperiod","ninethai","nj","njecyrillic","nkatakana","nkatakanahalfwidth","nlegrightlong","nlinebelow","nmonospace","nmsquare","nnabengali","nnadeva","nnagujarati","nnagurmukhi","nnnadeva","nohiragana","nokatakana","nokatakanahalfwidth","nonbreakingspace","nonenthai","nonuthai","noonarabic","noonfinalarabic","noonghunnaarabic","noonghunnafinalarabic","nooninitialarabic","noonjeeminitialarabic","noonjeemisolatedarabic","noonmedialarabic","noonmeeminitialarabic","noonmeemisolatedarabic","noonnoonfinalarabic","notcontains","notelement","notelementof","notequal","notgreater","notgreaternorequal","notgreaternorless","notidentical","notless","notlessnorequal","notparallel","notprecedes","notsubset","notsucceeds","notsuperset","nowarmenian","nparen","nssquare","nsuperior","ntilde","nu","nuhiragana","nukatakana","nukatakanahalfwidth","nuktabengali","nuktadeva","nuktagujarati","nuktagurmukhi","numbersign","numbersignmonospace","numbersignsmall","numeralsigngreek","numeralsignlowergreek","numero","nun","nundagesh","nundageshhebrew","nunhebrew","nvsquare","nwsquare","nyabengali","nyadeva","nyagujarati","nyagurmukhi","o","oacute","oangthai","obarred","obarredcyrillic","obarreddieresiscyrillic","obengali","obopomofo","obreve","ocandradeva","ocandragujarati","ocandravowelsigndeva","ocandravowelsigngujarati","ocaron","ocircle","ocircumflex","ocircumflexacute","ocircumflexdotbelow","ocircumflexgrave","ocircumflexhookabove","ocircumflextilde","ocyrillic","odblacute","odblgrave","odeva","odieresis","odieresiscyrillic","odotbelow","oe","oekorean","ogonek","ogonekcmb","ograve","ogujarati","oharmenian","ohiragana","ohookabove","ohorn","ohornacute","ohorndotbelow","ohorngrave","ohornhookabove","ohorntilde","ohungarumlaut","oi","oinvertedbreve","okatakana","okatakanahalfwidth","okorean","olehebrew","omacron","omacronacute","omacrongrave","omdeva","omega","omega1","omegacyrillic","omegalatinclosed","omegaroundcyrillic","omegatitlocyrillic","omegatonos","omgujarati","omicron","omicrontonos","omonospace","one","onearabic","onebengali","onecircle","onecircleinversesansserif","onedeva","onedotenleader","oneeighth","onefitted","onegujarati","onegurmukhi","onehackarabic","onehalf","onehangzhou","oneideographicparen","oneinferior","onemonospace","onenumeratorbengali","oneoldstyle","oneparen","oneperiod","onepersian","onequarter","oneroman","onesuperior","onethai","onethird","oogonek","oogonekmacron","oogurmukhi","oomatragurmukhi","oopen","oparen","openbullet","option","ordfeminine","ordmasculine","orthogonal","oshortdeva","oshortvowelsigndeva","oslash","oslashacute","osmallhiragana","osmallkatakana","osmallkatakanahalfwidth","ostrokeacute","osuperior","otcyrillic","otilde","otildeacute","otildedieresis","oubopomofo","overline","overlinecenterline","overlinecmb","overlinedashed","overlinedblwavy","overlinewavy","overscore","ovowelsignbengali","ovowelsigndeva","ovowelsigngujarati","p","paampssquare","paasentosquare","pabengali","pacute","padeva","pagedown","pageup","pagujarati","pagurmukhi","pahiragana","paiyannoithai","pakatakana","palatalizationcyrilliccmb","palochkacyrillic","pansioskorean","paragraph","parallel","parenleft","parenleftaltonearabic","parenleftbt","parenleftex","parenleftinferior","parenleftmonospace","parenleftsmall","parenleftsuperior","parenlefttp","parenleftvertical","parenright","parenrightaltonearabic","parenrightbt","parenrightex","parenrightinferior","parenrightmonospace","parenrightsmall","parenrightsuperior","parenrighttp","parenrightvertical","partialdiff","paseqhebrew","pashtahebrew","pasquare","patah","patah11","patah1d","patah2a","patahhebrew","patahnarrowhebrew","patahquarterhebrew","patahwidehebrew","pazerhebrew","pbopomofo","pcircle","pdotaccent","pe","pecyrillic","pedagesh","pedageshhebrew","peezisquare","pefinaldageshhebrew","peharabic","peharmenian","pehebrew","pehfinalarabic","pehinitialarabic","pehiragana","pehmedialarabic","pekatakana","pemiddlehookcyrillic","perafehebrew","percent","percentarabic","percentmonospace","percentsmall","period","periodarmenian","periodcentered","periodhalfwidth","periodinferior","periodmonospace","periodsmall","periodsuperior","perispomenigreekcmb","perpendicular","perthousand","peseta","pfsquare","phabengali","phadeva","phagujarati","phagurmukhi","phi","phi1","phieuphacirclekorean","phieuphaparenkorean","phieuphcirclekorean","phieuphkorean","phieuphparenkorean","philatin","phinthuthai","phisymbolgreek","phook","phophanthai","phophungthai","phosamphaothai","pi","pieupacirclekorean","pieupaparenkorean","pieupcieuckorean","pieupcirclekorean","pieupkiyeokkorean","pieupkorean","pieupparenkorean","pieupsioskiyeokkorean","pieupsioskorean","pieupsiostikeutkorean","pieupthieuthkorean","pieuptikeutkorean","pihiragana","pikatakana","pisymbolgreek","piwrarmenian","plus","plusbelowcmb","pluscircle","plusminus","plusmod","plusmonospace","plussmall","plussuperior","pmonospace","pmsquare","pohiragana","pointingindexdownwhite","pointingindexleftwhite","pointingindexrightwhite","pointingindexupwhite","pokatakana","poplathai","postalmark","postalmarkface","pparen","precedes","prescription","primemod","primereversed","product","projective","prolongedkana","propellor","propersubset","propersuperset","proportion","proportional","psi","psicyrillic","psilipneumatacyrilliccmb","pssquare","puhiragana","pukatakana","pvsquare","pwsquare","qadeva","qadmahebrew","qafarabic","qaffinalarabic","qafinitialarabic","qafmedialarabic","qamats","qamats10","qamats1a","qamats1c","qamats27","qamats29","qamats33","qamatsde","qamatshebrew","qamatsnarrowhebrew","qamatsqatanhebrew","qamatsqatannarrowhebrew","qamatsqatanquarterhebrew","qamatsqatanwidehebrew","qamatsquarterhebrew","qamatswidehebrew","qarneyparahebrew","qbopomofo","qcircle","qhook","qmonospace","qof","qofdagesh","qofdageshhebrew","qofhebrew","qparen","quarternote","qubuts","qubuts18","qubuts25","qubuts31","qubutshebrew","qubutsnarrowhebrew","qubutsquarterhebrew","qubutswidehebrew","question","questionarabic","questionarmenian","questiondown","questiondownsmall","questiongreek","questionmonospace","questionsmall","quotedbl","quotedblbase","quotedblleft","quotedblmonospace","quotedblprime","quotedblprimereversed","quotedblright","quoteleft","quoteleftreversed","quotereversed","quoteright","quoterightn","quotesinglbase","quotesingle","quotesinglemonospace","raarmenian","rabengali","racute","radeva","radical","radicalex","radoverssquare","radoverssquaredsquare","radsquare","rafe","rafehebrew","ragujarati","ragurmukhi","rahiragana","rakatakana","rakatakanahalfwidth","ralowerdiagonalbengali","ramiddlediagonalbengali","ramshorn","ratio","rbopomofo","rcaron","rcedilla","rcircle","rcommaaccent","rdblgrave","rdotaccent","rdotbelow","rdotbelowmacron","referencemark","reflexsubset","reflexsuperset","registered","registersans","registerserif","reharabic","reharmenian","rehfinalarabic","rehiragana","rekatakana","rekatakanahalfwidth","resh","reshdageshhebrew","reshhebrew","reversedtilde","reviahebrew","reviamugrashhebrew","revlogicalnot","rfishhook","rfishhookreversed","rhabengali","rhadeva","rho","rhook","rhookturned","rhookturnedsuperior","rhosymbolgreek","rhotichookmod","rieulacirclekorean","rieulaparenkorean","rieulcirclekorean","rieulhieuhkorean","rieulkiyeokkorean","rieulkiyeoksioskorean","rieulkorean","rieulmieumkorean","rieulpansioskorean","rieulparenkorean","rieulphieuphkorean","rieulpieupkorean","rieulpieupsioskorean","rieulsioskorean","rieulthieuthkorean","rieultikeutkorean","rieulyeorinhieuhkorean","rightangle","righttackbelowcmb","righttriangle","rihiragana","rikatakana","rikatakanahalfwidth","ring","ringbelowcmb","ringcmb","ringhalfleft","ringhalfleftarmenian","ringhalfleftbelowcmb","ringhalfleftcentered","ringhalfright","ringhalfrightbelowcmb","ringhalfrightcentered","rinvertedbreve","rittorusquare","rlinebelow","rlongleg","rlonglegturned","rmonospace","rohiragana","rokatakana","rokatakanahalfwidth","roruathai","rparen","rrabengali","rradeva","rragurmukhi","rreharabic","rrehfinalarabic","rrvocalicbengali","rrvocalicdeva","rrvocalicgujarati","rrvocalicvowelsignbengali","rrvocalicvowelsigndeva","rrvocalicvowelsigngujarati","rsuperior","rtblock","rturned","rturnedsuperior","ruhiragana","rukatakana","rukatakanahalfwidth","rupeemarkbengali","rupeesignbengali","rupiah","ruthai","rvocalicbengali","rvocalicdeva","rvocalicgujarati","rvocalicvowelsignbengali","rvocalicvowelsigndeva","rvocalicvowelsigngujarati","s","sabengali","sacute","sacutedotaccent","sadarabic","sadeva","sadfinalarabic","sadinitialarabic","sadmedialarabic","sagujarati","sagurmukhi","sahiragana","sakatakana","sakatakanahalfwidth","sallallahoualayhewasallamarabic","samekh","samekhdagesh","samekhdageshhebrew","samekhhebrew","saraaathai","saraaethai","saraaimaimalaithai","saraaimaimuanthai","saraamthai","saraathai","saraethai","saraiileftthai","saraiithai","saraileftthai","saraithai","saraothai","saraueeleftthai","saraueethai","saraueleftthai","sarauethai","sarauthai","sarauuthai","sbopomofo","scaron","scarondotaccent","scedilla","schwa","schwacyrillic","schwadieresiscyrillic","schwahook","scircle","scircumflex","scommaaccent","sdotaccent","sdotbelow","sdotbelowdotaccent","seagullbelowcmb","second","secondtonechinese","section","seenarabic","seenfinalarabic","seeninitialarabic","seenmedialarabic","segol","segol13","segol1f","segol2c","segolhebrew","segolnarrowhebrew","segolquarterhebrew","segoltahebrew","segolwidehebrew","seharmenian","sehiragana","sekatakana","sekatakanahalfwidth","semicolon","semicolonarabic","semicolonmonospace","semicolonsmall","semivoicedmarkkana","semivoicedmarkkanahalfwidth","sentisquare","sentosquare","seven","sevenarabic","sevenbengali","sevencircle","sevencircleinversesansserif","sevendeva","seveneighths","sevengujarati","sevengurmukhi","sevenhackarabic","sevenhangzhou","sevenideographicparen","seveninferior","sevenmonospace","sevenoldstyle","sevenparen","sevenperiod","sevenpersian","sevenroman","sevensuperior","seventeencircle","seventeenparen","seventeenperiod","seventhai","sfthyphen","shaarmenian","shabengali","shacyrillic","shaddaarabic","shaddadammaarabic","shaddadammatanarabic","shaddafathaarabic","shaddakasraarabic","shaddakasratanarabic","shade","shadedark","shadelight","shademedium","shadeva","shagujarati","shagurmukhi","shalshelethebrew","shbopomofo","shchacyrillic","sheenarabic","sheenfinalarabic","sheeninitialarabic","sheenmedialarabic","sheicoptic","sheqel","sheqelhebrew","sheva","sheva115","sheva15","sheva22","sheva2e","shevahebrew","shevanarrowhebrew","shevaquarterhebrew","shevawidehebrew","shhacyrillic","shimacoptic","shin","shindagesh","shindageshhebrew","shindageshshindot","shindageshshindothebrew","shindageshsindot","shindageshsindothebrew","shindothebrew","shinhebrew","shinshindot","shinshindothebrew","shinsindot","shinsindothebrew","shook","sigma","sigma1","sigmafinal","sigmalunatesymbolgreek","sihiragana","sikatakana","sikatakanahalfwidth","siluqhebrew","siluqlefthebrew","similar","sindothebrew","siosacirclekorean","siosaparenkorean","sioscieuckorean","sioscirclekorean","sioskiyeokkorean","sioskorean","siosnieunkorean","siosparenkorean","siospieupkorean","siostikeutkorean","six","sixarabic","sixbengali","sixcircle","sixcircleinversesansserif","sixdeva","sixgujarati","sixgurmukhi","sixhackarabic","sixhangzhou","sixideographicparen","sixinferior","sixmonospace","sixoldstyle","sixparen","sixperiod","sixpersian","sixroman","sixsuperior","sixteencircle","sixteencurrencydenominatorbengali","sixteenparen","sixteenperiod","sixthai","slash","slashmonospace","slong","slongdotaccent","smileface","smonospace","sofpasuqhebrew","softhyphen","softsigncyrillic","sohiragana","sokatakana","sokatakanahalfwidth","soliduslongoverlaycmb","solidusshortoverlaycmb","sorusithai","sosalathai","sosothai","sosuathai","space","spacehackarabic","spade","spadesuitblack","spadesuitwhite","sparen","squarebelowcmb","squarecc","squarecm","squarediagonalcrosshatchfill","squarehorizontalfill","squarekg","squarekm","squarekmcapital","squareln","squarelog","squaremg","squaremil","squaremm","squaremsquared","squareorthogonalcrosshatchfill","squareupperlefttolowerrightfill","squareupperrighttolowerleftfill","squareverticalfill","squarewhitewithsmallblack","srsquare","ssabengali","ssadeva","ssagujarati","ssangcieuckorean","ssanghieuhkorean","ssangieungkorean","ssangkiyeokkorean","ssangnieunkorean","ssangpieupkorean","ssangsioskorean","ssangtikeutkorean","ssuperior","sterling","sterlingmonospace","strokelongoverlaycmb","strokeshortoverlaycmb","subset","subsetnotequal","subsetorequal","succeeds","suchthat","suhiragana","sukatakana","sukatakanahalfwidth","sukunarabic","summation","sun","superset","supersetnotequal","supersetorequal","svsquare","syouwaerasquare","tabengali","tackdown","tackleft","tadeva","tagujarati","tagurmukhi","taharabic","tahfinalarabic","tahinitialarabic","tahiragana","tahmedialarabic","taisyouerasquare","takatakana","takatakanahalfwidth","tatweelarabic","tau","tav","tavdages","tavdagesh","tavdageshhebrew","tavhebrew","tbar","tbopomofo","tcaron","tccurl","tcedilla","tcheharabic","tchehfinalarabic","tchehinitialarabic","tchehmedialarabic","tcircle","tcircumflexbelow","tcommaaccent","tdieresis","tdotaccent","tdotbelow","tecyrillic","tedescendercyrillic","teharabic","tehfinalarabic","tehhahinitialarabic","tehhahisolatedarabic","tehinitialarabic","tehiragana","tehjeeminitialarabic","tehjeemisolatedarabic","tehmarbutaarabic","tehmarbutafinalarabic","tehmedialarabic","tehmeeminitialarabic","tehmeemisolatedarabic","tehnoonfinalarabic","tekatakana","tekatakanahalfwidth","telephone","telephoneblack","telishagedolahebrew","telishaqetanahebrew","tencircle","tenideographicparen","tenparen","tenperiod","tenroman","tesh","tet","tetdagesh","tetdageshhebrew","tethebrew","tetsecyrillic","tevirhebrew","tevirlefthebrew","thabengali","thadeva","thagujarati","thagurmukhi","thalarabic","thalfinalarabic","thanthakhatlowleftthai","thanthakhatlowrightthai","thanthakhatthai","thanthakhatupperleftthai","theharabic","thehfinalarabic","thehinitialarabic","thehmedialarabic","thereexists","therefore","theta","theta1","thetasymbolgreek","thieuthacirclekorean","thieuthaparenkorean","thieuthcirclekorean","thieuthkorean","thieuthparenkorean","thirteencircle","thirteenparen","thirteenperiod","thonangmonthothai","thook","thophuthaothai","thorn","thothahanthai","thothanthai","thothongthai","thothungthai","thousandcyrillic","thousandsseparatorarabic","thousandsseparatorpersian","three","threearabic","threebengali","threecircle","threecircleinversesansserif","threedeva","threeeighths","threegujarati","threegurmukhi","threehackarabic","threehangzhou","threeideographicparen","threeinferior","threemonospace","threenumeratorbengali","threeoldstyle","threeparen","threeperiod","threepersian","threequarters","threequartersemdash","threeroman","threesuperior","threethai","thzsquare","tihiragana","tikatakana","tikatakanahalfwidth","tikeutacirclekorean","tikeutaparenkorean","tikeutcirclekorean","tikeutkorean","tikeutparenkorean","tilde","tildebelowcmb","tildecmb","tildecomb","tildedoublecmb","tildeoperator","tildeoverlaycmb","tildeverticalcmb","timescircle","tipehahebrew","tipehalefthebrew","tippigurmukhi","titlocyrilliccmb","tiwnarmenian","tlinebelow","tmonospace","toarmenian","tohiragana","tokatakana","tokatakanahalfwidth","tonebarextrahighmod","tonebarextralowmod","tonebarhighmod","tonebarlowmod","tonebarmidmod","tonefive","tonesix","tonetwo","tonos","tonsquare","topatakthai","tortoiseshellbracketleft","tortoiseshellbracketleftsmall","tortoiseshellbracketleftvertical","tortoiseshellbracketright","tortoiseshellbracketrightsmall","tortoiseshellbracketrightvertical","totaothai","tpalatalhook","tparen","trademark","trademarksans","trademarkserif","tretroflexhook","triagdn","triaglf","triagrt","triagup","ts","tsadi","tsadidagesh","tsadidageshhebrew","tsadihebrew","tsecyrillic","tsere","tsere12","tsere1e","tsere2b","tserehebrew","tserenarrowhebrew","tserequarterhebrew","tserewidehebrew","tshecyrillic","tsuperior","ttabengali","ttadeva","ttagujarati","ttagurmukhi","tteharabic","ttehfinalarabic","ttehinitialarabic","ttehmedialarabic","tthabengali","tthadeva","tthagujarati","tthagurmukhi","tturned","tuhiragana","tukatakana","tukatakanahalfwidth","tusmallhiragana","tusmallkatakana","tusmallkatakanahalfwidth","twelvecircle","twelveparen","twelveperiod","twelveroman","twentycircle","twentyhangzhou","twentyparen","twentyperiod","two","twoarabic","twobengali","twocircle","twocircleinversesansserif","twodeva","twodotenleader","twodotleader","twodotleadervertical","twogujarati","twogurmukhi","twohackarabic","twohangzhou","twoideographicparen","twoinferior","twomonospace","twonumeratorbengali","twooldstyle","twoparen","twoperiod","twopersian","tworoman","twostroke","twosuperior","twothai","twothirds","u","uacute","ubar","ubengali","ubopomofo","ubreve","ucaron","ucircle","ucircumflex","ucircumflexbelow","ucyrillic","udattadeva","udblacute","udblgrave","udeva","udieresis","udieresisacute","udieresisbelow","udieresiscaron","udieresiscyrillic","udieresisgrave","udieresismacron","udotbelow","ugrave","ugujarati","ugurmukhi","uhiragana","uhookabove","uhorn","uhornacute","uhorndotbelow","uhorngrave","uhornhookabove","uhorntilde","uhungarumlaut","uhungarumlautcyrillic","uinvertedbreve","ukatakana","ukatakanahalfwidth","ukcyrillic","ukorean","umacron","umacroncyrillic","umacrondieresis","umatragurmukhi","umonospace","underscore","underscoredbl","underscoremonospace","underscorevertical","underscorewavy","union","universal","uogonek","uparen","upblock","upperdothebrew","upsilon","upsilondieresis","upsilondieresistonos","upsilonlatin","upsilontonos","uptackbelowcmb","uptackmod","uragurmukhi","uring","ushortcyrillic","usmallhiragana","usmallkatakana","usmallkatakanahalfwidth","ustraightcyrillic","ustraightstrokecyrillic","utilde","utildeacute","utildebelow","uubengali","uudeva","uugujarati","uugurmukhi","uumatragurmukhi","uuvowelsignbengali","uuvowelsigndeva","uuvowelsigngujarati","uvowelsignbengali","uvowelsigndeva","uvowelsigngujarati","v","vadeva","vagujarati","vagurmukhi","vakatakana","vav","vavdagesh","vavdagesh65","vavdageshhebrew","vavhebrew","vavholam","vavholamhebrew","vavvavhebrew","vavyodhebrew","vcircle","vdotbelow","vecyrillic","veharabic","vehfinalarabic","vehinitialarabic","vehmedialarabic","vekatakana","venus","verticalbar","verticallineabovecmb","verticallinebelowcmb","verticallinelowmod","verticallinemod","vewarmenian","vhook","vikatakana","viramabengali","viramadeva","viramagujarati","visargabengali","visargadeva","visargagujarati","vmonospace","voarmenian","voicediterationhiragana","voicediterationkatakana","voicedmarkkana","voicedmarkkanahalfwidth","vokatakana","vparen","vtilde","vturned","vuhiragana","vukatakana","wacute","waekorean","wahiragana","wakatakana","wakatakanahalfwidth","wakorean","wasmallhiragana","wasmallkatakana","wattosquare","wavedash","wavyunderscorevertical","wawarabic","wawfinalarabic","wawhamzaabovearabic","wawhamzaabovefinalarabic","wbsquare","wcircle","wcircumflex","wdieresis","wdotaccent","wdotbelow","wehiragana","weierstrass","wekatakana","wekorean","weokorean","wgrave","whitebullet","whitecircle","whitecircleinverse","whitecornerbracketleft","whitecornerbracketleftvertical","whitecornerbracketright","whitecornerbracketrightvertical","whitediamond","whitediamondcontainingblacksmalldiamond","whitedownpointingsmalltriangle","whitedownpointingtriangle","whiteleftpointingsmalltriangle","whiteleftpointingtriangle","whitelenticularbracketleft","whitelenticularbracketright","whiterightpointingsmalltriangle","whiterightpointingtriangle","whitesmallsquare","whitesmilingface","whitesquare","whitestar","whitetelephone","whitetortoiseshellbracketleft","whitetortoiseshellbracketright","whiteuppointingsmalltriangle","whiteuppointingtriangle","wihiragana","wikatakana","wikorean","wmonospace","wohiragana","wokatakana","wokatakanahalfwidth","won","wonmonospace","wowaenthai","wparen","wring","wsuperior","wturned","wynn","xabovecmb","xbopomofo","xcircle","xdieresis","xdotaccent","xeharmenian","xi","xmonospace","xparen","xsuperior","yaadosquare","yabengali","yacute","yadeva","yaekorean","yagujarati","yagurmukhi","yahiragana","yakatakana","yakatakanahalfwidth","yakorean","yamakkanthai","yasmallhiragana","yasmallkatakana","yasmallkatakanahalfwidth","yatcyrillic","ycircle","ycircumflex","ydieresis","ydotaccent","ydotbelow","yeharabic","yehbarreearabic","yehbarreefinalarabic","yehfinalarabic","yehhamzaabovearabic","yehhamzaabovefinalarabic","yehhamzaaboveinitialarabic","yehhamzaabovemedialarabic","yehinitialarabic","yehmedialarabic","yehmeeminitialarabic","yehmeemisolatedarabic","yehnoonfinalarabic","yehthreedotsbelowarabic","yekorean","yen","yenmonospace","yeokorean","yeorinhieuhkorean","yerahbenyomohebrew","yerahbenyomolefthebrew","yericyrillic","yerudieresiscyrillic","yesieungkorean","yesieungpansioskorean","yesieungsioskorean","yetivhebrew","ygrave","yhook","yhookabove","yiarmenian","yicyrillic","yikorean","yinyang","yiwnarmenian","ymonospace","yod","yoddagesh","yoddageshhebrew","yodhebrew","yodyodhebrew","yodyodpatahhebrew","yohiragana","yoikorean","yokatakana","yokatakanahalfwidth","yokorean","yosmallhiragana","yosmallkatakana","yosmallkatakanahalfwidth","yotgreek","yoyaekorean","yoyakorean","yoyakthai","yoyingthai","yparen","ypogegrammeni","ypogegrammenigreekcmb","yr","yring","ysuperior","ytilde","yturned","yuhiragana","yuikorean","yukatakana","yukatakanahalfwidth","yukorean","yusbigcyrillic","yusbigiotifiedcyrillic","yuslittlecyrillic","yuslittleiotifiedcyrillic","yusmallhiragana","yusmallkatakana","yusmallkatakanahalfwidth","yuyekorean","yuyeokorean","yyabengali","yyadeva","z","zaarmenian","zacute","zadeva","zagurmukhi","zaharabic","zahfinalarabic","zahinitialarabic","zahiragana","zahmedialarabic","zainarabic","zainfinalarabic","zakatakana","zaqefgadolhebrew","zaqefqatanhebrew","zarqahebrew","zayin","zayindagesh","zayindageshhebrew","zayinhebrew","zbopomofo","zcaron","zcircle","zcircumflex","zcurl","zdot","zdotaccent","zdotbelow","zecyrillic","zedescendercyrillic","zedieresiscyrillic","zehiragana","zekatakana","zero","zeroarabic","zerobengali","zerodeva","zerogujarati","zerogurmukhi","zerohackarabic","zeroinferior","zeromonospace","zerooldstyle","zeropersian","zerosuperior","zerothai","zerowidthjoiner","zerowidthnonjoiner","zerowidthspace","zeta","zhbopomofo","zhearmenian","zhebrevecyrillic","zhecyrillic","zhedescendercyrillic","zhedieresiscyrillic","zihiragana","zikatakana","zinorhebrew","zlinebelow","zmonospace","zohiragana","zokatakana","zparen","zretroflexhook","zstroke","zuhiragana","zukatakana","angbracketleftbig","angbracketleftBig","angbracketleftbigg","angbracketleftBigg","angbracketrightBig","angbracketrightbig","angbracketrightBigg","angbracketrightbigg","arrowhookleft","arrowhookright","arrowlefttophalf","arrowleftbothalf","arrownortheast","arrownorthwest","arrowrighttophalf","arrowrightbothalf","arrowsoutheast","arrowsouthwest","backslashbig","backslashBig","backslashBigg","backslashbigg","bardbl","bracehtipdownleft","bracehtipdownright","bracehtipupleft","bracehtipupright","braceleftBig","braceleftbig","braceleftbigg","braceleftBigg","bracerightBig","bracerightbig","bracerightbigg","bracerightBigg","bracketleftbig","bracketleftBig","bracketleftbigg","bracketleftBigg","bracketrightBig","bracketrightbig","bracketrightbigg","bracketrightBigg","ceilingleftbig","ceilingleftBig","ceilingleftBigg","ceilingleftbigg","ceilingrightbig","ceilingrightBig","ceilingrightbigg","ceilingrightBigg","circledotdisplay","circledottext","circlemultiplydisplay","circlemultiplytext","circleplusdisplay","circleplustext","contintegraldisplay","contintegraltext","coproductdisplay","coproducttext","floorleftBig","floorleftbig","floorleftbigg","floorleftBigg","floorrightbig","floorrightBig","floorrightBigg","floorrightbigg","hatwide","hatwider","hatwidest","intercal","integraldisplay","integraltext","intersectiondisplay","intersectiontext","logicalanddisplay","logicalandtext","logicalordisplay","logicalortext","parenleftBig","parenleftbig","parenleftBigg","parenleftbigg","parenrightBig","parenrightbig","parenrightBigg","parenrightbigg","prime","productdisplay","producttext","radicalbig","radicalBig","radicalBigg","radicalbigg","radicalbt","radicaltp","radicalvertex","slashbig","slashBig","slashBigg","slashbigg","summationdisplay","summationtext","tildewide","tildewider","tildewidest","uniondisplay","unionmultidisplay","unionmultitext","unionsqdisplay","unionsqtext","uniontext","vextenddouble","vextendsingle","getDingbatsGlyphsUnicode","a1","a2","a202","a3","a4","a5","a119","a118","a117","a11","a12","a13","a14","a15","a16","a105","a17","a18","a19","a20","a21","a22","a23","a24","a25","a26","a27","a28","a6","a7","a8","a9","a10","a29","a30","a31","a32","a33","a34","a35","a36","a37","a38","a39","a40","a41","a42","a43","a44","a45","a46","a47","a48","a49","a50","a51","a52","a53","a54","a55","a56","a57","a58","a59","a60","a61","a62","a63","a64","a65","a66","a67","a68","a69","a70","a71","a72","a73","a74","a203","a75","a204","a76","a77","a78","a79","a81","a82","a83","a84","a97","a98","a99","a100","a101","a102","a103","a104","a106","a107","a108","a112","a111","a110","a109","a120","a121","a122","a123","a124","a125","a126","a127","a128","a129","a130","a131","a132","a133","a134","a135","a136","a137","a138","a139","a140","a141","a142","a143","a144","a145","a146","a147","a148","a149","a150","a151","a152","a153","a154","a155","a156","a157","a158","a159","a160","a161","a163","a164","a196","a165","a192","a166","a167","a168","a169","a170","a171","a172","a173","a162","a174","a175","a176","a177","a178","a179","a193","a180","a199","a181","a200","a182","a201","a183","a184","a197","a185","a194","a198","a186","a195","a187","a188","a189","a190","a191","a89","a90","a93","a94","a91","a92","a205","a85","a206","a86","a87","a88","a95","a96","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","chunk","getBaseStreams","allChunksLoaded","onReceiveData","begin","byteLength","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","isEmpty","b0","b1","getInt32","strEnd","peekedByte","getByteRange","moveStart","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","Promise","resolve","reject","read","then","readChunk","arrayByteLength","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","sort","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_typeof","Symbol","iterator","constructor","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","next","return","TypeError","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","RefSetCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","getRaw","isRef","encryptMetadata","encrypt","fetch","type","subtype","stringToUTF8String","bytesToString","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","RefSet","put","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","forEach","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","toRoman","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","promises","all","translatedFonts","translated","getPage","_this2","getPageDict","_ref","_ref2","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","objId","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","isRefsEqual","getAsync","kidPromises","kid","actionName","indexOf","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","assignXref","trailer","ids","fileId","suppressEncryption","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","first","entry","gen","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","what","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","topDict","XRefParseException","getEntry","xrefEntry","toString","fetchUncompressed","fetchCompressed","parseInt","substring","isNaN","createCipherTransform","tableOffset","fetchIfRefAsync","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","getKeys","rawValue","_ii","keys","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","baseStreams","foundMissingData","_i2","_ii2","remove","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","source","options","encoding","eoline","EndOfLine","byteAlign","EncodedByteAlign","columns","Columns","rows","Rows","eoblock","EndOfBlock","black","BlackIs1","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","_findTableCode","table","limit","limitValue","code","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","parseTilePackets","bufferSize","skipNextBit","readBits","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","included","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","gainLog2","calculate","left","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","slice","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","iterate","extend","size","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","len","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","maj","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","input","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","getPrototypeOf","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","DecryptStream","stringToBytes","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","PasswordException","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","b2","parseFloat","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","CFFEncoding","rawBytes","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","ArialNarrow","ArialBlack","Arial","ArialMT","CourierNew","CourierNewPSMT","Helvetica","SegoeUISymbol","TimesNewRoman","TimesNewRomanPS","TimesNewRomanPSMT","Calibri","CenturyGothic","ComicSansMS","LucidaConsole","NuptialScript","Wingdings","Albertus","Aldus","Alexandria","Algerian","Antiqua","Apex","Arno","Aster","Aurora","Baskerville","Bell","Bembo","Benguiat","Bodoni","Bookman","Calisto","Calvert","Capitals","Cambria","Cartier","Caslon","Catull","Centaur","Chaparral","Cheltenham","Clarendon","Clearface","Cochin","Colonna","Constantia","Corona","Ecotype","Egyptienne","Elephant","Excelsior","Fairfield","Folkard","Footlight","FreeSerif","Garamond","Gentium","Georgia","Gloucester","Granjon","Heather","Hercules","Hiroshige","Imprint","Janson","Joanna","Korinna","Lexicon","Literaturnaya","Lucida","Melior","Memphis","Miller","Minion","Modern","Palatino","Perpetua","Plantin","Playbill","Renault","Requiem","Rockwell","Roman","Sabon","Scala","Seagull","Sistina","Souvenir","STIX","Sylfaen","Times","Trajan","Utopia","Versailles","Wanted","Weiss","Windsor","XITS","Dingbats","ZapfDingbats","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","424","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","toNumberArray","getSampleArray","outputSize","bps","codeSize","codeBuf","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","log","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","nameCache","cmdCache","nonSerializable","_map","__nonSerializable__","newXref","key1","key2","key3","callback","empty","merge","dictArray","mergedDict","keyName","putAlias","aliasRef","thisArg","v1","v2","StringStream","StreamsSequenceStream","Stream","arrayBuffer","emptyBuffer","maybeMinBufferLength","minBufferLength","buffer2","bufEnd","streams","newLength","appendToArray","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","cmf","flg","getBits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","codeLengths","repeatLength","dist","blockLen","check","predictor","readBlockTiff","readBlockPng","colors","pixBytes","rowBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","prevRow","up","upLeft","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","isSpace","maxDecodeLength","digit","repeatHeader","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","lastCode","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","maybePort","_pdf_manager","_is_node2","__esModule","default","_message_handler","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","now","getOperatorList","renderInteractiveForms","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","catch","boundException","MissingPDFException","UnexpectedResponseException","UnknownErrorException","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","getPdfManager","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","initializeFromPort","window","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","getInheritableProperty","stopWhenFound","resources","mediaBox","cropBox","intersect","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","successiveACNextValue","eobrun","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getter","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","TimeSlotManager","canDecode","image","isDecodable","colorSpace","isSupported","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","buildTextContentItem","textChunk","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","bidiResult","bidi","dir","runBidiTransform","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","ri","setRenderingIntent","setFlatness","gs","cm","re","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","BT","ET","Tc","Tw","Tz","TL","Tf","Tr","Ts","Td","TD","Tm","Tj","TJ","d0","setCharWidth","d1","setCharWidthAndBounds","CS","SC","SCN","sc","scn","RG","rg","sh","BI","beginInlineImage","ID","beginImageData","EI","Do","MP","DP","BMC","BDC","EMC","BX","EX","BM","BD","true","fa","fal","fals","false","nul","null","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isOpenTypeFile","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","head","hhea","hmtx","maxp","post","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","potentialHeader","potentialTables","nameEntry","cffFile","isTrueType","loca","fpgm","prep","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","cvt","cvtData","numOfMetrics","numMissing","locaLength","indexToLocFormat","numGlyphsPlusOne","isGlyphLocationsLong","glyphsInfo","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","metricsOverride","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","compiler","namePrototype","builder","tableTag","builtInEncoding","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","actualLength","EEXEC_SIGNATURE","streamStartPos","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","744","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","cssColor","makeCssRgb","background","SMALL_NUMBER","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildFigureFromPatch","mesh","figure","figures","coords","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","tmp4","coordsPacked","xy","colorsPacked","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","Courier","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,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AA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA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4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,KACA5nJ,IAAA,OAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,MAAA,MACA5nJ,IAAA,QAEA4nJ,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","file":"13-ce274364ba0ff09f8aeb.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR);\n  };\n  ColorSpace.fromIR = function (IR) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFn = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFn];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nfunction toNumberArray(arr) {\n  if (!Array.isArray(arr)) {\n    return null;\n  }\n  var length = arr.length;\n  for (var i = 0; i < length; i++) {\n    if (typeof arr[i] !== 'number') {\n      var result = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        result[_i] = +arr[_i];\n      }\n      return result;\n    }\n  }\n  return arr;\n}\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = toNumberArray(dict.getArray('Size'));\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = toNumberArray(dict.getArray('Encode'));\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push([0, size[i] - 1]);\n        }\n      } else {\n        encode = toMultiArray(encode);\n      }\n      var decode = toNumberArray(dict.getArray('Decode'));\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = toNumberArray(dict.getArray('C0')) || [0];\n      var c1 = toNumberArray(dict.getArray('C1')) || [1];\n      var n = dict.get('N');\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = toNumberArray(dict.getArray('Bounds'));\n      var encode = toNumberArray(dict.getArray('Encode'));\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fns = IR[4];\n      var tmpBuf = new Float32Array(1);\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.550';\nvar pdfjsBuild = '76337fdc';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _message_handler = require('../shared/message_handler');\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.550';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _message_handler.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (boundException) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', boundException);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _message_handler.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar EOIMarkerError = function EOIMarkerErrorClosure() {\n  function EOIMarkerError(message) {\n    this.message = message;\n  }\n  EOIMarkerError.prototype = new Error();\n  EOIMarkerError.prototype.name = 'EOIMarkerError';\n  EOIMarkerError.constructor = EOIMarkerError;\n  return EOIMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          } else if (nextByte === 0xD9) {\n            throw new EOIMarkerError('Found EOI marker (0xFFD9) while parsing scan data');\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      markerLoop: while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)(ex.message + ' -- attempting to re-parse the JPEG image.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              } else if (ex instanceof EOIMarkerError) {\n                (0, _util.warn)(ex.message + ' -- ignoring the rest of the image data.');\n                break markerLoop;\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;"],"sourceRoot":""}