{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","EOF","Name","name","this","nameCache","create","get","Cmd","cmd","cmdCache","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","Promise","resolve","getArray","Array","isArray","i","ii","slice","length","isRef","fetch","getRaw","key","getKeys","keys","set","has","forEach","callback","empty","merge","dictArray","mergedDict","dict","isDict","keyName","Ref","num","gen","toString","str","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","call","clear","isName","v","type","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","__webpack_require__","_primitives","arrayBuffer","start","bytes","Uint8Array","pos","end","isEmpty","getByte","getUint16","b0","b1","getInt32","strEnd","subarray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","buffer","stringToBytes","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","chunk","shift","newLength","baseStreams","stream","Util","appendToArray","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","isSpace","firstDigit","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","Math","min","log","ColorSpace","unreachable","getRgb","src","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","bpc","comps","rgbBuf","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFn","AlternateCS","range","LabCS","arguments","colorSpaces","resCS","mode","altIR","warn","isDefaultDecode","decode","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","isString","charCodeAt","outputDelta","lookupPos","r","g","convertToRgb","srcScale","m","y","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","max","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","sRGBTransferFunction","color","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","XYZ_D65","LMS_D65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","274","e","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","Error","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","MissingDataException","cipherTransform","makeInlineImage","array","push","makeStream","Number","isInteger","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","assert","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","StreamType","FLATE","LZW","DCT","JpegStream","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","ex","knownCommands","strBuf","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj1","obj2","obj3","isNum","hints","hintsLength","item","index","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","_jpg","configurable","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transform","transformNeeded","maxValue","decodeTransform","colorTransform","data","getData","drawWidth","drawHeight","getIR","forceDataSchema","createObjectURL","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","offset","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","extendObj","lastChunk","transfers","cached","send","operatorList","getLookupTableFactory","getGlyphsUnicode","AE","AEacute","AEmacron","AEsmall","Aacute","Aacutesmall","Abreve","Abreveacute","Abrevecyrillic","Abrevedotbelow","Abrevegrave","Abrevehookabove","Abrevetilde","Acaron","Acircle","Acircumflex","Acircumflexacute","Acircumflexdotbelow","Acircumflexgrave","Acircumflexhookabove","Acircumflexsmall","Acircumflextilde","Acute","Acutesmall","Acyrillic","Adblgrave","Adieresis","Adieresiscyrillic","Adieresismacron","Adieresissmall","Adotbelow","Adotmacron","Agrave","Agravesmall","Ahookabove","Aiecyrillic","Ainvertedbreve","Alpha","Alphatonos","Amacron","Amonospace","Aogonek","Aring","Aringacute","Aringbelow","Aringsmall","Asmall","Atilde","Atildesmall","Aybarmenian","Bcircle","Bdotaccent","Bdotbelow","Becyrillic","Benarmenian","Beta","Bhook","Blinebelow","Bmonospace","Brevesmall","Bsmall","Btopbar","Caarmenian","Cacute","Caron","Caronsmall","Ccaron","Ccedilla","Ccedillaacute","Ccedillasmall","Ccircle","Ccircumflex","Cdot","Cdotaccent","Cedillasmall","Chaarmenian","Cheabkhasiancyrillic","Checyrillic","Chedescenderabkhasiancyrillic","Chedescendercyrillic","Chedieresiscyrillic","Cheharmenian","Chekhakassiancyrillic","Cheverticalstrokecyrillic","Chi","Chook","Circumflexsmall","Cmonospace","Coarmenian","Csmall","D","DZ","DZcaron","Daarmenian","Dafrican","Dcaron","Dcedilla","Dcircle","Dcircumflexbelow","Dcroat","Ddotaccent","Ddotbelow","Decyrillic","Deicoptic","Delta","Deltagreek","Dhook","Dieresis","DieresisAcute","DieresisGrave","Dieresissmall","Digammagreek","Djecyrillic","Dlinebelow","Dmonospace","Dotaccentsmall","Dslash","Dsmall","Dtopbar","Dz","Dzcaron","Dzeabkhasiancyrillic","Dzecyrillic","Dzhecyrillic","E","Eacute","Eacutesmall","Ebreve","Ecaron","Ecedillabreve","Echarmenian","Ecircle","Ecircumflex","Ecircumflexacute","Ecircumflexbelow","Ecircumflexdotbelow","Ecircumflexgrave","Ecircumflexhookabove","Ecircumflexsmall","Ecircumflextilde","Ecyrillic","Edblgrave","Edieresis","Edieresissmall","Edot","Edotaccent","Edotbelow","Efcyrillic","Egrave","Egravesmall","Eharmenian","Ehookabove","Eightroman","Einvertedbreve","Eiotifiedcyrillic","Elcyrillic","Elevenroman","Emacron","Emacronacute","Emacrongrave","Emcyrillic","Emonospace","Encyrillic","Endescendercyrillic","Eng","Enghecyrillic","Enhookcyrillic","Eogonek","Eopen","Epsilon","Epsilontonos","Ercyrillic","Ereversed","Ereversedcyrillic","Escyrillic","Esdescendercyrillic","Esh","Esmall","Eta","Etarmenian","Etatonos","Eth","Ethsmall","Etilde","Etildebelow","Euro","Ezh","Ezhcaron","Ezhreversed","F","Fcircle","Fdotaccent","Feharmenian","Feicoptic","Fhook","Fitacyrillic","Fiveroman","Fmonospace","Fourroman","Fsmall","GBsquare","Gacute","Gamma","Gammaafrican","Gangiacoptic","Gbreve","Gcaron","Gcedilla","Gcircle","Gcircumflex","Gcommaaccent","Gdot","Gdotaccent","Gecyrillic","Ghadarmenian","Ghemiddlehookcyrillic","Ghestrokecyrillic","Gheupturncyrillic","Ghook","Gimarmenian","Gjecyrillic","Gmacron","Gmonospace","Grave","Gravesmall","Gsmall","Gsmallhook","Gstroke","H","H18533","H18543","H18551","H22073","HPsquare","Haabkhasiancyrillic","Hadescendercyrillic","Hardsigncyrillic","Hbar","Hbrevebelow","Hcedilla","Hcircle","Hcircumflex","Hdieresis","Hdotaccent","Hdotbelow","Hmonospace","Hoarmenian","Horicoptic","Hsmall","Hungarumlaut","Hungarumlautsmall","Hzsquare","I","IAcyrillic","IJ","IUcyrillic","Iacute","Iacutesmall","Ibreve","Icaron","Icircle","Icircumflex","Icircumflexsmall","Icyrillic","Idblgrave","Idieresis","Idieresisacute","Idieresiscyrillic","Idieresissmall","Idot","Idotaccent","Idotbelow","Iebrevecyrillic","Iecyrillic","Ifraktur","Igrave","Igravesmall","Ihookabove","Iicyrillic","Iinvertedbreve","Iishortcyrillic","Imacron","Imacroncyrillic","Imonospace","Iniarmenian","Iocyrillic","Iogonek","Iota","Iotaafrican","Iotadieresis","Iotatonos","Ismall","Istroke","Itilde","Itildebelow","Izhitsacyrillic","Izhitsadblgravecyrillic","J","Jaarmenian","Jcircle","Jcircumflex","Jecyrillic","Jheharmenian","Jmonospace","Jsmall","K","KBsquare","KKsquare","Kabashkircyrillic","Kacute","Kacyrillic","Kadescendercyrillic","Kahookcyrillic","Kappa","Kastrokecyrillic","Kaverticalstrokecyrillic","Kcaron","Kcedilla","Kcircle","Kcommaaccent","Kdotbelow","Keharmenian","Kenarmenian","Khacyrillic","Kheicoptic","Khook","Kjecyrillic","Klinebelow","Kmonospace","Koppacyrillic","Koppagreek","Ksicyrillic","Ksmall","LJ","LL","Lacute","Lambda","Lcaron","Lcedilla","Lcircle","Lcircumflexbelow","Lcommaaccent","Ldot","Ldotaccent","Ldotbelow","Ldotbelowmacron","Liwnarmenian","Lj","Ljecyrillic","Llinebelow","Lmonospace","Lslash","Lslashsmall","Lsmall","MBsquare","Macron","Macronsmall","Macute","Mcircle","Mdotaccent","Mdotbelow","Menarmenian","Mmonospace","Msmall","Mturned","Mu","NJ","Nacute","Ncaron","Ncedilla","Ncircle","Ncircumflexbelow","Ncommaaccent","Ndotaccent","Ndotbelow","Nhookleft","Nineroman","Nj","Njecyrillic","Nlinebelow","Nmonospace","Nowarmenian","Nsmall","Ntilde","Ntildesmall","Nu","O","OE","OEsmall","Oacute","Oacutesmall","Obarredcyrillic","Obarreddieresiscyrillic","Obreve","Ocaron","Ocenteredtilde","Ocircle","Ocircumflex","Ocircumflexacute","Ocircumflexdotbelow","Ocircumflexgrave","Ocircumflexhookabove","Ocircumflexsmall","Ocircumflextilde","Ocyrillic","Odblacute","Odblgrave","Odieresis","Odieresiscyrillic","Odieresissmall","Odotbelow","Ogoneksmall","Ograve","Ogravesmall","Oharmenian","Ohm","Ohookabove","Ohorn","Ohornacute","Ohorndotbelow","Ohorngrave","Ohornhookabove","Ohorntilde","Ohungarumlaut","Oi","Oinvertedbreve","Omacron","Omacronacute","Omacrongrave","Omega","Omegacyrillic","Omegagreek","Omegaroundcyrillic","Omegatitlocyrillic","Omegatonos","Omicron","Omicrontonos","Omonospace","Oneroman","Oogonek","Oogonekmacron","Oopen","Oslash","Oslashacute","Oslashsmall","Osmall","Ostrokeacute","Otcyrillic","Otilde","Otildeacute","Otildedieresis","Otildesmall","P","Pacute","Pcircle","Pdotaccent","Pecyrillic","Peharmenian","Pemiddlehookcyrillic","Phi","Phook","Pi","Piwrarmenian","Pmonospace","Psi","Psicyrillic","Psmall","Q","Qcircle","Qmonospace","Qsmall","R","Raarmenian","Racute","Rcaron","Rcedilla","Rcircle","Rcommaaccent","Rdblgrave","Rdotaccent","Rdotbelow","Rdotbelowmacron","Reharmenian","Rfraktur","Rho","Ringsmall","Rinvertedbreve","Rlinebelow","Rmonospace","Rsmall","Rsmallinverted","Rsmallinvertedsuperior","S","SF010000","SF020000","SF030000","SF040000","SF050000","SF060000","SF070000","SF080000","SF090000","SF100000","SF110000","SF190000","SF200000","SF210000","SF220000","SF230000","SF240000","SF250000","SF260000","SF270000","SF280000","SF360000","SF370000","SF380000","SF390000","SF400000","SF410000","SF420000","SF430000","SF440000","SF450000","SF460000","SF470000","SF480000","SF490000","SF500000","SF510000","SF520000","SF530000","SF540000","Sacute","Sacutedotaccent","Sampigreek","Scaron","Scarondotaccent","Scaronsmall","Scedilla","Schwa","Schwacyrillic","Schwadieresiscyrillic","Scircle","Scircumflex","Scommaaccent","Sdotaccent","Sdotbelow","Sdotbelowdotaccent","Seharmenian","Sevenroman","Shaarmenian","Shacyrillic","Shchacyrillic","Sheicoptic","Shhacyrillic","Shimacoptic","Sigma","Sixroman","Smonospace","Softsigncyrillic","Ssmall","Stigmagreek","T","Tau","Tbar","Tcaron","Tcedilla","Tcircle","Tcircumflexbelow","Tcommaaccent","Tdotaccent","Tdotbelow","Tecyrillic","Tedescendercyrillic","Tenroman","Tetsecyrillic","Theta","Thook","Thorn","Thornsmall","Threeroman","Tildesmall","Tiwnarmenian","Tlinebelow","Tmonospace","Toarmenian","Tonefive","Tonesix","Tonetwo","Tretroflexhook","Tsecyrillic","Tshecyrillic","Tsmall","Twelveroman","Tworoman","U","Uacute","Uacutesmall","Ubreve","Ucaron","Ucircle","Ucircumflex","Ucircumflexbelow","Ucircumflexsmall","Ucyrillic","Udblacute","Udblgrave","Udieresis","Udieresisacute","Udieresisbelow","Udieresiscaron","Udieresiscyrillic","Udieresisgrave","Udieresismacron","Udieresissmall","Udotbelow","Ugrave","Ugravesmall","Uhookabove","Uhorn","Uhornacute","Uhorndotbelow","Uhorngrave","Uhornhookabove","Uhorntilde","Uhungarumlaut","Uhungarumlautcyrillic","Uinvertedbreve","Ukcyrillic","Umacron","Umacroncyrillic","Umacrondieresis","Umonospace","Uogonek","Upsilon","Upsilon1","Upsilonacutehooksymbolgreek","Upsilonafrican","Upsilondieresis","Upsilondieresishooksymbolgreek","Upsilonhooksymbol","Upsilontonos","Uring","Ushortcyrillic","Usmall","Ustraightcyrillic","Ustraightstrokecyrillic","Utilde","Utildeacute","Utildebelow","V","Vcircle","Vdotbelow","Vecyrillic","Vewarmenian","Vhook","Vmonospace","Voarmenian","Vsmall","Vtilde","W","Wacute","Wcircle","Wcircumflex","Wdieresis","Wdotaccent","Wdotbelow","Wgrave","Wmonospace","Wsmall","Xcircle","Xdieresis","Xdotaccent","Xeharmenian","Xi","Xmonospace","Xsmall","Yacute","Yacutesmall","Yatcyrillic","Ycircle","Ycircumflex","Ydieresis","Ydieresissmall","Ydotaccent","Ydotbelow","Yericyrillic","Yerudieresiscyrillic","Ygrave","Yhook","Yhookabove","Yiarmenian","Yicyrillic","Yiwnarmenian","Ymonospace","Ysmall","Ytilde","Yusbigcyrillic","Yusbigiotifiedcyrillic","Yuslittlecyrillic","Yuslittleiotifiedcyrillic","Zaarmenian","Zacute","Zcaron","Zcaronsmall","Zcircle","Zcircumflex","Zdot","Zdotaccent","Zdotbelow","Zecyrillic","Zedescendercyrillic","Zedieresiscyrillic","Zeta","Zhearmenian","Zhebrevecyrillic","Zhecyrillic","Zhedescendercyrillic","Zhedieresiscyrillic","Zlinebelow","Zmonospace","Zsmall","Zstroke","aabengali","aacute","aadeva","aagujarati","aagurmukhi","aamatragurmukhi","aarusquare","aavowelsignbengali","aavowelsigndeva","aavowelsigngujarati","abbreviationmarkarmenian","abbreviationsigndeva","abengali","abopomofo","abreve","abreveacute","abrevecyrillic","abrevedotbelow","abrevegrave","abrevehookabove","abrevetilde","acaron","acircle","acircumflex","acircumflexacute","acircumflexdotbelow","acircumflexgrave","acircumflexhookabove","acircumflextilde","acute","acutebelowcmb","acutecmb","acutecomb","acutedeva","acutelowmod","acutetonecmb","acyrillic","adblgrave","addakgurmukhi","adeva","adieresis","adieresiscyrillic","adieresismacron","adotbelow","adotmacron","ae","aeacute","aekorean","aemacron","afii00208","afii08941","afii10017","afii10018","afii10019","afii10020","afii10021","afii10022","afii10023","afii10024","afii10025","afii10026","afii10027","afii10028","afii10029","afii10030","afii10031","afii10032","afii10033","afii10034","afii10035","afii10036","afii10037","afii10038","afii10039","afii10040","afii10041","afii10042","afii10043","afii10044","afii10045","afii10046","afii10047","afii10048","afii10049","afii10050","afii10051","afii10052","afii10053","afii10054","afii10055","afii10056","afii10057","afii10058","afii10059","afii10060","afii10061","afii10062","afii10063","afii10064","afii10065","afii10066","afii10067","afii10068","afii10069","afii10070","afii10071","afii10072","afii10073","afii10074","afii10075","afii10076","afii10077","afii10078","afii10079","afii10080","afii10081","afii10082","afii10083","afii10084","afii10085","afii10086","afii10087","afii10088","afii10089","afii10090","afii10091","afii10092","afii10093","afii10094","afii10095","afii10096","afii10097","afii10098","afii10099","afii10100","afii10101","afii10102","afii10103","afii10104","afii10105","afii10106","afii10107","afii10108","afii10109","afii10110","afii10145","afii10146","afii10147","afii10148","afii10192","afii10193","afii10194","afii10195","afii10196","afii10831","afii10832","afii10846","afii299","afii300","afii301","afii57381","afii57388","afii57392","afii57393","afii57394","afii57395","afii57396","afii57397","afii57398","afii57399","afii57400","afii57401","afii57403","afii57407","afii57409","afii57410","afii57411","afii57412","afii57413","afii57414","afii57415","afii57416","afii57417","afii57418","afii57419","afii57420","afii57421","afii57422","afii57423","afii57424","afii57425","afii57426","afii57427","afii57428","afii57429","afii57430","afii57431","afii57432","afii57433","afii57434","afii57440","afii57441","afii57442","afii57443","afii57444","afii57445","afii57446","afii57448","afii57449","afii57450","afii57451","afii57452","afii57453","afii57454","afii57455","afii57456","afii57457","afii57458","afii57470","afii57505","afii57506","afii57507","afii57508","afii57509","afii57511","afii57512","afii57513","afii57514","afii57519","afii57534","afii57636","afii57645","afii57658","afii57664","afii57665","afii57666","afii57667","afii57668","afii57669","afii57670","afii57671","afii57672","afii57673","afii57674","afii57675","afii57676","afii57677","afii57678","afii57679","afii57680","afii57681","afii57682","afii57683","afii57684","afii57685","afii57686","afii57687","afii57688","afii57689","afii57690","afii57694","afii57695","afii57700","afii57705","afii57716","afii57717","afii57718","afii57723","afii57793","afii57794","afii57795","afii57796","afii57797","afii57798","afii57799","afii57800","afii57801","afii57802","afii57803","afii57804","afii57806","afii57807","afii57839","afii57841","afii57842","afii57929","afii61248","afii61289","afii61352","afii61573","afii61574","afii61575","afii61664","afii63167","afii64937","agrave","agujarati","agurmukhi","ahiragana","ahookabove","aibengali","aibopomofo","aideva","aiecyrillic","aigujarati","aigurmukhi","aimatragurmukhi","ainarabic","ainfinalarabic","aininitialarabic","ainmedialarabic","ainvertedbreve","aivowelsignbengali","aivowelsigndeva","aivowelsigngujarati","akatakana","akatakanahalfwidth","akorean","alef","alefarabic","alefdageshhebrew","aleffinalarabic","alefhamzaabovearabic","alefhamzaabovefinalarabic","alefhamzabelowarabic","alefhamzabelowfinalarabic","alefhebrew","aleflamedhebrew","alefmaddaabovearabic","alefmaddaabovefinalarabic","alefmaksuraarabic","alefmaksurafinalarabic","alefmaksurainitialarabic","alefmaksuramedialarabic","alefpatahhebrew","alefqamatshebrew","aleph","allequal","alpha","alphatonos","amacron","amonospace","ampersand","ampersandmonospace","ampersandsmall","amsquare","anbopomofo","angbopomofo","angbracketleft","angbracketright","angkhankhuthai","angle","anglebracketleft","anglebracketleftvertical","anglebracketright","anglebracketrightvertical","angleleft","angleright","angstrom","anoteleia","anudattadeva","anusvarabengali","anusvaradeva","anusvaragujarati","aogonek","apaatosquare","aparen","apostrophearmenian","apostrophemod","apple","approaches","approxequal","approxequalorimage","approximatelyequal","araeaekorean","araeakorean","arc","arighthalfring","aring","aringacute","aringbelow","arrowboth","arrowdashdown","arrowdashleft","arrowdashright","arrowdashup","arrowdblboth","arrowdbldown","arrowdblleft","arrowdblright","arrowdblup","arrowdown","arrowdownleft","arrowdownright","arrowdownwhite","arrowheaddownmod","arrowheadleftmod","arrowheadrightmod","arrowheadupmod","arrowhorizex","arrowleft","arrowleftdbl","arrowleftdblstroke","arrowleftoverright","arrowleftwhite","arrowright","arrowrightdblstroke","arrowrightheavy","arrowrightoverleft","arrowrightwhite","arrowtableft","arrowtabright","arrowup","arrowupdn","arrowupdnbse","arrowupdownbase","arrowupleft","arrowupleftofdown","arrowupright","arrowupwhite","arrowvertex","asciicircum","asciicircummonospace","asciitilde","asciitildemonospace","ascript","ascriptturned","asmallhiragana","asmallkatakana","asmallkatakanahalfwidth","asterisk","asteriskaltonearabic","asteriskarabic","asteriskmath","asteriskmonospace","asterisksmall","asterism","asuperior","asymptoticallyequal","at","atilde","atmonospace","atsmall","aturned","aubengali","aubopomofo","audeva","augujarati","augurmukhi","aulengthmarkbengali","aumatragurmukhi","auvowelsignbengali","auvowelsigndeva","auvowelsigngujarati","avagrahadeva","aybarmenian","ayin","ayinaltonehebrew","ayinhebrew","babengali","backslash","backslashmonospace","badeva","bagujarati","bagurmukhi","bahiragana","bahtthai","bakatakana","bar","barmonospace","bbopomofo","bcircle","bdotaccent","bdotbelow","beamedsixteenthnotes","because","becyrillic","beharabic","behfinalarabic","behinitialarabic","behiragana","behmedialarabic","behmeeminitialarabic","behmeemisolatedarabic","behnoonfinalarabic","bekatakana","benarmenian","bet","beta","betasymbolgreek","betdagesh","betdageshhebrew","bethebrew","betrafehebrew","bhabengali","bhadeva","bhagujarati","bhagurmukhi","bhook","bihiragana","bikatakana","bilabialclick","bindigurmukhi","birusquare","blackcircle","blackdiamond","blackdownpointingtriangle","blackleftpointingpointer","blackleftpointingtriangle","blacklenticularbracketleft","blacklenticularbracketleftvertical","blacklenticularbracketright","blacklenticularbracketrightvertical","blacklowerlefttriangle","blacklowerrighttriangle","blackrectangle","blackrightpointingpointer","blackrightpointingtriangle","blacksmallsquare","blacksmilingface","blacksquare","blackstar","blackupperlefttriangle","blackupperrighttriangle","blackuppointingsmalltriangle","blackuppointingtriangle","blank","blinebelow","block","bmonospace","bobaimaithai","bohiragana","bokatakana","bparen","bqsquare","braceex","braceleft","braceleftbt","braceleftmid","braceleftmonospace","braceleftsmall","bracelefttp","braceleftvertical","braceright","bracerightbt","bracerightmid","bracerightmonospace","bracerightsmall","bracerighttp","bracerightvertical","bracketleft","bracketleftbt","bracketleftex","bracketleftmonospace","bracketlefttp","bracketright","bracketrightbt","bracketrightex","bracketrightmonospace","bracketrighttp","breve","brevebelowcmb","brevecmb","breveinvertedbelowcmb","breveinvertedcmb","breveinverteddoublecmb","bridgebelowcmb","bridgeinvertedbelowcmb","brokenbar","bstroke","bsuperior","btopbar","buhiragana","bukatakana","bullet","bulletinverse","bulletoperator","bullseye","caarmenian","cabengali","cacute","cadeva","cagujarati","cagurmukhi","calsquare","candrabindubengali","candrabinducmb","candrabindudeva","candrabindugujarati","capslock","careof","caron","caronbelowcmb","caroncmb","carriagereturn","cbopomofo","ccaron","ccedilla","ccedillaacute","ccircle","ccircumflex","ccurl","cdot","cdotaccent","cdsquare","cedilla","cedillacmb","cent","centigrade","centinferior","centmonospace","centoldstyle","centsuperior","chaarmenian","chabengali","chadeva","chagujarati","chagurmukhi","chbopomofo","cheabkhasiancyrillic","checkmark","checyrillic","chedescenderabkhasiancyrillic","chedescendercyrillic","chedieresiscyrillic","cheharmenian","chekhakassiancyrillic","cheverticalstrokecyrillic","chi","chieuchacirclekorean","chieuchaparenkorean","chieuchcirclekorean","chieuchkorean","chieuchparenkorean","chochangthai","chochanthai","chochingthai","chochoethai","chook","cieucacirclekorean","cieucaparenkorean","cieuccirclekorean","cieuckorean","cieucparenkorean","cieucuparenkorean","circle","circlecopyrt","circlemultiply","circleot","circleplus","circlepostalmark","circlewithlefthalfblack","circlewithrighthalfblack","circumflex","circumflexbelowcmb","circumflexcmb","clickalveolar","clickdental","clicklateral","clickretroflex","club","clubsuitblack","clubsuitwhite","cmcubedsquare","cmonospace","cmsquaredsquare","coarmenian","colon","colonmonetary","colonmonospace","colonsign","colonsmall","colontriangularhalfmod","colontriangularmod","comma","commaabovecmb","commaaboverightcmb","commaaccent","commaarabic","commaarmenian","commainferior","commamonospace","commareversedabovecmb","commareversedmod","commasmall","commasuperior","commaturnedabovecmb","commaturnedmod","compass","congruent","contourintegral","control","controlACK","controlBEL","controlBS","controlCAN","controlCR","controlDC1","controlDC2","controlDC3","controlDC4","controlDEL","controlDLE","controlEM","controlENQ","controlEOT","controlESC","controlETB","controlETX","controlFF","controlFS","controlGS","controlHT","controlLF","controlNAK","controlNULL","controlRS","controlSI","controlSO","controlSOT","controlSTX","controlSUB","controlSYN","controlUS","controlVT","copyright","copyrightsans","copyrightserif","cornerbracketleft","cornerbracketlefthalfwidth","cornerbracketleftvertical","cornerbracketright","cornerbracketrighthalfwidth","cornerbracketrightvertical","corporationsquare","cosquare","coverkgsquare","cparen","cruzeiro","cstretched","curlyand","curlyor","currency","cyrBreve","cyrFlex","cyrbreve","cyrflex","d","daarmenian","dabengali","dadarabic","dadeva","dadfinalarabic","dadinitialarabic","dadmedialarabic","dagesh","dageshhebrew","dagger","daggerdbl","dagujarati","dagurmukhi","dahiragana","dakatakana","dalarabic","dalet","daletdagesh","daletdageshhebrew","dalethebrew","dalfinalarabic","dammaarabic","dammalowarabic","dammatanaltonearabic","dammatanarabic","danda","dargahebrew","dargalefthebrew","dasiapneumatacyrilliccmb","dblGrave","dblanglebracketleft","dblanglebracketleftvertical","dblanglebracketright","dblanglebracketrightvertical","dblarchinvertedbelowcmb","dblarrowleft","dblarrowright","dbldanda","dblgrave","dblgravecmb","dblintegral","dbllowline","dbllowlinecmb","dbloverlinecmb","dblprimemod","dblverticalbar","dblverticallineabovecmb","dbopomofo","dbsquare","dcaron","dcedilla","dcircle","dcircumflexbelow","dcroat","ddabengali","ddadeva","ddagujarati","ddagurmukhi","ddalarabic","ddalfinalarabic","dddhadeva","ddhabengali","ddhadeva","ddhagujarati","ddhagurmukhi","ddotaccent","ddotbelow","decimalseparatorarabic","decimalseparatorpersian","decyrillic","degree","dehihebrew","dehiragana","deicoptic","dekatakana","deleteleft","deleteright","delta","deltaturned","denominatorminusonenumeratorbengali","dezh","dhabengali","dhadeva","dhagujarati","dhagurmukhi","dhook","dialytikatonos","dialytikatonoscmb","diamond","diamondsuitwhite","dieresis","dieresisacute","dieresisbelowcmb","dieresiscmb","dieresisgrave","dieresistonos","dihiragana","dikatakana","dittomark","divide","divides","divisionslash","djecyrillic","dkshade","dlinebelow","dlsquare","dmacron","dmonospace","dnblock","dochadathai","dodekthai","dohiragana","dokatakana","dollar","dollarinferior","dollarmonospace","dollaroldstyle","dollarsmall","dollarsuperior","dong","dorusquare","dotaccent","dotaccentcmb","dotbelowcmb","dotbelowcomb","dotkatakana","dotlessi","dotlessj","dotlessjstrokehook","dotmath","dottedcircle","doubleyodpatah","doubleyodpatahhebrew","downtackbelowcmb","downtackmod","dparen","dsuperior","dtail","dtopbar","duhiragana","dukatakana","dz","dzaltone","dzcaron","dzcurl","dzeabkhasiancyrillic","dzecyrillic","dzhecyrillic","eacute","earth","ebengali","ebopomofo","ebreve","ecandradeva","ecandragujarati","ecandravowelsigndeva","ecandravowelsigngujarati","ecaron","ecedillabreve","echarmenian","echyiwnarmenian","ecircle","ecircumflex","ecircumflexacute","ecircumflexbelow","ecircumflexdotbelow","ecircumflexgrave","ecircumflexhookabove","ecircumflextilde","ecyrillic","edblgrave","edeva","edieresis","edot","edotaccent","edotbelow","eegurmukhi","eematragurmukhi","efcyrillic","egrave","egujarati","eharmenian","ehbopomofo","ehiragana","ehookabove","eibopomofo","eight","eightarabic","eightbengali","eightcircle","eightcircleinversesansserif","eightdeva","eighteencircle","eighteenparen","eighteenperiod","eightgujarati","eightgurmukhi","eighthackarabic","eighthangzhou","eighthnotebeamed","eightideographicparen","eightinferior","eightmonospace","eightoldstyle","eightparen","eightperiod","eightpersian","eightroman","eightsuperior","eightthai","einvertedbreve","eiotifiedcyrillic","ekatakana","ekatakanahalfwidth","ekonkargurmukhi","ekorean","elcyrillic","element","elevencircle","elevenparen","elevenperiod","elevenroman","ellipsis","ellipsisvertical","emacron","emacronacute","emacrongrave","emcyrillic","emdash","emdashvertical","emonospace","emphasismarkarmenian","emptyset","enbopomofo","encyrillic","endash","endashvertical","endescendercyrillic","eng","engbopomofo","enghecyrillic","enhookcyrillic","enspace","eogonek","eokorean","eopen","eopenclosed","eopenreversed","eopenreversedclosed","eopenreversedhook","eparen","epsilon","epsilontonos","equal","equalmonospace","equalsmall","equalsuperior","equivalence","erbopomofo","ercyrillic","ereversed","ereversedcyrillic","escyrillic","esdescendercyrillic","esh","eshcurl","eshortdeva","eshortvowelsigndeva","eshreversedloop","eshsquatreversed","esmallhiragana","esmallkatakana","esmallkatakanahalfwidth","estimated","esuperior","eta","etarmenian","etatonos","eth","etilde","etildebelow","etnahtafoukhhebrew","etnahtafoukhlefthebrew","etnahtahebrew","etnahtalefthebrew","eturned","eukorean","euro","evowelsignbengali","evowelsigndeva","evowelsigngujarati","exclam","exclamarmenian","exclamdbl","exclamdown","exclamdownsmall","exclammonospace","exclamsmall","existential","ezh","ezhcaron","ezhcurl","ezhreversed","ezhtail","f","fadeva","fagurmukhi","fahrenheit","fathaarabic","fathalowarabic","fathatanarabic","fbopomofo","fcircle","fdotaccent","feharabic","feharmenian","fehfinalarabic","fehinitialarabic","fehmedialarabic","feicoptic","female","ff","ffi","ffl","fi","fifteencircle","fifteenparen","fifteenperiod","figuredash","filledbox","filledrect","finalkaf","finalkafdagesh","finalkafdageshhebrew","finalkafhebrew","finalmem","finalmemhebrew","finalnun","finalnunhebrew","finalpe","finalpehebrew","finaltsadi","finaltsadihebrew","firsttonechinese","fisheye","fitacyrillic","five","fivearabic","fivebengali","fivecircle","fivecircleinversesansserif","fivedeva","fiveeighths","fivegujarati","fivegurmukhi","fivehackarabic","fivehangzhou","fiveideographicparen","fiveinferior","fivemonospace","fiveoldstyle","fiveparen","fiveperiod","fivepersian","fiveroman","fivesuperior","fivethai","fl","florin","fmonospace","fmsquare","fofanthai","fofathai","fongmanthai","forall","four","fourarabic","fourbengali","fourcircle","fourcircleinversesansserif","fourdeva","fourgujarati","fourgurmukhi","fourhackarabic","fourhangzhou","fourideographicparen","fourinferior","fourmonospace","fournumeratorbengali","fouroldstyle","fourparen","fourperiod","fourpersian","fourroman","foursuperior","fourteencircle","fourteenparen","fourteenperiod","fourthai","fourthtonechinese","fparen","fraction","franc","gabengali","gacute","gadeva","gafarabic","gaffinalarabic","gafinitialarabic","gafmedialarabic","gagujarati","gagurmukhi","gahiragana","gakatakana","gammalatinsmall","gammasuperior","gangiacoptic","gbopomofo","gbreve","gcaron","gcedilla","gcircle","gcircumflex","gcommaaccent","gdot","gdotaccent","gecyrillic","gehiragana","gekatakana","geometricallyequal","gereshaccenthebrew","gereshhebrew","gereshmuqdamhebrew","germandbls","gershayimaccenthebrew","gershayimhebrew","getamark","ghabengali","ghadarmenian","ghadeva","ghagujarati","ghagurmukhi","ghainarabic","ghainfinalarabic","ghaininitialarabic","ghainmedialarabic","ghemiddlehookcyrillic","ghestrokecyrillic","gheupturncyrillic","ghhadeva","ghhagurmukhi","ghook","ghzsquare","gihiragana","gikatakana","gimarmenian","gimel","gimeldagesh","gimeldageshhebrew","gimelhebrew","gjecyrillic","glottalinvertedstroke","glottalstop","glottalstopinverted","glottalstopmod","glottalstopreversed","glottalstopreversedmod","glottalstopreversedsuperior","glottalstopstroke","glottalstopstrokereversed","gmacron","gmonospace","gohiragana","gokatakana","gparen","gpasquare","gradient","grave","gravebelowcmb","gravecmb","gravecomb","gravedeva","gravelowmod","gravemonospace","gravetonecmb","greater","greaterequal","greaterequalorless","greatermonospace","greaterorequivalent","greaterorless","greateroverequal","greatersmall","gscript","gstroke","guhiragana","guillemotleft","guillemotright","guilsinglleft","guilsinglright","gukatakana","guramusquare","gysquare","haabkhasiancyrillic","haaltonearabic","habengali","hadescendercyrillic","hadeva","hagujarati","hagurmukhi","haharabic","hahfinalarabic","hahinitialarabic","hahiragana","hahmedialarabic","haitusquare","hakatakana","hakatakanahalfwidth","halantgurmukhi","hamzaarabic","hamzalowarabic","hangulfiller","hardsigncyrillic","harpoonleftbarbup","harpoonrightbarbup","hasquare","hatafpatah","hatafpatah16","hatafpatah23","hatafpatah2f","hatafpatahhebrew","hatafpatahnarrowhebrew","hatafpatahquarterhebrew","hatafpatahwidehebrew","hatafqamats","hatafqamats1b","hatafqamats28","hatafqamats34","hatafqamatshebrew","hatafqamatsnarrowhebrew","hatafqamatsquarterhebrew","hatafqamatswidehebrew","hatafsegol","hatafsegol17","hatafsegol24","hatafsegol30","hatafsegolhebrew","hatafsegolnarrowhebrew","hatafsegolquarterhebrew","hatafsegolwidehebrew","hbar","hbopomofo","hbrevebelow","hcedilla","hcircle","hcircumflex","hdieresis","hdotaccent","hdotbelow","he","heart","heartsuitblack","heartsuitwhite","hedagesh","hedageshhebrew","hehaltonearabic","heharabic","hehebrew","hehfinalaltonearabic","hehfinalalttwoarabic","hehfinalarabic","hehhamzaabovefinalarabic","hehhamzaaboveisolatedarabic","hehinitialaltonearabic","hehinitialarabic","hehiragana","hehmedialaltonearabic","hehmedialarabic","heiseierasquare","hekatakana","hekatakanahalfwidth","hekutaarusquare","henghook","herutusquare","het","hethebrew","hhook","hhooksuperior","hieuhacirclekorean","hieuhaparenkorean","hieuhcirclekorean","hieuhkorean","hieuhparenkorean","hihiragana","hikatakana","hikatakanahalfwidth","hiriq","hiriq14","hiriq21","hiriq2d","hiriqhebrew","hiriqnarrowhebrew","hiriqquarterhebrew","hiriqwidehebrew","hlinebelow","hmonospace","hoarmenian","hohipthai","hohiragana","hokatakana","hokatakanahalfwidth","holam","holam19","holam26","holam32","holamhebrew","holamnarrowhebrew","holamquarterhebrew","holamwidehebrew","honokhukthai","hookabovecomb","hookcmb","hookpalatalizedbelowcmb","hookretroflexbelowcmb","hoonsquare","horicoptic","horizontalbar","horncmb","hotsprings","house","hparen","hsuperior","hturned","huhiragana","huiitosquare","hukatakana","hukatakanahalfwidth","hungarumlaut","hungarumlautcmb","hv","hyphen","hypheninferior","hyphenmonospace","hyphensmall","hyphensuperior","hyphentwo","iacute","iacyrillic","ibengali","ibopomofo","ibreve","icaron","icircle","icircumflex","icyrillic","idblgrave","ideographearthcircle","ideographfirecircle","ideographicallianceparen","ideographiccallparen","ideographiccentrecircle","ideographicclose","ideographiccomma","ideographiccommaleft","ideographiccongratulationparen","ideographiccorrectcircle","ideographicearthparen","ideographicenterpriseparen","ideographicexcellentcircle","ideographicfestivalparen","ideographicfinancialcircle","ideographicfinancialparen","ideographicfireparen","ideographichaveparen","ideographichighcircle","ideographiciterationmark","ideographiclaborcircle","ideographiclaborparen","ideographicleftcircle","ideographiclowcircle","ideographicmedicinecircle","ideographicmetalparen","ideographicmoonparen","ideographicnameparen","ideographicperiod","ideographicprintcircle","ideographicreachparen","ideographicrepresentparen","ideographicresourceparen","ideographicrightcircle","ideographicsecretcircle","ideographicselfparen","ideographicsocietyparen","ideographicspace","ideographicspecialparen","ideographicstockparen","ideographicstudyparen","ideographicsunparen","ideographicsuperviseparen","ideographicwaterparen","ideographicwoodparen","ideographiczero","ideographmetalcircle","ideographmooncircle","ideographnamecircle","ideographsuncircle","ideographwatercircle","ideographwoodcircle","ideva","idieresis","idieresisacute","idieresiscyrillic","idotbelow","iebrevecyrillic","iecyrillic","ieungacirclekorean","ieungaparenkorean","ieungcirclekorean","ieungkorean","ieungparenkorean","igrave","igujarati","igurmukhi","ihiragana","ihookabove","iibengali","iicyrillic","iideva","iigujarati","iigurmukhi","iimatragurmukhi","iinvertedbreve","iishortcyrillic","iivowelsignbengali","iivowelsigndeva","iivowelsigngujarati","ij","ikatakana","ikatakanahalfwidth","ikorean","ilde","iluyhebrew","imacron","imacroncyrillic","imageorapproximatelyequal","imatragurmukhi","imonospace","increment","infinity","iniarmenian","integral","integralbottom","integralbt","integralex","integraltop","integraltp","intersection","intisquare","invbullet","invcircle","invsmileface","iocyrillic","iogonek","iota","iotadieresis","iotadieresistonos","iotalatin","iotatonos","iparen","irigurmukhi","ismallhiragana","ismallkatakana","ismallkatakanahalfwidth","issharbengali","istroke","isuperior","iterationhiragana","iterationkatakana","itilde","itildebelow","iubopomofo","iucyrillic","ivowelsignbengali","ivowelsigndeva","ivowelsigngujarati","izhitsacyrillic","izhitsadblgravecyrillic","jaarmenian","jabengali","jadeva","jagujarati","jagurmukhi","jbopomofo","jcaron","jcircle","jcircumflex","jcrossedtail","jdotlessstroke","jecyrillic","jeemarabic","jeemfinalarabic","jeeminitialarabic","jeemmedialarabic","jeharabic","jehfinalarabic","jhabengali","jhadeva","jhagujarati","jhagurmukhi","jheharmenian","jis","jmonospace","jparen","jsuperior","kabashkircyrillic","kabengali","kacute","kacyrillic","kadescendercyrillic","kadeva","kaf","kafarabic","kafdagesh","kafdageshhebrew","kaffinalarabic","kafhebrew","kafinitialarabic","kafmedialarabic","kafrafehebrew","kagujarati","kagurmukhi","kahiragana","kahookcyrillic","kakatakana","kakatakanahalfwidth","kappa","kappasymbolgreek","kapyeounmieumkorean","kapyeounphieuphkorean","kapyeounpieupkorean","kapyeounssangpieupkorean","karoriisquare","kashidaautoarabic","kashidaautonosidebearingarabic","kasmallkatakana","kasquare","kasraarabic","kasratanarabic","kastrokecyrillic","katahiraprolongmarkhalfwidth","kaverticalstrokecyrillic","kbopomofo","kcalsquare","kcaron","kcedilla","kcircle","kcommaaccent","kdotbelow","keharmenian","kehiragana","kekatakana","kekatakanahalfwidth","kenarmenian","kesmallkatakana","kgreenlandic","khabengali","khacyrillic","khadeva","khagujarati","khagurmukhi","khaharabic","khahfinalarabic","khahinitialarabic","khahmedialarabic","kheicoptic","khhadeva","khhagurmukhi","khieukhacirclekorean","khieukhaparenkorean","khieukhcirclekorean","khieukhkorean","khieukhparenkorean","khokhaithai","khokhonthai","khokhuatthai","khokhwaithai","khomutthai","khook","khorakhangthai","khzsquare","kihiragana","kikatakana","kikatakanahalfwidth","kiroguramusquare","kiromeetorusquare","kirosquare","kiyeokacirclekorean","kiyeokaparenkorean","kiyeokcirclekorean","kiyeokkorean","kiyeokparenkorean","kiyeoksioskorean","kjecyrillic","klinebelow","klsquare","kmcubedsquare","kmonospace","kmsquaredsquare","kohiragana","kohmsquare","kokaithai","kokatakana","kokatakanahalfwidth","kooposquare","koppacyrillic","koreanstandardsymbol","koroniscmb","kparen","kpasquare","ksicyrillic","ktsquare","kturned","kuhiragana","kukatakana","kukatakanahalfwidth","kvsquare","kwsquare","l","labengali","lacute","ladeva","lagujarati","lagurmukhi","lakkhangyaothai","lamaleffinalarabic","lamalefhamzaabovefinalarabic","lamalefhamzaaboveisolatedarabic","lamalefhamzabelowfinalarabic","lamalefhamzabelowisolatedarabic","lamalefisolatedarabic","lamalefmaddaabovefinalarabic","lamalefmaddaaboveisolatedarabic","lamarabic","lambda","lambdastroke","lamed","lameddagesh","lameddageshhebrew","lamedhebrew","lamfinalarabic","lamhahinitialarabic","laminitialarabic","lamjeeminitialarabic","lamkhahinitialarabic","lamlamhehisolatedarabic","lammedialarabic","lammeemhahinitialarabic","lammeeminitialarabic","largecircle","lbar","lbelt","lbopomofo","lcaron","lcedilla","lcircle","lcircumflexbelow","lcommaaccent","ldot","ldotaccent","ldotbelow","ldotbelowmacron","leftangleabovecmb","lefttackbelowcmb","less","lessequal","lessequalorgreater","lessmonospace","lessorequivalent","lessorgreater","lessoverequal","lesssmall","lezh","lfblock","lhookretroflex","lira","liwnarmenian","lj","ljecyrillic","ll","lladeva","llagujarati","llinebelow","llladeva","llvocalicbengali","llvocalicdeva","llvocalicvowelsignbengali","llvocalicvowelsigndeva","lmiddletilde","lmonospace","lmsquare","lochulathai","logicaland","logicalnot","logicalnotreversed","logicalor","lolingthai","longs","lowlinecenterline","lowlinecmb","lowlinedashed","lozenge","lparen","lslash","lsquare","lsuperior","ltshade","luthai","lvocalicbengali","lvocalicdeva","lvocalicvowelsignbengali","lvocalicvowelsigndeva","lxsquare","mabengali","macron","macronbelowcmb","macroncmb","macronlowmod","macronmonospace","macute","madeva","magujarati","magurmukhi","mahapakhhebrew","mahapakhlefthebrew","mahiragana","maichattawalowleftthai","maichattawalowrightthai","maichattawathai","maichattawaupperleftthai","maieklowleftthai","maieklowrightthai","maiekthai","maiekupperleftthai","maihanakatleftthai","maihanakatthai","maitaikhuleftthai","maitaikhuthai","maitholowleftthai","maitholowrightthai","maithothai","maithoupperleftthai","maitrilowleftthai","maitrilowrightthai","maitrithai","maitriupperleftthai","maiyamokthai","makatakana","makatakanahalfwidth","male","mansyonsquare","maqafhebrew","mars","masoracirclehebrew","masquare","mbopomofo","mbsquare","mcircle","mcubedsquare","mdotaccent","mdotbelow","meemarabic","meemfinalarabic","meeminitialarabic","meemmedialarabic","meemmeeminitialarabic","meemmeemisolatedarabic","meetorusquare","mehiragana","meizierasquare","mekatakana","mekatakanahalfwidth","mem","memdagesh","memdageshhebrew","memhebrew","menarmenian","merkhahebrew","merkhakefulahebrew","merkhakefulalefthebrew","merkhalefthebrew","mhook","mhzsquare","middledotkatakanahalfwidth","middot","mieumacirclekorean","mieumaparenkorean","mieumcirclekorean","mieumkorean","mieumpansioskorean","mieumparenkorean","mieumpieupkorean","mieumsioskorean","mihiragana","mikatakana","mikatakanahalfwidth","minus","minusbelowcmb","minuscircle","minusmod","minusplus","minute","miribaarusquare","mirisquare","mlonglegturned","mlsquare","mmcubedsquare","mmonospace","mmsquaredsquare","mohiragana","mohmsquare","mokatakana","mokatakanahalfwidth","molsquare","momathai","moverssquare","moverssquaredsquare","mparen","mpasquare","mssquare","msuperior","mturned","mu","mu1","muasquare","muchgreater","muchless","mufsquare","mugreek","mugsquare","muhiragana","mukatakana","mukatakanahalfwidth","mulsquare","multiply","mumsquare","munahhebrew","munahlefthebrew","musicalnote","musicalnotedbl","musicflatsign","musicsharpsign","mussquare","muvsquare","muwsquare","mvmegasquare","mvsquare","mwmegasquare","mwsquare","nabengali","nabla","nacute","nadeva","nagujarati","nagurmukhi","nahiragana","nakatakana","nakatakanahalfwidth","napostrophe","nasquare","nbopomofo","nbspace","ncaron","ncedilla","ncircle","ncircumflexbelow","ncommaaccent","ndotaccent","ndotbelow","nehiragana","nekatakana","nekatakanahalfwidth","newsheqelsign","nfsquare","ngabengali","ngadeva","ngagujarati","ngagurmukhi","ngonguthai","nhiragana","nhookleft","nhookretroflex","nieunacirclekorean","nieunaparenkorean","nieuncieuckorean","nieuncirclekorean","nieunhieuhkorean","nieunkorean","nieunpansioskorean","nieunparenkorean","nieunsioskorean","nieuntikeutkorean","nihiragana","nikatakana","nikatakanahalfwidth","nikhahitleftthai","nikhahitthai","nine","ninearabic","ninebengali","ninecircle","ninecircleinversesansserif","ninedeva","ninegujarati","ninegurmukhi","ninehackarabic","ninehangzhou","nineideographicparen","nineinferior","ninemonospace","nineoldstyle","nineparen","nineperiod","ninepersian","nineroman","ninesuperior","nineteencircle","nineteenparen","nineteenperiod","ninethai","nj","njecyrillic","nkatakana","nkatakanahalfwidth","nlegrightlong","nlinebelow","nmonospace","nmsquare","nnabengali","nnadeva","nnagujarati","nnagurmukhi","nnnadeva","nohiragana","nokatakana","nokatakanahalfwidth","nonbreakingspace","nonenthai","nonuthai","noonarabic","noonfinalarabic","noonghunnaarabic","noonghunnafinalarabic","nooninitialarabic","noonjeeminitialarabic","noonjeemisolatedarabic","noonmedialarabic","noonmeeminitialarabic","noonmeemisolatedarabic","noonnoonfinalarabic","notcontains","notelement","notelementof","notequal","notgreater","notgreaternorequal","notgreaternorless","notidentical","notless","notlessnorequal","notparallel","notprecedes","notsubset","notsucceeds","notsuperset","nowarmenian","nparen","nssquare","nsuperior","ntilde","nu","nuhiragana","nukatakana","nukatakanahalfwidth","nuktabengali","nuktadeva","nuktagujarati","nuktagurmukhi","numbersign","numbersignmonospace","numbersignsmall","numeralsigngreek","numeralsignlowergreek","numero","nun","nundagesh","nundageshhebrew","nunhebrew","nvsquare","nwsquare","nyabengali","nyadeva","nyagujarati","nyagurmukhi","o","oacute","oangthai","obarred","obarredcyrillic","obarreddieresiscyrillic","obengali","obopomofo","obreve","ocandradeva","ocandragujarati","ocandravowelsigndeva","ocandravowelsigngujarati","ocaron","ocircle","ocircumflex","ocircumflexacute","ocircumflexdotbelow","ocircumflexgrave","ocircumflexhookabove","ocircumflextilde","ocyrillic","odblacute","odblgrave","odeva","odieresis","odieresiscyrillic","odotbelow","oe","oekorean","ogonek","ogonekcmb","ograve","ogujarati","oharmenian","ohiragana","ohookabove","ohorn","ohornacute","ohorndotbelow","ohorngrave","ohornhookabove","ohorntilde","ohungarumlaut","oi","oinvertedbreve","okatakana","okatakanahalfwidth","okorean","olehebrew","omacron","omacronacute","omacrongrave","omdeva","omega","omega1","omegacyrillic","omegalatinclosed","omegaroundcyrillic","omegatitlocyrillic","omegatonos","omgujarati","omicron","omicrontonos","omonospace","one","onearabic","onebengali","onecircle","onecircleinversesansserif","onedeva","onedotenleader","oneeighth","onefitted","onegujarati","onegurmukhi","onehackarabic","onehalf","onehangzhou","oneideographicparen","oneinferior","onemonospace","onenumeratorbengali","oneoldstyle","oneparen","oneperiod","onepersian","onequarter","oneroman","onesuperior","onethai","onethird","oogonek","oogonekmacron","oogurmukhi","oomatragurmukhi","oopen","oparen","openbullet","option","ordfeminine","ordmasculine","orthogonal","oshortdeva","oshortvowelsigndeva","oslash","oslashacute","osmallhiragana","osmallkatakana","osmallkatakanahalfwidth","ostrokeacute","osuperior","otcyrillic","otilde","otildeacute","otildedieresis","oubopomofo","overline","overlinecenterline","overlinecmb","overlinedashed","overlinedblwavy","overlinewavy","overscore","ovowelsignbengali","ovowelsigndeva","ovowelsigngujarati","paampssquare","paasentosquare","pabengali","pacute","padeva","pagedown","pageup","pagujarati","pagurmukhi","pahiragana","paiyannoithai","pakatakana","palatalizationcyrilliccmb","palochkacyrillic","pansioskorean","paragraph","parallel","parenleft","parenleftaltonearabic","parenleftbt","parenleftex","parenleftinferior","parenleftmonospace","parenleftsmall","parenleftsuperior","parenlefttp","parenleftvertical","parenright","parenrightaltonearabic","parenrightbt","parenrightex","parenrightinferior","parenrightmonospace","parenrightsmall","parenrightsuperior","parenrighttp","parenrightvertical","partialdiff","paseqhebrew","pashtahebrew","pasquare","patah","patah11","patah1d","patah2a","patahhebrew","patahnarrowhebrew","patahquarterhebrew","patahwidehebrew","pazerhebrew","pbopomofo","pcircle","pdotaccent","pe","pecyrillic","pedagesh","pedageshhebrew","peezisquare","pefinaldageshhebrew","peharabic","peharmenian","pehebrew","pehfinalarabic","pehinitialarabic","pehiragana","pehmedialarabic","pekatakana","pemiddlehookcyrillic","perafehebrew","percent","percentarabic","percentmonospace","percentsmall","period","periodarmenian","periodcentered","periodhalfwidth","periodinferior","periodmonospace","periodsmall","periodsuperior","perispomenigreekcmb","perpendicular","perthousand","peseta","pfsquare","phabengali","phadeva","phagujarati","phagurmukhi","phi","phi1","phieuphacirclekorean","phieuphaparenkorean","phieuphcirclekorean","phieuphkorean","phieuphparenkorean","philatin","phinthuthai","phisymbolgreek","phook","phophanthai","phophungthai","phosamphaothai","pi","pieupacirclekorean","pieupaparenkorean","pieupcieuckorean","pieupcirclekorean","pieupkiyeokkorean","pieupkorean","pieupparenkorean","pieupsioskiyeokkorean","pieupsioskorean","pieupsiostikeutkorean","pieupthieuthkorean","pieuptikeutkorean","pihiragana","pikatakana","pisymbolgreek","piwrarmenian","plus","plusbelowcmb","pluscircle","plusminus","plusmod","plusmonospace","plussmall","plussuperior","pmonospace","pmsquare","pohiragana","pointingindexdownwhite","pointingindexleftwhite","pointingindexrightwhite","pointingindexupwhite","pokatakana","poplathai","postalmark","postalmarkface","pparen","precedes","prescription","primemod","primereversed","product","projective","prolongedkana","propellor","propersubset","propersuperset","proportion","proportional","psi","psicyrillic","psilipneumatacyrilliccmb","pssquare","puhiragana","pukatakana","pvsquare","pwsquare","qadeva","qadmahebrew","qafarabic","qaffinalarabic","qafinitialarabic","qafmedialarabic","qamats","qamats10","qamats1a","qamats1c","qamats27","qamats29","qamats33","qamatsde","qamatshebrew","qamatsnarrowhebrew","qamatsqatanhebrew","qamatsqatannarrowhebrew","qamatsqatanquarterhebrew","qamatsqatanwidehebrew","qamatsquarterhebrew","qamatswidehebrew","qarneyparahebrew","qbopomofo","qcircle","qhook","qmonospace","qof","qofdagesh","qofdageshhebrew","qofhebrew","qparen","quarternote","qubuts","qubuts18","qubuts25","qubuts31","qubutshebrew","qubutsnarrowhebrew","qubutsquarterhebrew","qubutswidehebrew","question","questionarabic","questionarmenian","questiondown","questiondownsmall","questiongreek","questionmonospace","questionsmall","quotedbl","quotedblbase","quotedblleft","quotedblmonospace","quotedblprime","quotedblprimereversed","quotedblright","quoteleft","quoteleftreversed","quotereversed","quoteright","quoterightn","quotesinglbase","quotesingle","quotesinglemonospace","raarmenian","rabengali","racute","radeva","radical","radicalex","radoverssquare","radoverssquaredsquare","radsquare","rafe","rafehebrew","ragujarati","ragurmukhi","rahiragana","rakatakana","rakatakanahalfwidth","ralowerdiagonalbengali","ramiddlediagonalbengali","ramshorn","ratio","rbopomofo","rcaron","rcedilla","rcircle","rcommaaccent","rdblgrave","rdotaccent","rdotbelow","rdotbelowmacron","referencemark","reflexsubset","reflexsuperset","registered","registersans","registerserif","reharabic","reharmenian","rehfinalarabic","rehiragana","rekatakana","rekatakanahalfwidth","resh","reshdageshhebrew","reshhebrew","reversedtilde","reviahebrew","reviamugrashhebrew","revlogicalnot","rfishhook","rfishhookreversed","rhabengali","rhadeva","rho","rhook","rhookturned","rhookturnedsuperior","rhosymbolgreek","rhotichookmod","rieulacirclekorean","rieulaparenkorean","rieulcirclekorean","rieulhieuhkorean","rieulkiyeokkorean","rieulkiyeoksioskorean","rieulkorean","rieulmieumkorean","rieulpansioskorean","rieulparenkorean","rieulphieuphkorean","rieulpieupkorean","rieulpieupsioskorean","rieulsioskorean","rieulthieuthkorean","rieultikeutkorean","rieulyeorinhieuhkorean","rightangle","righttackbelowcmb","righttriangle","rihiragana","rikatakana","rikatakanahalfwidth","ring","ringbelowcmb","ringcmb","ringhalfleft","ringhalfleftarmenian","ringhalfleftbelowcmb","ringhalfleftcentered","ringhalfright","ringhalfrightbelowcmb","ringhalfrightcentered","rinvertedbreve","rittorusquare","rlinebelow","rlongleg","rlonglegturned","rmonospace","rohiragana","rokatakana","rokatakanahalfwidth","roruathai","rparen","rrabengali","rradeva","rragurmukhi","rreharabic","rrehfinalarabic","rrvocalicbengali","rrvocalicdeva","rrvocalicgujarati","rrvocalicvowelsignbengali","rrvocalicvowelsigndeva","rrvocalicvowelsigngujarati","rsuperior","rtblock","rturned","rturnedsuperior","ruhiragana","rukatakana","rukatakanahalfwidth","rupeemarkbengali","rupeesignbengali","rupiah","ruthai","rvocalicbengali","rvocalicdeva","rvocalicgujarati","rvocalicvowelsignbengali","rvocalicvowelsigndeva","rvocalicvowelsigngujarati","s","sabengali","sacute","sacutedotaccent","sadarabic","sadeva","sadfinalarabic","sadinitialarabic","sadmedialarabic","sagujarati","sagurmukhi","sahiragana","sakatakana","sakatakanahalfwidth","sallallahoualayhewasallamarabic","samekh","samekhdagesh","samekhdageshhebrew","samekhhebrew","saraaathai","saraaethai","saraaimaimalaithai","saraaimaimuanthai","saraamthai","saraathai","saraethai","saraiileftthai","saraiithai","saraileftthai","saraithai","saraothai","saraueeleftthai","saraueethai","saraueleftthai","sarauethai","sarauthai","sarauuthai","sbopomofo","scaron","scarondotaccent","scedilla","schwa","schwacyrillic","schwadieresiscyrillic","schwahook","scircle","scircumflex","scommaaccent","sdotaccent","sdotbelow","sdotbelowdotaccent","seagullbelowcmb","second","secondtonechinese","section","seenarabic","seenfinalarabic","seeninitialarabic","seenmedialarabic","segol","segol13","segol1f","segol2c","segolhebrew","segolnarrowhebrew","segolquarterhebrew","segoltahebrew","segolwidehebrew","seharmenian","sehiragana","sekatakana","sekatakanahalfwidth","semicolon","semicolonarabic","semicolonmonospace","semicolonsmall","semivoicedmarkkana","semivoicedmarkkanahalfwidth","sentisquare","sentosquare","seven","sevenarabic","sevenbengali","sevencircle","sevencircleinversesansserif","sevendeva","seveneighths","sevengujarati","sevengurmukhi","sevenhackarabic","sevenhangzhou","sevenideographicparen","seveninferior","sevenmonospace","sevenoldstyle","sevenparen","sevenperiod","sevenpersian","sevenroman","sevensuperior","seventeencircle","seventeenparen","seventeenperiod","seventhai","sfthyphen","shaarmenian","shabengali","shacyrillic","shaddaarabic","shaddadammaarabic","shaddadammatanarabic","shaddafathaarabic","shaddakasraarabic","shaddakasratanarabic","shade","shadedark","shadelight","shademedium","shadeva","shagujarati","shagurmukhi","shalshelethebrew","shbopomofo","shchacyrillic","sheenarabic","sheenfinalarabic","sheeninitialarabic","sheenmedialarabic","sheicoptic","sheqel","sheqelhebrew","sheva","sheva115","sheva15","sheva22","sheva2e","shevahebrew","shevanarrowhebrew","shevaquarterhebrew","shevawidehebrew","shhacyrillic","shimacoptic","shin","shindagesh","shindageshhebrew","shindageshshindot","shindageshshindothebrew","shindageshsindot","shindageshsindothebrew","shindothebrew","shinhebrew","shinshindot","shinshindothebrew","shinsindot","shinsindothebrew","shook","sigma","sigma1","sigmafinal","sigmalunatesymbolgreek","sihiragana","sikatakana","sikatakanahalfwidth","siluqhebrew","siluqlefthebrew","similar","sindothebrew","siosacirclekorean","siosaparenkorean","sioscieuckorean","sioscirclekorean","sioskiyeokkorean","sioskorean","siosnieunkorean","siosparenkorean","siospieupkorean","siostikeutkorean","six","sixarabic","sixbengali","sixcircle","sixcircleinversesansserif","sixdeva","sixgujarati","sixgurmukhi","sixhackarabic","sixhangzhou","sixideographicparen","sixinferior","sixmonospace","sixoldstyle","sixparen","sixperiod","sixpersian","sixroman","sixsuperior","sixteencircle","sixteencurrencydenominatorbengali","sixteenparen","sixteenperiod","sixthai","slash","slashmonospace","slong","slongdotaccent","smileface","smonospace","sofpasuqhebrew","softhyphen","softsigncyrillic","sohiragana","sokatakana","sokatakanahalfwidth","soliduslongoverlaycmb","solidusshortoverlaycmb","sorusithai","sosalathai","sosothai","sosuathai","space","spacehackarabic","spade","spadesuitblack","spadesuitwhite","sparen","squarebelowcmb","squarecc","squarecm","squarediagonalcrosshatchfill","squarehorizontalfill","squarekg","squarekm","squarekmcapital","squareln","squarelog","squaremg","squaremil","squaremm","squaremsquared","squareorthogonalcrosshatchfill","squareupperlefttolowerrightfill","squareupperrighttolowerleftfill","squareverticalfill","squarewhitewithsmallblack","srsquare","ssabengali","ssadeva","ssagujarati","ssangcieuckorean","ssanghieuhkorean","ssangieungkorean","ssangkiyeokkorean","ssangnieunkorean","ssangpieupkorean","ssangsioskorean","ssangtikeutkorean","ssuperior","sterling","sterlingmonospace","strokelongoverlaycmb","strokeshortoverlaycmb","subset","subsetnotequal","subsetorequal","succeeds","suchthat","suhiragana","sukatakana","sukatakanahalfwidth","sukunarabic","summation","sun","superset","supersetnotequal","supersetorequal","svsquare","syouwaerasquare","tabengali","tackdown","tackleft","tadeva","tagujarati","tagurmukhi","taharabic","tahfinalarabic","tahinitialarabic","tahiragana","tahmedialarabic","taisyouerasquare","takatakana","takatakanahalfwidth","tatweelarabic","tau","tav","tavdages","tavdagesh","tavdageshhebrew","tavhebrew","tbar","tbopomofo","tcaron","tccurl","tcedilla","tcheharabic","tchehfinalarabic","tchehinitialarabic","tchehmedialarabic","tcircle","tcircumflexbelow","tcommaaccent","tdieresis","tdotaccent","tdotbelow","tecyrillic","tedescendercyrillic","teharabic","tehfinalarabic","tehhahinitialarabic","tehhahisolatedarabic","tehinitialarabic","tehiragana","tehjeeminitialarabic","tehjeemisolatedarabic","tehmarbutaarabic","tehmarbutafinalarabic","tehmedialarabic","tehmeeminitialarabic","tehmeemisolatedarabic","tehnoonfinalarabic","tekatakana","tekatakanahalfwidth","telephone","telephoneblack","telishagedolahebrew","telishaqetanahebrew","tencircle","tenideographicparen","tenparen","tenperiod","tenroman","tesh","tet","tetdagesh","tetdageshhebrew","tethebrew","tetsecyrillic","tevirhebrew","tevirlefthebrew","thabengali","thadeva","thagujarati","thagurmukhi","thalarabic","thalfinalarabic","thanthakhatlowleftthai","thanthakhatlowrightthai","thanthakhatthai","thanthakhatupperleftthai","theharabic","thehfinalarabic","thehinitialarabic","thehmedialarabic","thereexists","therefore","theta","theta1","thetasymbolgreek","thieuthacirclekorean","thieuthaparenkorean","thieuthcirclekorean","thieuthkorean","thieuthparenkorean","thirteencircle","thirteenparen","thirteenperiod","thonangmonthothai","thook","thophuthaothai","thorn","thothahanthai","thothanthai","thothongthai","thothungthai","thousandcyrillic","thousandsseparatorarabic","thousandsseparatorpersian","three","threearabic","threebengali","threecircle","threecircleinversesansserif","threedeva","threeeighths","threegujarati","threegurmukhi","threehackarabic","threehangzhou","threeideographicparen","threeinferior","threemonospace","threenumeratorbengali","threeoldstyle","threeparen","threeperiod","threepersian","threequarters","threequartersemdash","threeroman","threesuperior","threethai","thzsquare","tihiragana","tikatakana","tikatakanahalfwidth","tikeutacirclekorean","tikeutaparenkorean","tikeutcirclekorean","tikeutkorean","tikeutparenkorean","tilde","tildebelowcmb","tildecmb","tildecomb","tildedoublecmb","tildeoperator","tildeoverlaycmb","tildeverticalcmb","timescircle","tipehahebrew","tipehalefthebrew","tippigurmukhi","titlocyrilliccmb","tiwnarmenian","tlinebelow","tmonospace","toarmenian","tohiragana","tokatakana","tokatakanahalfwidth","tonebarextrahighmod","tonebarextralowmod","tonebarhighmod","tonebarlowmod","tonebarmidmod","tonefive","tonesix","tonetwo","tonos","tonsquare","topatakthai","tortoiseshellbracketleft","tortoiseshellbracketleftsmall","tortoiseshellbracketleftvertical","tortoiseshellbracketright","tortoiseshellbracketrightsmall","tortoiseshellbracketrightvertical","totaothai","tpalatalhook","tparen","trademark","trademarksans","trademarkserif","tretroflexhook","triagdn","triaglf","triagrt","triagup","ts","tsadi","tsadidagesh","tsadidageshhebrew","tsadihebrew","tsecyrillic","tsere","tsere12","tsere1e","tsere2b","tserehebrew","tserenarrowhebrew","tserequarterhebrew","tserewidehebrew","tshecyrillic","tsuperior","ttabengali","ttadeva","ttagujarati","ttagurmukhi","tteharabic","ttehfinalarabic","ttehinitialarabic","ttehmedialarabic","tthabengali","tthadeva","tthagujarati","tthagurmukhi","tturned","tuhiragana","tukatakana","tukatakanahalfwidth","tusmallhiragana","tusmallkatakana","tusmallkatakanahalfwidth","twelvecircle","twelveparen","twelveperiod","twelveroman","twentycircle","twentyhangzhou","twentyparen","twentyperiod","two","twoarabic","twobengali","twocircle","twocircleinversesansserif","twodeva","twodotenleader","twodotleader","twodotleadervertical","twogujarati","twogurmukhi","twohackarabic","twohangzhou","twoideographicparen","twoinferior","twomonospace","twonumeratorbengali","twooldstyle","twoparen","twoperiod","twopersian","tworoman","twostroke","twosuperior","twothai","twothirds","u","uacute","ubar","ubengali","ubopomofo","ubreve","ucaron","ucircle","ucircumflex","ucircumflexbelow","ucyrillic","udattadeva","udblacute","udblgrave","udeva","udieresis","udieresisacute","udieresisbelow","udieresiscaron","udieresiscyrillic","udieresisgrave","udieresismacron","udotbelow","ugrave","ugujarati","ugurmukhi","uhiragana","uhookabove","uhorn","uhornacute","uhorndotbelow","uhorngrave","uhornhookabove","uhorntilde","uhungarumlaut","uhungarumlautcyrillic","uinvertedbreve","ukatakana","ukatakanahalfwidth","ukcyrillic","ukorean","umacron","umacroncyrillic","umacrondieresis","umatragurmukhi","umonospace","underscore","underscoredbl","underscoremonospace","underscorevertical","underscorewavy","union","universal","uogonek","uparen","upblock","upperdothebrew","upsilon","upsilondieresis","upsilondieresistonos","upsilonlatin","upsilontonos","uptackbelowcmb","uptackmod","uragurmukhi","uring","ushortcyrillic","usmallhiragana","usmallkatakana","usmallkatakanahalfwidth","ustraightcyrillic","ustraightstrokecyrillic","utilde","utildeacute","utildebelow","uubengali","uudeva","uugujarati","uugurmukhi","uumatragurmukhi","uuvowelsignbengali","uuvowelsigndeva","uuvowelsigngujarati","uvowelsignbengali","uvowelsigndeva","uvowelsigngujarati","vadeva","vagujarati","vagurmukhi","vakatakana","vav","vavdagesh","vavdagesh65","vavdageshhebrew","vavhebrew","vavholam","vavholamhebrew","vavvavhebrew","vavyodhebrew","vcircle","vdotbelow","vecyrillic","veharabic","vehfinalarabic","vehinitialarabic","vehmedialarabic","vekatakana","venus","verticalbar","verticallineabovecmb","verticallinebelowcmb","verticallinelowmod","verticallinemod","vewarmenian","vhook","vikatakana","viramabengali","viramadeva","viramagujarati","visargabengali","visargadeva","visargagujarati","vmonospace","voarmenian","voicediterationhiragana","voicediterationkatakana","voicedmarkkana","voicedmarkkanahalfwidth","vokatakana","vparen","vtilde","vturned","vuhiragana","vukatakana","wacute","waekorean","wahiragana","wakatakana","wakatakanahalfwidth","wakorean","wasmallhiragana","wasmallkatakana","wattosquare","wavedash","wavyunderscorevertical","wawarabic","wawfinalarabic","wawhamzaabovearabic","wawhamzaabovefinalarabic","wbsquare","wcircle","wcircumflex","wdieresis","wdotaccent","wdotbelow","wehiragana","weierstrass","wekatakana","wekorean","weokorean","wgrave","whitebullet","whitecircle","whitecircleinverse","whitecornerbracketleft","whitecornerbracketleftvertical","whitecornerbracketright","whitecornerbracketrightvertical","whitediamond","whitediamondcontainingblacksmalldiamond","whitedownpointingsmalltriangle","whitedownpointingtriangle","whiteleftpointingsmalltriangle","whiteleftpointingtriangle","whitelenticularbracketleft","whitelenticularbracketright","whiterightpointingsmalltriangle","whiterightpointingtriangle","whitesmallsquare","whitesmilingface","whitesquare","whitestar","whitetelephone","whitetortoiseshellbracketleft","whitetortoiseshellbracketright","whiteuppointingsmalltriangle","whiteuppointingtriangle","wihiragana","wikatakana","wikorean","wmonospace","wohiragana","wokatakana","wokatakanahalfwidth","won","wonmonospace","wowaenthai","wparen","wring","wsuperior","wturned","wynn","xabovecmb","xbopomofo","xcircle","xdieresis","xdotaccent","xeharmenian","xi","xmonospace","xparen","xsuperior","yaadosquare","yabengali","yacute","yadeva","yaekorean","yagujarati","yagurmukhi","yahiragana","yakatakana","yakatakanahalfwidth","yakorean","yamakkanthai","yasmallhiragana","yasmallkatakana","yasmallkatakanahalfwidth","yatcyrillic","ycircle","ycircumflex","ydieresis","ydotaccent","ydotbelow","yeharabic","yehbarreearabic","yehbarreefinalarabic","yehfinalarabic","yehhamzaabovearabic","yehhamzaabovefinalarabic","yehhamzaaboveinitialarabic","yehhamzaabovemedialarabic","yehinitialarabic","yehmedialarabic","yehmeeminitialarabic","yehmeemisolatedarabic","yehnoonfinalarabic","yehthreedotsbelowarabic","yekorean","yen","yenmonospace","yeokorean","yeorinhieuhkorean","yerahbenyomohebrew","yerahbenyomolefthebrew","yericyrillic","yerudieresiscyrillic","yesieungkorean","yesieungpansioskorean","yesieungsioskorean","yetivhebrew","ygrave","yhook","yhookabove","yiarmenian","yicyrillic","yikorean","yinyang","yiwnarmenian","ymonospace","yod","yoddagesh","yoddageshhebrew","yodhebrew","yodyodhebrew","yodyodpatahhebrew","yohiragana","yoikorean","yokatakana","yokatakanahalfwidth","yokorean","yosmallhiragana","yosmallkatakana","yosmallkatakanahalfwidth","yotgreek","yoyaekorean","yoyakorean","yoyakthai","yoyingthai","yparen","ypogegrammeni","ypogegrammenigreekcmb","yr","yring","ysuperior","ytilde","yturned","yuhiragana","yuikorean","yukatakana","yukatakanahalfwidth","yukorean","yusbigcyrillic","yusbigiotifiedcyrillic","yuslittlecyrillic","yuslittleiotifiedcyrillic","yusmallhiragana","yusmallkatakana","yusmallkatakanahalfwidth","yuyekorean","yuyeokorean","yyabengali","yyadeva","z","zaarmenian","zacute","zadeva","zagurmukhi","zaharabic","zahfinalarabic","zahinitialarabic","zahiragana","zahmedialarabic","zainarabic","zainfinalarabic","zakatakana","zaqefgadolhebrew","zaqefqatanhebrew","zarqahebrew","zayin","zayindagesh","zayindageshhebrew","zayinhebrew","zbopomofo","zcaron","zcircle","zcircumflex","zcurl","zdot","zdotaccent","zdotbelow","zecyrillic","zedescendercyrillic","zedieresiscyrillic","zehiragana","zekatakana","zero","zeroarabic","zerobengali","zerodeva","zerogujarati","zerogurmukhi","zerohackarabic","zeroinferior","zeromonospace","zerooldstyle","zeropersian","zerosuperior","zerothai","zerowidthjoiner","zerowidthnonjoiner","zerowidthspace","zeta","zhbopomofo","zhearmenian","zhebrevecyrillic","zhecyrillic","zhedescendercyrillic","zhedieresiscyrillic","zihiragana","zikatakana","zinorhebrew","zlinebelow","zmonospace","zohiragana","zokatakana","zparen","zretroflexhook","zstroke","zuhiragana","zukatakana","angbracketleftbig","angbracketleftBig","angbracketleftbigg","angbracketleftBigg","angbracketrightBig","angbracketrightbig","angbracketrightBigg","angbracketrightbigg","arrowhookleft","arrowhookright","arrowlefttophalf","arrowleftbothalf","arrownortheast","arrownorthwest","arrowrighttophalf","arrowrightbothalf","arrowsoutheast","arrowsouthwest","backslashbig","backslashBig","backslashBigg","backslashbigg","bardbl","bracehtipdownleft","bracehtipdownright","bracehtipupleft","bracehtipupright","braceleftBig","braceleftbig","braceleftbigg","braceleftBigg","bracerightBig","bracerightbig","bracerightbigg","bracerightBigg","bracketleftbig","bracketleftBig","bracketleftbigg","bracketleftBigg","bracketrightBig","bracketrightbig","bracketrightbigg","bracketrightBigg","ceilingleftbig","ceilingleftBig","ceilingleftBigg","ceilingleftbigg","ceilingrightbig","ceilingrightBig","ceilingrightbigg","ceilingrightBigg","circledotdisplay","circledottext","circlemultiplydisplay","circlemultiplytext","circleplusdisplay","circleplustext","contintegraldisplay","contintegraltext","coproductdisplay","coproducttext","floorleftBig","floorleftbig","floorleftbigg","floorleftBigg","floorrightbig","floorrightBig","floorrightBigg","floorrightbigg","hatwide","hatwider","hatwidest","intercal","integraldisplay","integraltext","intersectiondisplay","intersectiontext","logicalanddisplay","logicalandtext","logicalordisplay","logicalortext","parenleftBig","parenleftbig","parenleftBigg","parenleftbigg","parenrightBig","parenrightbig","parenrightBigg","parenrightbigg","prime","productdisplay","producttext","radicalbig","radicalBig","radicalBigg","radicalbigg","radicalbt","radicaltp","radicalvertex","slashbig","slashBig","slashBigg","slashbigg","summationdisplay","summationtext","tildewide","tildewider","tildewidest","uniondisplay","unionmultidisplay","unionmultitext","unionsqdisplay","unionsqtext","uniontext","vextenddouble","vextendsingle","getDingbatsGlyphsUnicode","a1","a2","a202","a3","a4","a5","a119","a118","a117","a11","a12","a13","a14","a15","a16","a105","a17","a18","a19","a20","a21","a22","a23","a24","a25","a26","a27","a28","a6","a7","a8","a9","a10","a29","a30","a31","a32","a33","a34","a35","a36","a37","a38","a39","a40","a41","a42","a43","a44","a45","a46","a47","a48","a49","a50","a51","a52","a53","a54","a55","a56","a57","a58","a59","a60","a61","a62","a63","a64","a65","a66","a67","a68","a69","a70","a71","a72","a73","a74","a203","a75","a204","a76","a77","a78","a79","a81","a82","a83","a84","a97","a98","a99","a100","a101","a102","a103","a104","a106","a107","a108","a112","a111","a110","a109","a120","a121","a122","a123","a124","a125","a126","a127","a128","a129","a130","a131","a132","a133","a134","a135","a136","a137","a138","a139","a140","a141","a142","a143","a144","a145","a146","a147","a148","a149","a150","a151","a152","a153","a154","a155","a156","a157","a158","a159","a160","a161","a163","a164","a196","a165","a192","a166","a167","a168","a169","a170","a171","a172","a173","a162","a174","a175","a176","a177","a178","a179","a193","a180","a199","a181","a200","a182","a201","a183","a184","a197","a185","a194","a198","a186","a195","a187","a188","a189","a190","a191","a89","a90","a93","a94","a91","a92","a205","a85","a206","a86","a87","a88","a95","a96","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","begin","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","reject","read","then","readChunk","arrayByteLength","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","sort","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","next","return","TypeError","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","stringToUTF8String","bytesToString","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","toRoman","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","promises","all","translatedFonts","translated","getPage","_this2","getPageDict","_ref","_ref2","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","actionName","indexOf","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","first","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","topDict","XRefParseException","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","isNaN","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","EndOfLine","byteAlign","EncodedByteAlign","Columns","rows","Rows","eoblock","EndOfBlock","black","BlackIs1","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","included","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","maj","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","getPrototypeOf","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","PasswordException","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","b2","parseFloat","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","ArialNarrow","ArialBlack","Arial","ArialMT","CourierNew","CourierNewPSMT","Helvetica","SegoeUISymbol","TimesNewRoman","TimesNewRomanPS","TimesNewRomanPSMT","Calibri","CenturyGothic","ComicSansMS","LucidaConsole","NuptialScript","Wingdings","Albertus","Aldus","Alexandria","Algerian","Antiqua","Apex","Arno","Aster","Aurora","Baskerville","Bell","Bembo","Benguiat","Bodoni","Bookman","Calisto","Calvert","Capitals","Cambria","Cartier","Caslon","Catull","Centaur","Chaparral","Cheltenham","Clarendon","Clearface","Cochin","Colonna","Constantia","Corona","Ecotype","Egyptienne","Elephant","Excelsior","Fairfield","Folkard","Footlight","FreeSerif","Garamond","Gentium","Georgia","Gloucester","Granjon","Heather","Hercules","Hiroshige","Imprint","Janson","Joanna","Korinna","Lexicon","Literaturnaya","Lucida","Melior","Memphis","Miller","Minion","Modern","Palatino","Perpetua","Plantin","Playbill","Renault","Requiem","Rockwell","Roman","Sabon","Scala","Seagull","Sistina","Souvenir","STIX","Sylfaen","Times","Trajan","Utopia","Versailles","Wanted","Weiss","Windsor","XITS","Dingbats","ZapfDingbats","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","454","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","toNumberArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","maybePort","_pdf_manager","_is_node2","__esModule","default","_message_handler","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","now","getOperatorList","renderInteractiveForms","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","catch","boundException","MissingPDFException","UnexpectedResponseException","UnknownErrorException","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","getPdfManager","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","initializeFromPort","window","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","getInheritableProperty","stopWhenFound","resources","mediaBox","cropBox","intersect","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","successiveACNextValue","eobrun","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getter","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","TimeSlotManager","canDecode","image","isDecodable","colorSpace","isSupported","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","buildTextContentItem","textChunk","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","bidiResult","bidi","dir","runBidiTransform","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","ri","setRenderingIntent","setFlatness","gs","cm","re","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","BT","ET","Tc","Tw","Tz","TL","Tf","Tr","Ts","Td","TD","Tm","Tj","TJ","d0","setCharWidth","d1","setCharWidthAndBounds","CS","SC","SCN","sc","scn","RG","rg","sh","BI","beginInlineImage","ID","beginImageData","EI","Do","MP","DP","BMC","BDC","EMC","BX","EX","BM","BD","true","fa","fal","fals","false","nul","null","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isOpenTypeFile","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","head","hhea","hmtx","maxp","post","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","potentialHeader","potentialTables","nameEntry","cffFile","isTrueType","loca","fpgm","prep","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","cvt","cvtData","numOfMetrics","numMissing","locaLength","indexToLocFormat","numGlyphsPlusOne","isGlyphLocationsLong","glyphsInfo","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","metricsOverride","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","compiler","namePrototype","builder","tableTag","builtInEncoding","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","actualLength","EEXEC_SIGNATURE","streamStartPos","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","785","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","cssColor","makeCssRgb","background","SMALL_NUMBER","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildFigureFromPatch","mesh","figure","figures","coords","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","tmp4","coordsPacked","xy","colorsPacked","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","Courier","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,M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Aw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,OACAx/J,IAAA,SAEAw/J,MAAA,OACAx/J,IAAA,SAEAw/J,MAAA,QACAx/J,IAAA,UAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,OACAx/J,IAAA,SAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,OACAx/J,IAAA,SAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,OACAx/J,IAAA,SAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,KACAx/J,IAAA,OAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,KACAx/J,IAAA,QAEAw/J,MAAA,MACAx/J,IAAA,QAEAw/J,MAAA,OACAx/J,IAAA,SAsBAiqM,EAAApkL,EAAA,SAAA1heACAA,EAAA,caA5K,EAAA2wM,wBAzxDA,SAAAvmM,GACA,OAAAA,GAAA,OAAAA,GAAA,MACA,EACGA,GAAA,OAAAA,GAAA,MACHomM,IAAApmM,MACG,MAAAA,EACH,GAEAA,GAkxDApK,EAAA4wM,aAZA,SAAAC,GACA,IA/2CA5wM,EACAoU,EA82CAy8L,EAAAD,EAAApuM,OACA,GAAAquM,GAAA,MAh3CA7wM,EAg3CA4wM,EAAA76L,WAAA,MA/2CA3B,EAAAo8L,EAAA,KACAxqC,OAAAhmK,EAAAoU,EAAA5N,KAIAxG,IADAoU,EAAAo8L,EAAA,KACAxqC,OAAAhmK,EAAAoU,EAAA5N,KA22CA,OAAAoqM,EAGA,IADA,IAAA54E,EAAA,GACA11H,EAAAuuM,EAAA,EAAgCvuM,GAAA,EAASA,IACzC01H,GAAA44E,EAAAtuM,GAEA,OAAA01H,GAIAj4H,EAAA+wM,mBAp4CA,SAAA9wM,GACA,QAAAqC,EAAA,EAAAC,EAAAkuM,EAAAhuM,OAA4CH,EAAAC,EAAQD,IAAA,CACpD,IAAA+R,EAAAo8L,EAAAnuM,GACA,GAAArC,GAAAoU,EAAA4xJ,OAAAhmK,EAAAoU,EAAA5N,IACA,OAAAnE,EAGA,UA83CAtC,EAAA0wM,wBACA1wM,EAAAgxM,mBAnxDA,SAAAtwM,EAAAuwM,GACA,IAAAC,EAAAD,EAAAvwM,GACA,YAAAwwM,EACA,OAAAA,EAEA,IAAAxwM,EACA,SAEA,SAAAA,EAAA,IACA,IACAywM,EADAC,EAAA1wM,EAAA+B,OAEA,OAAA2uM,GAAA,MAAA1wM,EAAA,UAAAA,EAAA,GACAywM,EAAAzwM,EAAAkoM,OAAA,OACK,MAAAwI,GAAA,GAAAA,GAAA,GAGL,SAFAD,EAAAzwM,EAAAkoM,OAAA,GAIA,GAAAuI,MAAAE,gBACAH,EAAA35B,SAAA45B,EAAA,MACA,EACA,OAAAD,EAIA,WAAAI,IAAA,SAAA70L,EAAA7R,EAAAuL,GAAA,aC9DArW,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAuxM,mBAAAvxM,EAAAwxM,oBAAAxxM,EAAAyxM,mBAAAzxM,EAAA0xM,qBAEA,IAAAxxM,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5IwyL,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAA1wL,EAAA,EAAgBA,EAAA0wL,EAAAvwL,OAAkBH,IAAA,CAAO,IAAA2wL,EAAAD,EAAA1wL,GAA2B2wL,EAAAC,WAAAD,EAAAC,eAAwDD,EAAAruK,gBAAgC,UAAAquK,MAAAE,aAAuDrzL,OAAAC,eAAAgzL,EAAAE,EAAApwL,IAAAowL,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA7yL,UAAA8yL,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAntL,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1ByrM,EAAiBzrM,EAAQ,KAIzB0rM,GACA3xM,YACA,SAAAgG,EAAA8O,QAAApU,KAAA,WAAAsF,EAAA4rM,sBAIAJ,EAAA,WACA,SAAAA,EAAA1gC,GACA,IAAA3vK,EAAA2vK,EAAA3vK,KACA0wM,EAAA/gC,EAAA8gC,gBACAA,WAAAC,MAZA,SAAA9d,EAAAZ,GAAiD,KAAAY,aAAAZ,GAA0C,UAAA7nB,UAAA,qCAA3F,CAcA5qK,KAAA8wM,GAEA9wM,KAAAS,OACAT,KAAAkxM,uBAuBA,OApBAhf,EAAA4e,IACA5uM,IAAA,SACA5C,MAAA,SAAAsE,GACA,OAAAwtM,EAAAn/L,OACAxR,KAAAT,KAAAS,KACAywM,gBAAAlxM,KAAAkxM,gBACAttM,UAIA1B,IAAA,kBACA5C,MAAA,SAAA+xM,GACA,OAAAD,EAAAE,YACA7wM,KAAAT,KAAAS,KACAywM,gBAAAlxM,KAAAkxM,gBACAG,cAKAP,EAhCA,GAmCA,SAAAS,EAAApnC,GACA,IAAA1oK,MAAAC,QAAAyoK,GACA,YAGA,IADA,IAAAroK,EAAAqoK,EAAAroK,OACAH,EAAA,EAAiBA,EAAAG,EAAYH,IAC7B,oBAAAwoK,EAAAxoK,GAAA,CAEA,IADA,IAAAsW,EAAA,IAAAxW,MAAAK,GACA2oK,EAAA,EAAsBA,EAAA3oK,EAAa2oK,IACnCxyJ,EAAAwyJ,IAAAN,EAAAM,GAEA,OAAAxyJ,EAGA,OAAAkyJ,EAEA,IAAAinC,GAMAI,eAAA,SAAA9pM,EAAA+pM,EAAAC,EAAAvpM,GACA,IAAAxG,EAAAC,EACAE,EAAA,EACA,IAAAH,EAAA,EAAAC,EAAA8F,EAAA5F,OAAmCH,EAAAC,EAAQD,IAC3CG,GAAA4F,EAAA/F,GAEAG,GAAA2vM,EACA,IAAAl0L,EAAA,IAAA9b,MAAAK,GACAkH,EAAA,EACAC,EAAA,EACA0oM,EAAA,GAAAziM,KAAAsH,IAAA,EAAAk7L,GAAA,GACAE,EAAAzpM,EAAA1D,UAAA3C,EAAA4vM,EAAA,MACAG,EAAA,EACA,IAAAlwM,EAAA,EAAiBA,EAAAG,EAAYH,IAAA,CAC7B,KAAAqH,EAAA0oM,GACAzoM,IAAA,EACAA,GAAA2oM,EAAAC,KACA7oM,GAAA,EAEAA,GAAA0oM,EACAn0L,EAAA5b,IAAAsH,GAAAD,GAAA2oM,EACA1oM,IAAA,GAAAD,GAAA,EAEA,OAAAuU,GAEA0H,MAAA,SAAAorJ,GACA,IAAA5vK,EAAA4vK,EAAA5vK,KACAywM,EAAA7gC,EAAA6gC,gBACAttM,EAAAysK,EAAAzsK,GAEAf,EAAAe,EAAAf,KACAA,IACAA,EAAAe,GAEA,IAEAkuM,GAFA9xM,KAAA+xM,iBAAA,KAAA/xM,KAAAgyM,sBAAAhyM,KAAAiyM,iBAAAjyM,KAAAkyM,qBACArvM,EAAA1C,IAAA,iBAEA,IAAA2xM,EACA,UAAAxsM,EAAAyD,YAAA,4BAEA,OAAA+oM,EAAAhuM,KAAA9D,MACAS,OACAywM,kBACAttM,KACAf,UAGA0P,OAAA,SAAA4/L,GACA,IAAA1xM,EAAA0xM,EAAA1xM,KACAywM,EAAAiB,EAAAjB,gBACA7+L,EAAA8/L,EAAA9/L,GAGA,OADAA,EAAA,IAEA,KA3DA,EA4DA,OAAArS,KAAAoyM,wBACA3xM,OACAywM,kBACA7+L,OAEA,KAhEA,EAiEA,OAAArS,KAAAqyM,6BACA5xM,OACAywM,kBACA7+L,OAEA,KArEA,EAsEA,OAAArS,KAAAsyM,wBACA7xM,OACAywM,kBACA7+L,OAEA,QACA,OAAArS,KAAAuyM,2BACA9xM,OACAywM,kBACA7+L,SAIAJ,MAAA,SAAAugM,GACA,IAAA/xM,EAAA+xM,EAAA/xM,KACAywM,EAAAsB,EAAAtB,gBACAttM,EAAA4uM,EAAA5uM,GAEAyO,EAAArS,KAAAilB,OACAxkB,OACAywM,kBACAttM,OAEA,OAAA5D,KAAAuS,QACA9R,OACAywM,kBACA7+L,QAGAi/L,WAAA,SAAAmB,GACA,IAAAhyM,EAAAgyM,EAAAhyM,KACAywM,EAAAuB,EAAAvB,gBACAG,EAAAoB,EAAApB,MAEA,IAAA5vM,MAAAC,QAAA2vM,GACA,OAAArxM,KAAAiS,OACAxR,OACAywM,kBACAttM,GAAAytM,IAIA,IADA,IAAArrL,KACAzZ,EAAA,EAAAyiK,EAAAqiC,EAAAvvM,OAAwCyK,EAAAyiK,EAAQziK,IAChDyZ,EAAAxI,KAAAxd,KAAAiS,OACAxR,OACAywM,kBACAttM,GAAAnD,EAAAU,WAAAkwM,EAAA9kM,OAGA,gBAAAiD,EAAAC,EAAAG,EAAAC,GACA,QAAAlO,EAAA,EAAAC,EAAAokB,EAAAlkB,OAA4CH,EAAAC,EAAQD,IACpDqkB,EAAArkB,GAAA6N,EAAAC,EAAAG,EAAAC,EAAAlO,KAIAowM,iBAAA,SAAAW,GACAA,EAAAjyM,KACAiyM,EAAAxB,gBADA,IAEAttM,EAAA8uM,EAAA9uM,GACAf,EAAA6vM,EAAA7vM,KAEA,SAAA8vM,EAAAxoC,GAIA,IAHA,IAAAj6J,EAAAi6J,EAAAroK,OACA0rL,KACA9pK,EAAA,EACA/hB,EAAA,EAAuBA,EAAAuO,EAAiBvO,GAAA,EACxC6rL,EAAA9pK,IAAAymJ,EAAAxoK,GAAAwoK,EAAAxoK,EAAA,MACA+hB,EAEA,OAAA8pK,EAEA,IAAAolB,EAAArB,EAAA1uM,EAAArB,SAAA,WACAkS,EAAA69L,EAAA1uM,EAAArB,SAAA,UACA,IAAAoxM,IAAAl/L,EACA,UAAApO,EAAAyD,YAAA,sBAEA,IAAA8pM,EAAAD,EAAA9wM,OAAA,EACA2vM,EAAA/9L,EAAA5R,OAAA,EACA8wM,EAAAD,EAAAC,GACAl/L,EAAAi/L,EAAAj/L,GACA,IAAAhM,EAAA6pM,EAAA1uM,EAAArB,SAAA,SACAkwM,EAAA7uM,EAAA1C,IAAA,iBACAwlM,EAAA9iM,EAAA1C,IAAA,YACA,IAAAwlM,MACArgM,EAAA+Q,MAAA,8CAAAsvL,GAEA,IAAAmN,EAAAvB,EAAA1uM,EAAArB,SAAA,WACA,GAAAsxM,EAMAA,EAAAH,EAAAG,OANA,CACAA,KACA,QAAAnxM,EAAA,EAAuBA,EAAAkxM,IAAelxM,EACtCmxM,EAAAt1L,MAAA,EAAA9V,EAAA/F,GAAA,IAKA,IAAAwS,EAAAo9L,EAAA1uM,EAAArB,SAAA,WAOA,OA9KA,EA8KAqxM,EAAAD,EAAAE,EAHA3+L,EAHAA,EAGAw+L,EAAAx+L,GAFAT,EAIA1T,KAAAwxM,eAAA9pM,EAAA+pM,EAAAC,EAAA9tM,GACA8D,EAAA+pM,EAAAviM,KAAAsH,IAAA,EAAAk7L,GAAA,EAAAh+L,IAEA0+L,uBAAA,SAAAW,GACAA,EAAAtyM,KACAsyM,EAAA7B,gBADA,IAEA7+L,EAAA0gM,EAAA1gM,GAEA,SAAA2gM,EAAAv4L,EAAAw4L,EAAAC,EAAAC,EAAAC,GACA,OAAAD,GAAAC,EAAAD,IAAAD,EAAAD,IAAAx4L,EAAAw4L,GAEA,gBAAAzjM,EAAAC,EAAAG,EAAAC,GACA,IAWAlO,EAAA4K,EAXAqJ,EAAAvD,EAAA,GACAugM,EAAAvgM,EAAA,GACAygM,EAAAzgM,EAAA,GACA8B,EAAA9B,EAAA,GACAghM,EAAAhhM,EAAA,GACA3K,EAAA2K,EAAA,GACA1L,EAAA0L,EAAA,GACAqB,EAAArB,EAAA,GACAihM,EAAA,GAAA19L,EACA29L,EAAA,IAAAC,aAAAF,GACAG,EAAA,IAAAp5B,YAAAi5B,GAEA,IAAA/mM,EAAA,EAAmBA,EAAA+mM,EAAkB/mM,IACrCgnM,EAAAhnM,GAAA,EAEA,IAAArB,EAAAvE,EACAd,EAAA,EACA,IAAAlE,EAAA,EAAmBA,EAAAiU,IAAOjU,EAAA,CAC1B,IAAA+xM,EAAAd,EAAAjxM,GAAA,GACAgyM,EAAAf,EAAAjxM,GAAA,GAEAma,EAAAk3L,EADA9jM,KAAAC,IAAAD,KAAAwH,IAAAlH,EAAAC,EAAA9N,GAAA+xM,GAAAC,GACAD,EAAAC,EAAAb,EAAAnxM,GAAA,GAAAmxM,EAAAnxM,GAAA,IACAiyM,EAAAlsM,EAAA/F,GAEAkyM,GADA/3L,EAAA5M,KAAAC,IAAAD,KAAAwH,IAAAoF,EAAA,GAAA83L,EAAA,IACAA,EAAA,EAAA1kM,KAAA6C,MAAA+J,KAAA,EACAg4L,EAAAD,EAAA,EAAA/3L,EACAi4L,EAAAj4L,EAAA+3L,EACAtN,EAAAsN,EAAA3oM,EACAs7L,EAAAD,EAAAr7L,EACA,IAAAqB,EAAA,EAAqBA,EAAA+mM,EAAkB/mM,IACvCA,EAAA1G,GACA0tM,EAAAhnM,IAAAwnM,EACAN,EAAAlnM,IAAAi6L,IAEA+M,EAAAhnM,IAAAunM,EACAL,EAAAlnM,IAAAg6L,GAGAr7L,GAAA0oM,EACA/tM,IAAA,EAEA,IAAA0G,EAAA,EAAmBA,EAAA5F,IAAO4F,EAAA,CAC1B,IAAAynM,EAAA,EACA,IAAAryM,EAAA,EAAqBA,EAAA2xM,EAAkB3xM,IACvCqyM,GAAAX,EAAAI,EAAA9xM,GAAA4K,GAAAgnM,EAAA5xM,GAEAqyM,EAAAhB,EAAAgB,EAAA,IAAA7/L,EAAA5H,GAAA,GAAA4H,EAAA5H,GAAA,IACAqD,EAAAC,EAAAtD,GAAA2C,KAAAC,IAAAD,KAAAwH,IAAAs9L,EAAAtgM,EAAAnH,GAAA,IAAAmH,EAAAnH,GAAA,OAIAylM,sBAAA,SAAAiC,GACAA,EAAAxzM,KACAwzM,EAAA/C,gBACA+C,EAAArwM,GAQA,IAVA,IAGAf,EAAAoxM,EAAApxM,KAEAqxM,EAAA3C,EAAA1uM,EAAArB,SAAA,YACA2yM,EAAA5C,EAAA1uM,EAAArB,SAAA,YACAmF,EAAA9D,EAAA1C,IAAA,KACA2B,EAAAoyM,EAAApyM,OACAsyM,KACAzyM,EAAA,EAAqBA,EAAAG,IAAYH,EACjCyyM,EAAA52L,KAAA22L,EAAAxyM,GAAAuyM,EAAAvyM,IAEA,OAzPA,EAyPAuyM,EAAAE,EAAAztM,IAEA0rM,4BAAA,SAAAgC,GACAA,EAAA5zM,KACA4zM,EAAAnD,gBADA,IAEA7+L,EAAAgiM,EAAAhiM,GAEA6hM,EAAA7hM,EAAA,GACA+hM,EAAA/hM,EAAA,GACA1L,EAAA0L,EAAA,GACAvQ,EAAAsyM,EAAAtyM,OACA,gBAAA0N,EAAAC,EAAAG,EAAAC,GAEA,IADA,IAAA4K,EAAA,IAAA9T,EAAA6I,EAAAC,GAAAP,KAAAsH,IAAAhH,EAAAC,GAAA9I,GACA4F,EAAA,EAAuBA,EAAAzK,IAAYyK,EACnCqD,EAAAC,EAAAtD,GAAA2nM,EAAA3nM,GAAAkO,EAAA25L,EAAA7nM,KAIA0lM,iBAAA,SAAAqC,GACA,IAAA7zM,EAAA6zM,EAAA7zM,KACAywM,EAAAoD,EAAApD,gBAEAruM,GADAyxM,EAAA1wM,GACA0wM,EAAAzxM,MAEA+vM,EAAArB,EAAA1uM,EAAArB,SAAA,WACA,IAAAoxM,EACA,UAAAttM,EAAAyD,YAAA,aAGA,MADA6pM,EAAA9wM,OAAA,EAEA,UAAAwD,EAAAyD,YAAA,mCAIA,IAFA,IAAAwrM,EAAA1xM,EAAA1C,IAAA,aACAq0M,KACA7yM,EAAA,EAAAC,EAAA2yM,EAAAzyM,OAAyCH,EAAAC,IAAQD,EACjD6yM,EAAAh3L,KAAAxd,KAAAiS,OACAxR,OACAywM,kBACAttM,GAAAnD,EAAAU,WAAAozM,EAAA5yM,OAKA,OAnSA,EAmSAixM,EAFArB,EAAA1uM,EAAArB,SAAA,WACA+vM,EAAA1uM,EAAArB,SAAA,WACAgzM,IAEAlC,uBAAA,SAAAmC,GACAA,EAAAh0M,KACAg0M,EAAAvD,gBADA,IAEA7+L,EAAAoiM,EAAApiM,GAEAugM,EAAAvgM,EAAA,GACAqiM,EAAAriM,EAAA,GACAygM,EAAAzgM,EAAA,GACAmiM,EAAAniM,EAAA,GACAsC,EAAA,IAAAD,aAAA,GACA,gBAAAlF,EAAAC,EAAAG,EAAAC,GAUA,IATA,IAQA5L,EARA,SAAAA,EAAAkL,EAAAuH,GAMA,OALAzS,EAAAyS,EACAzS,EAAAyS,EACWzS,EAAAkL,IACXlL,EAAAkL,GAEAlL,EANA,CAQAuL,EAAAC,GAAAmjM,EAAA,GAAAA,EAAA,IACAjxM,EAAA,EAAAC,EAAA8yM,EAAA5yM,OAA2CH,EAAAC,KAC3CqC,EAAAywM,EAAA/yM,MADmDA,GAKnD,IAAAgzM,EAAA/B,EAAA,GACAjxM,EAAA,IACAgzM,EAAAD,EAAA/yM,EAAA,IAEA,IAAAizM,EAAAhC,EAAA,GACAjxM,EAAA+yM,EAAA5yM,SACA8yM,EAAAF,EAAA/yM,IAEA,IAAAkzM,EAAA/B,EAAA,EAAAnxM,GACAmzM,EAAAhC,EAAA,EAAAnxM,EAAA,GACAgT,EAAA,GAAAggM,IAAAC,EAAAC,KAAA5wM,EAAA0wM,IAAAG,EAAAD,IAAAD,EAAAD,GACAH,EAAA7yM,GAAAgT,EAAA,EAAA/E,EAAAC,KAGAqiM,oBAAA,SAAA6C,GACAA,EAAAt0M,KACAs0M,EAAA7D,gBADA,IAEAttM,EAAAmxM,EAAAnxM,GACAf,EAAAkyM,EAAAlyM,KAEA+vM,EAAArB,EAAA1uM,EAAArB,SAAA,WACAkS,EAAA69L,EAAA1uM,EAAArB,SAAA,UACA,IAAAoxM,EACA,UAAAttM,EAAAyD,YAAA,cAEA,IAAA2K,EACA,UAAApO,EAAAyD,YAAA,aAEA,IAAA4T,EAAA,IAAAq0L,EAAAgE,gBAAApxM,GAGA,OA5VA,EA4VAgvM,EAAAl/L,EAFA,IAAAs9L,EAAAiE,iBAAAt4L,GACA1K,UAGAsgM,0BAAA,SAAA2C,GACAA,EAAAz0M,KAAA,IACAywM,EAAAgE,EAAAhE,gBACA7+L,EAAA6iM,EAAA7iM,GAEAugM,EAAAvgM,EAAA,GACAqB,EAAArB,EAAA,GACA5I,EAAA4I,EAAA,GACA,GAAA6+L,GAAAD,EAAA3xM,MAAA,CACA,IAAA2nM,OAAA2J,GAAAhK,QAAAn9L,EAAAmpM,EAAAl/L,GACA,GAAAuzL,EACA,WAAAkO,SAAA,sCAAAlO,MAGA3hM,EAAA+Q,MAAA,iCACA,IAAA++L,EAAA1hM,EAAA5R,QAAA,EACAuzM,EAAAzC,EAAA9wM,QAAA,EACAwzM,EAAA,IAAAzE,EAAApnM,GACA+oK,EAAArzK,OAAAe,OAAA,MAEAq1M,EADA,KAEA5gM,EAAA,IAAAD,aAAA2gM,GACA,gBAAA7lM,EAAAC,EAAAG,EAAAC,GACA,IAAAlO,EAAArC,EACA4C,EAAA,GACAmL,EAAAsH,EACA,IAAAhT,EAAA,EAAmBA,EAAA0zM,EAAe1zM,IAClCrC,EAAAkQ,EAAAC,EAAA9N,GACA0L,EAAA1L,GAAArC,EACA4C,GAAA5C,EAAA,IAEA,IAAAk2M,EAAAhjC,EAAAtwK,GACA,YAAAszM,EAAA,CAIA,IAAA9hB,EAAA,IAAAh/K,aAAA0gM,GACA9W,EAAAgX,EAAAG,QAAApoM,GACAqoM,EAAApX,EAAAx8L,OAAAszM,EACA,IAAAzzM,EAAA,EAAmBA,EAAAyzM,EAAgBzzM,IAAA,CACnCrC,EAAAg/L,EAAAoX,EAAA/zM,GACA,IAAAg0M,EAAAjiM,EAAA,EAAA/R,GACArC,EAAAq2M,EACAr2M,EAAAq2M,EAGAr2M,GADAq2M,EAAAjiM,EAAA,EAAA/R,EAAA,MAEArC,EAAAq2M,GAGAjiB,EAAA/xL,GAAArC,EAEAi2M,EAAA,IACAA,IACA/iC,EAAAtwK,GAAAwxL,GAEA9jL,EAAAvN,IAAAqxL,EAAA7jL,QAvBAD,EAAAvN,IAAAmzM,EAAA3lM,MAyCA+lM,EAAA,WAEA,SAAAA,EAAAC,GACA71M,KAAAs+L,MAAAuX,EAAAp0M,MAAA7B,UAAAiC,MAAAiC,KAAA+xM,EAAA,MAoDA,OAlDAD,EAAAh2M,WACA4d,KAAA,SAAAle,GACA,GAAAU,KAAAs+L,MAAAx8L,QANA,IAOA,UAAA4a,MAAA,uCAEA1c,KAAAs+L,MAAA9gL,KAAAle,IAEAoxK,IAAA,WACA,GAAA1wK,KAAAs+L,MAAAx8L,QAAA,EACA,UAAA4a,MAAA,wCAEA,OAAA1c,KAAAs+L,MAAA5tB,OAEAolC,KAAA,SAAAnvM,GACA,GAAA3G,KAAAs+L,MAAAx8L,OAAA6E,GAlBA,IAmBA,UAAA+V,MAAA,uCAGA,IADA,IAAA4hL,EAAAt+L,KAAAs+L,MACA38L,EAAA28L,EAAAx8L,OAAA6E,EAAA4F,EAAA5F,EAAA,EAA+C4F,GAAA,EAAQA,IAAA5K,IACvD28L,EAAA9gL,KAAA8gL,EAAA38L,KAGA+hB,MAAA,SAAA/c,GACA3G,KAAAwd,KAAAxd,KAAAs+L,MAAAt+L,KAAAs+L,MAAAx8L,OAAA6E,EAAA,KAEAovM,KAAA,SAAApvM,EAAAkG,GACA,IAIAlL,EACA4K,EACAtC,EANAq0L,EAAAt+L,KAAAs+L,MACA18F,EAAA08F,EAAAx8L,OAAA6E,EACA6O,EAAA8oL,EAAAx8L,OAAA,EACAoK,EAAA01F,GAAA/0F,EAAAqC,KAAA6C,MAAAlF,EAAAlG,MAIA,IAAAhF,EAAAigG,EAAAr1F,EAAAiJ,EAAwB7T,EAAA4K,EAAO5K,IAAA4K,IAC/BtC,EAAAq0L,EAAA38L,GACA28L,EAAA38L,GAAA28L,EAAA/xL,GACA+xL,EAAA/xL,GAAAtC,EAEA,IAAAtI,EAAAigG,EAAAr1F,EAAAL,EAAA,EAA4BvK,EAAA4K,EAAO5K,IAAA4K,IACnCtC,EAAAq0L,EAAA38L,GACA28L,EAAA38L,GAAA28L,EAAA/xL,GACA+xL,EAAA/xL,GAAAtC,EAEA,IAAAtI,EAAAuK,EAAAK,EAAAiJ,EAAwB7T,EAAA4K,EAAO5K,IAAA4K,IAC/BtC,EAAAq0L,EAAA38L,GACA28L,EAAA38L,GAAA28L,EAAA/xL,GACA+xL,EAAA/xL,GAAAtC,IAIA2rM,EAvDA,GAyDA/E,EAAA,WACA,SAAAA,EAAAmF,GACAh2M,KAAAg2M,YAkOA,OAhOAnF,EAAAjxM,WACA61M,QAAA,SAAAI,GAMA,IALA,IAIAI,EAAAj+L,EAAA5O,EAJAk1L,EAAA,IAAAsX,EAAAC,GACAK,EAAA,EACAF,EAAAh2M,KAAAg2M,UACAl0M,EAAAk0M,EAAAl0M,OAEAo0M,EAAAp0M,GAEA,oBADAm0M,EAAAD,EAAAE,MAKA,OAAAD,GACA,SACA7sM,EAAAk1L,EAAA5tB,OACA14J,EAAAsmL,EAAA5tB,SAEAwlC,EAAA9sM,GAEA,MACA,QAEA8sM,EADAl+L,EAAAsmL,EAAA5tB,MAEA,MACA,UACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAinM,IAAAn+L,IACA,MACA,UACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,UACAA,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,SACAprK,EAAAusK,QAAA75J,OAAA1S,EAAAusK,QAAAzoK,GACAk1L,EAAA9gL,KAAAxF,GAAA5O,GAEAk1L,EAAA9gL,KAAAxF,EAAA5O,GAEA,MACA,WACA4O,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAknM,KAAAp+L,IACA,MACA,eACA5O,EAAAk1L,EAAA5tB,OACA14J,EAAAsmL,EAAA5tB,OACA,EACA4tB,EAAA9gL,KAAAxF,GAAA5O,GAEAk1L,EAAA9gL,KAAAxF,GAAA5O,GAEA,MACA,cACA4O,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAA61J,KAAA/sJ,IACA,MACA,WACAA,EAAAsmL,EAAA5tB,MACA4tB,EAAAwX,KAAA99L,GACA,MACA,UACAA,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAmnM,IAAAr+L,IACA,MACA,UACAA,EAAA,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,GACA,MACA,UACA,MACA,UACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,UACAk1L,EAAAwX,KAAA,GACA,MACA,SACA1sM,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,IAAA5O,GACA,MACA,WACAk1L,EAAAyX,KAAA,KACA,MACA,UACA3sM,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAsH,IAAAwB,EAAA5O,IACA,MACA,YACAk1L,EAAA9gL,SACA,MACA,YACAxF,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAA6C,MAAAiG,IACA,MACA,SACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,GAAA5O,GACA,MACA,SACAA,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,WACAA,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,EAAA,GACA,MACA,YACA4O,EAAAsmL,EAAA5tB,MACA4tB,EAAA56K,MAAA1L,GACA,MACA,SACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,GAAA5O,GACA,MACA,SACA4O,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAE,IAAA4I,IACA,MACA,UACAA,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAE,IAAA4I,GAAA9I,KAAAonM,MACA,MACA,SACAltM,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,UACAA,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,UACAA,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,SACAA,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,IAAA5O,GACA,MACA,UACA4O,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,MAAAxF,GACA,MACA,UACAA,EAAAsmL,EAAA5tB,SACAprK,EAAAusK,QAAA75J,GACAsmL,EAAA9gL,MAAAxF,GAEAsmL,EAAA9gL,MAAAxF,GAEA,MACA,SACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,SACAprK,EAAAusK,QAAA75J,OAAA1S,EAAAusK,QAAAzoK,GACAk1L,EAAA9gL,KAAAxF,GAAA5O,GAEAk1L,EAAA9gL,KAAAxF,EAAA5O,GAEA,MACA,UACAk1L,EAAA5tB,MACA,MACA,WACAtnK,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAAyX,KAAA/9L,EAAA5O,GACA,MACA,YACA4O,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAiL,MAAAnC,IACA,MACA,UACAA,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAqnM,IAAAv+L,IACA,MACA,WACAA,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAtO,KAAAiM,KAAAnD,IACA,MACA,UACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,MACA4tB,EAAA9gL,KAAAxF,EAAA5O,GACA,MACA,WACAk1L,EAAA9gL,SACA,MACA,eAEAxF,GADAA,EAAAsmL,EAAA5tB,OACA,EAAAxhK,KAAA61J,KAAA/sJ,GAAA9I,KAAA6C,MAAAiG,GACAsmL,EAAA9gL,KAAAxF,GACA,MACA,UACA5O,EAAAk1L,EAAA5tB,MACA14J,EAAAsmL,EAAA5tB,SACAprK,EAAAusK,QAAA75J,OAAA1S,EAAAusK,QAAAzoK,GACAk1L,EAAA9gL,KAAAxF,IAAA5O,GAEAk1L,EAAA9gL,KAAAxF,EAAA5O,GAEA,MACA,QACA,UAAA9D,EAAAyD,YAAA,oBAAAktM,QAhNA3X,EAAA9gL,KAAAy4L,GAmNA,OAAA3X,UAGAuS,EApOA,GAsOAD,EAAA,WACA,SAAA4F,EAAAtyM,GACAlE,KAAAkE,OAKA,SAAAuyM,EAAA/yL,EAAAvU,EAAAuH,GACA8/L,EAAA1yM,KAAA9D,KAAA,QACAA,KAAA0jB,QACA1jB,KAAAmP,MACAnP,KAAA0W,MAMA,SAAAggM,EAAAC,GACAH,EAAA1yM,KAAA9D,KAAA,WACAA,KAAA22M,SACA32M,KAAAmP,IAAAwnM,EACA32M,KAAA0W,IAAAigM,EAMA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA5nM,EAAAuH,GACA8/L,EAAA1yM,KAAA9D,KAAA,UACAA,KAAA62M,KACA72M,KAAA82M,OACA92M,KAAA+2M,OACA/2M,KAAAmP,MACAnP,KAAA0W,MAMA,SAAAsgM,EAAA9uL,EAAAxR,GACA8/L,EAAA1yM,KAAA9D,KAAA,OACAA,KAAAkoB,MACAloB,KAAAmP,IAAA+Y,EAAA/Y,IACAnP,KAAA0W,MAMA,SAAAugM,EAAAvzL,EAAAvU,EAAAuH,GACA8/L,EAAA1yM,KAAA9D,KAAA,OACAA,KAAA0jB,QACA1jB,KAAAmP,MACAnP,KAAA0W,MAMA,SAAAwgM,EAAAC,EAAAjvL,GACAsuL,EAAA1yM,KAAA9D,KAAA,cACAA,KAAAm3M,WACAn3M,KAAAkoB,MAMA,SAAAkvL,IACAp3M,KAAAq3M,SAmCA,SAAAC,EAAAC,EAAAC,GACA,kBAAAA,EAAAtzM,MAAA,IAAAszM,EAAAb,OACAY,EAEA,YAAAA,EAAArzM,MAAA,IAAAqzM,EAAAZ,OACAa,EAEA,YAAAA,EAAAtzM,MAAA,YAAAqzM,EAAArzM,KACA,IAAAwyM,EAAAa,EAAAZ,OAAAa,EAAAb,QAEA,IAAAC,EAAA,IAAAW,EAAAC,EAAAD,EAAApoM,IAAAqoM,EAAAroM,IAAAooM,EAAA7gM,IAAA8gM,EAAA9gM,KAEA,SAAA+gM,EAAAF,EAAAC,GACA,eAAAA,EAAAtzM,KAAA,CACA,OAAAszM,EAAAb,OACA,WAAAD,EAAA,GACO,OAAAc,EAAAb,OACP,OAAAY,EACO,eAAAA,EAAArzM,KACP,WAAAwyM,EAAAa,EAAAZ,OAAAa,EAAAb,QAGA,eAAAY,EAAArzM,KAAA,CACA,OAAAqzM,EAAAZ,OACA,WAAAD,EAAA,GACO,OAAAa,EAAAZ,OACP,OAAAa,EAKA,WAAAZ,EAAA,IAAAW,EAAAC,EAFAtoM,KAAAC,IAAAooM,EAAApoM,IAAAqoM,EAAAroM,IAAAooM,EAAApoM,IAAAqoM,EAAA9gM,IAAA6gM,EAAA7gM,IAAA8gM,EAAAroM,IAAAooM,EAAA7gM,IAAA8gM,EAAA9gM,KACAxH,KAAAwH,IAAA6gM,EAAApoM,IAAAqoM,EAAAroM,IAAAooM,EAAApoM,IAAAqoM,EAAA9gM,IAAA6gM,EAAA7gM,IAAA8gM,EAAAroM,IAAAooM,EAAA7gM,IAAA8gM,EAAA9gM,MAGA,SAAAghM,EAAAH,EAAAC,GACA,eAAAA,EAAAtzM,KAAA,CACA,OAAAszM,EAAAb,OACA,OAAAY,EACO,eAAAA,EAAArzM,KACP,WAAAwyM,EAAAa,EAAAZ,OAAAa,EAAAb,QAGA,iBAAAa,EAAAtzM,MAAA,MAAAszM,EAAAX,IAAA,YAAAU,EAAArzM,MAAA,IAAAqzM,EAAAZ,QAAA,YAAAa,EAAAV,KAAA5yM,MAAA,IAAAszM,EAAAV,KAAAH,OACAa,EAAAT,KAEA,IAAAH,EAAA,IAAAW,EAAAC,EAAAD,EAAApoM,IAAAqoM,EAAA9gM,IAAA6gM,EAAA7gM,IAAA8gM,EAAAroM,KAEA,SAAAwoM,EAAAJ,EAAA7gM,GACA,OAAA6gM,EAAApoM,KAAAuH,EACA,IAAAggM,EAAAhgM,GACK6gM,EAAA7gM,OACL6gM,EAEA,IAAAP,EAAAO,EAAA7gM,GAEA,SAAAk6L,KAgKA,OA1TA4F,EAAA52M,UAAAg4M,MAAA,SAAAC,MACAvyM,EAAAgK,aAAA,oBAQAmnM,EAAA72M,UAAAT,OAAAe,OAAAs2M,EAAA52M,WACA62M,EAAA72M,UAAAg4M,MAAA,SAAAC,GACAA,EAAAC,cAAA93M,OAQA02M,EAAA92M,UAAAT,OAAAe,OAAAs2M,EAAA52M,WACA82M,EAAA92M,UAAAg4M,MAAA,SAAAC,GACAA,EAAAE,aAAA/3M,OAUA42M,EAAAh3M,UAAAT,OAAAe,OAAAs2M,EAAA52M,WACAg3M,EAAAh3M,UAAAg4M,MAAA,SAAAC,GACAA,EAAAG,qBAAAh4M,OAQAg3M,EAAAp3M,UAAAT,OAAAe,OAAAs2M,EAAA52M,WACAo3M,EAAAp3M,UAAAg4M,MAAA,SAAAC,GACAA,EAAAI,SAAAj4M,OAQAi3M,EAAAr3M,UAAAT,OAAAe,OAAAs2M,EAAA52M,WACAq3M,EAAAr3M,UAAAg4M,MAAA,SAAAC,GACAA,EAAAK,cAAAl4M,OAOAk3M,EAAAt3M,UAAAT,OAAAe,OAAAs2M,EAAA52M,WACAs3M,EAAAt3M,UAAAg4M,MAAA,SAAAC,GACAA,EAAAM,wBAAAn4M,OAKAo3M,EAAAx3M,WACAk4M,cAAA,SAAA5vL,GACAloB,KAAAq3M,MAAA75L,KAAA,YAAA0K,EAAA/Y,IAAA,cAAA+Y,EAAAxR,IAAA,qBAAAwR,EAAAxE,MAAA,QAEAw0L,cAAA,SAAAf,GACAn3M,KAAAq3M,MAAA75L,KAAA,IAAA25L,EAAAzzL,QAEAq0L,aAAA,SAAAK,GACAp4M,KAAAq3M,MAAA75L,KAAA46L,EAAAzB,SAEAqB,qBAAA,SAAAK,GACAr4M,KAAAq3M,MAAA75L,KAAA,KACA66L,EAAAvB,KAAAc,MAAA53M,MACAA,KAAAq3M,MAAA75L,KAAA,IAAA66L,EAAAxB,GAAA,KACAwB,EAAAtB,KAAAa,MAAA53M,MACAA,KAAAq3M,MAAA75L,KAAA,MAEA26L,wBAAA,SAAAG,GACAt4M,KAAAq3M,MAAA75L,KAAA,QACA86L,EAAAnB,SAAAS,MAAA53M,MACAA,KAAAq3M,MAAA75L,KAAA,OACA86L,EAAApwL,IAAA0vL,MAAA53M,MACAA,KAAAq3M,MAAA75L,KAAA,MAEAy6L,SAAA,SAAAvhM,GACA1W,KAAAq3M,MAAA75L,KAAA,aACA9G,EAAAwR,IAAA0vL,MAAA53M,MACAA,KAAAq3M,MAAA75L,KAAA,KAAA9G,MAAA,MAEAvT,SAAA,WACA,OAAAnD,KAAAq3M,MAAAh1L,KAAA,MA0DAuuL,EAAAhxM,WACAgnM,QAAA,SAAAn9L,EAAAmpM,EAAAl/L,GACA,IACA/R,EAAAC,EAKA+E,EAAA4F,EACAgrM,EAAAC,EAAAe,EAAAC,EAAAC,EAAAh1L,EAPA66K,KAEAoa,KACA7F,EAAAD,EAAA9wM,QAAA,EACA2vM,EAAA/9L,EAAA5R,QAAA,EACA62M,EAAA,EAGA,IAAAh3M,EAAA,EAAiBA,EAAAkxM,EAAelxM,IAChC28L,EAAA9gL,KAAA,IAAAi5L,EAAA90M,EAAAixM,EAAA,EAAAjxM,GAAAixM,EAAA,EAAAjxM,EAAA,KAEA,IAAAA,EAAA,EAAAC,EAAA6H,EAAA3H,OAAmCH,EAAAC,EAAQD,IAE3C,oBADA8hB,EAAAha,EAAA9H,IAKA,OAAA8hB,GACA,UACA,GAAA66K,EAAAx8L,OAAA,EACA,YAEA01M,EAAAlZ,EAAA5tB,MACA6mC,EAAAjZ,EAAA5tB,MACA4tB,EAAA9gL,KAAA85L,EAAAC,EAAAC,IACA,MACA,UACA,GAAAlZ,EAAAx8L,OAAA,EACA,YAEA,MACA,UACA,GAAAw8L,EAAAx8L,OAAA,EACA,YAEA01M,EAAAlZ,EAAA5tB,MACA6mC,EAAAjZ,EAAA5tB,MACA4tB,EAAA9gL,KAAAi6L,EAAAF,EAAAC,IACA,MACA,UACA,GAAAlZ,EAAAx8L,OAAA,EACA,YAEA01M,EAAAlZ,EAAA5tB,MACA6mC,EAAAjZ,EAAA5tB,MACA4tB,EAAA9gL,KAAAk6L,EAAAH,EAAAC,IACA,MACA,WACA,GAAAlZ,EAAAx8L,OAAA,EACA,YAEAy2M,EAAAja,EAAA5tB,MACA8nC,EAAAla,EAAA5tB,MACA4tB,EAAA9gL,KAAA+6L,EAAAC,GACA,MACA,UACA,GAAAla,EAAAx8L,OAAA,EACA,YAEAw8L,EAAA5tB,MACA,MACA,YACA,GAAA4tB,EAAAx8L,OAAA,EACA,YAGA,gBADAy1M,EAAAjZ,EAAA5tB,OACAxsK,KACA,YAGA,IADAyC,EAAA4wM,EAAAZ,QACA,IAAAj5L,OAAAC,UAAAhX,IAAA23L,EAAAx8L,OAAA6E,EACA,YAGA,gBADA4xM,EAAAja,IAAAx8L,OAAA6E,EAAA,IACAzC,MAAA,QAAAq0M,EAAAr0M,KAAA,CACAo6L,EAAA9gL,KAAA+6L,GACA,MAEAE,EAAA,IAAAxB,EAAA0B,IAAAJ,EAAAppM,IAAAopM,EAAA7hM,KACA4nL,IAAAx8L,OAAA6E,EAAA,GAAA8xM,EACAna,EAAA9gL,KAAAi7L,GACAC,EAAAl7L,KAAA,IAAA05L,EAAAuB,EAAAF,IACA,MACA,UACA,GAAAja,EAAAx8L,OAAA,EACA,YAEA,oBAAA2H,EAAA9H,EAAA,WAAA8H,EAAA9H,EAAA,IAAA8H,EAAA9H,EAAA,KAAAA,EAAA,UAAA8H,EAAA9H,EAAA,YAAA8H,EAAA9H,EAAA,IAAA8H,EAAA9H,EAAA,KAAA8H,EAAA9H,EAAA,IACA41M,EAAAjZ,EAAA5tB,MACA4tB,EAAA9gL,KAAAm6L,EAAAJ,EAAA9tM,EAAA9H,EAAA,KACAA,GAAA,EACA,MAGA,gBADA42M,EAAAja,IAAAx8L,OAAA,IACAoC,MAAA,QAAAq0M,EAAAr0M,KAAA,CACAo6L,EAAA9gL,KAAA+6L,GACA,MAEAE,EAAA,IAAAxB,EAAA0B,IAAAJ,EAAAppM,IAAAopM,EAAA7hM,KACA4nL,IAAAx8L,OAAA,GAAA22M,EACAna,EAAA9gL,KAAAi7L,GACAC,EAAAl7L,KAAA,IAAA05L,EAAAuB,EAAAF,IACA,MACA,WACA,GAAAja,EAAAx8L,OAAA,EACA,YAIA,GAFA01M,EAAAlZ,EAAA5tB,MACA6mC,EAAAjZ,EAAA5tB,MACA,YAAA8mC,EAAAtzM,MAAA,YAAAqzM,EAAArzM,KACA,YAIA,GAFAqI,EAAAirM,EAAAb,QACAhwM,EAAA4wM,EAAAZ,SACA,IAAAj5L,OAAAC,UAAAhX,KAAA+W,OAAAC,UAAApR,IAAA+xL,EAAAx8L,OAAA6E,EACA,YAGA,OADA4F,KAAA5F,QAEA,MAEAlF,MAAA7B,UAAA4d,KAAAo7L,MAAAta,IAAA32K,OAAA22K,EAAAx8L,OAAA6E,IAAA4F,IACA,MACA,QACA,iBA9GA+xL,EAAA9gL,KAAA,IAAAk5L,EAAAjzL,IAiHA,GAAA66K,EAAAx8L,SAAA2vM,EACA,YAEA,IAAAx5L,KAwBA,OAvBAygM,EAAAn2M,QAAA,SAAAs2M,GACA,IAAAC,EAAA,IAAA1B,EACAyB,EAAAjB,MAAAkB,GACA7gM,EAAAuF,KAAAs7L,EAAA31M,cAEAm7L,EAAA/7L,QAAA,SAAAw2M,EAAAp3M,GACA,IAAAm3M,EAAA,IAAA1B,EACA2B,EAAAnB,MAAAkB,GACA,IAAA3pM,EAAAuE,EAAA,EAAA/R,GACA+U,EAAAhD,EAAA,EAAA/R,EAAA,GACA6rL,GAAAsrB,EAAA31M,YACAgM,EAAA4pM,EAAA5pM,MACAq+K,EAAAwrB,QAAA,YAAA7pM,EAAA,MACAq+K,EAAAhwK,KAAA,MAEA9G,EAAAqiM,EAAAriM,MACA82K,EAAAwrB,QAAA,YAAAtiM,EAAA,MACA82K,EAAAhwK,KAAA,MAEAgwK,EAAAwrB,QAAA,qBAAAr3M,EAAA,QACA6rL,EAAAhwK,KAAA,KACAvF,EAAAuF,KAAAgwK,EAAAnrK,KAAA,OAEApK,EAAAoK,KAAA,QAGAuuL,EA9TA,GAgUAvxM,EAAA0xM,cA5mBA,SAAA9sM,GACA,IAAAg1M,EACA,wBAAAh1M,EAAA,YAAA1E,EAAA0E,IACA,SACG,MAAAuB,EAAA1C,QAAAmB,GACHg1M,EAAAh1M,MACG,QAAAuB,EAAAhB,UAAAP,GAGH,SAFAg1M,EAAAh1M,EAAApB,KAIA,OAAAo2M,EAAA32M,IAAA,iBAkmBAjD,EAAAyxM,qBACAzxM,EAAAwxM,sBACAxxM,EAAAuxM,uDCxlCA,IAEAsI,EAAsB3zM,EAAQ,KAC9BlG,EAAA85M,qBAAAD,EAAAC,uDCHAh6M,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA85M,qBAAA95M,EAAA+5M,kBAEA,IAgBA15M,EAijBA25M,EAjkBA95M,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5IwqK,EAA4a,SAAAC,EAAAxoK,GAA2B,GAAAF,MAAAC,QAAAyoK,GAA0B,OAAAA,EAAc,GAAA3qK,OAAAC,YAAAN,OAAAgrK,GAA2C,OAAxf,SAAAA,EAAAxoK,GAAiC,IAAAyoK,KAAeC,KAAeC,KAAgBC,SAAoB,IAAM,QAAAC,EAAAC,EAAAN,EAAA3qK,OAAAC,cAA0C4qK,GAAAG,EAAAC,EAAAC,QAAAvoJ,QAA4CioJ,EAAA5sJ,KAAAgtJ,EAAAlrK,QAAqBqC,GAAAyoK,EAAAtoK,SAAAH,GAAlC0oK,OAAyE,MAAAV,GAAcW,KAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAAE,QAAAF,EAAAE,SAA2C,QAAU,GAAAL,EAAA,MAAAC,GAAsB,OAAAH,EAA3X,CAAwfD,EAAAxoK,GAAuC,UAAAipK,UAAA,yDAEjkBtlK,EAAYC,EAAQ,KAEpB+zM,EAAmB/zM,EAAQ,KAI3Bg0M,GAMA75M,EARe6F,EAAQ,OAQe7F,EAAA85M,WAAA95M,GAAuC+5M,QAAA/5M,GAJ7Eg6M,EAAuBn0M,EAAQ,KAE/BC,EAAkBD,EAAQ,KAI1B6zM,EAAA,WACA,SAAAA,EAAAr5M,GACAC,KAAAD,OACAC,KAAA25M,cACA35M,KAAA45M,eAAAt0M,EAAAyhK,2BAkBA,OAhBAqyC,EAAAx5M,WACAi6M,eACA,OAAA75M,KAAA45M,YAAA3yC,SAEA6yC,OAAA,WACA95M,KAAA45M,YAAAr4M,WAEAw4M,UAAA,WACA/5M,KAAA25M,eAEAK,oBAAA,WACA,GAAAh6M,KAAA25M,WACA,UAAAj9L,MAAA,gCAIA08L,EAtBA,GAyBAa,EAAA,WACA,SAAAA,EAAAzzC,GACAxmK,KAAAk6M,YAAA1zC,EACAxmK,KAAAm6M,eAAA,KACAn6M,KAAAo6M,mBAAA,KACAp6M,KAAAq6M,wBAuBA,SAAAC,EAAA9zC,GACA,IAAAW,EAAAnnK,KAEAA,KAAAk6M,YAAA1zC,EACAxmK,KAAAm6M,eAAA,KACAn6M,KAAAu6M,qBACAv6M,KAAAw6M,yBACA,IAAAC,EAAAz6M,KAAAk6M,YAAAQ,eAAA,aACA16M,KAAA26M,QAAAF,EAAAG,YACA56M,KAAA66M,cAAA76M,KAAAk6M,YAAAY,gBAAA,sBAAAlzC,KAAA,SAAA/iJ,GACAsiJ,EAAAqzC,sBAAA31L,EAAAyiJ,qBACAH,EAAAozC,kBAAA11L,EAAAk2L,iBACA5zC,EAAAgzC,eAAAt1L,EAAAgxJ,gBAqCA,SAAAmlC,EAAA11C,EAAAx/J,EAAA0gK,GACAxmK,KAAAk6M,YAAA1zC,EACAxmK,KAAAunK,WAAA,KACA,IAAAkzC,EAAAz6M,KAAAk6M,YAAAQ,eAAA,kBACAp1C,QACAx/J,QAEA9F,KAAA26M,QAAAF,EAAAG,YA2BA,OAxGAX,EAAAr6M,WACAq7M,cAAA,WAGA,SAFA31M,EAAA2Y,SAAAje,KAAAo6M,oBACAp6M,KAAAo6M,mBAAA,IAAAE,EAAAt6M,KAAAk6M,aACAl6M,KAAAo6M,oBAEA/yC,eAAA,SAAA/B,EAAAx/J,GACA,IAAAo1M,EAAA,IAAAF,EAAA11C,EAAAx/J,EAAA9F,KAAAk6M,aAEA,OADAl6M,KAAAq6M,qBAAA78L,KAAA09L,GACAA,GAEArxC,kBAAA,SAAAsxC,GACAn7M,KAAAo6M,oBACAp6M,KAAAo6M,mBAAAgB,OAAAD,GAEAn7M,KAAAq6M,qBAAAx4M,MAAA,GACAU,QAAA,SAAA24M,GACAA,EAAAE,OAAAD,OAmBAb,EAAA16M,WACAy7M,mBACA,OAAAr7M,KAAA66M,eAEAhlC,oBACA,OAAA71K,KAAAm6M,gBAEA7yC,2BACA,OAAAtnK,KAAAw6M,uBAEAO,uBACA,OAAA/6M,KAAAu6M,mBAEA5yC,KAAA,WACA,OAAA3nK,KAAA26M,QAAAhzC,OAAAC,KAAA,SAAAwI,GACA,IAAA9wK,EAAA8wK,EAAA9wK,MAGA,OAFA8wK,EAAAjuJ,MAIA7iB,aACA6iB,UAIA7iB,QAAAyH,OACAob,YAIAi5L,OAAA,SAAAD,GACAn7M,KAAA26M,QAAAS,OAAAD,KAYAH,EAAAp7M,WACA0nK,2BACA,UAEAK,KAAA,WACA,OAAA3nK,KAAA26M,QAAAhzC,OAAAC,KAAA,SAAAyI,GACA,IAAA/wK,EAAA+wK,EAAA/wK,MAGA,OAFA+wK,EAAAluJ,MAIA7iB,aACA6iB,UAIA7iB,QAAAyH,OACAob,YAIAi5L,OAAA,SAAAD,GACAn7M,KAAA26M,QAAAS,OAAAD,KAGAlB,EA/GA,GAiHAd,GACAmC,MAAA,SAAAC,EAAAC,GACA,IAAAC,KACAF,EAAAG,GAAA,gBAAA72L,GACA,IAAA42L,EAIA,GADAA,KACA52L,aAAAjf,WAAA,CAIA,IAAA+1M,EAAA,MAAA92L,EAAA,GACA02L,EAAAK,qBAAAD,EACA,IAAAE,EAAA,IAAAC,eACAC,EAAA,aAAAF,EACA,IACAA,EAAAG,aACO,MAAAlgM,GACPigM,KAEAA,EAIAR,EAAA9vL,KAAA,QACAwwL,qBACAN,qBALAJ,EAAA9vL,KAAA,gBAbA8vL,EAAA9vL,KAAA,oBAqBA8vL,EAAAG,GAAA,qBAAA72L,MACAvf,EAAA42M,mBAAAr3L,EAAAs3L,aAEAZ,EAAAG,GAAA,yBAAA72L,GACA,OAAAs0L,EAAAiD,sBAAAv3L,EAAA22L,MAGAY,sBAAA,SAAAC,EAAAb,GACA,IAAAvwC,EACA0uC,KACA2C,EAAA,KACAC,KACAC,EAAAH,EAAAG,WAEA,UAAAA,GADA,YACAA,EACA,UAAA9/L,MAAA,oBAAA8/L,EAAA,kDAEA,IAAAC,EAAAJ,EAAAI,MACA5vC,EAAAwvC,EAAAxvC,WACA6vC,EAAAL,EAAAI,MAAA,UACAlB,EAAA,IAAA7B,EAAAiD,eAAAD,EAAAD,EAAAjB,GAEA,SAAAxB,IACA,GAAAL,EACA,UAAAj9L,MAAA,yBAGA,SAAAkgM,EAAAC,GACAN,EAAA/+L,KAAAq/L,GAEA,SAAAC,EAAAD,GACAA,EAAA/C,SACA,IAAAn4M,EAAA46M,EAAAjrC,QAAAurC,GACAN,EAAA50L,OAAAhmB,EAAA,GAEA,SAAAo7M,EAAAlgM,GACA,IAAAmgM,KAAA13M,EAAAyhK,2BACAk2C,EAAA,WACA37M,QAAAwuK,KAAA7E,EAAAiyC,UAAA,YAAAjyC,EAAAiyC,UAAA,iBAAAt1C,KAAA,SAAAuqC,GACA,IAAAK,EAAAtoC,EAAAioC,EAAA,GACAtuL,EAAA2uL,EAAA,GACA2K,EAAA3K,EAAA,GAEAwK,EAAAz7M,SACAsiB,WACAs5L,iBAESC,IAETA,EAAA,SAAAthM,GACAkhM,EAAAt1C,OAAA5rJ,IAOA,OALAmvJ,EAAAiyC,UAAA,kBAAAt1C,KAAA,WACAqD,EAAAiyC,UAAA,qBAAAt1C,KAAA,WACAqD,EAAAiyC,UAAA,SAAArgM,IAAA+qJ,KAAAq1C,EAAAG,IACSA,IACFA,GACPJ,EAAA/1C,QAsUA,OA1WAs0C,EAAAK,qBAAAS,EAAAT,qBAyMAL,EAAAG,GAAA,mBAAA72L,GACA,OAAAomJ,EAAAgF,QAAAprJ,EAAA2F,WAAAo9I,KAAA,SAAAy1C,GACA,IAAAC,EAAAryC,EAAAsyC,OAAAF,EAAA,UACAG,EAAAvyC,EAAAsyC,OAAAF,EAAA,OACAI,EAAAxyC,EAAAsyC,OAAAF,EAAA,YACAK,EAAAzyC,EAAAsyC,OAAAF,EAAA,QACA,OAAA/7M,QAAAwuK,KAAAwtC,EAAAE,EAAAC,EAAAC,IAAA91C,KAAA,SAAA+1C,GACA,OACA1pB,OAAA0pB,EAAA,GACAr6M,IAAAq6M,EAAA,GACAC,SAAAD,EAAA,GACAE,KAAAF,EAAA,UAKApC,EAAAG,GAAA,wBAAA72L,GACA,IAAAvhB,EAAA,IAAAkC,EAAAxC,IAAA6hB,EAAAvhB,IAAAL,IAAA4hB,EAAAvhB,IAAAJ,KAEA,OADA+nK,EAAA6yC,YAAAC,QACAjtC,aAAAxtK,KAEAi4M,EAAAG,GAAA,2BAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,kBAEAzC,EAAAG,GAAA,0BAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,kBAAAn5L,EAAAi5K,OAEAyd,EAAAG,GAAA,yBAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,gBAEAzC,EAAAG,GAAA,uBAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,cAEAzC,EAAAG,GAAA,0BAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,iBAEAzC,EAAAG,GAAA,yBAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,gBAEAzC,EAAAG,GAAA,sBAAA72L,GACA,OAAAomJ,EAAA+yC,cAAA,qBAEAzC,EAAAG,GAAA,uBAAA72L,GACA,OAAAvjB,QAAAwuK,KAAA7E,EAAAiyC,UAAA,gBAAAjyC,EAAA+yC,cAAA,gBAEAzC,EAAAG,GAAA,mBAAA72L,GAEA,OADAomJ,EAAAgzC,sBACAhzC,EAAAjE,iBAAAY,KAAA,SAAAz/J,GACA,OAAAA,EAAAxC,UAGA41M,EAAAG,GAAA,oBAAA72L,GACA,OAAAomJ,EAAA6yC,YAAAr9M,KAAAuf,QAEAu7L,EAAAG,GAAA,0BAAA72L,GACA,OAAAomJ,EAAAgF,QAAAprJ,EAAA2F,WAAAo9I,KAAA,SAAAy1C,GACA,OAAApyC,EAAAsyC,OAAAF,EAAA,sBAAAx4L,EAAAyF,aAGAixL,EAAAG,GAAA,6BAAA72L,GACA,IAAA2F,EAAA3F,EAAA2F,UACAygJ,EAAAgF,QAAAzlJ,GAAAo9I,KAAA,SAAAy1C,GACA,IAAAR,EAAA,IAAAzD,EAAA,2BAAA5uL,GACAoyL,EAAAC,GACA,IAAAqB,EAAA1zL,EAAA,EACA9kB,EAAAy4M,KAAAC,MACAf,EAAAgB,iBACA9C,UACAsB,OACAvyL,OAAAzF,EAAAyF,OACAg0L,uBAAAz5L,EAAAy5L,yBACS12C,KAAA,SAAAl8I,GACToxL,EAAAD,MACAv3M,EAAA+Q,MAAA,QAAA6nM,EAAA,6BAAAC,KAAAC,MAAA14M,GAAA,WAAAgmB,EAAAb,cACS,SAAA/O,GAET,GADAghM,EAAAD,IACAA,EAAAlD,WAAA,CAGA4B,EAAA9vL,KAAA,sBAA8C8yL,UAAAj5M,EAAAk5M,qBAAAC,UAC9C,IACAC,EADAC,EAAA,6DAGAD,EADA,iBAAA5iM,GAEAohK,QAAAphK,EACAwiL,MAAAqgB,GAEW,qBAAA7iM,EAAA,YAAAvc,EAAAuc,KAEXohK,QAAAphK,EAAAohK,SAAAphK,EAAA3Y,WACAm7L,MAAAxiL,EAAAwiL,OAAAqgB,IAIAzhC,QAAA,qCAAAphK,EAAA,YAAAvc,EAAAuc,IACAwiL,MAAAqgB,GAGApD,EAAA9vL,KAAA,aACAyyL,UACAU,MAAAF,EACAp0L,OAAAzF,EAAAyF,eAIKtqB,MACLu7M,EAAAG,GAAA,0BAAA72L,EAAAg6L,GACA,IAAAr0L,EAAA3F,EAAA2F,UACAq0L,EAAAC,OAAA,SAAAC,KACAF,EAAAG,SAAA,SAAA7D,KACAlwC,EAAAgF,QAAAzlJ,GAAAo9I,KAAA,SAAAy1C,GACA,IAAAR,EAAA,IAAAzD,EAAA,wBAAA5uL,GACAoyL,EAAAC,GACA,IAAAqB,EAAA1zL,EAAA,EACA9kB,EAAAy4M,KAAAC,MACAf,EAAA4B,oBACA1D,UACAsB,OACAgC,OACAK,oBAAAr6L,EAAAq6L,oBACAC,iBAAAt6L,EAAAs6L,mBACSv3C,KAAA,WACTk1C,EAAAD,MACAv3M,EAAA+Q,MAAA,uBAAA6nM,EAAA,YAAAC,KAAAC,MAAA14M,GAAA,MACAm5M,EAAAO,SACS,SAAAjE,GAET,GADA2B,EAAAD,IACAA,EAAAlD,WAIA,MADAkF,EAAAD,MAAAzD,GACAA,QAIAI,EAAAG,GAAA,mBAAA72L,GACA,OAAAomJ,EAAA2E,YAEA2rC,EAAAG,GAAA,qBAAA72L,GACA80L,KACA1uC,IACAA,EAAA8uC,YACA9uC,EAAA,MAEAqxC,GACAA,IAEA,IAAA+C,KAKA,OAJA9C,EAAAh6M,QAAA,SAAAs6M,GACAwC,EAAA7hM,KAAAq/L,EAAAhD,UACAgD,EAAA9C,cAEAz4M,QAAAwuK,IAAAuvC,GAAAz3C,KAAA,WACA2zC,EAAA+D,UACA/D,EAAA,SAGAA,EAAAG,GAAA,iBAAA72L,IA7NA,SAAAA,GACA,SAAA06L,EAAAC,GACAxF,IACAuB,EAAA9vL,KAAA,UAAgCg0L,QAAAD,IAEhC,SAAAE,EAAA5jM,GAEA,GADAk+L,IACAl+L,aAAAxW,EAAA62L,kBAAA,CACA,IAAA0gB,EAAA,IAAAzD,EAAA,+BAAAt9L,EAAArS,MACAmzM,EAAAC,GACAtB,EAAAT,gBAAA,kBAAAh/L,GAAA8rJ,KAAA,SAAA/iJ,GACAi4L,EAAAD,GACA5xC,EAAA00C,eAAA96L,EAAAuuJ,UACAwsC,MACWC,MAAA,SAAAC,GACXhD,EAAAD,GACAtB,EAAA9vL,KAAA,oBAAAq0L,IACWt4C,KAAA,KAAA1rJ,SACFA,aAAAxW,EAAA8wK,oBACTmlC,EAAA9vL,KAAA,aAAA3P,GACSA,aAAAxW,EAAAy6M,oBACTxE,EAAA9vL,KAAA,aAAA3P,GACSA,aAAAxW,EAAA06M,4BACTzE,EAAA9vL,KAAA,qBAAA3P,GAEAy/L,EAAA9vL,KAAA,mBAAAnmB,EAAA26M,sBAAAnkM,EAAAohK,QAAAphK,EAAA3Y,aAGA,SAAAy8M,IACA5F,IACA+C,MAAAn1C,KAAA23C,EAAA,SAAAv+L,GACAg5L,IACAh5L,aAAA1b,EAAAixK,oBAIAtL,EAAAgzC,sBACAhzC,EAAAjE,iBAAAY,KAAA,WACAoyC,IACA+C,MAAAn1C,KAAA23C,EAAAG,MANAA,EAAA1+L,IAQS0+L,GAET1F,IA9IA,SAAAn1L,EAAAq7L,GACA,IACAj1C,EADAk1C,KAAA76M,EAAAyhK,2BAEAn5J,EAAAiX,EAAAjX,OACA,GAAAA,EAAAiX,KAAA,CACA,IACAomJ,EAAA,IAAAquC,EAAA8G,gBAAA3D,EAAA7uM,EAAAiX,KAAAjX,EAAAwlK,SAAA8sC,EAAArzC,GACAszC,EAAA5+M,QAAA0pK,GACS,MAAAjqJ,GACTm/L,EAAAz4C,OAAA1mJ,GAEA,OAAAm/L,EAAAl5C,QAEA,IAAAo5C,EACAC,KACA,IACAD,EAAA,IAAApG,EAAAsB,GACO,MAAAv6L,GAEP,OADAm/L,EAAAz4C,OAAA1mJ,GACAm/L,EAAAl5C,QAEA,IAAAs5C,EAAAF,EAAApF,gBACAsF,EAAAlF,aAAAzzC,KAAA,WACA,GAAA24C,EAAAxF,iBAAA,CAGA,IAAAx0C,EAAA34J,EAAA24J,kBAAAg6C,EAAAj5C,qBACA2D,EAAA,IAAAquC,EAAAkH,kBAAA/D,EAAA4D,GACA75C,WAAA+0C,EACAj1C,IAAA14J,EAAA04J,IACA8M,SAAAxlK,EAAAwlK,SACAtxK,OAAAy+M,EAAA1qC,cACAtP,mBACAF,eAAAz4J,EAAAy4J,gBACS65C,EAAArzC,GACT,QAAAlrK,EAAA,EAAuBA,EAAA2+M,EAAAx+M,OAAyBH,IAChDspK,EAAAw1C,oBAAAH,EAAA3+M,IAEA2+M,KACAH,EAAA5+M,QAAA0pK,GACAqxC,EAAA,QACOuD,MAAA,SAAA1E,GACPgF,EAAAz4C,OAAAyzC,GACAmB,EAAA,OAEA,IAAA70C,EAAA,EAoDA,OAtCA,IAAAnmK,QAAA,SAAAC,EAAAmmK,GA6BA64C,EAAA54C,OAAAC,KA5BA,SAAAC,EAAA9/J,GACA,IAEA,GADAiyM,IACAjyM,EAAAoa,KAKA,OAJA8oJ,GAlBA,WACA,IAAAy1C,KAAAp7M,EAAA0iK,eAAAs4C,GACA1yM,EAAA9L,QAAA4+M,EAAA5+M,SAAA8L,EAAA9L,WACAwD,EAAA2O,MAAA,iDAEA,IACAg3J,EAAA,IAAAquC,EAAA8G,gBAAA3D,EAAAiE,EAAA9yM,EAAAwlK,SAAA8sC,EAAArzC,GACAszC,EAAA5+M,QAAA0pK,GACS,MAAAjqJ,GACTm/L,EAAAz4C,OAAA1mJ,GAEAs/L,KAXA,QAqBAhE,EAAA,MAGA,IAAAz3L,EAAA9c,EAAAzI,MACAmoK,MAAAniK,EAAAwiK,iBAAAjjJ,GACA07L,EAAAj5C,sBACAi0C,EAAA9vL,KAAA,eACAg8I,SACA6B,MAAAp6J,KAAAwH,IAAA+wJ,EAAA84C,EAAA1qC,eAAA,KAGA5K,EACAA,EAAAw1C,oBAAA57L,GAEAy7L,EAAA9iM,KAAAqH,GAEA07L,EAAA54C,OAAAC,KAAAC,EAAAH,GACW,MAAA5rJ,GACX4rJ,EAAA5rJ,KAGA4rJ,KAEAm4C,MAAA,SAAA/jM,GACAqkM,EAAAz4C,OAAA5rJ,GACAwgM,EAAA,OAEAA,EAAA,WACA+D,EAAAx2C,kBAAA,UAEAs2C,EAAAl5C,QAsDA05C,CAAA97L,GAPAK,gBAAAL,EAAA+7L,uBACAC,aAAAh8L,EAAAg8L,aACAC,gBAAAj8L,EAAAi8L,gBACAC,0BAAAl8L,EAAAk8L,0BACAC,aAAAn8L,EAAAm8L,aACA9P,gBAAArsL,EAAAqsL,kBAEAtpC,KAAA,SAAAq5C,GACA,GAAAtH,EAEA,MADAsH,EAAAlH,YACA,IAAAr9L,MAAA,yBAEAuuJ,EAAAg2C,EACA1F,EAAA9vL,KAAA,wBACAw/I,EAAAjE,iBAAAY,KAAA,SAAAz/J,GACAozM,EAAA9vL,KAAA,cAAsC3pB,OAAAqG,EAAAxC,MAAA8B,iBAE/BmgK,KAAAg4C,EAAAF,GA9DP,CA8NArD,GACAA,EAAA,OAEAK,GAEAwE,mBAAA,SAAA1F,GACA,IAAAD,EAAA,IAAA7B,EAAAiD,eAAA,gBAAAnB,GACArC,EAAAmC,MAAAC,EAAAC,GACAD,EAAA9vL,KAAA,gBAMA,oBAAA01L,YAAA5H,EAAAE,YAAA,oBAAA5mB,MAFA,mBADAwmB,EAGAxmB,MAFAuuB,aAAA,cAAA/H,GAGAF,EAAA+H,mBAAAruB,MAEAxzL,EAAA+5M,aACA/5M,EAAA85M,yDC7kBAh6M,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAmhN,kBAAAnhN,EAAA+gN,uBAEA,IAAA96M,EAAYC,EAAQ,KAEpBulK,EAAsBvlK,EAAQ,KAE9B87M,EAAgB97M,EAAQ,KAExB2W,EAAc3W,EAAQ,KAEtB+7M,EAAA,WACA,SAAAA,OACAh8M,EAAAgK,aAAA,wCA0DA,OAxDAgyM,EAAA1hN,WACA68M,YACA,OAAAz8M,KAAAuhN,QAEAnuC,eACA,OAAApzK,KAAAwhN,WAEA30C,iBACA,IAAAA,EAAA,KACA,GAAA7sK,KAAAyhN,YAAA,CACA,IAAAtvC,KAAA7sK,EAAA8sK,wBAAApyK,KAAAyhN,aACAtvC,EACAtF,EAAAsF,EAAAE,QAEA/sK,EAAA2O,MAAA,iCAAAjU,KAAAyhN,YAAA,MAGA,SAAAn8M,EAAA8O,QAAApU,KAAA,aAAA6sK,IAEA7F,eAAA,WACA,UAAA1hK,EAAAo8M,yBAEAxE,UAAA,SAAAyE,EAAAx4L,GACA,OAAAnpB,KAAAu9M,OAAAv9M,KAAA89M,YAAA6D,EAAAx4L,IAEAy4L,WAAA,SAAAD,EAAAx4L,GACA,OAAAnpB,KAAAu9M,OAAAv9M,KAAA89M,YAAAr9M,KAAAkhN,EAAAx4L,IAEA60L,cAAA,SAAA2D,EAAAx4L,GACA,OAAAnpB,KAAAu9M,OAAAv9M,KAAA89M,YAAAC,QAAA4D,EAAAx4L,IAEA8mJ,QAAA,SAAAzlJ,GACA,OAAAxqB,KAAA89M,YAAA7tC,QAAAzlJ,IAEAolJ,QAAA,WACA,OAAA5vK,KAAA89M,YAAAluC,WAEA2tC,OAAA,SAAA79M,EAAAiiN,EAAAx4L,GACA,WAAA7jB,EAAAo8M,yBAEA94C,aAAA,SAAAtD,EAAAx/J,GACA,WAAAR,EAAAo8M,yBAEAzD,oBAAA,WACA,WAAA34M,EAAAo8M,yBAEAjB,oBAAA,SAAA14M,GACA,WAAAzC,EAAAo8M,yBAEA/B,eAAA,SAAAvsC,GACApzK,KAAAwhN,UAAApuC,GAEA2mC,UAAA,WACA,WAAAz0M,EAAAo8M,0BAGAJ,EA5DA,GA8DAlB,EAAA,WACA,SAAAA,EAAA3D,EAAA53L,EAAAuuJ,EAAA8sC,EAAArzC,GACA7sK,KAAAuhN,OAAA9E,EACAz8M,KAAAwhN,UAAApuC,EACApzK,KAAAyhN,YAAA50C,EACA7sK,KAAAkgN,mBACA,IAAA/3M,EAAA,IAAA+T,EAAArX,OAAAggB,GACA7kB,KAAA89M,YAAA,IAAAuD,EAAAQ,YAAA7hN,KAAAmI,GACAnI,KAAA8mK,2BAAAxhK,EAAAyhK,2BACA/mK,KAAA8mK,wBAAAvlK,QAAA4G,GA4BA,OA1BA7C,EAAA8C,KAAAqvK,QAAA2oC,EAAAkB,GACA/D,OAAA,SAAA79M,EAAAiiN,EAAAx4L,GACA,WAAA7nB,QAAA,SAAAC,EAAAmmK,GACA,IACA,IAAApoK,EAAAI,EAAAiiN,GAOApgN,EALA,mBAAAjC,EACAA,EAAAs5M,MAAAl5M,EAAAypB,GAEA7pB,GAGS,MAAAwc,GACT4rJ,EAAA5rJ,OAIA8sJ,aAAA,SAAAtD,EAAAx/J,GACA,OAAAxE,QAAAC,WAEA08M,oBAAA,aACAj3C,eAAA,WACA,OAAAhnK,KAAA8mK,wBAAAG,SAEA8yC,UAAA,eAEAqG,EArCA,GAuCAI,EAAA,WACA,SAAAA,EAAA/D,EAAAr2C,EAAAj9I,EAAA+2L,EAAArzC,GACA7sK,KAAAuhN,OAAA9E,EACAz8M,KAAAwhN,UAAAr4L,EAAAiqJ,SACApzK,KAAAyhN,YAAA50C,EACA7sK,KAAAwmK,WAAAr9I,EAAAq9I,WACAxmK,KAAAkgN,mBACA,IAAA70M,GACAm7J,WAAAr9I,EAAAq9I,WACAF,IAAAn9I,EAAAm9I,IACAxkK,OAAAqnB,EAAArnB,OACAykK,iBAAAp9I,EAAAo9I,iBACAF,eAAAl9I,EAAAk9I,gBAEArmK,KAAAi3K,cAAA,IAAAnM,EAAAtG,qBAAA4B,EAAA/6J,GACArL,KAAA89M,YAAA,IAAAuD,EAAAQ,YAAA7hN,UAAAi3K,cAAAtO,aA2CA,OAzCArjK,EAAA8C,KAAAqvK,QAAA+oC,EAAAc,GACA/D,OAAA,SAAA79M,EAAAiiN,EAAAx4L,GACA,IAAA8hJ,EAAAjrK,KACA,WAAAsB,QAAA,SAAAC,EAAAmmK,IACA,SAAAo6C,IACA,IACA,IAAA7pM,EACA3Y,EAAAI,EAAAiiN,GAEA1pM,EADA,mBAAA3Y,EACAA,EAAAs5M,MAAAl5M,EAAAypB,GAEA7pB,EAEAiC,EAAA0W,GACW,MAAA6D,GACX,KAAAA,aAAAxW,EAAA8X,sBAEA,YADAsqJ,EAAA5rJ,GAGAmvJ,EAAAgM,cAAArO,aAAA9sJ,EAAAwpJ,MAAAxpJ,EAAAhW,KAAA8hK,KAAAk6C,EAAAp6C,IAfA,MAqBAkB,aAAA,SAAAtD,EAAAx/J,GACA,OAAA9F,KAAAi3K,cAAArO,aAAAtD,EAAAx/J,IAEAm4M,oBAAA,WACAj+M,KAAAi3K,cAAAhP,oBAEAw4C,oBAAA,SAAA14M,GACA/H,KAAAi3K,cAAA5R,eAAwCt9J,WAExCi/J,eAAA,WACA,OAAAhnK,KAAAi3K,cAAAjQ,kBAEA+yC,UAAA,WACA/5M,KAAAi3K,cAAArN,WAGA42C,EA1DA,GA4DAnhN,EAAA+gN,kBACA/gN,EAAAmhN,sDC/KArhN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAwiN,YAAAxiN,EAAA0iN,YAEA,IAAA73C,EAA4a,SAAAC,EAAAxoK,GAA2B,GAAAF,MAAAC,QAAAyoK,GAA0B,OAAAA,EAAc,GAAA3qK,OAAAC,YAAAN,OAAAgrK,GAA2C,OAAxf,SAAAA,EAAAxoK,GAAiC,IAAAyoK,KAAeC,KAAeC,KAAgBC,SAAoB,IAAM,QAAAC,EAAAC,EAAAN,EAAA3qK,OAAAC,cAA0C4qK,GAAAG,EAAAC,EAAAC,QAAAvoJ,QAA4CioJ,EAAA5sJ,KAAAgtJ,EAAAlrK,QAAqBqC,GAAAyoK,EAAAtoK,SAAAH,GAAlC0oK,OAAyE,MAAAV,GAAcW,KAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAAE,QAAAF,EAAAE,SAA2C,QAAU,GAAAL,EAAA,MAAAC,GAAsB,OAAAH,EAA3X,CAAwfD,EAAAxoK,GAAuC,UAAAipK,UAAA,yDAEjkBo3C,EAAWz8M,EAAQ,KAEnBC,EAAkBD,EAAQ,KAE1BD,EAAYC,EAAQ,KAEpB2W,EAAc3W,EAAQ,KAEtB08M,EAAkB18M,EAAQ,KAE1BwlK,EAAcxlK,EAAQ,KAEtBslK,EAActlK,EAAQ,KAEtB28M,EAAqB38M,EAAQ,KAE7B48M,EAAiB58M,EAAQ,KAEzB68M,EAAgB78M,EAAQ,KAExBw8M,EAAA,WACA,IACAM,GAAA,aACA,SAAAC,EAAAC,EAAAj4L,GACA,kBAAAA,GAAAi4L,EAAAC,UAAA,UAAAl4L,GAAAi4L,EAAAE,UAEA,SAAAV,EAAA3xC,GACA,IAAAnF,EAAAmF,EAAAnF,WACAxqK,EAAA2vK,EAAA3vK,KACA+pB,EAAA4lJ,EAAA5lJ,UACAk4L,EAAAtyC,EAAAsyC,SACAp/M,EAAA8sK,EAAA9sK,IACA+nK,EAAA+E,EAAA/E,UACAC,EAAA8E,EAAA9E,iBACAl5J,EAAAg+J,EAAAh+J,mBAEApS,KAAAirK,aACAjrK,KAAAwqB,YACAxqB,KAAA0iN,WACA1iN,KAAAS,OACAT,KAAAsD,MACAtD,KAAAqrK,YACArrK,KAAAsrK,mBACAtrK,KAAAoS,qBACApS,KAAAkgN,iBAAAj1C,EAAAi1C,iBACAlgN,KAAA2iN,iBAAA,KACA,IAAAC,EAAA,IAAA5iN,KAAAwqB,UAAA,IACAq4L,GAAsBnjN,IAAA,GACtBM,KAAA8iN,WACAC,YAAA,WACA,OAAAH,KAAAC,EAAAnjN,MAuOA,OAnOAqiN,EAAAniN,WACAojN,wBAAA,SAAA9gN,GACA,IAAAV,EAAAoS,UAAA9R,OAAA,YAAA8R,UAAA,IAAAA,UAAA,GAEAtU,KAAAgG,EAAA29M,yBACApgN,KAAA7C,KAAA0iN,SACAxgN,MACAV,WACA0hN,mBAEA,OAAAzhN,MAAAC,QAAApC,GAGA,IAAAA,EAAAwC,WAAA0D,EAAA1C,QAAAxD,EAAA,IAGAkG,EAAAjF,KAAAmC,MAAA1C,KAAAS,KAAAnB,GAFAA,EAAA,GAHAA,GAQA42K,cACA,OAAAl2K,KAAA0iN,SAAAviN,IAAA,aAEAgjN,gBACA,SAAA79M,EAAA8O,QAAApU,KAAA,YAAAA,KAAAgjN,wBAAA,cAAAx9M,EAAAjF,KAAAkC,QAEA2gN,eACA,IAAAA,EAAApjN,KAAAgjN,wBAAA,eACA,OAAAvhN,MAAAC,QAAA0hN,IAAA,IAAAA,EAAAthN,UAGAwD,EAAA8O,QAAApU,KAAA,WAAAojN,MAFA99M,EAAA8O,QAAApU,KAAA,WAAAqiN,IAIAgB,cACA,IAAAA,EAAArjN,KAAAgjN,wBAAA,cACA,OAAAvhN,MAAAC,QAAA2hN,IAAA,IAAAA,EAAAvhN,UAGAwD,EAAA8O,QAAApU,KAAA,UAAAqjN,MAFA/9M,EAAA8O,QAAApU,KAAA,UAAAA,KAAAojN,WAIAxF,eACA,IAAAl+M,EAAAM,KAAA0iN,SAAAviN,IAAA,YAIA,WAHAmF,EAAAge,OAAA5jB,OAAA,KACAA,EA3EA,MA6EA4F,EAAA8O,QAAApU,KAAA,WAAAN,IAEAm+M,WACA,IAAAuF,EAAApjN,KAAAojN,SACAC,EAAArjN,KAAAqjN,QACA,GAAAD,IAAAC,EACA,SAAA/9M,EAAA8O,QAAApU,KAAA,OAAAojN,GAEA,IAAAnsH,EAAA3xF,EAAA8C,KAAAk7M,UAAAD,EAAAD,GACA,SAAA99M,EAAA8O,QAAApU,KAAA,OAAAi3F,GAAAmsH,IAEAnvB,aACA,IAAAA,EAAAj0L,KAAAgjN,wBAAA,aAQA,OAPA/uB,EAAA,MACAA,EAAA,EACOA,GAAA,IACPA,GAAA,IACOA,EAAA,IACPA,KAAA,iBAEA3uL,EAAA8O,QAAApU,KAAA,SAAAi0L,IAEAsvB,iBAAA,WACA,IACAp7M,EADA+tK,EAAAl2K,KAAAk2K,QAEA,GAAAz0K,MAAAC,QAAAw0K,GAAA,CACA,IACAv0K,EADAlB,EAAAT,KAAAS,KAEAkG,EAAAuvK,EAAAp0K,OACAgG,KACA,IAAAnG,EAAA,EAAmBA,EAAAgF,IAAOhF,EAC1BmG,EAAA0V,KAAA/c,EAAAU,WAAA+0K,EAAAv0K,KAEAwG,EAAA,IAAA+T,EAAAtX,sBAAAkD,QAEAK,KADO3C,EAAAhB,UAAA0xK,GACPA,EAEA,IAAAh6J,EAAAlX,WAEA,OAAAmD,GAEAq7M,cAAA,SAAAphN,GACA,IAAA+kK,EAAAnnK,KAKA,OAHAA,KAAA2iN,mBACA3iN,KAAA2iN,iBAAA3iN,KAAAirK,WAAAsyC,OAAAv9M,KAAA,cAEAA,KAAA2iN,iBAAA/6C,KAAA,WAEA,OADA,IAAAo6C,EAAAh4C,aAAA7C,EAAAg8C,UAAA/gN,EAAA+kK,EAAA1mK,MACA+3K,UAGA6lC,gBAAA,SAAAhuC,GACA,IAAAH,EAAAlwK,KAEAu7M,EAAAlrC,EAAAkrC,QACAsB,EAAAxsC,EAAAwsC,KACAvyL,EAAA+lJ,EAAA/lJ,OACAg0L,EAAAjuC,EAAAiuC,uBAEAmF,EAAAzjN,KAAAirK,WAAAsyC,OAAAv9M,KAAA,oBACA2iN,EAAA3iN,KAAAwjN,eAAA,gEACAE,EAAA,IAAAvB,EAAAwB,kBACA14C,WAAAjrK,KAAAirK,WACAxqK,KAAAT,KAAAS,KACA86M,UACA/wL,UAAAxqB,KAAAwqB,UACAs4L,UAAA9iN,KAAA8iN,UACAz3C,UAAArrK,KAAAqrK,UACAC,iBAAAtrK,KAAAsrK,iBACAiO,QAAAv5K,KAAAkgN,iBACA9tM,mBAAApS,KAAAoS,qBAGAwxM,EADAtiN,QAAAwuK,KAAA2zC,EAAAd,IACA/6C,KAAA,SAAAuqC,GACA,IACA0R,EADA35C,EAAAioC,EAAA,GACA,GAEA/mL,EAAA,IAAA82L,EAAA98L,aAAAkF,EAAAixL,EAAArrC,EAAA1lJ,WAMA,OALA+wL,EAAA9vL,KAAA,mBACAq4L,aAAAJ,EAAAK,cAAA7zC,EAAAizC,WACA34L,UAAA0lJ,EAAA1lJ,UACAF,WAEAo5L,EAAArF,iBACAl2M,OAAA07M,EACAhH,OACAsG,UAAAjzC,EAAAizC,UACAz3L,aAAAN,IACSw8I,KAAA,WACT,OAAAx8I,MAGA44L,EAAAhkN,KAAAirK,WAAAsyC,OAAAv9M,KAAA,eACA,OAAAsB,QAAAwuK,KAAA8zC,EAAAI,IAAAp8C,KAAA,SAAA6qC,GACA,IAAAC,EAAAxoC,EAAAuoC,EAAA,GACAwR,EAAAvR,EAAA,GACAwR,EAAAxR,EAAA,GAEA,OAAAwR,EAAApiN,OAEA,OADAmiN,EAAA75L,UACA65L,EAEA,IAAAtiN,EACAC,EACAuiN,KACA,IAAAxiN,EAAA,EAAAC,EAAAsiN,EAAApiN,OAA4CH,EAAAC,EAAQD,IACpD2gN,EAAA4B,EAAAviN,GAAA2oB,IACA65L,EAAA3mM,KAAA0mM,EAAAviN,GAAA08M,gBAAAqF,EAAA7G,EAAAyB,IAGA,OAAAh9M,QAAAwuK,IAAAq0C,GAAAv8C,KAAA,SAAAw8C,GAEA,IADAH,EAAAn5L,MAAAxlB,EAAA8gB,IAAAi+L,qBACA1iN,EAAA,EAAAC,EAAAwiN,EAAAtiN,OAA0CH,EAAAC,EAAQD,IAClDsiN,EAAA94L,UAAAi5L,EAAAziN,IAIA,OAFAsiN,EAAAn5L,MAAAxlB,EAAA8gB,IAAAk+L,mBACAL,EAAA75L,UACA65L,OAIAhF,mBAAA,SAAAlM,GACA,IAAAr6B,EAAA14K,KAEAu7M,EAAAxI,EAAAwI,QACAsB,EAAA9J,EAAA8J,KACAqC,EAAAnM,EAAAmM,oBACAL,EAAA9L,EAAA8L,KACAM,EAAApM,EAAAoM,iBAEAsE,EAAAzjN,KAAAirK,WAAAsyC,OAAAv9M,KAAA,oBACA2iN,EAAA3iN,KAAAwjN,eAAA,+BAEA,OADAliN,QAAAwuK,KAAA2zC,EAAAd,IACA/6C,KAAA,SAAAqsC,GACA,IACA4P,EADA35C,EAAA+pC,EAAA,GACA,GAaA,OAXA,IAAAkO,EAAAwB,kBACA14C,WAAAyN,EAAAzN,WACAxqK,KAAAi4K,EAAAj4K,KACA86M,UACA/wL,UAAAkuJ,EAAAluJ,UACAs4L,UAAApqC,EAAAoqC,UACAz3C,UAAAqN,EAAArN,UACAC,iBAAAoN,EAAApN,iBACAiO,QAAAb,EAAAwnC,iBACA9tM,mBAAAsmK,EAAAtmK,qBAEAmyM,gBACAp8M,OAAA07M,EACAhH,OACAsG,UAAAzqC,EAAAyqC,UACAjE,sBACAC,mBACAN,YAKA2F,mBAAA,SAAAl6L,GAGA,IAFA,IAAA45L,EAAAlkN,KAAAkkN,YACAO,KACA9iN,EAAA,EAAAgF,EAAAu9M,EAAApiN,OAA6CH,EAAAgF,IAAOhF,EACpD2oB,IAAAg4L,EAAA4B,EAAAviN,GAAA2oB,IACAm6L,EAAAjnM,KAAA0mM,EAAAviN,GAAAkjB,MAGA,OAAA4/L,GAEAP,kBAGA,IAFA,IAAAA,KACAQ,EAAA1kN,KAAAgjN,wBAAA,cACArhN,EAAA,EAAAgF,EAAA+9M,EAAA5iN,OAAgDH,EAAAgF,IAAOhF,EAAA,CACvD,IAAAgjN,EAAAD,EAAA/iN,GACA4gN,EAAAN,EAAA2C,kBAAA1kN,OAAAF,KAAAS,KAAAkkN,EAAA3kN,KAAAirK,WAAAjrK,KAAA8iN,WACAP,GACA2B,EAAA1mM,KAAA+kM,GAGA,SAAAj9M,EAAA8O,QAAApU,KAAA,cAAAkkN,KAGAnC,EArQA,GAuQAF,EAAA,WAGA,SAAAA,EAAA52C,EAAA/iJ,GACA,IAAA/f,EACA,MAAA3C,EAAAhB,UAAA0jB,GACA/f,EAAA+f,MACK,QAAA5iB,EAAAu/M,eAAA38L,GAGL,UAAAxL,MAAA,sCAFAvU,EAAA,IAAA+T,EAAArX,OAAAqjB,GAIA,GAAA/f,EAAArG,QAAA,EACA,UAAA4a,MAAA,sCAEA1c,KAAAirK,aACAjrK,KAAAmI,SACAnI,KAAAS,KAAA,IAAAuhN,EAAAj4C,KAAA5hK,EAAA8iK,GACA,IAAAi1C,EAAAj1C,EAAAi1C,iBACAlgN,KAAAoS,mBAAA,IAAAgwM,EAAAtR,oBACArwM,KAAAT,KAAAS,KACAywM,gBAAAgP,EAAAhP,kBAGA,SAAA4T,EAAA38M,EAAA48M,EAAAh6M,EAAAi6M,GACA,IAAAn/M,EAAAsC,EAAAtC,IACAC,EAAAqC,EAAArC,IACAob,KACArb,EAAAkF,EAAAjF,IACAiF,EAAAjF,EAAAD,GAEA,QAAAc,EAAA,EAAmBA,EAAAoE,IAAWpE,EAC9Bua,EAAA1D,KAAAmE,OAAAC,aAAAzZ,EAAAnC,YAEA,IAAA5C,EAAA8d,EAAAmB,KAAA,IACAla,EAAAtC,MACA,IAAA6d,EAAAshM,EAAA5hN,EAAA6hN,YAAAF,GAAA3hN,EAAAkuK,QAAAyzC,GACA,WAAArhM,IAGAvb,EAAAtC,KAAA6d,MAGA,IAAAwhM,GACA5yC,cACA,SAAAhtK,EAAA8O,QAAApU,KAAA,WACAmlN,MAAA7/M,EAAA8P,SACAgwM,OAAA9/M,EAAA8P,SACAiwM,QAAA//M,EAAA8P,SACAkwM,SAAAhgN,EAAA8P,SACAmwM,QAAAjgN,EAAA8P,SACAowM,SAAAlgN,EAAA8P,SACAqwM,aAAAngN,EAAA8P,SACAswM,QAAApgN,EAAA8P,SACAuwM,QAAAngN,EAAAxB,WAmMA,OA/LA69M,EAAAjiN,WACAqS,MAAA,SAAA4K,GACA7c,KAAAs7M,MAAAz+L,GACA,IAAA+oM,EAAA5lN,KAAA+9M,QAAA5yC,QAAAhrK,IAAA,cACAqF,EAAAxB,QAAA4hN,KACA5lN,KAAA6lN,iBAAAD,EAAA7lN,MAEA,IAEA,GADAC,KAAA8lN,SAAA9lN,KAAA+9M,QAAA5yC,QAAAhrK,IAAA,YACAH,KAAA8lN,SAAA,CACA9lN,KAAA+lN,IAAA/lN,KAAA8lN,SAAA3lN,IAAA,OACA,IAAA6lN,EAAAhmN,KAAA8lN,SAAA3lN,IAAA,UACA6lN,GAAAvkN,MAAAC,QAAAskN,IAAA,IAAAA,EAAAlkN,QAAA9B,KAAA+lN,MACA/lN,KAAA8lN,SAAA,OAGO,MAAA9kM,GACP,GAAAA,aAAA1b,EAAA8X,qBACA,MAAA4D,KAEA1b,EAAA+Q,MAAA,uCACArW,KAAA8lN,SAAA,OAGAG,oBACA,IAAAA,EAAA,KACA,GAAAjmN,KAAAmI,OAAArG,OACA,IACAmkN,EAAAp7C,EAAA7uJ,cAAA9b,OAAAF,KAAAmI,QACS,MAAAwhK,GACT,GAAAA,aAAArkK,EAAA8X,qBACA,MAAAusJ,KAEArkK,EAAA+Q,MAAAszJ,GAGA,SAAArkK,EAAA8O,QAAApU,KAAA,gBAAAimN,IAEAtzC,gBACA,IAAAxqK,EAAAnI,KAAAmI,OACAwqK,EAAA,EAEA,GADA3yK,KAAAimN,cAEA99M,EAAAvB,QACAk+M,EAAA38M,EAAA,iBACAwqK,EAAAxqK,EAAAtC,IAAA,OAEO,CAIP,IAHA,IACA4Z,KACA5Z,EAAAsC,EAAArC,KACA2Z,GAAA5Z,EAAA,IACAA,GAJA,KAIA,YAAA/D,QACA,IACA+D,EAAA,GAEAsC,EAAAtC,MACA4Z,EAAAqlM,EAAA38M,EAAA,YATA,SAWA,GAAAsX,EAAA,CAEA,IAAA/R,EADAvF,EAAAzB,KAAA,GAEA,GACAgH,EAAAvF,EAAAnC,mBACWV,EAAAgI,SAAAI,IAEX,IADA,IAAAtK,EAAA,GACAsK,GAAA,IAAAA,GAAA,IACAtK,GAAAue,OAAAC,aAAAlU,GACAA,EAAAvF,EAAAnC,UAEA2sK,EAAAiE,SAAAxzK,EAAA,IACA0zK,MAAAnE,KACAA,EAAA,IAIA,SAAArtK,EAAA8O,QAAApU,KAAA,YAAA2yK,IAEA7uJ,4BACA,IAAAA,EAAA,EACAmiM,EAAAjmN,KAAAimN,cAIA,OAHAA,IACAniM,EAAAmiM,EAAAniM,0BAEAxe,EAAA8O,QAAApU,KAAA,wBAAA8jB,IAEAoiM,YAAA,WACA,IAAA/9M,EAAAnI,KAAAmI,OAEA,GADAA,EAAAvB,QACAk+M,EAAA38M,EAAA,eACAA,EAAAtB,YAIA,IAHA,IAEA6G,EADAk4M,EAAA,IAEAl4M,EAAAvF,EAAAnC,WAAA,MACA4/M,EAAA9jN,QAJA,KAOA8jN,GAAAjkM,OAAAC,aAAAlU,GAEA1N,KAAA6lN,mBACA7lN,KAAA6lN,iBAAAD,EAAA/uC,UAAA,MAKAsvC,eAAA,WACA,IAAAxzC,EAAA3yK,KAAA2yK,UACA3yK,KAAAS,KAAAiyK,aAAAC,IAEA2oC,MAAA,SAAAz+L,GACA,IAAAupM,EAAApmN,KAEAA,KAAAS,KAAAwR,MAAA4K,GACA,IAAAquJ,GACAoF,WAAA,SAAA9lJ,EAAA3nB,EAAAS,EAAA+nK,EAAAC,GACA,WAAAy2C,GACA92C,WAAAm7C,EAAAn7C,WACAxqK,KAAA2lN,EAAA3lN,KACA+pB,YACAk4L,SAAA7/M,EACAS,MACA+nK,YACAC,mBACAl5J,mBAAAg0M,EAAAh0M,uBAIApS,KAAA+9M,QAAA,IAAAiE,EAAA/3C,QAAAjqK,KAAAirK,WAAAjrK,KAAAS,KAAAyqK,IAEArnJ,eACA,IAAAoiM,EAAAjmN,KAAAimN,cACAhjN,EAAAgjN,IAAApiM,SAAA7jB,KAAA+9M,QAAAl6L,SACA,SAAAve,EAAA8O,QAAApU,KAAA,WAAAiD,IAEAojN,mBACA,IAKAC,EALAC,GACAC,iBAAAxmN,KAAA6lN,iBACAY,oBAAAzmN,KAAA8lN,SACAY,eAAA1mN,KAAA+lN,KAGA,IACAO,EAAAtmN,KAAAS,KAAAuyK,QAAA7yK,IAAA,QACO,MAAAwpK,GACP,GAAAA,aAAArkK,EAAA8X,qBACA,MAAAusJ,KAEArkK,EAAA+Q,MAAA,mDAEA,GAAAiwM,EAAA,CACA,IAAAK,EAAAzB,EAAA5yC,QACA,QAAApwK,KAAAykN,EACA,GAAAL,EAAAhkN,IAAAJ,GAAA,CACA,IAAA5C,EAAAgnN,EAAAnmN,IAAA+B,GACAykN,EAAAzkN,GAAA5C,GACAinN,EAAArkN,GAAA,iBAAA5C,OAAAgG,EAAA8nK,mBAAA9tK,MAEAgG,EAAA+Q,MAAA,mCAAAnU,EAAA,MAKA,SAAAoD,EAAA8O,QAAApU,KAAA,eAAAumN,IAEApJ,kBACA,IACA3iB,EACAosB,EAAA,GACAC,EAHA7mN,KAAAS,KAGAuyK,QAAA7yK,IAAA,MACAsB,MAAAC,QAAAmlN,MAAA,OAAAvhN,EAAA8P,UAAAyxM,EAAA,KAlOA,qCAkOAA,EAAA,GACArsB,KAAAl1L,EAAA0B,eAAA6/M,EAAA,KAEA7mN,KAAAmI,OAAA09J,aACA7lK,KAAAmI,OAAA09J,YAAA,EAAA32J,KAAAC,IAvOA,KAuOAnP,KAAAmI,OAAArC,MAEA00L,KAAAzvB,EAAA6mB,cAAA5xL,KAAAmI,OAAAxC,MAAAW,SAAA,EAzOA,MAyOA,EAzOA,OA2OA,QAAA3E,EAAA,EAAAgF,EAAA6zL,EAAA14L,OAAsCH,EAAAgF,EAAOhF,IAAA,CAC7C,IAAAmlN,EAAAtsB,EAAA74L,GAAAwB,SAAA,IACAyjN,GAAA,IAAAE,EAAAhlN,OAAA,IAAAglN,IAEA,SAAAxhN,EAAA8O,QAAApU,KAAA,cAAA4mN,IAEA32C,QAAA,SAAAzlJ,GACA,OAAAxqB,KAAA+9M,QAAA9tC,QAAAzlJ,IAEAolJ,QAAA,WACA,OAAA5vK,KAAA+9M,QAAAnuC,YAGAiyC,EAzPA,GA2PAxiN,EAAA0iN,OACA1iN,EAAAwiN,gDC9hBA1iN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAuhB,sBAEA,IAAApb,EAAkBD,EAAQ,KAE1BwhN,EAAaxhN,EAAQ,KAErB2W,EAAc3W,EAAQ,KAEtBqb,EAAA,WACA,SAAAA,EAAAxd,EAAAwF,EAAAyC,GACArL,KAAAoD,MACApD,KAAA6C,KAAAO,EAAAP,QACA2C,EAAA1C,QAAAuI,KACAA,EAAA7F,EAAAjF,KAAAkC,OAEA,IAAAmL,GACA88J,KAAA,WACA,OAAAtnK,EAAA4C,YAGAhG,KAAAgnN,gBAAA,IAAAD,EAAA/tC,gBAAAprK,GACAkxB,EAAAzzB,EAAAlL,IAAA,KACAu5K,UAAAruK,EAAAlL,IAAA,aACAy5K,iBAAAvuK,EAAAlL,IAAA,oBACA05K,QAAAxuK,EAAAlL,IAAA,WACA45K,KAAA1uK,EAAAlL,IAAA,QACA85K,WAAA5uK,EAAAlL,IAAA,cACAg6K,SAAA9uK,EAAAlL,IAAA,cAEA+b,EAAAhX,aAAApB,KAAA9D,KAAA4I,GAcA,OAZAgY,EAAAhhB,UAAAT,OAAAe,OAAAgc,EAAAhX,aAAAtF,WACAghB,EAAAhhB,UAAA0H,UAAA,WACA,MAAAtH,KAAAoH,KAAA,CACA,IAAA8E,EAAAlM,KAAAgnN,gBAAAhsC,eACA,QAAA9uK,EAEA,YADAlM,KAAAoH,QAGApH,KAAAuH,aAAAvH,KAAAmH,aAAA,GACAnH,KAAA+G,OAAA/G,KAAAmH,gBAAA+E,IAGA0U,EAnCA,GAqCAvhB,EAAAuhB,mDChDAzhB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA0hB,mBAEA,IAAAvb,EAAkBD,EAAQ,KAE1B2W,EAAc3W,EAAQ,KAEtB0hN,EAAY1hN,EAAQ,KAEpBD,EAAYC,EAAQ,KAEpBwb,EAAA,WACA,SAAAA,EAAA5Y,EAAAS,EAAA/F,EAAAwI,GACArL,KAAAmI,SACAnI,KAAA4I,cACA5I,KAAA6C,OACA7C,KAAAqL,SACA6Q,EAAAhX,aAAApB,KAAA9D,KAAA4I,GA0CA,OAxCAmY,EAAAnhB,UAAAT,OAAAe,OAAAgc,EAAAhX,aAAAtF,WACAT,OAAAC,eAAA2hB,EAAAnhB,UAAA,SACAO,IAAA,WACA,SAAAmF,EAAA8O,QAAApU,KAAA,QAAAA,KAAAmI,OAAA1D,SAAAzE,KAAA4I,eAGAqb,kBAEAlD,EAAAnhB,UAAA2H,aAAA,SAAAC,KACAuZ,EAAAnhB,UAAA0H,UAAA,WACA,IAAAtH,KAAAoH,IAAA,CAGA,IAAA8/M,EAAA,IAAAD,EAAAE,WACAhiD,KACA,MAAA3/J,EAAA1C,QAAA9C,KAAAqL,QAAA,CACA,IAAA+7M,EAAApnN,KAAAqL,OAAAlL,IAAA,gBACA,MAAAqF,EAAAhB,UAAA4iN,GAAA,CACA,IAAAC,EAAAD,EAAA3iN,WACA0gK,EAAA3nJ,MACAqH,KAAAwiM,EACA3hN,MAAA,EACAI,IAAAuhN,EAAAvlN,UAIAqjK,EAAA3nJ,MACAqH,KAAA7kB,KAAA2F,MACAD,MAAA,EACAI,IAAA9F,KAAA2F,MAAA7D,SAIA,IAFA,IAAA+iB,EAAAqiM,EAAAI,YAAAniD,GACA+P,EAAArwJ,EAAA/iB,OACAH,EAAA,EAAmBA,EAAAuzK,EAAgBvzK,IACnCkjB,EAAAljB,IAAA,IAEA3B,KAAA+G,OAAA8d,EACA7kB,KAAAmH,aAAA+tK,EACAl1K,KAAAoH,SAEA2Z,EAhDA,GAkDA1hB,EAAA0hB,gDC/DA5hB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA8nN,kBAEA,IAAA7hN,EAAYC,EAAQ,KAEpBw3K,EAA0Bx3K,EAAQ,KAElCwhN,EAAaxhN,EAAQ,KAErBgiN,EAAA,WACA,SAAAA,EAAAtqC,GACAj9K,KAAAk9K,QAAA,gBAAAD,EAKA,OAHAsqC,EAAA3nN,UAAA,IAAA8c,MACA6qM,EAAA3nN,UAAAG,KAAA,aACAwnN,EAAA5nN,YAAA4nN,EACAA,EAPA,GASAJ,EAAA,WACA,SAAAK,KASA,SAAAC,EAAA5iM,EAAAnf,EAAAI,GACA9F,KAAA6kB,OACA7kB,KAAA0F,QACA1F,KAAA8F,MAYA,SAAA4hN,EAAAC,EAAAC,EAAA5+B,GACA,IAAAvM,EAAAkrC,EAAAE,YAAAD,GACAE,EAAA,EACA,SAAAr5M,EAAA3M,GAEA,IADA,IAAAmC,EAAA,EACAtC,EAAA,EAAqBA,EAAAG,EAAYH,IAAA,CACjC,IAAAsuL,EAAAjH,EAAAxM,QAAAC,EAAAqrC,GACAA,IAAA,IAAAA,GAAA,EAAA73B,EAAA,KAAA63B,GAAA,EAAA73B,GAAA,IACAhsL,KAAA,EAAAgsL,EAEA,OAAAhsL,IAAA,EAEA,IAAAyd,EAAAjT,EAAA,GACAnP,EAAAmP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,GACA,WAAAiT,EAAApiB,IAAA,GAAAA,EAAA,KAEA,SAAAyoN,EAAAJ,EAAA3+B,EAAA/6K,GAGA,IAFA,IAAAwuK,EAAAkrC,EAAAE,YAAA,QACAC,EAAA,EACAnmN,EAAA,EAAmBA,EAAAsM,EAAgBtM,IAEnCmmN,KAAA,EADA9+B,EAAAxM,QAAAC,EAAAqrC,GAGA,OAAA75M,EAAA,GACA65M,GAAA,GAAA75M,GAAA,EAEA,WAAA65M,EAjDAN,EAAA5nN,WACAioN,YAAA,SAAA/pB,GACA,OAAAA,KAAA99L,KACAA,KAAA89L,GAEA99L,KAAA89L,GAAA,IAAA9O,UAAA,SAQAy4B,EAAA7nN,WACAopL,cACA,IAAAA,EAAA,IAAAjM,EAAAnB,kBAAA57K,KAAA6kB,KAAA7kB,KAAA0F,MAAA1F,KAAA8F,KACA,SAAAR,EAAA8O,QAAApU,KAAA,UAAAgpL,IAEA2+B,mBACA,IAAAn1C,EAAA,IAAAg1C,EACA,SAAAliN,EAAA8O,QAAApU,KAAA,eAAAwyK,KA+BA,IAAAw1C,GAAA,ksBACAC,KACAxtM,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,MAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,MAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,MAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,KAEAqyM,IACAC,SACA1tM,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEAuyM,YACA3tM,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,MAGAsyM,SACA1tM,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEAuyM,YACA3tM,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,MAGAwyM,GAAA,oBACAC,GAAA,MAyBA,SAAAC,EAAAC,EAAAj4M,EAAAC,EAAAi4M,EAAAC,EAAAhiN,EAAA8tD,EAAAm0J,GACA,GAAAH,EAEA,OAAAI,EADA,IAAAC,EAAAF,EAAA9jM,KAAA8jM,EAAAjjN,MAAAijN,EAAA7iN,KACAyK,EAAAC,MAEA,OAAAi4M,IAAA/hN,IAAAgiN,GAAA,IAAAl0J,EAAA1yD,QAAA,IAAA0yD,EAAA,GAAA/5C,IAAA,IAAA+5C,EAAA,GAAA3+C,IAAA,IAAA2+C,EAAA,GAAA/5C,IAAA,IAAA+5C,EAAA,GAAA3+C,GAAA,IAAA2+C,EAAA,GAAA/5C,IAAA,IAAA+5C,EAAA,GAAA3+C,IAAA,IAAA2+C,EAAA,GAAA/5C,IAAA,IAAA+5C,EAAA,GAAA3+C,EACA,OA9BA,SAAAtF,EAAAC,EAAAm4M,GACA,IAEAr5B,EACA3tL,EACA4K,EACAu8M,EACAtuC,EACAuuC,EACAC,EARAhgC,EAAA2/B,EAAA3/B,QACAvM,EAAAksC,EAAAhB,aAAAE,YAAA,MAQAoB,KAEA,IAAAtnN,EAAA,EAAeA,EAAA6O,EAAY7O,IAK3B,IAJA64K,EAAAyuC,EAAAtnN,GAAA,IAAAiE,WAAA2K,GACAw4M,EAAApnN,EAAA,EAAA64K,EAAAyuC,EAAAtnN,EAAA,GAEA2tL,GADA05B,EAAArnN,EAAA,EAAA64K,EAAAyuC,EAAAtnN,EAAA,IACA,OAAAqnN,EAAA,OAAAA,EAAA,OAAAD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MACAx8M,EAAA,EAAiBA,EAAAgE,EAAWhE,IAC5BiuK,EAAAjuK,GAAAu8M,EAAA9/B,EAAAxM,QAAAC,EAAA6S,GACAA,GARA,MAQAA,IAAA,GAAA/iL,EAAA,EAAAgE,EAAAy4M,EAAAz8M,EAAA,WAAAA,EAAA,EAAAgE,EAAAw4M,EAAAx8M,EAAA,SAAAu8M,EAGA,OAAAG,EAtBA,CA8BA14M,EAAAC,EAAAm4M,GAEA,IAAAO,IAAAxiN,EACAyiN,EAAAlB,EAAAQ,GAAA5hB,OAAAryI,GACA20J,EAAAjgD,KAAA,SAAAlxJ,EAAA5O,GACA,OAAA4O,EAAAnC,EAAAzM,EAAAyM,GAAAmC,EAAAyC,EAAArR,EAAAqR,IAEA,IAQAvO,EAAAhB,EARAk+M,EAAAD,EAAArnN,OACAunN,EAAA,IAAAr6B,UAAAo6B,GACAE,EAAA,IAAAt6B,UAAAo6B,GACAG,KACAC,EAAA,EACAC,EAAA,EACA7iM,EAAA,EACA8iM,EAAA,EAEA,IAAAx+M,EAAA,EAAeA,EAAAk+M,EAAoBl+M,IACnCm+M,EAAAn+M,GAAAi+M,EAAAj+M,GAAAuP,EACA6uM,EAAAp+M,GAAAi+M,EAAAj+M,GAAA2K,EACA4zM,EAAAv6M,KAAAC,IAAAs6M,EAAAN,EAAAj+M,GAAAuP,GACAmM,EAAA1X,KAAAwH,IAAAkQ,EAAAuiM,EAAAj+M,GAAAuP,GACAivM,EAAAx6M,KAAAC,IAAAu6M,EAAAP,EAAAj+M,GAAA2K,GACA3K,EAAAk+M,EAAA,GAAAD,EAAAj+M,GAAA2K,IAAAszM,EAAAj+M,EAAA,GAAA2K,GAAAszM,EAAAj+M,GAAAuP,IAAA0uM,EAAAj+M,EAAA,GAAAuP,EAAA,EACA+uM,GAAA,GAAAJ,EAAA,EAAAl+M,EAEAq+M,EAAA/rM,KAAAtS,GAGA,IAAAy+M,EAAAJ,EAAAznN,OACA8nN,EAAA,IAAA56B,UAAA26B,GACAE,EAAA,IAAA76B,UAAA26B,GACAG,EAAA,IAAAz7M,YAAAs7M,GACA,IAAAz9M,EAAA,EAAeA,EAAAy9M,EAA2Bz9M,IAC1ChB,EAAAq+M,EAAAr9M,GACA09M,EAAA19M,GAAAi9M,EAAAj+M,GAAAuP,EACAovM,EAAA39M,GAAAi9M,EAAAj+M,GAAA2K,EACAi0M,EAAA59M,GAAA,GAAAk9M,EAAA,EAAAl+M,EAiBA,IAfA,IASAqB,EACA6iL,EACA26B,EAEA95B,EACAjoL,EAdAgiN,GAAAP,EACAQ,GAAAP,EACAQ,EAAA35M,EAAAqW,EACAujM,EAAA9B,EAAAI,GACAjuC,EAAA,IAAA50K,WAAA2K,GACA04M,KACAjgC,EAAA2/B,EAAA3/B,QACAvM,EAAAksC,EAAAhB,aAAAE,YAAA,MACAuC,EAAA,EAIA96B,EAAA,EAGA3tL,EAAA,EAAmBA,EAAA6O,EAAY7O,IAC/B,GAAA+mN,IAEA0B,GADAphC,EAAAxM,QAAAC,EAAA0tC,IAGAlB,EAAAzrM,KAAAg9J,QAMA,IAFAA,EAAA,IAAA50K,WAAA40K,GACAyuC,EAAAzrM,KAAAg9J,GACAjuK,EAAA,EAAiBA,EAAAgE,EAAWhE,IAC5B,GAAA28M,GAAAxiN,EAAA/E,GAAA4K,GACAiuK,EAAAjuK,GAAA,MADA,CAIA,GAAAA,GAAAy9M,GAAAz9M,EAAA29M,GAAAvoN,GAAAsoN,EAEA,IADA36B,KAAA,EAAAk6B,EACAt+M,EAAA,EAAqBA,EAAAy+M,EAA2Bz+M,IAChDkkL,EAAAztL,EAAAkoN,EAAA3+M,GACA6+M,EAAAx9M,EAAAq9M,EAAA1+M,IACA+kL,EAAAg5B,EAAA75B,GAAA26B,MAGAz6B,GADAW,EAAA65B,EAAA5+M,SAOA,IAFAokL,EAAA,EACAtnL,EAAAohN,EAAA,EACAl+M,EAAA,EAAqBA,EAAAk+M,EAAoBl+M,IAAAlD,KACzC+hN,EAAAx9M,EAAA88M,EAAAn+M,KACA,GAAA6+M,EAAAx5M,IACA6+K,EAAAztL,EAAA2nN,EAAAp+M,KACA,IACA+kL,EAAAg5B,EAAA75B,GAAA26B,MAEAz6B,GAAAW,GAAAjoL,GAMA,IAAA8gN,EAAA9/B,EAAAxM,QAAAC,EAAA6S,GACA9U,EAAAjuK,GAAAu8M,EAGA,OAAAG,EAEA,SAAAoB,EAAA95M,EAAAC,EAAAi4M,EAAA6B,EAAAC,EAAAC,EAAA9B,EAAAl0J,EAAAm0J,GACA,IAAA8B,EAAAvC,EAAAO,GAAAN,OACA,IAAAM,IACAgC,IAAA5jB,QAAAryI,EAAA,MAEA,IAGAtpD,EAHAw/M,EAAAD,EAAA3oN,OACA6oN,EAAA,IAAApiN,WAAAmiN,GACAE,EAAA,IAAAriN,WAAAmiN,GAEA,IAAAx/M,EAAA,EAAeA,EAAAw/M,EAA0Bx/M,IACzCy/M,EAAAz/M,GAAAu/M,EAAAv/M,GAAAuP,EACAmwM,EAAA1/M,GAAAu/M,EAAAv/M,GAAA2K,EAEA,IAAAg1M,EAAA3C,EAAAO,GAAAL,UACA,IAAAK,IACAoC,IAAAhkB,QAAAryI,EAAA,MAEA,IAAAs2J,EAAAD,EAAA/oN,OACAipN,EAAA,IAAAxiN,WAAAuiN,GACAE,EAAA,IAAAziN,WAAAuiN,GACA,IAAA5/M,EAAA,EAAeA,EAAA4/M,EAA6B5/M,IAC5C6/M,EAAA7/M,GAAA2/M,EAAA3/M,GAAAuP,EACAuwM,EAAA9/M,GAAA2/M,EAAA3/M,GAAA2K,EASA,IAPA,IAAAo1M,EAAAX,EAAA,GAAAxoN,OACAopN,EAAAZ,EAAAxoN,OACAqoN,EAAA7B,EAAAG,GACAQ,KACAjgC,EAAA2/B,EAAA3/B,QACAvM,EAAAksC,EAAAhB,aAAAE,YAAA,MACAuC,EAAA,EACAzoN,EAAA,EAAmBA,EAAA6O,EAAY7O,IAAA,CAC/B,GAAA+mN,IAEA0B,GADAphC,EAAAxM,QAAAC,EAAA0tC,IAGA,UAAA5C,EAAA,+BAGA,IAAA/sC,EAAA,IAAA50K,WAAA2K,GACA04M,EAAAzrM,KAAAg9J,GACA,QAAAjuK,EAAA,EAAqBA,EAAAgE,EAAWhE,IAAA,CAChC,IAAA6iL,EAAA26B,EACAz6B,EAAA,EACA,IAAApkL,EAAA,EAAmBA,EAAAw/M,EAA0Bx/M,IAC7CkkL,EAAAztL,EAAAipN,EAAA1/M,GACA6+M,EAAAx9M,EAAAo+M,EAAAz/M,GACAkkL,EAAA,GAAA26B,EAAA,GAAAA,GAAAx5M,EACA++K,IAAA,EAEAA,KAAA,EAAA25B,EAAA75B,GAAA26B,GAGA,IAAA7+M,EAAA,EAAmBA,EAAA4/M,EAA6B5/M,IAChDkkL,EAAAztL,EAAAqpN,EAAA9/M,GAAAs/M,EACAT,EAAAx9M,EAAAw+M,EAAA7/M,GAAAq/M,EACAn7B,EAAA,GAAAA,GAAA87B,GAAAnB,EAAA,GAAAA,GAAAkB,EACA37B,IAAA,EAEAA,KAAA,EAAAg7B,EAAAl7B,GAAA26B,GAGA,IAAAjB,EAAA9/B,EAAAxM,QAAAC,EAAA6S,GACA9U,EAAAjuK,GAAAu8M,GAGA,OAAAG,EA+GA,SAAAkC,EAAAC,EAAAC,EAAA96M,EAAAC,EAAA86M,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtD,EAAAuD,EAAAC,GACA,GAAAf,GAAAC,EACA,UAAA9D,EAAA,4CAEA,IACA5lN,EAAA64K,EADAyuC,KAEA,IAAAtnN,EAAA,EAAeA,EAAA6O,EAAY7O,IAAA,CAE3B,GADA64K,EAAA,IAAA50K,WAAA2K,GACA+6M,EACA,QAAA/+M,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClCiuK,EAAAjuK,GAAA++M,EAGArC,EAAAzrM,KAAAg9J,GAEA,IAAAwO,EAAA2/B,EAAA3/B,QACA2+B,EAAAgB,EAAAhB,aACAyE,EAAAhB,GAAAW,EAAAM,YAAAl4M,OAAAg4M,IAAAzE,EAAAC,EAAA,OAAA3+B,GACAsjC,EAAA,EAEA,IADA3qN,EAAA,EACAA,EAAA4pN,GAAA,CAEAa,GADAhB,EAAAW,EAAAM,YAAAl4M,OAAAg4M,GAAAzE,EAAAC,EAAA,OAAA3+B,GAKA,IADA,IAAAujC,EADAD,GADAlB,EAAAW,EAAAS,YAAAr4M,OAAAg4M,GAAAzE,EAAAC,EAAA,OAAA3+B,KAGA,CACA,IAAAyjC,EAAA,EACAjB,EAAA,IACAiB,EAAArB,EAAAe,EAAA19M,SAAAy9M,GAAAxE,EAAAC,EAAA,OAAA3+B,IAEA,IAAA/+K,EAAAuhN,EAAAY,EAAAK,EACAC,EAAAtB,EAAAW,EAAAY,cAAAx4M,OAAAg4M,GAAApE,EAAAJ,EAAA3+B,EAAA0iC,GACAkB,EAAAvB,IAAAD,EAAAe,EAAA3vC,UAAAkrC,EAAAC,EAAA,OAAA3+B,IACA6jC,EAAApB,EAAAiB,GACAI,EAAAD,EAAA,GAAA/qN,OACAirN,EAAAF,EAAA/qN,OACA,GAAA8qN,EAAA,CACA,IAAAI,EAAAtF,EAAAC,EAAA,QAAA3+B,GACAikC,EAAAvF,EAAAC,EAAA,QAAA3+B,GAKA6jC,EAAAxC,EAFAyC,GAAAE,EACAD,GAAAE,EACAjB,EAAAa,GAAAG,GAAA,GAJAtF,EAAAC,EAAA,QAAA3+B,IAIAikC,GAAA,GAHAvF,EAAAC,EAAA,QAAA3+B,MAGAijC,EAAAtD,GAEA,IAEAzxB,EAAApB,EAAAo3B,EAFAC,EAAAljN,GAAA,EAAA4hN,EAAA,EAAAkB,EAAA,GACAK,EAAAb,GAAA,EAAAV,EAAAiB,EAAA,KAEA,GAAAnB,EAAA,CACA,IAAAz0B,EAAA,EAAsBA,EAAA61B,EAAmB71B,IAEzC,GADA1c,EAAAyuC,EAAAmE,EAAAl2B,GACA,CAGAg2B,EAAAL,EAAA31B,GACA,IAAAm2B,EAAAn+M,KAAAC,IAAAoB,EAAA48M,EAAAL,GACA,OAAAhB,GACA,OACA,IAAAh2B,EAAA,EAA4BA,EAAAu3B,EAAev3B,IAC3Ctb,EAAA2yC,EAAAr3B,IAAAo3B,EAAAp3B,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAAu3B,EAAev3B,IAC3Ctb,EAAA2yC,EAAAr3B,IAAAo3B,EAAAp3B,GAEA,MACA,QACA,UAAAyxB,EAAA,YAAAuE,EAAA,sBAGAS,GAAAQ,EAAA,MACS,CACT,IAAAj3B,EAAA,EAAsBA,EAAAi3B,EAAmBj3B,IAEzC,GADAtb,EAAAyuC,EAAAkE,EAAAr3B,GAKA,OADAo3B,EAAAL,EAAA/2B,GACAg2B,GACA,OACA,IAAA50B,EAAA,EAA4BA,EAAA41B,EAAkB51B,IAC9C1c,EAAA4yC,EAAAl2B,IAAAg2B,EAAAh2B,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAA41B,EAAkB51B,IAC9C1c,EAAA4yC,EAAAl2B,IAAAg2B,EAAAh2B,GAEA,MACA,QACA,UAAAqwB,EAAA,YAAAuE,EAAA,qBAGAS,GAAAO,EAAA,EAEAnrN,IACA,IAAA2rN,EAAAlC,EAAAW,EAAAwB,YAAAp5M,OAAAg4M,GAAAzE,EAAAC,EAAA,OAAA3+B,GACA,UAAAskC,EACA,MAEAf,GAAAe,EAAA1B,GAGA,OAAA3C,EA2JA,SAAAuE,EAAA3oM,EAAAnf,GACA,IAAA+nN,KACAA,EAAA9W,UAAArxM,EAAA8lL,YAAAvmK,EAAAnf,GACA,IAAAqnK,EAAAloJ,EAAAnf,EAAA,GACAgoN,EAAA,GAAA3gD,EACA,IAAAi7C,EAAA0F,GACA,UAAAnG,EAAA,yBAAAmG,GAEAD,EAAAvpN,KAAAwpN,EACAD,EAAAE,SAAA3F,EAAA0F,GACAD,EAAAG,qBAAA,IAAA7gD,GACA,IAAA8gD,KAAA,GAAA9gD,GACA+gD,EAAAjpM,EAAAnf,EAAA,GACAqoN,EAAAD,GAAA,IACAE,GAAA,GAAAF,GACAnoD,EAAAjgK,EAAA,EACA,OAAAooN,EAAA,CACAC,EAAA,aAAAzoN,EAAA8lL,YAAAvmK,EAAA8gJ,EAAA,GACAA,GAAA,EACA,IAAAhgK,EAAAooN,EAAA,KAEA,IADAC,EAAA,GAAAnpM,EAAA8gJ,OACAhgK,EAAA,GACAqoN,EAAAxwM,KAAAqH,EAAA8gJ,WAEK,OAAAmoD,GAAA,IAAAA,EACL,UAAAvG,EAAA,6BAEAkG,EAAAO,aACA,IAEArsN,EAAAC,EAFAqsN,EAAAR,EAAA9W,QAAA,MAAA8W,EAAA9W,QAAA,UACAuX,KAEA,IAAAvsN,EAAA,EAAeA,EAAAosN,EAAqBpsN,IAAA,CACpC,IAAAg1M,EAAA,IAAAsX,EAAAppM,EAAA8gJ,GAAA,IAAAsoD,KAAA3oN,EAAA2lL,YAAApmK,EAAA8gJ,MAAArgK,EAAA8lL,YAAAvmK,EAAA8gJ,GACAuoD,EAAA1wM,KAAAm5L,GACAhxC,GAAAsoD,EAWA,GATAR,EAAAS,aACAL,GAGAJ,EAAAU,mBAAA7oN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,GAHA8nD,EAAAU,gBAAAtpM,EAAA8gJ,KAKA8nD,EAAA3rN,UAAAwD,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACA,aAAA8nD,EAAA3rN,OAAA,CACA,QAAA4rN,EA4BA,UAAAnG,EAAA,kCA3BA,IAAA6G,EAAAC,EAAAxpM,EAAA8gJ,GAEA2oD,KAAA,EADAzpM,EAAA8gJ,EAAA4oD,IAGAC,EAAA,IAAA5oN,WADA,GAUA,IARA0oN,IACAE,EAAA,OACAA,EAAA,QAEAA,EAAA,GAAAJ,EAAA59M,SAAA,OACAg+M,EAAA,GAAAJ,EAAA59M,QAAA,OACAg+M,EAAA,GAAAJ,EAAA59M,QAAA,MACAg+M,EAAA,OAAAJ,EAAA59M,OACA7O,EAAAgkK,EAAA/jK,EAAAijB,EAAA/iB,OAA4CH,EAAAC,EAAQD,IAAA,CAEpD,IADA,IAAA4K,EAAA,EACAA,EAZA,GAYAiiN,EAAAjiN,KAAAsY,EAAAljB,EAAA4K,IACAA,IAEA,GAfA,IAeAA,EAAA,CACAkhN,EAAA3rN,OAAAH,EAhBA,EAiBA,OAGA,gBAAA8rN,EAAA3rN,OACA,UAAAylN,EAAA,6BAOA,OADAkG,EAAAgB,UAAA9oD,EACA8nD,EAEA,SAAAiB,EAAA/vB,EAAA95K,EAAAnf,EAAAI,GAGA,IAFA,IAAA6oN,KACAhpD,EAAAjgK,EACAigK,EAAA7/J,GAAA,CACA,IAAA2nN,EAAAD,EAAA3oM,EAAA8gJ,GACAA,EAAA8nD,EAAAgB,UACA,IAAAG,GACAjwB,OAAA8uB,EACA5oM,QAQA,GANA85K,EAAAkwB,eACAD,EAAAlpN,MAAAigK,EACAA,GAAA8nD,EAAA3rN,OACA8sN,EAAA9oN,IAAA6/J,GAEAgpD,EAAAnxM,KAAAoxM,GACA,KAAAnB,EAAAvpN,KACA,MAGA,GAAAy6L,EAAAkwB,aACA,QAAAltN,EAAA,EAAAC,EAAA+sN,EAAA7sN,OAA2CH,EAAAC,EAAQD,IACnDgtN,EAAAhtN,GAAA+D,MAAAigK,EACAA,GAAAgpD,EAAAhtN,GAAAg9L,OAAA78L,OACA6sN,EAAAhtN,GAAAmE,IAAA6/J,EAGA,OAAAgpD,EAEA,SAAAN,EAAAxpM,EAAAnf,GACA,OACA6K,SAAAjL,EAAA8lL,YAAAvmK,EAAAnf,GACA8K,UAAAlL,EAAA8lL,YAAAvmK,EAAAnf,EAAA,GACA+U,KAAAnV,EAAA8lL,YAAAvmK,EAAAnf,EAAA,GACAmQ,KAAAvQ,EAAA8lL,YAAAvmK,EAAAnf,EAAA,IACAomN,oBAAA,EAAAjnM,EAAAnf,EAAA,KAGA,IAAA6oN,EAAA,GACA,SAAAO,EAAAF,EAAA/W,GACA,IAIA1uL,EAAAqrC,EAAA7yD,EAAAotN,EAJApwB,EAAAiwB,EAAAjwB,OACA95K,EAAA+pM,EAAA/pM,KACA8gJ,EAAAipD,EAAAlpN,MACAI,EAAA8oN,EAAA9oN,IAEA,OAAA64L,EAAAz6L,MACA,OACA,IAAA8qN,KACAC,KAAA3pN,EAAA2lL,YAAApmK,EAAA8gJ,GAYA,GAXAqpD,EAAA5D,WAAA,EAAA6D,GACAD,EAAA3D,cAAA,EAAA4D,GACAD,EAAAE,kBAAAD,GAAA,IACAD,EAAAG,kBAAAF,GAAA,IACAD,EAAAI,mBAAAH,GAAA,IACAD,EAAAK,6BAAAJ,GAAA,IACAD,EAAAM,2BAAA,IAAAL,GACAD,EAAAO,+BAAA,IAAAN,GACAD,EAAA7F,SAAA8F,GAAA,KACAD,EAAAQ,mBAAAP,GAAA,KACAtpD,GAAA,GACAqpD,EAAA5D,QAAA,CAGA,IAFA2D,EAAA,IAAAC,EAAA7F,SAAA,IACA30J,KACA7yD,EAAA,EAAqBA,EAAAotN,EAAcptN,IACnC6yD,EAAAh3C,MACA/C,KAAAnV,EAAAmqN,UAAA5qM,EAAA8gJ,GACA9vJ,KAAAvQ,EAAAmqN,UAAA5qM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEAqpD,EAAAx6J,KAEA,GAAAw6J,EAAA3D,aAAA2D,EAAAQ,mBAAA,CAEA,IADAh7J,KACA7yD,EAAA,EAAqBA,EAAA,EAAOA,IAC5B6yD,EAAAh3C,MACA/C,KAAAnV,EAAAmqN,UAAA5qM,EAAA8gJ,GACA9vJ,KAAAvQ,EAAAmqN,UAAA5qM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEAqpD,EAAA/C,aAAAz3J,EAEAw6J,EAAAU,2BAAApqN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAqpD,EAAAW,sBAAArqN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAA6lM,EAAArwB,EAAAgY,OAAAhY,EAAAuvB,WAAArpM,EAAA8gJ,EAAA7/J,GACA,MACA,OACA,OACA,IAAA8pN,KACAA,EAAAv5M,KAAAg4M,EAAAxpM,EAAA8gJ,GACAA,GAAA4oD,EACA,IAAAsB,KAAAvqN,EAAA2lL,YAAApmK,EAAA8gJ,GAYA,GAXAA,GAAA,EACAiqD,EAAAxE,WAAA,EAAAyE,GACAD,EAAAvE,cAAA,EAAAwE,GACAD,EAAA1D,aAAA2D,GAAA,IACAD,EAAApE,UAAA,GAAAoE,EAAA1D,aACA0D,EAAA/D,gBAAAgE,GAAA,IACAD,EAAAjE,cAAA,GAAAkE,GACAD,EAAA9D,oBAAA+D,GAAA,IACAD,EAAAtE,kBAAAuE,GAAA,IACAD,EAAAhE,SAAAiE,GAAA,OACAD,EAAAJ,mBAAAK,GAAA,KACAD,EAAAxE,QAAA,CACA,IAAA0E,KAAAxqN,EAAA2lL,YAAApmK,EAAA8gJ,GACAA,GAAA,EACAiqD,EAAAG,UAAA,EAAAD,EACAF,EAAAI,UAAAF,GAAA,IACAF,EAAAK,UAAAH,GAAA,IACAF,EAAAM,oBAAAJ,GAAA,IACAF,EAAAO,oBAAAL,GAAA,IACAF,EAAAQ,oBAAAN,GAAA,KACAF,EAAAS,oBAAAP,GAAA,KACAF,EAAAU,iCAAA,MAAAR,GAEA,GAAAF,EAAAvE,aAAAuE,EAAAJ,mBAAA,CAEA,IADAh7J,KACA7yD,EAAA,EAAqBA,EAAA,EAAOA,IAC5B6yD,EAAAh3C,MACA/C,KAAAnV,EAAAmqN,UAAA5qM,EAAA8gJ,GACA9vJ,KAAAvQ,EAAAmqN,UAAA5qM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEAiqD,EAAA3D,aAAAz3J,EAEAo7J,EAAArE,2BAAAjmN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAAymM,EAAAjxB,EAAAuvB,WAAArpM,EAAA8gJ,EAAA7/J,GACA,MACA,QACA,IAAAyqN,KACAC,EAAA3rM,EAAA8gJ,KACA4qD,EAAA/H,OAAA,EAAAgI,GACAD,EAAApH,SAAAqH,GAAA,IACAD,EAAAE,aAAA5rM,EAAA8gJ,KACA4qD,EAAAG,cAAA7rM,EAAA8gJ,KACA4qD,EAAAI,mBAAArrN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAAonM,EAAA5xB,EAAAgY,OAAA9xL,EAAA8gJ,EAAA7/J,GACA,MACA,QACA,QACA,IAAA8qN,KACAA,EAAAv6M,KAAAg4M,EAAAxpM,EAAA8gJ,GACAA,GAAA4oD,EACA,IAAAsC,EAAAhsM,EAAA8gJ,KACAirD,EAAApI,OAAA,EAAAqI,GACAD,EAAAzH,SAAA0H,GAAA,IACAD,EAAAE,cAAA,EAAAD,GACAD,EAAA9E,oBAAA+E,GAAA,IACAD,EAAAtF,kBAAAuF,GAAA,IACAD,EAAAG,aAAAzrN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAirD,EAAAI,cAAA1rN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAirD,EAAAK,YAAA,cAAA3rN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAirD,EAAAM,YAAA,cAAA5rN,EAAA8lL,YAAAvmK,EAAA8gJ,GACAA,GAAA,EACAirD,EAAAO,eAAA7rN,EAAA2lL,YAAApmK,EAAA8gJ,GACAA,GAAA,EACAirD,EAAAQ,eAAA9rN,EAAA2lL,YAAApmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAAynM,EAAAjyB,EAAAuvB,WAAArpM,EAAA8gJ,EAAA7/J,GACA,MACA,QACA,QACA,IAAAurN,KACAA,EAAAh7M,KAAAg4M,EAAAxpM,EAAA8gJ,GACAA,GAAA4oD,EACA,IAAA+C,EAAAzsM,EAAA8gJ,KAIA,GAHA0rD,EAAA7I,OAAA,EAAA8I,GACAD,EAAAlI,SAAAmI,GAAA,IACAD,EAAA3I,cAAA,EAAA4I,IACAD,EAAA7I,IAAA,CAGA,IAFAuG,EAAA,IAAAsC,EAAAlI,SAAA,IACA30J,KACA7yD,EAAA,EAAqBA,EAAAotN,EAAcptN,IACnC6yD,EAAAh3C,MACA/C,KAAAnV,EAAAmqN,UAAA5qM,EAAA8gJ,GACA9vJ,KAAAvQ,EAAAmqN,UAAA5qM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEA0rD,EAAA78J,KAEArrC,GAAAkoM,EAAAxsM,EAAA8gJ,EAAA7/J,GACA,MACA,QACA,IAAAyrN,GACAhhN,SAAAjL,EAAA8lL,YAAAvmK,EAAA8gJ,GACAn1J,UAAAlL,EAAA8lL,YAAAvmK,EAAA8gJ,EAAA,GACA6rD,eAAAlsN,EAAA8lL,YAAAvmK,EAAA8gJ,EAAA,GACA8rD,eAAAnsN,EAAA8lL,YAAAvmK,EAAA8gJ,EAAA,KAEA,aAAA4rD,EAAA/gN,eACA+gN,EAAA/gN,OAEA,IAAAkhN,EAAA7sM,EAAA8gJ,EAAA,OACArgK,EAAA2lL,YAAApmK,EAAA8gJ,EAAA,IACA4rD,EAAAI,YAAA,EAAAD,GACAH,EAAAlG,cAAA,EAAAqG,GACAH,EAAAjG,kBAAAoG,GAAA,IACAH,EAAAzF,oBAAA4F,GAAA,IACAH,EAAAK,kBAAA,GAAAF,GACAH,EAAAM,+BAAA,GAAAH,GACAvoM,GAAAooM,GACA,MACA,QAEA,QAEA,QACA,MACA,QACApoM,GAAAw1K,EAAAgY,OAAA9xL,EAAA8gJ,EAAA7/J,GACA,MACA,QACA,MACA,QACA,UAAAyhN,EAAA,gBAAA5oB,EAAAgvB,SAAA,IAAAhvB,EAAAz6L,KAAA,wBAEA,IAAA4tN,EAAA,KAAAnzB,EAAAgvB,SACAmE,KAAAja,GACAA,EAAAia,GAAAlZ,MAAAf,EAAA1uL,GAGA,SAAA4oM,EAAApD,EAAA9W,GACA,QAAAl2M,EAAA,EAAAC,EAAA+sN,EAAA7sN,OAAyCH,EAAAC,EAAQD,IACjDmtN,EAAAH,EAAAhtN,GAAAk2M,GAYA,SAAAma,KA8IA,SAAAC,EAAAC,GACA,IAAAA,EAAApwN,QACA9B,KAAAmyN,SACAnyN,KAAAoyN,SAAA,EACApyN,KAAAqyN,aAAAH,EAAA,GACAlyN,KAAAsyN,YAAA,EACAtyN,KAAAuyN,WAAAL,EAAA,GACAlyN,KAAAwyN,kBAEAxyN,KAAAmyN,SACAnyN,KAAAoyN,SAAAF,EAAA,GACAlyN,KAAAqyN,aAAAH,EAAA,GACAlyN,KAAAsyN,YAAAJ,EAAA,GACAlyN,KAAAuyN,WAAAL,EAAA,GACAlyN,KAAAwyN,aAAA,UAAAN,EAAA,IAGA,SAAAO,EAAAC,GACA1yN,KAAA2yN,YACAD,GACA1yN,KAAA4yN,UACA5yN,KAAAsyN,YAAAI,EAAAJ,YACAtyN,KAAAoyN,SAAAM,EAAAN,SACApyN,KAAAwyN,aAAAE,EAAAF,aACAxyN,KAAAmyN,MAAAO,EAAAP,OAEAnyN,KAAA4yN,UA+BA,SAAAC,EAAAC,EAAAC,GACAA,GACA/yN,KAAAgzN,kBAAAF,GAEA9yN,KAAAizN,SAAA,IAAAR,EAAA,MACA,IAAA9wN,SACAC,EAAAkxN,EAAAhxN,OACA4wN,SACA,IAAA/wN,EAAA,EAAeA,EAAAC,EAAQD,KACvB+wN,EAAAI,EAAAnxN,IACA0wN,aAAA,GACAryN,KAAAizN,SAAAC,UAAAR,IAAAL,aAAA,GAjNAL,EAAApyN,WACAuzN,kBAAA,SAAA98M,GACArW,KAAAozN,gBAAA/8M,EACA,IAAAmR,EAAAnR,EAAA9F,MAAA,KACAxJ,EAAA,IAAA0mL,kBAAAjmK,EAAAnR,EAAA7F,QACA,GAAA6F,EAAAi1M,kBACA,QAAA3pN,EAAA,EAAAC,EAAAmF,EAAAjF,OAA2CH,EAAAC,EAAQD,IACnDoF,EAAApF,GAAA,IAGA3B,KAAA+G,UAEAssN,WAAA,SAAAC,EAAArK,GACA,IAQAtnN,EAAA4K,EAAAgnN,EAAA7rM,EARA6pM,EAAAvxN,KAAAozN,gBACA7iN,EAAA+iN,EAAA/iN,MACAC,EAAA8iN,EAAA9iN,OACAgX,EAAA+pM,EAAAhhN,MAAA,KACAu7M,EAAAyF,EAAAM,4BAAAyB,EAAAxH,oBAAAyF,EAAAzF,oBACA/kN,EAAA/G,KAAA+G,OACAysN,EAAA,QAAAF,EAAA74M,GACA8rL,EAAA+sB,EAAAz9M,EAAA2R,GAAA8rM,EAAA74M,GAAA,GAEA,OAAAqxM,GACA,OACA,IAAAnqN,EAAA,EAAqBA,EAAA6O,EAAY7O,IAAA,CAGjC,IAFA4xN,EAAAC,EACA9rM,EAAA6+K,EACAh6L,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClC08M,EAAAtnN,GAAA4K,KACAxF,EAAA2gB,IAAA6rM,IAEAA,IAAA,KAEAA,EAAA,IACA7rM,KAGA6+K,GAAA/+K,EAEA,MACA,OACA,IAAA7lB,EAAA,EAAqBA,EAAA6O,EAAY7O,IAAA,CAGjC,IAFA4xN,EAAAC,EACA9rM,EAAA6+K,EACAh6L,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClC08M,EAAAtnN,GAAA4K,KACAxF,EAAA2gB,IAAA6rM,IAEAA,IAAA,KAEAA,EAAA,IACA7rM,KAGA6+K,GAAA/+K,EAEA,MACA,QACA,UAAA+/L,EAAA,YAAAuE,EAAA,uBAGA2H,yBAAA,SAAAC,EAAA7uM,EAAAnf,EAAAI,GACA,IAAAwtN,EAAAI,EAAAr9M,KACAsyM,EAAA,IAAAlB,EAAA5iM,EAAAnf,EAAAI,GACAmjN,EAAAV,EAAAmL,EAAAlL,IAAA8K,EAAA/iN,MAAA+iN,EAAA9iN,OAAAkjN,EAAAvK,SAAAuK,EAAAhL,WAAA,KAAAgL,EAAAl/J,GAAAm0J,GACA3oN,KAAAqzN,WAAAC,EAAArK,IAEA0K,iCAAA,WACA3zN,KAAAyzN,yBAAA7a,MAAA54M,KAAA4T,YAEAggN,mBAAA,SAAA5E,EAAA6E,EAAAC,EAAAjvM,EAAAnf,EAAAI,GACA,IAAAimN,SACAI,SACA6C,EAAA5D,UACAW,EAqaA,SAAAiD,EAAAd,EAAA6F,GACA,IAAAC,EAAA,EACAC,SACAC,SACA,OAAAlF,EAAAE,mBACA,OACA,OACA+E,EAAAE,EAAAnF,EAAAE,kBAAA,GACA,MACA,OACA+E,EAAAG,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,OAAAyH,EAAAG,mBACA,OACA,OACA+E,EAAAC,EAAAnF,EAAAG,kBAAA,GACA,MACA,OACA+E,EAAAE,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,IAAA8M,SAaA,OAXArF,EAAAI,oBACAiF,EAAAD,EAAAJ,EAAA9F,EAAA6F,GACAC,KAEAK,EAAAF,EAAA,IAQAF,mBACAC,kBACAG,kBACAC,wBATAtF,EAAAK,6BACA+E,EAAAJ,EAAA9F,EAAA6F,GAEAI,EAAA,IAvCA,CAraAnF,EAAA8E,EAAA9zN,KAAA+zN,cACA5H,EAAA,IAAAtD,EAAAhkM,EAAAnf,EAAAI,IAEA,IAAAyuN,EAAAv0N,KAAAu0N,QACAA,IACAv0N,KAAAu0N,cAGA,IADA,IAAA9I,KACA9pN,EAAA,EAAAC,EAAAkyN,EAAAhyN,OAAmDH,EAAAC,EAAQD,IAAA,CAC3D,IAAA6yN,EAAAD,EAAAT,EAAAnyN,IACA6yN,IACA/I,IAAA5kB,OAAA2tB,IAGA,IAAA7L,EAAA,IAAAlB,EAAA5iM,EAAAnf,EAAAI,GACAyuN,EAAAV,GAhxBA,SAAAzI,EAAAC,EAAAkJ,EAAA5E,EAAAD,EAAA3D,EAAAtD,EAAAj0J,EAAAw3J,EAAAC,EAAAtD,EAAAwD,GACA,GAAAf,GAAAC,EACA,UAAA9D,EAAA,mDAEA,IAAAkN,KACAC,EAAA,EACAhJ,KAAApmN,EAAAsiL,MAAA2sC,EAAAzyN,OAAA6tN,GACA3mC,EAAA2/B,EAAA3/B,QACA2+B,EAAAgB,EAAAhB,aACAgN,SACAC,SAMA,IALAxJ,IACAuJ,EAAAR,EAAA,GACAS,KACAlJ,EAAAx8M,KAAAwH,IAAAg1M,EAAA,IAEA+I,EAAA3yN,OAAA6tN,GAAA,CAEA+E,GADAtJ,EAAAW,EAAAkI,iBAAA9/M,OAAAg4M,GAAAzE,EAAAC,EAAA,OAAA3+B,GAKA,IAHA,IAAA6rC,EAAA,EACAC,EAAA,EACAC,EAAA3J,EAAAwJ,EAAA9yN,OAAA,IACA,CACA,IAMAmnN,EANA+L,EAAA5J,EAAAW,EAAAmI,gBAAA//M,OAAAg4M,GAAAzE,EAAAC,EAAA,OAAA3+B,GACA,UAAAgsC,EACA,MAKA,GAFAF,GADAD,GAAAG,EAGA3J,EAAA,CACA,IAAA4J,EAAAvN,EAAAC,EAAA,OAAA3+B,GACA,GAAAisC,EAAA,EACAhM,EAAAkC,EAAAC,EAAAC,EAAAwJ,EAAAH,EAAA,EAAAO,EAAA,EAAAV,EAAA1tB,OAAA4tB,GAAA/I,EAAA,QAAAK,EAAAC,EAAAC,EAAAtD,EAAA,EAAAwD,OACW,CACX,IAAAO,EAAA3E,EAAAJ,EAAA3+B,EAAA0iC,GACAwJ,EAAAxN,EAAAC,EAAA,QAAA3+B,GACAmsC,EAAAzN,EAAAC,EAAA,QAAA3+B,GAEAigC,EAAAoB,EAAAwK,EAAAH,EAAA1I,EADAU,EAAA6H,EAAAzyN,OAAAyyN,EAAA7H,GAAA+H,EAAA/H,EAAA6H,EAAAzyN,QACAozN,EAAAC,KAAAlJ,EAAAtD,GAEA8L,EAAAj3M,KAAAyrM,QACSmC,EACTwJ,EAAAp3M,KAAAq3M,IAEA5L,EAAAV,KAAAsM,EAAAH,EAAAjM,KAAA,KAAAj0J,EAAAm0J,GACA8L,EAAAj3M,KAAAyrM,IAGA,GAAAmC,IAAAC,EAAA,CACA,IAAA+J,EAAArJ,EAAAsI,gBAAAlgN,OAAAg4M,GACAA,EAAAxyC,YACA,IAAA07C,SACA,OAAAD,EACAC,EAAAC,EAAAnJ,EAAA2I,EAAAJ,OACS,CACT,IAAAa,EAAApJ,EAAArmN,IACA0vN,EAAArJ,EAAAxmD,SAAAyvD,EACAjJ,EAAArmN,IAAA0vN,EACAH,EAAAzM,EAAAuD,EAAA2I,EAAAJ,MACAvI,EAAArmN,IAAAyvN,EACApJ,EAAAxmD,SAAA6vD,EAEA,IAAAC,EAAAb,EAAA9yN,OACA,GAAAizN,IAAAU,EAAA,EACAhB,EAAAj3M,KAAA63M,OACS,CACT,IAAA5qD,SACA50J,SACA6/M,EAAA,EACAC,SAEA9I,SACA,IAAApiD,EAAAsqD,EAAgCtqD,EAAAgrD,EAA6BhrD,IAAA,CAI7D,IAFAkrD,EAAAD,EADAd,EAAAnqD,GAEAoiD,KACAh3M,EAAA,EAAuBA,EAAA6+M,EAAmB7+M,IAC1Cg3M,EAAArvM,KAAA63M,EAAAx/M,GAAAvP,SAAAovN,EAAAC,IAEAlB,EAAAj3M,KAAAqvM,GACA6I,EAAAC,KASA,IAJA,IAAAC,KACA7oD,KACA8oD,KACAC,EAAAvB,EAAAzyN,OAAA6tN,EACA5iD,EAAAjrK,OAAAg0N,GAAA,CAEA,IADA,IAAAC,EAAA3K,EAAAuJ,EAAAxgN,OAAAg4M,GAAAzE,EAAAC,EAAA,OAAA3+B,GACA+sC,KACAhpD,EAAAvvJ,KAAAq4M,GAEAA,KAEA,QAAAl0N,EAAA,EAAAC,GAAA2yN,EAAAzyN,OAAwCH,EAAAC,GAAQD,IAChDorK,EAAAprK,IACAi0N,EAAAp4M,KAAA+2M,EAAA5yN,IAGA,QAAA4K,GAAA,EAAmBA,GAAAojN,EAAwBhuN,IAAA4K,KAC3CwgK,EAAAprK,IACAi0N,EAAAp4M,KAAAi3M,EAAAloN,KAGA,OAAAqpN,EA3GA,CAgxBA5G,EAAA5D,QAAA4D,EAAA3D,WAAAI,EAAAuD,EAAAW,mBAAAX,EAAAU,wBAAA3D,EAAAiD,EAAA7F,SAAA6F,EAAAx6J,GAAAw6J,EAAAQ,mBAAAR,EAAA/C,aAAAtD,EAAAwD,IAEA6J,sBAAA,SAAAtC,EAAAI,EAAAjvM,EAAAnf,EAAAI,GAMA,IALA,IAAAwtN,EAAAI,EAAAr9M,KACA01M,SACAI,SACAoI,EAAAv0N,KAAAu0N,QACA9I,KACA9pN,EAAA,EAAAC,EAAAkyN,EAAAhyN,OAAmDH,EAAAC,EAAQD,IAAA,CAC3D,IAAA6yN,EAAAD,EAAAT,EAAAnyN,IACA6yN,IACA/I,IAAA5kB,OAAA2tB,IAGA,IAAA9I,KAAApmN,EAAAsiL,MAAA6jC,EAAA3pN,QACA4xN,EAAAtI,UACAe,EAAA,IAAAtD,EAAAhkM,EAAAnf,EAAAI,GACAimN,EAmSA,SAAA6D,EAAA1B,EAAA6F,EAAAkC,EAAA/a,GACA,IAAA3xM,KACA5H,SACAsM,SACA,IAAAtM,EAAA,EAAeA,GAAA,GAASA,IACxBsM,EAAAitM,EAAAzsM,SAAA,GACAlF,EAAAiU,KAAA,IAAAy0M,GAAAtwN,EAAAsM,EAAA,OAEA,IAAAioN,EAAA,IAAArD,EAAAtpN,MAEA,IADAA,EAAAzH,OAAA,EACAH,EAAA,EAAeA,EAAAs0N,GAEf,IADAhoN,EAAAioN,EAAA/hN,OAAA+mM,KACA,IACA,IAAAib,SACAC,SACA7pN,SACA,OAAA0B,GACA,QACA,OAAAtM,EACA,UAAA4lN,EAAA,wCAEA6O,EAAAlb,EAAAzsM,SAAA,KACA0nN,EAAA5sN,EAAA5H,EAAA,GAAA0wN,aACA,MACA,QACA+D,EAAAlb,EAAAzsM,SAAA,KACA0nN,EAAA,EACA,MACA,QACAC,EAAAlb,EAAAzsM,SAAA,MACA0nN,EAAA,EACA,MACA,QACA,UAAA5O,EAAA,0CAEA,IAAAh7M,EAAA,EAAmBA,EAAA6pN,EAAqB7pN,IACxChD,EAAAiU,KAAA,IAAAy0M,GAAAtwN,EAAAw0N,EAAA,OACAx0N,SAGA4H,EAAAiU,KAAA,IAAAy0M,GAAAtwN,EAAAsM,EAAA,OACAtM,IAGAu5M,EAAAvhC,YACA,IAAAgzC,EAAA,IAAAkG,EAAAtpN,MACAyqN,EAAA,EACAxH,SACAe,SACAlB,SACA,OAAAuD,EAAAG,WACA,OACA,OACAvD,EAAA2H,EAAAvE,EAAAG,UAAA,GACA,MACA,OACAvD,EAAA4H,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,OAAAqI,EAAAI,WACA,OACA,OACA,OACAzC,EAAA4G,EAAAvE,EAAAI,UAAA,GACA,MACA,OACAzC,EAAA6G,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,OAAAqI,EAAAK,WACA,OACA,OACA,OACA5D,EAAA8H,EAAAvE,EAAAK,UAAA,IACA,MACA,OACA5D,EAAA+H,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,GAAAqI,EAAAvE,WACA,UAAA9D,EAAA,4CAEA,OACAoF,gBACAH,cACAe,cACAlB,eA/FA,CAnSAqH,EAAAI,EAAA9zN,KAAA+zN,aAAAtI,EAAA3pN,OAAAqqN,IAEA,IAAAxD,EAAA,IAAAlB,EAAA5iM,EAAAnf,EAAAI,GACAmjN,EAAAkC,EAAAuI,EAAAtI,QAAAsI,EAAArI,WAAAiI,EAAA/iN,MAAA+iN,EAAA9iN,OAAAkjN,EAAApI,kBAAAoI,EAAAnI,wBAAAmI,EAAAlI,UAAAC,EAAAC,EAAAgI,EAAA/H,WAAA+H,EAAA9H,SAAA8H,EAAA7H,gBAAA6H,EAAA5H,oBAAAC,EAAA2H,EAAAlE,mBAAAkE,EAAAzH,aAAAtD,EAAA+K,EAAAxH,aAAAC,GACAnsN,KAAAqzN,WAAAC,EAAArK,IAEAoN,8BAAA,WACAr2N,KAAAg2N,sBAAApd,MAAA54M,KAAA4T,YAEA0iN,oBAAA,SAAAtH,EAAA6E,EAAAhvM,EAAAnf,EAAAI,GACA,IAAAywN,EAAAv2N,KAAAu2N,SACAA,IACAv2N,KAAAu2N,eAEA,IAAA5N,EAAA,IAAAlB,EAAA5iM,EAAAnf,EAAAI,GACAywN,EAAA1C,GAxlBA,SAAArL,EAAAiI,EAAAC,EAAAC,EAAAxH,EAAAR,GACA,IAAAn0J,KACAg0J,IACAh0J,EAAAh3C,MACA/C,GAAAg2M,EACA56M,EAAA,IAEA,IAAAszM,IACA30J,EAAAh3C,MACA/C,GAAA,EACA5E,GAAA,IAEA2+C,EAAAh3C,MACA/C,EAAA,EACA5E,GAAA,IAEA2+C,EAAAh3C,MACA/C,GAAA,EACA5E,GAAA,MAYA,IARA,IACAw/M,EAAA9M,EAAAC,GADAmI,EAAA,GAAAF,EACAC,EAAAvH,KAAA,KAAA30J,EAAAm0J,GACA4N,KACA50N,EAAA,EACA60N,SACAd,SACAC,SACA9/M,SACAlU,GAAAgvN,GAAA,CAIA,IAHA6F,KAEAb,GADAD,EAAAjF,EAAA9uN,GACA8uN,EACA56M,EAAA,EAAiBA,EAAA66M,EAAmB76M,IACpC2gN,EAAAh5M,KAAA63M,EAAAx/M,GAAAvP,SAAAovN,EAAAC,IAEAY,EAAA/4M,KAAAg5M,GACA70N,IAEA,OAAA40N,EAxCA,CAwlBAvH,EAAAxG,IAAAwG,EAAAyB,aAAAzB,EAAA0B,cAAA1B,EAAA2B,gBAAA3B,EAAA7F,SAAAR,IAEA8N,0BAAA,SAAA/C,EAAAI,EAAAjvM,EAAAnf,EAAAI,GACA,IAAAywN,EAAAv2N,KAAAu2N,SAAAzC,EAAA,IACAR,EAAAI,EAAAr9M,KACAsyM,EAAA,IAAAlB,EAAA5iM,EAAAnf,EAAAI,GACAmjN,EApjBA,SAAAT,EAAA+N,EAAApN,EAAAuN,EAAAC,EAAArL,EAAAwF,EAAAhF,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzI,GAEA,GAAAmI,EACA,UAAAvJ,EAAA,yBAEA,OAAAuE,EACA,UAAAvE,EAAA,YAAAuE,EAAA,wCAEA,IAAA8K,KACAj1N,SACA4K,SACAiuK,SACA,IAAA74K,EAAA,EAAeA,EAAAg1N,EAAkBh1N,IAAA,CAEjC,GADA64K,EAAA,IAAA50K,WAAA8wN,GACApL,EACA,IAAA/+M,EAAA,EAAmBA,EAAAmqN,EAAiBnqN,IACpCiuK,EAAAjuK,GAAA++M,EAGAsL,EAAAp5M,KAAAg9J,GAEA,IAAAq8C,EAAAN,EAAAz0N,OACAg1N,EAAAP,EAAA,GACA9F,EAAAqG,EAAA,GAAAh1N,OACA4uN,EAAAoG,EAAAh1N,OACAi1N,KAAAzxN,EAAAsiL,MAAAivC,GACAriK,KACAg0J,IACAh0J,EAAAh3C,MACA/C,EAAA0uM,GAAA,MACAtzM,GAAA,IAEA,IAAAszM,IACA30J,EAAAh3C,MACA/C,GAAA,EACA5E,GAAA,IAEA2+C,EAAAh3C,MACA/C,EAAA,EACA5E,GAAA,IAEA2+C,EAAAh3C,MACA/C,GAAA,EACA5E,GAAA,MAIA,IAAAmhN,KACAC,SACAhO,SAIA,IAHAT,IACAyO,EAAA,IAAApO,EAAAF,EAAA9jM,KAAA8jM,EAAAjjN,MAAAijN,EAAA7iN,MAEAnE,EAAAo1N,EAAA,EAA8Bp1N,GAAA,EAAQA,IAEtCsnN,EADAT,EACAI,EAAAqO,EAAAlG,EAAAC,MAEAzI,KAAAwI,EAAAC,EAAA7H,KAxDA,KAwDA30J,EAAAm0J,GAEAqO,EAAAr1N,GAAAsnN,EAEA,IAAAiO,SACAC,SACAlnC,SACAmnC,SACAZ,SACA/7M,SACA5E,SACAwhN,SACAC,SACA,IAAAJ,EAAA,EAAgBA,EAAAlG,EAAiBkG,IACjC,IAAAC,EAAA,EAAkBA,EAAApG,EAAgBoG,IAAA,CAGlC,IAFAlnC,EAAA,EACAmnC,EAAA,EACA7qN,EAAAwqN,EAAA,EAAkCxqN,GAAA,EAAQA,IAE1C6qN,IADAnnC,EAAA+mC,EAAAzqN,GAAA2qN,GAAAC,GAAAlnC,IACA1jL,EAKA,GAHAiqN,EAAAD,EAAAa,GAEAvhN,EAAAq7M,EAAAgG,EAAA/F,EAAAgG,EAAA/F,GAAA,GADA32M,EAAAw2M,EAAAiG,EAAA9F,EAAA+F,EAAAhG,GAAA,IAEA,GAAA12M,EAAAg2M,GAAAiG,GAAA7gN,GAAA,GAAAA,EAAA66M,GAAAiG,EACA,IAAAh1N,EAAA,EAAqBA,EAAA+uN,EAAmB/uN,IAGxC,IAFA21N,EAAAV,EAAA/gN,EAAAlU,GACA01N,EAAAb,EAAA70N,GACA4K,EAAA,EAAuBA,EAAAkkN,EAAkBlkN,IACzC+qN,EAAA78M,EAAAlO,IAAA8qN,EAAA9qN,OAGS,CACT,IAAAgrN,SACAC,SACA,IAAA71N,EAAA,EAAqBA,EAAA+uN,EAAmB/uN,IAExC,MADA61N,EAAA3hN,EAAAlU,GACA,GAAA61N,GAAAb,GAKA,IAFAW,EAAAV,EAAAY,GACAH,EAAAb,EAAA70N,GACA4K,EAAA,EAAuBA,EAAAkkN,EAAkBlkN,KACzCgrN,EAAA98M,EAAAlO,IACA,GAAAgrN,EAAAb,IACAY,EAAAC,IAAAF,EAAA9qN,KAOA,OAAAqqN,EA7GA,CAojBAlD,EAAAlL,IAAA+N,EAAA7C,EAAAvK,SAAAmK,EAAA/iN,MAAA+iN,EAAA9iN,OAAAkjN,EAAApI,kBAAAoI,EAAA5C,WAAA4C,EAAA5H,oBAAA4H,EAAA3C,UAAA2C,EAAA1C,WAAA0C,EAAAzC,YAAAyC,EAAAxC,YAAAwC,EAAAvC,YAAAuC,EAAAtC,YAAAzI,GACA3oN,KAAAqzN,WAAAC,EAAArK,IAEAwO,kCAAA,WACAz3N,KAAAy2N,0BAAA7d,MAAA54M,KAAA4T,YAEA8jN,SAAA,SAAA7D,EAAAhvM,EAAAnf,EAAAI,GACA,IAAAiuN,EAAA/zN,KAAA+zN,aACAA,IACA/zN,KAAA+zN,mBAEAA,EAAAF,GAgHA,SAAAhvM,EAAAnf,EAAAI,GACA,IAAAinK,EAAAloJ,EAAAnf,GACAiyN,EAAA,cAAAryN,EAAA8lL,YAAAvmK,EAAAnf,EAAA,GACAkyN,EAAA,cAAAtyN,EAAA8lL,YAAAvmK,EAAAnf,EAAA,GACAw1M,EAAA,IAAA2N,EAAAhkM,EAAAnf,EAAA,EAAAI,GACA+xN,EAAA,GAAA9qD,GAAA,KACA+qD,EAAA,GAAA/qD,GAAA,KACA+lD,KACAT,SACAC,SACAyF,EAAAJ,EACA,GACAtF,EAAAnX,EAAAzsM,SAAAopN,GACAvF,EAAApX,EAAAzsM,SAAAqpN,GACAhF,EAAAt1M,KAAA,IAAAy0M,GAAA8F,EAAA1F,EAAAC,EAAA,KACAyF,GAAA,GAAAzF,QACKyF,EAAAH,GASL,OARAvF,EAAAnX,EAAAzsM,SAAAopN,GACA/E,EAAAt1M,KAAA,IAAAy0M,GAAA0F,EAAA,EAAAtF,EAAA,gBACAA,EAAAnX,EAAAzsM,SAAAopN,GACA/E,EAAAt1M,KAAA,IAAAy0M,GAAA2F,EAAAvF,EAAA,QACA,EAAAtlD,IACAslD,EAAAnX,EAAAzsM,SAAAopN,GACA/E,EAAAt1M,KAAA,IAAAy0M,GAAAI,EAAA,MAEA,IAAAQ,EAAAC,MAzBA,CAhHAjuM,EAAAnf,EAAAI,KAgCA2sN,EAAA7yN,WACAszN,UAAA,SAAAR,EAAA1qN,GACA,IAAAioL,EAAAyiC,EAAAH,YAAAvqN,EAAA,EACA,GAAAA,GAAA,EACAhI,KAAA2yN,SAAA1iC,GAAA,IAAAwiC,EAAAC,OACO,CACP,IAAAxhD,EAAAlxK,KAAA2yN,SAAA1iC,GACA/e,IACAlxK,KAAA2yN,SAAA1iC,GAAA/e,EAAA,IAAAuhD,EAAA,OAEAvhD,EAAAgiD,UAAAR,EAAA1qN,EAAA,KAGAgwN,WAAA,SAAA9c,GACA,GAAAl7M,KAAA4yN,OAAA,CACA,GAAA5yN,KAAAmyN,MACA,YAEA,IAAA8F,EAAA/c,EAAAzsM,SAAAzO,KAAAsyN,aACA,OAAAtyN,KAAAoyN,UAAApyN,KAAAwyN,cAAAyF,KAEA,IAAA/mD,EAAAlxK,KAAA2yN,SAAAzX,EAAA1+B,WACA,IAAAtL,EACA,UAAAq2C,EAAA,wBAEA,OAAAr2C,EAAA8mD,WAAA9c,KAkBA2X,EAAAjzN,WACAuU,OAAA,SAAA+mM,GACA,OAAAl7M,KAAAizN,SAAA+E,WAAA9c,IAEA8X,kBAAA,SAAAF,GACA,IAAAoF,EAAApF,EAAAhxN,OACAq2N,EAAA,EACAx2N,SACA,IAAAA,EAAA,EAAiBA,EAAAu2N,EAAiBv2N,IAClCw2N,EAAAjpN,KAAAwH,IAAAyhN,EAAArF,EAAAnxN,GAAA0wN,cAEA,IAAA+F,EAAA,IAAA/9C,YAAA89C,EAAA,GACA,IAAAx2N,EAAA,EAAiBA,EAAAu2N,EAAiBv2N,IAClCy2N,EAAAtF,EAAAnxN,GAAA0wN,gBAEA,IAAAgG,EAAA,EACAC,EAAA,EACAC,SACAC,SACA9F,SAEA,IADA0F,EAAA,KACAC,GAAAF,GAAA,CAIA,IAFAI,EADAD,IAAAF,EAAAC,EAAA,MAEAG,EAAA,EACAA,EAAAN,IACAxF,EAAAI,EAAA0F,IACAnG,eAAAgG,IACA3F,EAAAH,WAAAgG,EACAA,KAEAC,IAEAH,OA+BA,IAAAI,KACA,SAAAtE,EAAAxd,GACA,IAAArtM,EAAAmvN,EAAA9hB,GACA,GAAArtM,EACA,OAAAA,EAEA,IAAAwpN,SACA,OAAAnc,GACA,OACAmc,IAAA,iDACA,MACA,OACAA,IAAA,yEACA,MACA,OACAA,KAAA,gHACA,MACA,OACAA,IAAA,kEACA,MACA,OACAA,KAAA,wGACA,MACA,OACAA,KAAA,qMACA,MACA,OACAA,KAAA,4MACA,MACA,OACAA,KAAA,0QACA,MACA,OACAA,KAAA,yRACA,MACA,QACAA,KAAA,+QACA,MACA,QACAA,IAAA,4JACA,MACA,QACAA,IAAA,2JACA,MACA,QACAA,IAAA,uJACA,MACA,QACAA,KAAA,mDACA,MACA,QACAA,KAAA,kKACA,MACA,QACA,UAAAvL,EAAA,oBAAA5Q,EAAA,mBAEA,IAAA70M,EAAAgxN,EAAAhxN,OACAH,SACA,IAAAA,EAAA,EAAeA,EAAAG,EAAYH,IAC3BmxN,EAAAnxN,GAAA,IAAAswN,EAAAa,EAAAnxN,IAIA,OAFA2H,EAAA,IAAAupN,EAAAC,MACA2F,EAAA9hB,GAAArtM,EACAA,EAEA,SAAAu/M,EAAAhkM,EAAAnf,EAAAI,GACA9F,KAAA6kB,OACA7kB,KAAA0F,QACA1F,KAAA8F,MACA9F,KAAA2lK,SAAAjgK,EACA1F,KAAAgI,OAAA,EACAhI,KAAA04N,YAAA,EAiCA,SAAAtE,EAAA1wM,EAAAwqM,EAAA6F,GACA,IAAAvlD,EAAA,EACA7sK,SACAC,EAAAssN,EAAApsN,OACAwH,SACA,IAAA3H,EAAA,EAAeA,EAAAC,EAAQD,IAEvB,GADA2H,EAAAyqN,EAAA7F,EAAAvsN,IACA,CACA,GAAA+hB,IAAA8qJ,EACA,OAAAllK,EAEAklK,IAGA,UAAA+4C,EAAA,mCAoJA,SAAA+N,EAAApa,EAAA3qM,EAAAC,GACA,IAAAy4M,KACAxuM,SACA5E,SACA2kK,SACA,IAAA3kK,EAAA,EAAeA,EAAArF,EAAYqF,IAAA,CAG3B,IAFA2kK,EAAA,IAAA50K,WAAA2K,GACA04M,EAAAzrM,KAAAg9J,GACA//J,EAAA,EAAiBA,EAAAlK,EAAWkK,IAC5B+/J,EAAA//J,GAAAygM,EAAA1+B,UAEA0+B,EAAAvhC,YAEA,OAAAsvC,EAEA,SAAAL,EAAAv7M,EAAAkD,EAAAC,EAAAmoN,GACA,IAAAttN,GACAyzB,GAAA,EACA+6I,QAAAtpK,EACAwpK,KAAAvpK,EACA2pK,YACAF,WAAA0+C,GAEA3vC,EAAA,IAAA+9B,EAAA/tC,gBAAA3rK,EAAAhC,GACA49M,KACAxuM,SACA5E,SACA2kK,SACAk+C,SACA1wN,SACAZ,KACA,IAAAyO,EAAA,EAAeA,EAAArF,EAAYqF,IAI3B,IAHA2kK,EAAA,IAAA50K,WAAA2K,GACA04M,EAAAzrM,KAAAg9J,GACAxyK,GAAA,EACAyS,EAAA,EAAiBA,EAAAlK,EAAWkK,IAC5BzS,EAAA,KAEA,KADA0wN,EAAA1vC,EAAAhO,kBAEA09C,EAAA,EACAtxN,MAEAY,EAAA,GAEAwyK,EAAA//J,GAAAi+M,GAAA1wN,EAAA,EACAA,IAGA,GAAA2wN,IAAAvxN,EAEA,IADA,IACAzF,EAAA,EAAqBA,EADrB,IAEA,IAAAqnL,EAAAhO,eAD0Cr5K,KAM1C,OAAAsnN,EAEA,SAAA9B,KAMA,OAjQA0B,EAAAjpN,WACA48K,QAAA,WACA,GAAAx8K,KAAAgI,MAAA,GACA,GAAAhI,KAAA2lK,UAAA3lK,KAAA8F,IACA,UAAAyhN,EAAA,iCAEAvnN,KAAA04N,YAAA14N,KAAA6kB,KAAA7kB,KAAA2lK,YACA3lK,KAAAgI,MAAA,EAEA,IAAAioL,EAAAjwL,KAAA04N,aAAA14N,KAAAgI,MAAA,EAEA,OADAhI,KAAAgI,QACAioL,GAEAxhL,SAAA,SAAAmqN,GACA,IAAA3gN,EAAA,EACAtW,SACA,IAAAA,EAAAi3N,EAAA,EAA2Bj3N,GAAA,EAAQA,IACnCsW,GAAAjY,KAAAw8K,WAAA76K,EAEA,OAAAsW,GAEA0hK,UAAA,WACA35K,KAAAgI,OAAA,GAEA0iK,KAAA,WACA,OAAA1qK,KAAA2lK,UAAA3lK,KAAA8F,KACA,EAEA9F,KAAA6kB,KAAA7kB,KAAA2lK,cAgOAwhD,EAAAvnN,WACA0nN,YAAA,SAAAniD,GACA,OAtmBA,SAAAA,GAEA,IADA,IAAA0yC,EAAA,IAAAma,EACArwN,EAAA,EAAAC,EAAAujK,EAAArjK,OAAuCH,EAAAC,EAAQD,IAAA,CAC/C,IAAAoG,EAAAo9J,EAAAxjK,GAEAowN,EADArD,KAAoC3mN,EAAA8c,KAAA9c,EAAArC,MAAAqC,EAAAjC,KACpC+xM,GAEA,OAAAA,EAAA9wM,OAPA,CAsmBAo+J,KAGAgiD,EA3tDA,GA6tDA9nN,EAAA8nN,+CCjvDAhoN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA8kB,iBAEA,IAAA5kB,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5I4F,EAAYC,EAAQ,KAEpBszN,EAAA,WACA,SAAAA,EAAA57C,GACAj9K,KAAAk9K,QAAA,eAAAD,EAKA,OAHA47C,EAAAj5N,UAAA,IAAA8c,MACAm8M,EAAAj5N,UAAAG,KAAA,YACA84N,EAAAl5N,YAAAk5N,EACAA,EAPA,GASAC,EAAA,WACA,SAAAA,EAAA57C,EAAA67C,GACA/4N,KAAAk9K,UACAl9K,KAAA+4N,YAKA,OAHAD,EAAAl5N,UAAA,IAAA8c,MACAo8M,EAAAl5N,UAAAG,KAAA,iBACA+4N,EAAAn5N,YAAAm5N,EACAA,EARA,GAUAE,EAAA,WACA,SAAAA,EAAA97C,GACAl9K,KAAAk9K,UAKA,OAHA87C,EAAAp5N,UAAA,IAAA8c,MACAs8M,EAAAp5N,UAAAG,KAAA,iBACAi5N,EAAAr5N,YAAAq5N,EACAA,EAPA,GASA70M,EAAA,WACA,IAAA80M,EAAA,IAAArzN,YAAA,wLACAszN,EAAA,KACAC,EAAA,IACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACA,SAAAt1M,IACAnkB,KAAA2kB,gBAAA,KACA3kB,KAAA4kB,gBAAA,EAEA,SAAA80M,EAAA7uN,EAAA+6L,GAMA,IALA,IAEAjkM,EACA4K,EAHArB,EAAA,EACAzB,KAGA3H,EAAA,GACAA,EAAA,IAAA+I,EAAA/I,EAAA,IACAA,IAEA2H,EAAA+T,MACAm1M,YACAjvM,MAAA,IAEA,IACA/U,EADA9B,EAAApD,EAAA,GAEA,IAAA9H,EAAA,EAAeA,EAAAG,EAAYH,IAAA,CAC3B,IAAA4K,EAAA,EAAiBA,EAAA1B,EAAAlJ,GAAoB4K,IAAA,CAGrC,KAFAM,EAAApD,EAAAinK,OACAiiD,SAAA9lN,EAAA6W,OAAAkiL,EAAA16L,GACA2B,EAAA6W,MAAA,GACA7W,EAAApD,EAAAinK,MAIA,IAFA7jK,EAAA6W,QACAja,EAAA+T,KAAA3Q,GACApD,EAAA3H,QAAAH,GACA8H,EAAA+T,KAAA7O,GACAgkN,YACAjvM,MAAA,IAEA7W,EAAA8lN,SAAA9lN,EAAA6W,OAAA/U,EAAAgkN,SACA9lN,EAAA8B,EAEAzD,IAEAvJ,EAAA,EAAAG,IACA2H,EAAA+T,KAAA7O,GACAgkN,YACAjvM,MAAA,IAEA7W,EAAA8lN,SAAA9lN,EAAA6W,OAAA/U,EAAAgkN,SACA9lN,EAAA8B,GAGA,OAAAlF,EAAA,GAAAkpN,SAEA,SAAAgH,EAAAl8C,EAAAjD,EAAAo/C,GACA,YAAAn8C,EAAAo8C,cAAA,GAAAr/C,EAAAo/C,GAEA,SAAAE,EAAAj1M,EAAA6C,EAAAqyM,EAAAz7C,EAAA07C,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAzmN,UAAA9R,OAAA,YAAA8R,UAAA,IAAAA,UAAA,GAEA0mN,EAAAP,EAAAO,YACAC,EAAAR,EAAAQ,YACAC,EAAA9yM,EACA+yM,EAAA,EACAC,EAAA,EACA,SAAAl+C,IACA,GAAAk+C,EAAA,EAEA,OAAAD,KADAC,EACA,EAGA,UADAD,EAAA51M,EAAA6C,MACA,CACA,IAAAizM,EAAA91M,EAAA6C,KACA,GAAAizM,EAAA,CACA,SAAAA,GAAAN,EAAA,CACA3yM,GAAA,EACA,IAAAqxM,EAAAl0M,EAAA6C,MAAA,EAAA7C,EAAA6C,KACA,GAAAqxM,EAAA,GAAAA,IAAAgB,EAAAhB,UACA,UAAAD,EAAA,oDAAAC,QAEW,SAAA4B,EACX,UAAA3B,EAAA,qDAEA,UAAAH,EAAA,sBAAA4B,GAAA,EAAAE,GAAAx3N,SAAA,MAIA,OADAu3N,EAAA,EACAD,IAAA,EAEA,SAAAG,EAAAC,GAEA,IADA,IAAA3pD,EAAA2pD,IACA,CAEA,oBADA3pD,IAAAsL,MAEA,OAAAtL,EAEA,wBAAAA,EAAA,YAAA3xK,EAAA2xK,IACA,UAAA2nD,EAAA,6BAIA,SAAAiC,EAAAh5N,GAEA,IADA,IAAA6E,EAAA,EACA7E,EAAA,GACA6E,KAAA,EAAA61K,IACA16K,IAEA,OAAA6E,EAEA,SAAAo0N,EAAAj5N,GACA,OAAAA,EACA,WAAA06K,IAAA,KAEA,IAAA71K,EAAAm0N,EAAAh5N,GACA,OAAA6E,GAAA,GAAA7E,EAAA,EACA6E,EAEAA,IAAA,GAAA7E,GAAA,EAgCA,IA2BAk5N,EA3BAC,EAAA,EA0BAC,EAAA,EAkEA,SAAAC,EAAA19C,EAAAtpK,EAAAinN,EAAA5gD,EAAAo/C,GACA,IACAyB,EAAAD,EAAAd,EAIAnmN,EAAAspK,EADAk8C,EAAAl8C,GAJA29C,EAAAd,EAAA,GAEA78C,EAAAx5K,EAAAu2K,EACA6gD,EAAA59C,EAAAt2J,EAAAyyM,IAIA,SAAA0B,EAAA79C,EAAAtpK,EAAAinN,GAIAjnN,EAAAspK,EADAk8C,EAAAl8C,EAFA29C,EAAA39C,EAAAo8C,cAAA,EACAuB,EAAA39C,EAAAo8C,gBAIA,IACAp8C,EAAA97K,EAAA4K,EAAArB,EAAAvE,EACA40N,EAFAC,EAAAl9C,EAAAx8K,OAKAy5N,EAFAhB,EACA,IAAAN,EACA,IAAAE,EAvHA,SAAA18C,EAAA/1J,GACA,IAAAzd,EAAA2wN,EAAAn9C,EAAAg+C,gBACArnB,EAAA,IAAAnqM,EAAA,EAAA8wN,EAAA9wN,IAAAmwN,EACA38C,EAAAi+C,UAAAh0M,GAAA+1J,EAAAk+C,MAAAvnB,GAEA,SAAA32B,EAAA/1J,GACA+1J,EAAAi+C,UAAAh0M,IAAA80J,KAAA49C,GAmHA,IAAAD,EAhHA,SAAA18C,EAAA/1J,GACA,GAAAuzM,EAAA,EACAA,SAKA,IAFA,IAAA/vN,EAAA+uN,EACAn+M,EAAAo+M,EACAhvN,GAAA4Q,GAAA,CACA,IAAA8/M,EAAAhB,EAAAn9C,EAAAo+C,gBACAvkG,EAAA,GAAAskG,EACApmN,EAAAomN,GAAA,EACA,OAAAtkG,EAAA,CASA,IAAAg1B,EAAA2sE,EADA/tN,GAAAsK,GAEAioK,EAAAi+C,UAAAh0M,EAAA4kI,GAAAyuE,EAAAzjG,IAAA,GAAA8iG,GACAlvN,QAXA,CACA,GAAAsK,EAAA,IACAylN,EAAAH,EAAAtlN,IAAA,GAAAA,GAAA,EACA,MAEAtK,GAAA,MAWA,SAAAuyK,EAAA/1J,GAMA,IALA,IAGA4vG,EACAskG,EAJA1wN,EAAA+uN,EACAn+M,EAAAo+M,EACA1kN,EAAA,EAGAtK,GAAA4Q,GAAA,CACA,IAAAggN,EAAAp0M,EAAAuxM,EAAA/tN,GACAwW,EAAA+7J,EAAAi+C,UAAAI,GAAA,OACA,OAAAZ,GACA,OAIA,GADA1lN,GAFAomN,EAAAhB,EAAAn9C,EAAAo+C,kBAEA,EACA,IAFAvkG,EAAA,GAAAskG,GAGApmN,EAAA,IACAylN,EAAAH,EAAAtlN,IAAA,GAAAA,GACA0lN,EAAA,IAEA1lN,EAAA,GACA0lN,EAAA,OAEa,CACb,OAAA5jG,EACA,UAAAuhG,EAAA,wBAEAmC,EAAAD,EAAAzjG,GACA4jG,EAAA1lN,EAAA,IAEA,SACA,OACA,OACAioK,EAAAi+C,UAAAI,GACAr+C,EAAAi+C,UAAAI,IAAAp6M,GAAA86J,KAAA49C,GAGA,KADA5kN,IAEA0lN,EAAA,IAAAA,EAAA,KAGA,MACA,OACAz9C,EAAAi+C,UAAAI,GACAr+C,EAAAi+C,UAAAI,IAAAp6M,GAAA86J,KAAA49C,IAEA38C,EAAAi+C,UAAAI,GAAAd,GAAAZ,EACAc,EAAA,GAEA,MACA,OACAz9C,EAAAi+C,UAAAI,KACAr+C,EAAAi+C,UAAAI,IAAAp6M,GAAA86J,KAAA49C,IAIAlvN,IAEA,IAAAgwN,GAEA,KADAD,IAEAC,EAAA,IAtHA,SAAAz9C,EAAA/1J,GACA,IAAAzd,EAAA2wN,EAAAn9C,EAAAg+C,gBACArnB,EAAA,IAAAnqM,EAAA,EAAA8wN,EAAA9wN,GACAwzK,EAAAi+C,UAAAh0M,GAAA+1J,EAAAk+C,MAAAvnB,EAEA,IADA,IAAAlpM,EAAA,EACAA,EAAA,KACA,IAAA0wN,EAAAhB,EAAAn9C,EAAAo+C,gBACAvkG,EAAA,GAAAskG,EACApmN,EAAAomN,GAAA,EACA,OAAAtkG,EAAA,CAQA,IAAAg1B,EAAA2sE,EADA/tN,GAAAsK,GAEAioK,EAAAi+C,UAAAh0M,EAAA4kI,GAAAyuE,EAAAzjG,GACApsH,QAVA,CACA,GAAAsK,EAAA,GACA,MAEAtK,GAAA,MAuIA,IACA6wN,EACAC,EAMA70M,EAAAljB,EARAm3N,EAAA,EASA,IALAY,EADA,IAAAR,EACAl9C,EAAA,GAAAu7C,cAAAv7C,EAAA,GAAA29C,gBAEA3B,EAAAP,EAAAmC,cAGAd,EAAAY,GAAA,CACA,IAAAG,EAAAnC,EAAA9qN,KAAAC,IAAA6sN,EAAAZ,EAAApB,GAAAgC,EACA,IAAAr6N,EAAA,EAAiBA,EAAA65N,EAAsB75N,IACvC28K,EAAA38K,GAAAg6N,KAAA,EAGA,GADAV,EAAA,EACA,IAAAO,EAEA,IADA/9C,EAAAa,EAAA,GACA33K,EAAA,EAAmBA,EAAAw1N,EAAex1N,IAClC20N,EAAA79C,EAAA89C,EAAAH,GACAA,SAGA,IAAAz0N,EAAA,EAAmBA,EAAAw1N,EAAex1N,IAAA,CAClC,IAAAhF,EAAA,EAAqBA,EAAA65N,EAAsB75N,IAI3C,IAFAwlB,GADAs2J,EAAAa,EAAA38K,IACAwlB,EACAljB,EAAAw5K,EAAAx5K,EACAsI,EAAA,EAAuBA,EAAAtI,EAAOsI,IAC9B,IAAArB,EAAA,EAAyBA,EAAAic,EAAOjc,IAChCiwN,EAAA19C,EAAA89C,EAAAH,EAAA7uN,EAAArB,GAIAkwN,IAGAV,EAAA,GACAqB,EAAAK,EAAAv3M,EAAA6C,KACAq0M,EAAAM,aACA/2N,EAAA2O,MAAA,wDAAA8nN,EAAAM,SACA30M,EAAAq0M,EAAAr0M,QAEA,IAAA40M,EAAAP,KAAAO,OACA,IAAAA,MAAA,MACA,UAAAzD,EAAA,wBAEA,KAAAyD,GAAA,OAAAA,GAAA,OAGA,MAFA50M,GAAA,EAUA,OALAq0M,EAAAK,EAAAv3M,EAAA6C,KACAq0M,EAAAM,aACA/2N,EAAA2O,MAAA,yDAAA8nN,EAAAM,SACA30M,EAAAq0M,EAAAr0M,QAEAA,EAAA8yM,EAEA,SAAA+B,EAAA9+C,EAAA++C,EAAA3vN,GACA,IAEA8jL,EAAArsL,EAAAC,EAAAk4N,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACApzN,EAJAqzN,EAAA7/C,EAAA8/C,kBACA7B,EAAAj+C,EAAAi+C,UAIA,IAAA4B,EACA,UAAAzE,EAAA,wCAEA,QAAAr+C,EAAA,EAAqBA,EAAA,GAAUA,GAAA,EAC/BsiD,EAAApB,EAAAc,EAAAhiD,GACAuiD,EAAArB,EAAAc,EAAAhiD,EAAA,GACAwiD,EAAAtB,EAAAc,EAAAhiD,EAAA,GACAyiD,EAAAvB,EAAAc,EAAAhiD,EAAA,GACA0iD,EAAAxB,EAAAc,EAAAhiD,EAAA,GACA2iD,EAAAzB,EAAAc,EAAAhiD,EAAA,GACA4iD,EAAA1B,EAAAc,EAAAhiD,EAAA,GACA6iD,EAAA3B,EAAAc,EAAAhiD,EAAA,GACAsiD,GAAAQ,EAAA9iD,GACA,IAAAuiD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAYAN,GAAAO,EAAA9iD,EAAA,GACAwiD,GAAAM,EAAA9iD,EAAA,GACAyiD,GAAAK,EAAA9iD,EAAA,GACA0iD,GAAAI,EAAA9iD,EAAA,GACA2iD,GAAAG,EAAA9iD,EAAA,GACA4iD,GAAAE,EAAA9iD,EAAA,GACA6iD,GAAAC,EAAA9iD,EAAA,GAUAl2K,GADAqsL,GARAA,EAAA6oC,EAAAsD,EAAA,SACAx4N,EAAAk1N,EAAA0D,EAAA,QAOA,MACA54N,EACA2F,GARA1F,EAAAy4N,GAQAzD,GAPAkD,EAAAW,GAOA9D,EAAA,OACA/0N,IAAA+0N,EAAAmD,EAAAlD,EAAA,OAGAqD,GADAF,GATAA,EAAAjD,GAAAsD,EAAAM,GAAA,SAGAT,EAAAO,GAAA,GAMA,MACAP,EAEAD,GADAE,GAVAA,EAAApD,GAAAsD,EAAAM,GAAA,SACAV,EAAAM,GAAA,GASA,MACAN,EAEAF,GADA9rC,KALA8rC,EAAAxyN,GAKA,MACAwyN,EAEAl4N,GADAD,IAAAC,EAAA,MACAA,EACA0F,EAAAyyN,EAAArD,EAAAwD,EAAAzD,EAAA,SACAsD,IAAAtD,EAAAyD,EAAAxD,EAAA,SACAwD,EAAA5yN,EACAA,EAAA0yN,EAAAxD,EAAAyD,EAAA1D,EAAA,SACAyD,IAAAzD,EAAA0D,EAAAzD,EAAA,SACAyD,EAAA3yN,EACA4C,EAAA2tK,GAAAmW,EAAAksC,EACAhwN,EAAA2tK,EAAA,GAAAmW,EAAAksC,EACAhwN,EAAA2tK,EAAA,GAAAl2K,EAAAs4N,EACA/vN,EAAA2tK,EAAA,GAAAl2K,EAAAs4N,EACA/vN,EAAA2tK,EAAA,GAAAj2K,EAAAo4N,EACA9vN,EAAA2tK,EAAA,GAAAj2K,EAAAo4N,EACA9vN,EAAA2tK,EAAA,GAAAiiD,EAAAC,EACA7vN,EAAA2tK,EAAA,GAAAiiD,EAAAC,IApDAzyN,EAAAuvN,EAAAsD,EAAA,QACAjwN,EAAA2tK,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,EACA4C,EAAA2tK,EAAA,GAAAvwK,GA8CA,QAAA2vN,EAAA,EAAqBA,EAAA,IAASA,EAC9BkD,EAAAjwN,EAAA+sN,GAQA,KAPAmD,EAAAlwN,EAAA+sN,EAAA,KACAoD,EAAAnwN,EAAA+sN,EAAA,MACAqD,EAAApwN,EAAA+sN,EAAA,MACAsD,EAAArwN,EAAA+sN,EAAA,MACAuD,EAAAtwN,EAAA+sN,EAAA,MACAwD,EAAAvwN,EAAA+sN,EAAA,MACAyD,EAAAxwN,EAAA+sN,EAAA,OAuBAt1N,GADAqsL,EAAA,OARAA,EAAA6oC,EAAAsD,EAAA,WACAx4N,EAAAk1N,EAAA0D,EAAA,UAOA,OACA54N,EACA2F,GARA1F,EAAAy4N,GAQAzD,GAPAkD,EAAAW,GAOA9D,EAAA,SACA/0N,IAAA+0N,EAAAmD,EAAAlD,EAAA,SACAkD,EAAAxyN,EAEA2yN,GADAF,GATAA,EAAAjD,GAAAsD,EAAAM,GAAA,WAGAT,EAAAO,GAMA,MACAP,EAEAD,GADAE,GAVAA,EAAApD,GAAAsD,EAAAM,GAAA,WACAV,EAAAM,GASA,MACAN,EAKA1yN,EAAAyyN,EAAArD,EAAAwD,EAAAzD,EAAA,SACAsD,IAAAtD,EAAAyD,EAAAxD,EAAA,SACAwD,EAAA5yN,EACAA,EAAA0yN,EAAAxD,EAAAyD,EAAA1D,EAAA,SACAyD,IAAAzD,EAAA0D,EAAAzD,EAAA,SAGAkE,GAXA1sC,IAAA8rC,EAAA,MAWAI,EACAE,GAVAz4N,IAAAC,EAAA,OAOAq4N,EAAA3yN,GAIAmzN,EAAA94N,EAAAs4N,EACAI,GAXAz4N,EAAAD,EAAAC,GAWAo4N,EACAQ,EAAA54N,EAAAo4N,EACAM,GAfAR,EAAA9rC,EAAA8rC,GAeAC,EACAQ,EAAAT,EAAAC,EACAI,GARAA,EAAAnsC,EAAAksC,GAQA,KAAAC,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACA3B,EAAAc,EAAA5C,GAAAkD,EACApB,EAAAc,EAAA5C,EAAA,GAAAmD,EACArB,EAAAc,EAAA5C,EAAA,IAAAoD,EACAtB,EAAAc,EAAA5C,EAAA,IAAAqD,EACAvB,EAAAc,EAAA5C,EAAA,IAAAsD,EACAxB,EAAAc,EAAA5C,EAAA,IAAAuD,EACAzB,EAAAc,EAAA5C,EAAA,IAAAwD,EACA1B,EAAAc,EAAA5C,EAAA,IAAAyD,IA7DApzN,GADAA,EAAAuvN,EAAAsD,EAAA,WACA,OAAA7yN,GAAA,SAAAA,EAAA,QACAyxN,EAAAc,EAAA5C,GAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,GAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,IAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,IAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,IAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,IAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,IAAA3vN,EACAyxN,EAAAc,EAAA5C,EAAA,IAAA3vN,GAwDA,SAAAuzN,EAAAzD,EAAAt8C,GAIA,IAHA,IAAAo8C,EAAAp8C,EAAAo8C,cACAoC,EAAAx+C,EAAAw+C,gBACAwB,EAAA,IAAAC,WAAA,IACAC,EAAA,EAA0BA,EAAA1B,EAA4B0B,IACtD,QAAAC,EAAA,EAA4BA,EAAA/D,EAA0B+D,IAEtDrB,EAAA9+C,EADAk8C,EAAAl8C,EAAAkgD,EAAAC,GACAH,GAGA,OAAAhgD,EAAAi+C,UAEA,SAAAU,EAAAv3M,EAAAg5M,GACA,IAAA//M,EAAAlK,UAAA9R,OAAA,YAAA8R,UAAA,GAAAA,UAAA,GAAAiqN,EAEA,SAAAC,EAAAj4N,GACA,OAAAgf,EAAAhf,IAAA,EAAAgf,EAAAhf,EAAA,GAEA,IAAAk4N,EAAAl5M,EAAA/iB,OAAA,EACAk8N,EAAAlgN,EAAA+/M,EAAA//M,EAAA+/M,EACA,GAAAA,GAAAE,EACA,YAEA,IAAAE,EAAAH,EAAAD,GACA,GAAAI,GAAA,OAAAA,GAAA,MACA,OACA5B,QAAA,KACAC,OAAA2B,EACAv2M,OAAAm2M,GAIA,IADA,IAAAK,EAAAJ,EAAAE,KACAE,GAAA,OAAAA,GAAA,SACA,KAAAF,GAAAD,EACA,YAEAG,EAAAJ,EAAAE,GAEA,OACA3B,QAAA4B,EAAA96N,SAAA,IACAm5N,OAAA4B,EACAx2M,OAAAs2M,GA2ZA,OAxZA75M,EAAAvkB,WACAqS,MAAA,SAAA4S,GACA,IACAs5M,GADAvqN,UAAA9R,OAAA,YAAA8R,UAAA,GAAAA,UAAA,OACAwqN,aACAA,WAAAD,EAAA,KAAAA,EAEA,SAAAlzC,IACA,IAAA3rL,EAAAulB,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,GAEA,OADAA,GAAA,EACApoB,EAEA,SAAA++N,IACA,IAAAv8N,EAAAmpL,IACAqzC,EAAA52M,EAAA5lB,EAAA,EACAi6N,EAAAK,EAAAv3M,EAAAy5M,EAAA52M,GACAq0M,KAAAM,aACA/2N,EAAA2O,MAAA,wDAAA8nN,EAAAM,SACAiC,EAAAvC,EAAAr0M,QAEA,IAAAnK,EAAAsH,EAAAve,SAAAohB,EAAA42M,GAEA,OADA52M,GAAAnK,EAAAzb,OACAyb,EAEA,SAAAghN,EAAAxE,GAGA,IAFA,IAAAO,EAAAprN,KAAA61J,KAAAg1D,EAAAyE,eAAA,EAAAzE,EAAA0E,MACAvC,EAAAhtN,KAAA61J,KAAAg1D,EAAAhB,UAAA,EAAAgB,EAAA2E,MACA/8N,EAAA,EAAuBA,EAAAo4N,EAAAz7C,WAAAx8K,OAA6BH,IAAA,CACpD87K,EAAAs8C,EAAAz7C,WAAA38K,GACA,IAAAk4N,EAAA3qN,KAAA61J,KAAA71J,KAAA61J,KAAAg1D,EAAAyE,eAAA,GAAA/gD,EAAAt2J,EAAA4yM,EAAA0E,MACAxC,EAAA/sN,KAAA61J,KAAA71J,KAAA61J,KAAAg1D,EAAAhB,UAAA,GAAAt7C,EAAAx5K,EAAA81N,EAAA2E,MACAC,EAAArE,EAAA78C,EAAAt2J,EAEAy3M,EADA1C,EAAAz+C,EAAAx5K,EACA,IAAA06N,EAAA,GACAlhD,EAAAi+C,UAAA,IAAAgC,WAAAkB,GACAnhD,EAAAo8C,gBACAp8C,EAAAw+C,kBAEAlC,EAAAO,cACAP,EAAAmC,gBAEA,IAGAnC,EAAAC,EAHAtyM,EAAA,EACAm3M,EAAA,KACAC,EAAA,KAEAC,EAAA,EACAC,KACAC,KACAC,KACAnD,EAAA9wC,IACA,WAAA8wC,EACA,UAAAlD,EAAA,iBAEAkD,EAAA9wC,IACAk0C,EAAA,aAAApD,GAAA,CACA,IAAAp6N,EAAA4K,EAAAq1F,EACA,OAAAm6H,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,IAAAqD,EAAAf,IACA,QAAAtC,GACA,KAAAqD,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,KACAP,GACAjZ,SACAxkB,MAAAg+B,EAAA,GACA/9B,MAAA+9B,EAAA,IAEAC,aAAAD,EAAA,GACAE,SAAAF,EAAA,MAAAA,EAAA,GACAG,SAAAH,EAAA,OAAAA,EAAA,IACAI,WAAAJ,EAAA,IACAK,YAAAL,EAAA,IACAM,UAAAN,EAAA94N,SAAA,QAAA84N,EAAA,IAAAA,EAAA,OAIA,QAAArD,GACA,KAAAqD,EAAA,UAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,KACAN,GACAlZ,QAAAwZ,EAAA,MAAAA,EAAA,GACAO,OAAAP,EAAA,MAAAA,EAAA,GACAQ,OAAAR,EAAA,MAAAA,EAAA,IACAS,cAAAT,EAAA,MAIA,MACA,WAIA,IAHA,IACAU,EADA70C,IACAvjK,EAAA,EAEAA,EAAAo4M,GAAA,CACA,IAAAC,EAAAl7M,EAAA6C,KACAs4M,EAAA,IAAA3xN,YAAA,IACA,GAAA0xN,GAAA,KACA,IAAAxzN,EAAA,EAA2BA,EAAA,GAAQA,IAEnCyzN,EADA/G,EAAA1sN,IACAsY,EAAA6C,SAEe,IAAAq4M,GAAA,KAMf,UAAAlH,EAAA,4BALA,IAAAtsN,EAAA,EAA2BA,EAAA,GAAQA,IAEnCyzN,EADA/G,EAAA1sN,IACA0+K,IAKA+zC,EAAA,GAAAe,GAAAC,EAEA,MACA,WACA,WACA,WACA,GAAAjG,EACA,UAAAlB,EAAA,qCAEA5tC,KACA8uC,MACAkG,SAAA,QAAAlE,EACAhC,EAAAQ,YAAA,QAAAwB,EACAhC,EAAA3vC,UAAAvlK,EAAA6C,KACA,IAAAw4M,EAAAj1C,IACA8uC,EAAAhB,UAAAqF,GAAA8B,EACAnG,EAAAyE,eAAAvzC,IACA8uC,EAAAz7C,cACAy7C,EAAAoG,gBACA,IACAC,EADA/7C,EAAAx/J,EAAA6C,KAEA+2M,EAAA,EACAC,EAAA,EACA,IAAA/8N,EAAA,EAAuBA,EAAA0iL,EAAqB1iL,IAAA,CAC5Cy+N,EAAAv7M,EAAA6C,GACA,IAAAP,EAAAtC,EAAA6C,EAAA,MACAzjB,EAAA,GAAA4gB,EAAA6C,EAAA,GACA+2M,EAAAt3M,IACAs3M,EAAAt3M,GAEAu3M,EAAAz6N,IACAy6N,EAAAz6N,GAEA,IAAAo8N,EAAAx7M,EAAA6C,EAAA,GACAk6E,EAAAm4H,EAAAz7C,WAAA9gK,MACA2J,IACAljB,IACAq8N,eAAAD,EACA9C,kBAAA,OAEAxD,EAAAoG,aAAAC,GAAAx+H,EAAA,EACAl6E,GAAA,EAEAqyM,EAAA0E,OACA1E,EAAA2E,OACAH,EAAAxE,GACA,MACA,WACA,IAAAwG,EAAAt1C,IACA,IAAAtpL,EAAA,EAAuBA,EAAA4+N,GAAmB,CAC1C,IAAAC,EAAA37M,EAAA6C,KACA7c,EAAA,IAAAjF,WAAA,IACA66N,EAAA,EACA,IAAAl0N,EAAA,EAAyBA,EAAA,GAAQA,IAAAmb,IACjC+4M,GAAA51N,EAAA0B,GAAAsY,EAAA6C,GAEA,IAAAg5M,EAAA,IAAA96N,WAAA66N,GACA,IAAAl0N,EAAA,EAAyBA,EAAAk0N,EAAmBl0N,IAAAmb,IAC5Cg5M,EAAAn0N,GAAAsY,EAAA6C,GAEA/lB,GAAA,GAAA8+N,GACAD,GAAA,KAAAtB,EAAAD,GAAA,GAAAuB,GAAA9G,EAAA7uN,EAAA61N,GAEA,MACA,WACAz1C,IACA+uC,EAAA/uC,IACA,MACA,WACA,IAAAovC,EAAA,KAAA0E,IAAAX,EACAnzC,IACA,IAEAxN,EAFAkjD,EAAA97M,EAAA6C,KACA42J,KAEA,IAAA38K,EAAA,EAAuBA,EAAAg/N,EAAoBh/N,IAAA,CAC3C,IAAAi/N,EAAA7G,EAAAoG,aAAAt7M,EAAA6C,MACA+1J,EAAAs8C,EAAAz7C,WAAAsiD,GACA,IAAAC,EAAAh8M,EAAA6C,KACA+1J,EAAAg+C,eAAAyD,EAAA2B,GAAA,GACApjD,EAAAo+C,eAAAoD,EAAA,GAAA4B,GACAviD,EAAA9gK,KAAAigK,GAEA,IAAAw8C,EAAAp1M,EAAA6C,KACAwyM,EAAAr1M,EAAA6C,KACAo5M,EAAAj8M,EAAA6C,KACA,IACA,IAAA6kJ,GAAAutD,EAAAj1M,EAAA6C,EAAAqyM,EAAAz7C,EAAA07C,EAAAC,EAAAC,EAAA4G,GAAA,KAAAA,EAAAzG,GACA3yM,GAAA6kJ,GACa,MAAAvrJ,GACb,GAAAA,aAAA83M,EAEA,SADAxzN,EAAA2O,MAAA+M,EAAAk8J,QAAA,8CACAl9K,KAAAiS,MAAA4S,GAAyCu5M,aAAAp9M,EAAA+3M,YAC1B,GAAA/3M,aAAAg4M,EAAA,IACf1zN,EAAA2O,MAAA+M,EAAAk8J,QAAA,4CACA,MAAAiiD,EAEA,MAAAn+M,EAEA,MACA,WACA0G,GAAA,EACA,MACA,WACA,MAAA7C,EAAA6C,IACAA,IAEA,MACA,QACA,SAAA7C,EAAA6C,EAAA,IAAA7C,EAAA6C,EAAA,SAAA7C,EAAA6C,EAAA,SACAA,GAAA,EACA,MAEA,IAAAq5M,GAAA3E,EAAAv3M,EAAA6C,EAAA,GACA,GAAAq5M,OAAA1E,QAAA,IACA/2N,EAAA2O,MAAA,yDAAA8sN,GAAA1E,SACA30M,EAAAq5M,GAAAr5M,OACA,MAEA,UAAAmxM,EAAA,kBAAAkD,EAAA54N,SAAA,KAEA44N,EAAA9wC,IAOA,IALAjrL,KAAAuQ,MAAAwpN,EAAAyE,eACAx+N,KAAAwQ,OAAAupN,EAAAhB,UACA/4N,KAAA6+N,OACA7+N,KAAA8+N,QACA9+N,KAAAs+K,cACA38K,EAAA,EAAiBA,EAAAo4N,EAAAz7C,WAAAx8K,OAA6BH,IAAA,CAE9C,IAAA47N,GAAAyB,GADAvhD,EAAAs8C,EAAAz7C,WAAA38K,IACA2+N,gBACA/C,KACA9/C,EAAA8/C,sBAEAv9N,KAAAs+K,WAAA9gK,MACAk2K,OAAA8pC,EAAAzD,EAAAt8C,GACAujD,OAAAvjD,EAAAt2J,EAAA4yM,EAAA0E,KACAwC,OAAAxjD,EAAAx5K,EAAA81N,EAAA2E,KACA7E,cAAAp8C,EAAAo8C,cACAoC,gBAAAx+C,EAAAw+C,kBAGAj8N,KAAAkhO,cAAAlhO,KAAAs+K,WAAAx8K,QAGAq/N,wBAAA,SAAA5wN,EAAAC,GACA,IAEAitK,EAAA2jD,EAAAC,EAAAC,EACA7mN,EAAA5E,EAAAlU,EAAA4K,EAAArB,EACAwY,EAEAgwK,EANAstC,EAAAhhO,KAAAuQ,QACA0wN,EAAAjhO,KAAAwQ,SAIAkX,EAAA,EAEAw5M,EAAAlhO,KAAAs+K,WAAAx8K,OACAozK,EAAA3kK,EAAAC,EAAA0wN,EACAr8M,EAAA,IAAA4oK,kBAAAvY,GACAqsD,EAAA,IAAAlnD,YAAA9pK,GAEA,IAAA5O,EAAA,EAAiBA,EAAAu/N,EAAmBv/N,IAAA,CAOpC,IALAy/N,GADA3jD,EAAAz9K,KAAAs+K,WAAA38K,IACAq/N,SACAK,EAAA5jD,EAAAwjD,SACAv5M,EAAA/lB,EACA+xL,EAAAjW,EAAAiW,OACA4tC,EAAA7jD,EAAAo8C,cAAA,KACAp/M,EAAA,EAAmBA,EAAAlK,EAAWkK,IAC9BlO,EAAA,EAAAkO,EAAA2mN,EACAG,EAAA9mN,IAVA,WAUAlO,IAAA,IAAAA,EAEA,IAAAsJ,EAAA,EAAmBA,EAAArF,EAAYqF,IAG/B,IADA6N,EAAA49M,GAdA,YAaA/0N,EAAA,EAAAsJ,EAAAwrN,KACA,EAAA90N,IAAA,EACAkO,EAAA,EAAqBA,EAAAlK,EAAWkK,IAChCoK,EAAA6C,GAAAgsK,EAAAhwK,EAAA69M,EAAA9mN,IACAiN,GAAAw5M,EAIA,IAAA18M,EAAAxkB,KAAA2kB,gBACA,GAAAH,EACA,IAAA7iB,EAAA,EAAmBA,EAAAuzK,GACnB,IAAA3oK,EAAA,EAAArB,EAAA,EAA4BqB,EAAA20N,EAAmB30N,IAAA5K,IAAAuJ,GAAA,EAC/C2Z,EAAAljB,IAAAkjB,EAAAljB,GAAA6iB,EAAAtZ,IAAA,GAAAsZ,EAAAtZ,EAAA,GAIA,OAAA2Z,GAEA28M,yBAAA,WACA,OAAAxhO,KAAA8+N,QACA9+N,KAAA8+N,MAAAe,cAEA,IAAA7/N,KAAAkhO,cACA,IAAAlhO,KAAA4kB,eAKA,IAAA5kB,KAAA4kB,gBAMA68M,iBAAA,SAAA58M,GAEA,IADA,IAAAjM,EAAA8oN,EAAAC,EACAhgO,EAAA,EAAAG,EAAA+iB,EAAA/iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDiX,EAAAiM,EAAAljB,GACA+/N,EAAA78M,EAAAljB,EAAA,GACAggO,EAAA98M,EAAAljB,EAAA,GACAkjB,EAAAljB,GAAAiX,EAAA,cAAA+oN,EACA98M,EAAAljB,EAAA,GAAAiX,EAAA,aAAA8oN,EAAA,KAAAC,EACA98M,EAAAljB,EAAA,GAAAiX,EAAA,cAAA8oN,EAEA,OAAA78M,GAEA+8M,kBAAA,SAAA/8M,GAGA,IAFA,IAAAjM,EAAA8oN,EAAAC,EAAAz2N,EACAwc,EAAA,EACA/lB,EAAA,EAAAG,EAAA+iB,EAAA/iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDiX,EAAAiM,EAAAljB,GACA+/N,EAAA78M,EAAAljB,EAAA,GACAggO,EAAA98M,EAAAljB,EAAA,GACAuJ,EAAA2Z,EAAAljB,EAAA,GACAkjB,EAAA6C,KAAAg6M,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,mBAAA/oN,EAAA,mBAAA1N,EAAA,kCAAAy2N,IAAA,oBAAAA,EAAA,oBAAA/oN,EAAA,mBAAA1N,EAAA,kBAAA0N,GAAA,oBAAAA,EAAA,mBAAA1N,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACA2Z,EAAA6C,KAAA,iBAAAg6M,GAAA,oBAAAA,EAAA,oBAAAC,EAAA,oBAAA/oN,EAAA,oBAAA1N,EAAA,kBAAAy2N,IAAA,oBAAAA,EAAA,mBAAA/oN,EAAA,oBAAA1N,EAAA,kBAAA0N,GAAA,mBAAAA,EAAA,mBAAA1N,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACA2Z,EAAA6C,KAAAg6M,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,kBAAA/oN,EAAA,mBAAA1N,EAAA,kCAAAy2N,IAAA,oBAAAA,EAAA,oBAAA/oN,EAAA,oBAAA1N,EAAA,kBAAA0N,GAAA,mBAAAA,EAAA,mBAAA1N,EAAA,kBAAAA,IAAA,oBAAAA,EAAA,iBAEA,OAAA2Z,EAAAve,SAAA,EAAAohB,IAEAm6M,mBAAA,SAAAh9M,GAEA,IADA,IAAAjM,EAAA8oN,EAAAC,EACAhgO,EAAA,EAAAG,EAAA+iB,EAAA/iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDiX,EAAAiM,EAAAljB,GACA+/N,EAAA78M,EAAAljB,EAAA,GACAggO,EAAA98M,EAAAljB,EAAA,GACAkjB,EAAAljB,GAAA,QAAAiX,EAAA,MAAA+oN,EACA98M,EAAAljB,EAAA,WAAAiX,EAAA,KAAA8oN,EAAA,KAAAC,EACA98M,EAAAljB,EAAA,WAAAiX,EAAA,MAAA8oN,EAEA,OAAA78M,GAEAi9M,kBAAA,SAAAj9M,GAIA,IAHA,IAAA3Y,EAAA0J,EAAAC,EAAA3K,EACAwc,EAAA,EAEA/lB,EAAA,EAAAG,EAAA+iB,EAAA/iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDuK,EAAA2Y,EAAAljB,IAFA,OAGAiU,EAAAiP,EAAAljB,EAAA,IAHA,OAIAkU,EAAAgP,EAAAljB,EAAA,IAJA,OAKAuJ,EAAA2Z,EAAAljB,EAAA,IALA,OAMAkjB,EAAA6C,KAAA,IAAAxb,IAAA,kBAAAA,EAAA,kBAAA0J,EAAA,kBAAAC,EAAA,mBAAA3K,EAAA,mBAAA0K,GAAA,mBAAAA,EAAA,mBAAAC,EAAA,mBAAA3K,EAAA,mBAAA2K,IAAA,mBAAAA,EAAA,mBAAA3K,EAAA,kBAAAA,GAAA,kBAAAA,EAAA,oBACA2Z,EAAA6C,KAAA,IAAAxb,GAAA,kBAAAA,EAAA,mBAAA0J,EAAA,kBAAAC,EAAA,mBAAA3K,EAAA,kBAAA0K,IAAA,mBAAAA,EAAA,mBAAAC,EAAA,mBAAA3K,EAAA,mBAAA2K,GAAA,kBAAAA,EAAA,gBAAA3K,EAAA,mBAAAA,GAAA,mBAAAA,EAAA,oBACA2Z,EAAA6C,KAAA,IAAAxb,GAAA,kBAAAA,EAAA,kBAAA0J,EAAA,kBAAAC,EAAA,mBAAA3K,EAAA,oBAAA0K,GAAA,kBAAAA,EAAA,kBAAAC,EAAA,mBAAA3K,EAAA,oBAAA2K,GAAA,mBAAAA,EAAA,mBAAA3K,EAAA,oBAAAA,GAAA,kBAAAA,EAAA,oBAEA,OAAA2Z,EAAAve,SAAA,EAAAohB,IAEA5C,QAAA,SAAAvU,EAAAC,EAAAuxN,GACA,GAAA/hO,KAAAkhO,cAAA,EACA,UAAArI,EAAA,0BAEA,IAAAh0M,EAAA7kB,KAAAmhO,wBAAA5wN,EAAAC,GACA,OAAAxQ,KAAAkhO,eAAAa,EAAA,CAIA,IAHA,IAAA7sD,EAAArwJ,EAAA/iB,OACAkgO,EAAA,IAAAv0C,kBAAA,EAAAvY,GACAxtJ,EAAA,EACA/lB,EAAA,EAAuBA,EAAAuzK,EAAgBvzK,IAAA,CACvC,IAAAsgO,EAAAp9M,EAAAljB,GACAqgO,EAAAt6M,KAAAu6M,EACAD,EAAAt6M,KAAAu6M,EACAD,EAAAt6M,KAAAu6M,EAEA,OAAAD,EACO,OAAAhiO,KAAAkhO,eAAAlhO,KAAAwhO,2BACP,OAAAxhO,KAAAyhO,iBAAA58M,GACO,OAAA7kB,KAAAkhO,cAAA,CACP,GAAAlhO,KAAAwhO,2BACA,OAAAO,EACA/hO,KAAA4hO,kBAAA/8M,GAEA7kB,KAAA6hO,mBAAAh9M,GACS,GAAAk9M,EACT,OAAA/hO,KAAA8hO,kBAAAj9M,GAGA,OAAAA,IAGAV,EAp6BA,GAs6BA9kB,EAAA8kB,8CC38BAhlB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAmhB,iBAEA,IAAAtE,EAAc3W,EAAQ,KAEtB28N,EAAW38N,EAAQ,KAEnBD,EAAYC,EAAQ,KAEpBib,EAAA,WACA,SAAAA,EAAArY,EAAAS,EAAA/F,EAAAwI,GACArL,KAAAmI,SACAnI,KAAA4I,cACA5I,KAAA6C,OACA7C,KAAAqL,SACA6Q,EAAAhX,aAAApB,KAAA9D,KAAA4I,GA+CA,OA7CA4X,EAAA5gB,UAAAT,OAAAe,OAAAgc,EAAAhX,aAAAtF,WACAT,OAAAC,eAAAohB,EAAA5gB,UAAA,SACAO,IAAA,WACA,SAAAmF,EAAA8O,QAAApU,KAAA,QAAAA,KAAAmI,OAAA1D,SAAAzE,KAAA4I,eAEAqb,kBAEAzD,EAAA5gB,UAAA2H,aAAA,SAAAC,KACAgZ,EAAA5gB,UAAA0H,UAAA,WACA,IAAAtH,KAAAoH,IAAA,CAGA,IAAA+6N,EAAA,IAAAD,EAAAplD,SACAqlD,EAAAlwN,MAAAjS,KAAA2F,OACA,IAAA4K,EAAA4xN,EAAA5xN,MACAC,EAAA2xN,EAAA3xN,OACA6zK,EAAA89C,EAAA99C,gBACA+9C,EAAAD,EAAA1jD,MAAA38K,OACA,OAAAsgO,EACApiO,KAAA+G,OAAAo7N,EAAA1jD,MAAA,GAAApS,UACK,CAEL,IADA,IAAAxnJ,EAAA,IAAA4oK,kBAAAl9K,EAAAC,EAAA6zK,GACAn5K,EAAA,EAAqBA,EAAAk3N,EAAel3N,IAWpC,IAVA,IAAAm3N,EAAAF,EAAA1jD,MAAAvzK,GACAo3N,EAAAD,EAAA9xN,MACAgyN,EAAAF,EAAA7xN,OACAgyN,EAAAH,EAAAz1N,KACA61N,EAAAJ,EAAA13C,IACAn7K,EAAA6yN,EAAAh2D,MACAq2D,EAAA,EACAC,GAAApyN,EAAAkyN,EAAAD,GAAAn+C,EACA98J,EAAAhX,EAAA8zK,EACAu+C,EAAAN,EAAAj+C,EACA93K,EAAA,EAAuBA,EAAAg2N,EAAgBh2N,IAAA,CACvC,IAAAX,EAAA4D,EAAAlJ,SAAAo8N,IAAAE,GACA/9M,EAAAxiB,IAAAuJ,EAAA+2N,GACAD,GAAAE,EACAD,GAAAp7M,EAGAvnB,KAAA+G,OAAA8d,EAEA7kB,KAAAmH,aAAAnH,KAAA+G,OAAAjF,OACA9B,KAAAoH,SAEAoZ,EArDA,GAuDAnhB,EAAAmhB,8CClEArhB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAulN,kBAAAvlN,EAAAwjO,sBAAAxjO,EAAAyjO,kBAEA,IAAAC,EAAA,SAAA5iO,EAAA6iO,EAAAC,EAAAC,GAAqD,OAAAF,MAAA7tB,SAAAv1M,WAAkD,IAAAujO,EAAAhkO,OAAAikO,yBAAAJ,EAAAC,GAA8D,YAAAE,EAAA,CAA0B,IAAA72D,EAAAntK,OAAAw5L,eAAAqqC,GAA4C,cAAA12D,SAAkDnsK,EAAAmsK,EAAA22D,EAAAC,GAA4C,aAAAC,EAA4B,OAAAA,EAAA7jO,MAA4B,IAAA+jO,EAAAF,EAAAhjO,IAAuB,gBAAAkjO,EAAgDA,EAAAv/N,KAAAo/N,WAExchxC,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAA1wL,EAAA,EAAgBA,EAAA0wL,EAAAvwL,OAAkBH,IAAA,CAAO,IAAA2wL,EAAAD,EAAA1wL,GAA2B2wL,EAAAC,WAAAD,EAAAC,eAAwDD,EAAAruK,gBAAgC,UAAAquK,MAAAE,aAAuDrzL,OAAAC,eAAAgzL,EAAAE,EAAApwL,IAAAowL,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA7yL,UAAA8yL,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAntL,EAAYC,EAAQ,KAEpBy8M,EAAWz8M,EAAQ,KAEnBC,EAAkBD,EAAQ,KAE1BylK,EAAkBzlK,EAAQ,KAE1B28M,EAAqB38M,EAAQ,KAE7B2W,EAAc3W,EAAQ,KAEtB,SAAAqtL,EAAAC,EAAA/uL,GAAiD,IAAA+uL,EAAa,UAAAC,eAAA,6DAAyF,OAAAhvL,GAAA,iBAAAA,GAAA,mBAAAA,EAAA+uL,EAAA/uL,EAEvJ,SAAAivL,EAAAC,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAroB,UAAA,kEAAAqoB,GAAuGD,EAAApzL,UAAAT,OAAAe,OAAA+yL,KAAArzL,WAAyED,aAAeL,MAAA0zL,EAAAT,cAAAC,YAAAvuK,mBAA6EgvK,IAAA9zL,OAAA+zL,eAAA/zL,OAAA+zL,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,SAAAG,EAAAC,EAAAZ,GAAiD,KAAAY,aAAAZ,GAA0C,UAAA7nB,UAAA,qCAE3F,IAAAg6C,EAAA,WACA,SAAAA,IACAxxB,EAAApzL,KAAA4kN,GA6EA,OA1EA1yB,EAAA0yB,EAAA,OACA1iN,IAAA,SACA5C,MAAA,SAAAmB,EAAA6C,EAAA2nK,EAAA63C,GACA,IAAAjgN,EAAApC,EAAAU,WAAAmC,GACA,MAAAkC,EAAA1C,QAAAD,GAAA,CAGA,IAAAi7L,KAAAt4L,EAAAzD,OAAAuB,KAAAH,WAAA,SAAA2/M,EAAAC,cACAl3C,EAAAhpK,EAAA1C,IAAA,WACA0rK,KAAArmK,EAAAxB,QAAA6nK,KAAA9rK,KAAA,KACA,IAAAujO,GACA7iO,OACAoC,OACAS,OAAAkC,EAAAzD,OAAAuB,KAAA,KACAuoK,UACAiyB,KACA7yB,cAEA,OAAAY,GACA,WACA,WAAA03D,EAAAD,GACA,WACA,WAAAE,EAAAF,GACA,aACA,IAAAG,KAAAn+N,EAAA29M,yBACApgN,OACAX,IAAA,OAGA,OADAuhO,KAAAj+N,EAAAxB,QAAAy/N,KAAA1jO,KAAA,MAEA,SACA,WAAA2jO,EAAAJ,GACA,UACA,WAAAK,EAAAL,GACA,SACA,WAAAM,EAAAN,GAGA,SADAh+N,EAAA2O,MAAA,oCAAAwvN,EAAA,uCACA,IAAAI,EAAAP,GACA,YACA,WAAAQ,EAAAR,GACA,WACA,WAAAS,EAAAT,GACA,aACA,WAAAU,EAAAV,GACA,aACA,WAAAW,EAAAX,GACA,eACA,WAAAY,EAAAZ,GACA,cACA,WAAAa,EAAAb,GACA,gBACA,WAAAc,EAAAd,GACA,gBACA,WAAAe,EAAAf,GACA,eACA,WAAAgB,EAAAhB,GACA,gBACA,WAAAiB,EAAAjB,GACA,YACA,WAAAkB,EAAAlB,GACA,qBACA,WAAAmB,EAAAnB,GACA,QAMA,OALAz3D,KAGAvmK,EAAA2O,MAAA,kCAAA43J,EAAA,0CAFAvmK,EAAA2O,MAAA,gDAIA,IAAA6uN,EAAAQ,SAKA1e,EA/EA,GAgGAke,EAAA,WACA,SAAAA,EAAAz3N,GACA+nL,EAAApzL,KAAA8iO,GAEA,IAAAjgO,EAAAwI,EAAAxI,KACA7C,KAAA0kO,SAAA7hO,EAAA1C,IAAA,MACAH,KAAA2kO,aAAA9hO,EAAArB,SAAA,SACAxB,KAAA4kO,SAAA/hO,EAAArB,SAAA,MACAxB,KAAA6kO,eAAAhiO,GACA7C,KAAA8kO,cAAAjiO,GACA7C,KAAA6kB,MACAkgN,gBAAA/kO,KAAA+sK,MACAi4D,YAAAhlO,KAAAglO,YACA7sN,MAAAnY,KAAAmY,MACA8sN,gBAAAjlO,KAAAklO,WACApnC,GAAAzyL,EAAAyyL,GACAqnC,KAAAnlO,KAAAolO,UACAv5D,QAAAxgK,EAAAwgK,SA4LA,OAxLAqmB,EAAA4wC,IACA5gO,IAAA,WACA5C,MAAA,SAAAytK,EAAAs4D,GACA,SAAAt4D,EAAAs4D,MAGAnjO,IAAA,cACA5C,MAAA,SAAAytK,GACA,OAAA/sK,KAAAslO,SAAAv4D,EAAAznK,EAAAigO,eAAAC,aAAAxlO,KAAAslO,SAAAv4D,EAAAznK,EAAAigO,eAAAE,UAAAzlO,KAAAslO,SAAAv4D,EAAAznK,EAAAigO,eAAAG,WAGAxjO,IAAA,eACA5C,MAAA,SAAAytK,GACA,OAAA/sK,KAAAslO,SAAAv4D,EAAAznK,EAAAigO,eAAAI,SAAA3lO,KAAAslO,SAAAv4D,EAAAznK,EAAAigO,eAAAC,aAAAxlO,KAAAslO,SAAAv4D,EAAAznK,EAAAigO,eAAAE,WAGAvjO,IAAA,WACA5C,MAAA,SAAAytK,GACA/sK,KAAA+sK,MAAArvJ,OAAAC,UAAAovJ,MAAA,EAAAA,EAAA,KAGA7qK,IAAA,UACA5C,MAAA,SAAA+lO,GACA,OAAArlO,KAAAslO,SAAAtlO,KAAA+sK,MAAAs4D,MAGAnjO,IAAA,eACA5C,MAAA,SAAA8lO,GACA3jO,MAAAC,QAAA0jO,IAAA,IAAAA,EAAAtjO,OACA9B,KAAAolO,UAAA9/N,EAAA8C,KAAAw9N,cAAAR,GAEAplO,KAAAolO,WAAA,YAIAljO,IAAA,WACA5C,MAAA,SAAA6Y,GACA,IAAA60J,EAAA,IAAApnK,WAAA,GACA,GAAAnE,MAAAC,QAAAyW,GAIA,OAAAA,EAAArW,QACA,OACA9B,KAAAmY,MAAA,KACA,MACA,OACA6yJ,EAAA37J,WAAAsD,WAAAC,KAAAjD,WAAAwI,EAAA,EAAA60J,EAAA,GACAhtK,KAAAmY,MAAA60J,EACA,MACA,OACAhC,EAAA37J,WAAAsD,WAAAjD,IAAAC,WAAAwI,EAAA,EAAA60J,EAAA,GACAhtK,KAAAmY,MAAA60J,EACA,MACA,OACAhC,EAAA37J,WAAAsD,WAAAE,KAAAlD,WAAAwI,EAAA,EAAA60J,EAAA,GACAhtK,KAAAmY,MAAA60J,EACA,MACA,QACAhtK,KAAAmY,MAAA60J,OApBAhtK,KAAAmY,MAAA60J,KAyBA9qK,IAAA,iBACA5C,MAAA,SAAA0lO,GAEA,GADAhlO,KAAAglO,YAAA,IAAAnC,KACAr9N,EAAA1C,QAAAkiO,GAGA,GAAAA,EAAA1iO,IAAA,OACA,IAAAO,EAAAmiO,EAAA7kO,IAAA,MACA0lO,EAAAhjO,EAAA1C,IAAA,QACA0lO,OAAArgO,EAAAxB,QAAA6hO,EAAA,YACA7lO,KAAAglO,YAAAc,SAAAjjO,EAAA1C,IAAA,MACAH,KAAAglO,YAAAe,SAAAljO,EAAA1C,IAAA,MACAH,KAAAglO,YAAAgB,aAAAnjO,EAAArB,SAAA,YAEO,GAAAwjO,EAAA1iO,IAAA,WACP,IAAAib,EAAAynN,EAAAxjO,SAAA,UACAC,MAAAC,QAAA6b,MAAAzb,QAAA,IACA9B,KAAAglO,YAAAiB,0BAAA1oN,EAAA,IACAvd,KAAAglO,YAAAkB,wBAAA3oN,EAAA,IACAvd,KAAAglO,YAAAc,SAAAvoN,EAAA,IACA,IAAAA,EAAAzb,QACA9B,KAAAglO,YAAAgB,aAAAzoN,EAAA,UAIAvd,KAAAglO,YAAAc,SAAA,MAIA5jO,IAAA,gBACA5C,MAAA,SAAAuD,GACA7C,KAAAklO,WAAA,KACA,IAAAiB,EAAAtjO,EAAA1C,IAAA,MACA,MAAAqF,EAAA1C,QAAAqjO,GAAA,CAGA,IAAAC,EAAAD,EAAAhmO,IAAA,KACA,MAAAqF,EAAAhB,UAAA4hO,GACApmO,KAAAklO,WAAAkB,OAGA,MAAA5gO,EAAA1C,QAAAsjO,GAAA,CAGA,IAAArrN,EAAAlY,EAAA1C,IAAA,SACAqF,EAAAxB,QAAA+W,IAAAqrN,EAAA9jO,IAAAyY,EAAAhb,QAGAC,KAAAklO,WAAAkB,EAAAjmO,IAAA4a,EAAAhb,YAGAmC,IAAA,gBACA5C,MAAA,SAAAuD,GACAA,EAAAP,IAAA,OACAtC,KAAA6kB,KAAA1M,MAAA,MAEAnY,KAAA6kB,KAAAwhN,SAAAxjO,EAAAP,IAAA,SACAtC,KAAA6kB,KAAAioJ,SAAAxnK,EAAA8nK,mBAAAvqK,EAAA1C,IAAA,UACAH,KAAA6kB,KAAAyhN,YAAAhhO,EAAA8nK,mBAAAvqK,EAAA1C,IAAA,oBAGA+B,IAAA,gBACA5C,MAAA,SAAA8C,GACA,OAAApC,KAAAklO,WAAAriO,KAAAzB,SAAA,aAAAwmK,KAAA,SAAAu7C,GACA,GAAAA,EAIA,OADA,IAAAnB,EAAAh4C,aAAAm5C,EAAA/gN,EAAA+gN,EAAA1iN,MACA+3K,OAAA5Q,KAAA,WACA,OAAAu7C,SAKAjhN,IAAA,kBACA5C,MAAA,SAAAg2M,EAAAuH,EAAA0pB,GACA,IAAAp/D,EAAAnnK,KAEA,IAAAA,KAAAklO,WACA,OAAA5jO,QAAAC,QAAA,IAAA2gN,EAAA98L,cAEA,IAAAP,EAAA7kB,KAAA6kB,KACA2hN,EAAAxmO,KAAAklO,WAAAriO,KACA8/M,EAAA3iN,KAAAwjN,eAAA,gEACAijB,EAAAD,EAAAhlO,SAAA,mBACAuR,EAAAyzN,EAAAhlO,SAAA,yBACAgjB,EAzLA,SAAA2gN,EAAAsB,EAAA1zN,GACA,IAAA2hM,EAAApvM,EAAA8C,KAAAs+N,2BAAAD,EAAA1zN,GACA02M,EAAA/U,EAAA,GACAgV,EAAAhV,EAAA,GACA9tL,EAAA8tL,EAAA,GACAiyB,EAAAjyB,EAAA,GACA,GAAA+U,IAAA7iM,GAAA8iM,IAAAid,EACA,eAAAxB,EAAA,GAAAA,EAAA,IAEA,IAAAzzN,GAAAyzN,EAAA,GAAAA,EAAA,KAAAv+M,EAAA6iM,GACA93M,GAAAwzN,EAAA,GAAAA,EAAA,KAAAwB,EAAAjd,GACA,OAAAh4M,EAAA,IAAAC,EAAAwzN,EAAA,GAAA1b,EAAA/3M,EAAAyzN,EAAA,GAAAzb,EAAA/3M,GAXA,CAyLAkT,EAAAsgN,KAAAsB,EAAA1zN,GACA,OAAA4vM,EAAA/6C,KAAA,SAAAu7C,GACA,IAAA/3L,EAAA,IAAA82L,EAAA98L,aAEA,OADAgG,EAAAN,MAAAxlB,EAAA8gB,IAAAwgN,iBAAA/hN,EAAAsgN,KAAA3gN,EAAAzR,IACAuiM,EAAA+I,iBACAl2M,OAAAg/J,EAAA+9D,WACAroB,OACAsG,YACAz3L,aAAAN,IACSw8I,KAAA,WAGT,OAFAx8I,EAAAN,MAAAxlB,EAAA8gB,IAAAygN,kBACA1/D,EAAA+9D,WAAAt+N,QACAwkB,SAKAlpB,IAAA,WACA/B,IAAA,WACA,WAAAH,KAAA+sK,OAGA/sK,KAAA8mO,YAAA9mO,KAAA+sK,UAGA7qK,IAAA,YACA/B,IAAA,WACA,WAAAH,KAAA+sK,OAGA/sK,KAAA+mO,aAAA/mO,KAAA+sK,WAIA+1D,EA7MA,GAgNAD,EAAA,WACA,SAAAA,IACAzvC,EAAApzL,KAAA6iO,GAEA7iO,KAAAuQ,MAAA,EACAvQ,KAAAmuK,MAAA7oK,EAAA0hO,0BAAAC,MACAjnO,KAAAknO,WAAA,GACAlnO,KAAAmnO,uBAAA,EACAnnO,KAAAonO,qBAAA,EA6EA,OA1EAl1C,EAAA2wC,IACA3gO,IAAA,WACA5C,MAAA,SAAAiR,GACAmN,OAAAC,UAAApN,KACAvQ,KAAAuQ,YAIArO,IAAA,WACA5C,MAAA,SAAA6uK,GACA,GAAAA,EAGA,OAAAA,EAAApuK,MACA,QACAC,KAAAmuK,MAAA7oK,EAAA0hO,0BAAAC,MACA,MACA,QACAjnO,KAAAmuK,MAAA7oK,EAAA0hO,0BAAAK,OACA,MACA,QACArnO,KAAAmuK,MAAA7oK,EAAA0hO,0BAAAM,QACA,MACA,QACAtnO,KAAAmuK,MAAA7oK,EAAA0hO,0BAAAO,MACA,MACA,QACAvnO,KAAAmuK,MAAA7oK,EAAA0hO,0BAAAQ,cAOAtlO,IAAA,eACA5C,MAAA,SAAA4nO,GACA,GAAAzlO,MAAAC,QAAAwlO,MAAAplO,OAAA,GAGA,IAFA,IAAA2lO,KACAC,KACA/lO,EAAA,EAAAmI,EAAAo9N,EAAAplO,OAA+CH,EAAAmI,EAASnI,IAAA,CACxD,IAAA2zE,EAAA4xJ,EAAAvlO,GAEA,MADA2zE,GAAA,GACA,CACAmyJ,KACA,MACWnyJ,EAAA,IACXoyJ,MAGAD,IAAAC,EACA1nO,KAAAknO,YAEAlnO,KAAAuQ,MAAA,OAEO22N,IACPlnO,KAAAuQ,MAAA,MAIArO,IAAA,4BACA5C,MAAA,SAAAqoO,GACAjqN,OAAAC,UAAAgqN,KACA3nO,KAAAmnO,uBAAAQ,MAIAzlO,IAAA,0BACA5C,MAAA,SAAAqoO,GACAjqN,OAAAC,UAAAgqN,KACA3nO,KAAAonO,qBAAAO,OAKA9E,EArFA,GAwFAgB,EAAA,SAAA+D,GAGA,SAAA/D,EAAAx4N,GACA+nL,EAAApzL,KAAA6jO,GAEA,IAAA3zD,EAAA0iB,EAAA5yL,MAAA6jO,EAAA1wC,WAAAh0L,OAAAw5L,eAAAkrC,IAAA//N,KAAA9D,KAAAqL,IAEAxI,EAAAwI,EAAAxI,KACAgiB,EAAAqrJ,EAAArrJ,KACAA,EAAAgjN,eAAAviO,EAAAwiO,eAAAC,OACAljN,EAAAmjN,UAAA93D,EAAA+3D,oBAAAplO,GACAgiB,EAAAqjN,cAAA5iO,EAAA29M,yBACApgN,OACAX,IAAA,IACAV,cAEAqjB,EAAAsjN,mBAAA7iO,EAAA8nK,mBAAAvqK,EAAA1C,IAAA,WACA0kB,EAAAujN,qBAAA9iO,EAAA29M,yBACApgN,OACAX,IAAA,QACK,GACL,IAAAuhO,KAAAn+N,EAAA29M,yBACApgN,OACAX,IAAA,OAkBA,OAhBA2iB,EAAA4+M,aAAAj+N,EAAAxB,QAAAy/N,KAAA1jO,KAAA,KACAmwK,EAAAm4D,kBAAA/iO,EAAA29M,yBACApgN,OACAX,IAAA,QACKsD,EAAAjF,KAAAkC,MACLoiB,EAAAyjN,cAAAhjO,EAAA29M,yBACApgN,OACAX,IAAA,SAEAwb,OAAAC,UAAAkH,EAAAyjN,aAAAzjN,EAAAyjN,WAAA,KACAzjN,EAAAyjN,WAAA,GAEAzjN,EAAA0jN,SAAAr4D,EAAAs4D,aAAAljO,EAAAmjO,oBAAAC,UACA,QAAA7jN,EAAA4+M,WACAvzD,EAAAw0D,SAAAp/N,EAAAigO,eAAAE,QAEAv1D,EA4CA,OArFA6iB,EAAA8wC,EAsFCf,GA1CD5wC,EAAA2xC,IACA3hO,IAAA,sBACA5C,MAAA,SAAAuD,GACA,IAAAA,EAAAP,IAAA,OAAAO,EAAAP,IAAA,UAEA,SADAgD,EAAA2O,MAAA,yDACA,GAEA,IAAApR,EAAAP,IAAA,UACA,SAAAgD,EAAA8nK,mBAAAvqK,EAAA1C,IAAA,MAEA,IAAA6nO,KACAnlO,EAAAP,IAAA,MACA0lO,EAAAhvB,WAAA1zM,EAAA8nK,mBAAAvqK,EAAA1C,IAAA,OAGA,IADA,IAAAwoO,EAAA9lO,EACA8lO,EAAArmO,IAAA,YACAqmO,IAAAxoO,IAAA,aACAqF,EAAA1C,QAAA6lO,KAGAA,EAAArmO,IAAA,MACA0lO,EAAAhvB,WAAA1zM,EAAA8nK,mBAAAu7D,EAAAxoO,IAAA,OAGA,OAAA6nO,EAAA3lN,KAAA,QAGAngB,IAAA,eACA5C,MAAA,SAAA+lO,GACA,SAAArlO,KAAA6kB,KAAAyjN,WAAAjD,MAGAnjO,IAAA,kBACA5C,MAAA,SAAAg2M,EAAAuH,EAAA0pB,GACA,OAAAA,EACAjlO,QAAAC,QAAA,IAAA2gN,EAAA98L,cAEA29M,EAAAc,EAAAjkO,UAAAuzL,WAAAh0L,OAAAw5L,eAAAkrC,EAAAjkO,WAAA,kBAAAI,MAAA8D,KAAA9D,KAAAs1M,EAAAuH,EAAA0pB,OAIA1C,EAtFA,GAyFAH,EAAA,SAAAkF,GAGA,SAAAlF,EAAAr4N,GACA+nL,EAAApzL,KAAA0jO,GAEA,IAAAhrD,EAAAka,EAAA5yL,MAAA0jO,EAAAvwC,WAAAh0L,OAAAw5L,eAAA+qC,IAAA5/N,KAAA9D,KAAAqL,IAEAxI,EAAAwI,EAAAxI,KACA61K,EAAA7zJ,KAAAqjN,cAAA5iO,EAAA8nK,mBAAAsL,EAAA7zJ,KAAAqjN,YAAA,IACA,IAAAW,KAAAvjO,EAAA29M,yBACApgN,OACAX,IAAA,QAEAwb,OAAAC,UAAAkrN,MAAA,GAAAA,EAAA,KACAA,EAAA,MAEAnwD,EAAA7zJ,KAAAikN,cAAAD,EACA,IAAAE,KAAAzjO,EAAA29M,yBACApgN,OACAX,IAAA,WAQA,QANAwb,OAAAC,UAAAorN,MAAA,KACAA,EAAA,MAEArwD,EAAA7zJ,KAAArb,OAAAu/N,EACArwD,EAAA7zJ,KAAAmkN,UAAAtwD,EAAA8vD,aAAAljO,EAAAmjO,oBAAAQ,WACAvwD,EAAA7zJ,KAAAqkN,KAAAxwD,EAAA8vD,aAAAljO,EAAAmjO,oBAAAU,QAAAzwD,EAAA8vD,aAAAljO,EAAAmjO,oBAAAQ,aAAAvwD,EAAA8vD,aAAAljO,EAAAmjO,oBAAAW,YAAA1wD,EAAA8vD,aAAAljO,EAAAmjO,oBAAAY,aAAA,OAAA3wD,EAAA7zJ,KAAArb,OACAkvK,EAyBA,OApDAqa,EAAA2wC,EAqDCG,GAvBD3xC,EAAAwxC,IACAxhO,IAAA,kBACA5C,MAAA,SAAAg2M,EAAAuH,EAAA0pB,GACA,GAAAA,GAAAvmO,KAAAklO,WACA,OAAAnC,EAAAW,EAAA9jO,UAAAuzL,WAAAh0L,OAAAw5L,eAAA+qC,EAAA9jO,WAAA,kBAAAI,MAAA8D,KAAA9D,KAAAs1M,EAAAuH,EAAA0pB,GAEA,IAAA76M,EAAA,IAAAw2L,EAAA98L,aACA,IAAAplB,KAAA6kB,KAAAujN,kBACA,OAAA9mO,QAAAC,QAAAmqB,GAEA,IAAAvjB,EAAA,IAAA+T,EAAArX,UAAAS,EAAA0B,eAAAhH,KAAA6kB,KAAAujN,oBACA,OAAA9yB,EAAA+I,iBACAl2M,SACA00M,OACAsG,UAAAnjN,KAAAqoO,eACA38M,iBACOk8I,KAAA,WACP,OAAAl8I,QAKAg4M,EArDA,GAwDAC,EAAA,SAAA2F,GAGA,SAAA3F,EAAAt4N,GACA+nL,EAAApzL,KAAA2jO,GAEA,IAAAvd,EAAAxzB,EAAA5yL,MAAA2jO,EAAAxwC,WAAAh0L,OAAAw5L,eAAAgrC,IAAA7/N,KAAA9D,KAAAqL,IAcA,OAZA+6M,EAAAvhM,KAAA0kN,UAAAnjB,EAAAoiB,aAAAljO,EAAAmjO,oBAAAe,SAAApjB,EAAAoiB,aAAAljO,EAAAmjO,oBAAAgB,YACArjB,EAAAvhM,KAAA6kN,YAAAtjB,EAAAoiB,aAAAljO,EAAAmjO,oBAAAe,SAAApjB,EAAAoiB,aAAAljO,EAAAmjO,oBAAAgB,YACArjB,EAAAvhM,KAAA8kN,WAAAvjB,EAAAoiB,aAAAljO,EAAAmjO,oBAAAgB,YACArjB,EAAAvhM,KAAA0kN,SACAnjB,EAAAwjB,mBACKxjB,EAAAvhM,KAAA6kN,YACLtjB,EAAAyjB,oBAAAx+N,GACK+6M,EAAAvhM,KAAA8kN,WACLvjB,EAAA0jB,mBAAAz+N,MAEA/F,EAAA2O,MAAA,oDAEAmyM,EAqDA,OAxEArzB,EAAA4wC,EAyECE,GAnDD3xC,EAAAyxC,IACAzhO,IAAA,mBACA5C,MAAA,cACAkG,EAAAxB,QAAAhE,KAAA6kB,KAAAqjN,cAGAloO,KAAA6kB,KAAAqjN,WAAAloO,KAAA6kB,KAAAqjN,WAAAnoO,SAGAmC,IAAA,sBACA5C,MAAA,SAAA+L,GACArL,KAAA6kB,KAAAqjN,WAAAloO,KAAA6kB,KAAAklN,YAAA,KACA,IAAAC,EAAA3+N,EAAAxI,KAAA1C,IAAA,UACA,MAAAqF,EAAA1C,QAAAknO,MAAA1nO,IAAA,MACA,IAAA2nO,EAAAD,EAAA7pO,IAAA,QACAqF,EAAAxB,QAAAimO,KACAjqO,KAAA6kB,KAAAqjN,WAAA+B,EAAAlqO,MAGA,IAAAomO,EAAA96N,EAAAxI,KAAA1C,IAAA,MACA,MAAAqF,EAAA1C,QAAAqjO,GAAA,CAGA,IAAAC,EAAAD,EAAAhmO,IAAA,KACA,MAAAqF,EAAA1C,QAAAsjO,GAIA,IADA,IAAAhkO,EAAAgkO,EAAAjkO,UACAR,EAAA,EAAAC,EAAAQ,EAAAN,OAAuCH,EAAAC,EAAQD,IAC/C,WAAAS,EAAAT,GAAA,CACA3B,KAAA6kB,KAAAklN,YAAA3nO,EAAAT,GACA,WAKAO,IAAA,qBACA5C,MAAA,SAAA+L,GACAA,EAAAxI,KAAAP,IAAA,KAIA0/M,EAAA/3C,QAAAyC,qBACAC,SAAAthK,EAAAxI,KACA+pK,UAAA5sK,KAAA6kB,KACAgoJ,WAAAxhK,EAAA4/J,WAAA4B,gBANAvnK,EAAA2O,MAAA,kEAWA0vN,EAzEA,GA4EAC,EAAA,SAAAsG,GAGA,SAAAtG,EAAAv4N,GACA+nL,EAAApzL,KAAA4jO,GAEA,IAAAuG,EAAAv3C,EAAA5yL,MAAA4jO,EAAAzwC,WAAAh0L,OAAAw5L,eAAAirC,IAAA9/N,KAAA9D,KAAAqL,IAEA8+N,EAAAtlN,KAAA00J,WACA,IAAAA,KAAAj0K,EAAA29M,yBACApgN,KAAAwI,EAAAxI,KACAX,IAAA,QAEA,GAAAT,MAAAC,QAAA63K,GAEA,IADA,IAAA94K,EAAA4K,EAAA5K,KACAkB,EAAA,EAAAC,EAAA23K,EAAAz3K,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAA49G,EAAA9+G,EAAAU,WAAAo4K,EAAA53K,IACAyoO,EAAA3oO,MAAAC,QAAA69G,GACA4qH,EAAAtlN,KAAA00J,QAAA53K,IACA0oO,YAAAD,EAAA3pO,EAAAU,WAAAo+G,EAAA,IAAAA,EACA+qH,gBAAAhlO,EAAA8nK,mBAAAg9D,EAAA3pO,EAAAU,WAAAo+G,EAAA,IAAAA,IASA,OALA99G,MAAAC,QAAAyoO,EAAAtlN,KAAAqjN,cACAiC,EAAAtlN,KAAAqjN,YAAAiC,EAAAtlN,KAAAqjN,aAEAiC,EAAAtlN,KAAA0lN,MAAAJ,EAAA3B,aAAAljO,EAAAmjO,oBAAA+B,OACAL,EAAAtlN,KAAA4lN,YAAAN,EAAA3B,aAAAljO,EAAAmjO,oBAAAiC,aACAP,EAGA,OA/BAp3C,EAAA6wC,EAgCCC,GADDD,EAhCA,GAmCAJ,EAAA,SAAAmH,GAGA,SAAAnH,EAAAF,GACAlwC,EAAApzL,KAAAwjO,GAEA,IAEAoH,EAAAh4C,EAAA5yL,MAAAwjO,EAAArwC,WAAAh0L,OAAAw5L,eAAA6qC,IAAA1/N,KAAA9D,KAAAsjO,IAWA,OATAsH,EAAA/lN,KAAAgjN,eAAAviO,EAAAwiO,eAAA+C,KACAD,EAAA/lN,KAAAogN,cACA2F,EAAA/lN,KAAA9kB,KAAA,UAEA6qO,EAAA/lN,KAAAsgN,KAAA,GAAAyF,EAAA/lN,KAAAsgN,KAAA,GARA,GASAyF,EAAA/lN,KAAAsgN,KAAA,GAAAyF,EAAA/lN,KAAAsgN,KAAA,GATA,GAUAyF,EAAA/lN,KAAA9kB,KAAAujO,EAAAzgO,KAAAP,IAAA,QAAAghO,EAAAzgO,KAAA1C,IAAA,QAAAJ,KAAA,QAEA6qO,EAAAE,cAAAxH,EAAAzgO,MACA+nO,EAGA,OArBA73C,EAAAywC,EAsBCV,GADDU,EAtBA,GAyBAD,EAAA,SAAAwH,GAGA,SAAAxH,EAAAl4N,GACA+nL,EAAApzL,KAAAujO,GAEA,IAAAyH,EAAAp4C,EAAA5yL,MAAAujO,EAAApwC,WAAAh0L,OAAAw5L,eAAA4qC,IAAAz/N,KAAA9D,KAAAqL,IAQA,OANA2/N,EAAAnmN,KAAAgjN,eAAAviO,EAAAwiO,eAAAmD,KACAjpB,EAAA/3C,QAAAyC,qBACAC,SAAAthK,EAAAxI,KACA+pK,UAAAo+D,EAAAnmN,KACAgoJ,WAAAxhK,EAAA4/J,WAAA4B,aAEAm+D,EAGA,OAhBAj4C,EAAAwwC,EAiBCT,GADDS,EAjBA,GAoBAO,EAAA,SAAAoH,GAGA,SAAApH,EAAAR,GACAlwC,EAAApzL,KAAA8jO,GAEA,IAAAqH,EAAAv4C,EAAA5yL,MAAA8jO,EAAA3wC,WAAAh0L,OAAAw5L,eAAAmrC,IAAAhgO,KAAA9D,KAAAsjO,IAEA6H,EAAAtmN,KAAAgjN,eAAAviO,EAAAwiO,eAAAsD,MACA,IAAAvoO,EAAAygO,EAAAzgO,KACAwoO,EAAAxoO,EAAA1C,IAAA,UACA,IAAAkrO,EAEA,SADA/lO,EAAA2O,MAAA,gEACA2+K,EAAAu4C,GAEA,IAAAG,EAAAD,EAAAlrO,IAAA,WAWA,GAVAgrO,EAAAtmN,KAAA0mN,cAAA/lO,EAAAxB,QAAAsnO,KAAAvrO,KAAA,KACAorO,EAAAtmN,KAAA2mN,SAAA3oO,EAAAZ,OAAA,UAAAkB,WACAgoO,EAAAtmN,KAAAioJ,SAAAxnK,EAAA8nK,mBAAAi+D,EAAAlrO,IAAA,UACAgrO,EAAAtmN,KAAAyhN,YAAAhhO,EAAA8nK,mBAAAi+D,EAAAlrO,IAAA,iBACAkrO,EAAA/oO,IAAA,MAGA6oO,EAAAvG,SAAAyG,EAAA7pO,SAAA,MACA2pO,EAAAtmN,KAAA1M,MAAAgzN,EAAAhzN,OAHAgzN,EAAAtmN,KAAA1M,MAAA,MAKAgzN,EAAA3oB,SAAA,CACA,IAAAipB,EAAAJ,EAAAlrO,IAAA,KACAgrO,EAAArE,YAAA2E,IACAN,EAAAzG,SAAA+G,GAGA,OAAAN,EAGA,OAlCAp4C,EAAA+wC,EAmCChB,GADDgB,EAnCA,GAsCAC,EAAA,SAAA2H,GAGA,SAAA3H,EAAAT,GACAlwC,EAAApzL,KAAA+jO,GAEA,IAAA4H,EAAA/4C,EAAA5yL,MAAA+jO,EAAA5wC,WAAAh0L,OAAAw5L,eAAAorC,IAAAjgO,KAAA9D,KAAAsjO,IAEAqI,EAAA9mN,KAAAgjN,eAAAviO,EAAAwiO,eAAA8D,KACA,IAAA/oO,EAAAygO,EAAAzgO,KAGA,OAFA8oO,EAAA9mN,KAAAgnN,gBAAAvmO,EAAA8C,KAAAw9N,cAAA/iO,EAAArB,SAAA,MACAmqO,EAAAb,cAAAjoO,GACA8oO,EAGA,OAdA54C,EAAAgxC,EAeCjB,GADDiB,EAfA,GAkBAC,EAAA,SAAA8H,GAGA,SAAA9H,EAAAV,GACAlwC,EAAApzL,KAAAgkO,GAEA,IAAA+H,EAAAn5C,EAAA5yL,MAAAgkO,EAAA7wC,WAAAh0L,OAAAw5L,eAAAqrC,IAAAlgO,KAAA9D,KAAAsjO,IAIA,OAFAyI,EAAAlnN,KAAAgjN,eAAAviO,EAAAwiO,eAAAkE,OACAD,EAAAjB,cAAAxH,EAAAzgO,MACAkpO,EAGA,OAZAh5C,EAAAixC,EAaClB,GADDkB,EAbA,GAgBAC,EAAA,SAAAgI,GAGA,SAAAhI,EAAAX,GACAlwC,EAAApzL,KAAAikO,GAEA,IAAAiI,EAAAt5C,EAAA5yL,MAAAikO,EAAA9wC,WAAAh0L,OAAAw5L,eAAAsrC,IAAAngO,KAAA9D,KAAAsjO,IAIA,OAFA4I,EAAArnN,KAAAgjN,eAAAviO,EAAAwiO,eAAAqE,OACAD,EAAApB,cAAAxH,EAAAzgO,MACAqpO,EAGA,OAZAn5C,EAAAkxC,EAaCnB,GADDmB,EAbA,GAgBAC,EAAA,SAAAkI,GAGA,SAAAlI,EAAAZ,GACAlwC,EAAApzL,KAAAkkO,GAEA,IAAAmI,EAAAz5C,EAAA5yL,MAAAkkO,EAAA/wC,WAAAh0L,OAAAw5L,eAAAurC,IAAApgO,KAAA9D,KAAAsjO,IAEA+I,EAAAxnN,KAAAgjN,eAAAviO,EAAAwiO,eAAAwE,SACA,IAAAzpO,EAAAygO,EAAAzgO,KACA0pO,EAAA1pO,EAAArB,SAAA,YACA6qO,EAAAxnN,KAAA2nN,YACA,QAAA7qO,EAAA,EAAAC,EAAA2qO,EAAAzqO,OAA4CH,EAAAC,EAAQD,GAAA,EACpD0qO,EAAAxnN,KAAA2nN,SAAAhvN,MACA/C,EAAA8xN,EAAA5qO,GACAkU,EAAA02N,EAAA5qO,EAAA,KAIA,OADA0qO,EAAAvB,cAAAjoO,GACAwpO,EAGA,OArBAt5C,EAAAmxC,EAsBCpB,GADDoB,EAtBA,GAyBAC,EAAA,SAAAsI,GAGA,SAAAtI,EAAAb,GACAlwC,EAAApzL,KAAAmkO,GAEA,IAAAuI,EAAA95C,EAAA5yL,MAAAmkO,EAAAhxC,WAAAh0L,OAAAw5L,eAAAwrC,IAAArgO,KAAA9D,KAAAsjO,IAGA,OADAoJ,EAAA7nN,KAAAgjN,eAAAviO,EAAAwiO,eAAA6E,QACAD,EAGA,OAXA35C,EAAAoxC,EAYCD,GADDC,EAZA,GAeAC,EAAA,SAAAwI,GAGA,SAAAxI,EAAAd,GACAlwC,EAAApzL,KAAAokO,GAEA,IAAAyI,EAAAj6C,EAAA5yL,MAAAokO,EAAAjxC,WAAAh0L,OAAAw5L,eAAAyrC,IAAAtgO,KAAA9D,KAAAsjO,IAIA,OAFAuJ,EAAAhoN,KAAAgjN,eAAAviO,EAAAwiO,eAAAgF,UACAD,EAAA/B,cAAAxH,EAAAzgO,MACAgqO,EAGA,OAZA95C,EAAAqxC,EAaCtB,GADDsB,EAbA,GAgBAC,EAAA,SAAA0I,GAGA,SAAA1I,EAAAf,GACAlwC,EAAApzL,KAAAqkO,GAEA,IAAA2I,EAAAp6C,EAAA5yL,MAAAqkO,EAAAlxC,WAAAh0L,OAAAw5L,eAAA0rC,IAAAvgO,KAAA9D,KAAAsjO,IAIA,OAFA0J,EAAAnoN,KAAAgjN,eAAAviO,EAAAwiO,eAAAN,UACAwF,EAAAlC,cAAAxH,EAAAzgO,MACAmqO,EAGA,OAZAj6C,EAAAsxC,EAaCvB,GADDuB,EAbA,GAgBAC,EAAA,SAAA2I,GAGA,SAAA3I,EAAAhB,GACAlwC,EAAApzL,KAAAskO,GAEA,IAAA4I,EAAAt6C,EAAA5yL,MAAAskO,EAAAnxC,WAAAh0L,OAAAw5L,eAAA2rC,IAAAxgO,KAAA9D,KAAAsjO,IAIA,OAFA4J,EAAAroN,KAAAgjN,eAAAviO,EAAAwiO,eAAAqF,SACAD,EAAApC,cAAAxH,EAAAzgO,MACAqqO,EAGA,OAZAn6C,EAAAuxC,EAaCxB,GADDwB,EAbA,GAgBAC,EAAA,SAAA6I,GAGA,SAAA7I,EAAAjB,GACAlwC,EAAApzL,KAAAukO,GAEA,IAAA8I,EAAAz6C,EAAA5yL,MAAAukO,EAAApxC,WAAAh0L,OAAAw5L,eAAA4rC,IAAAzgO,KAAA9D,KAAAsjO,IAIA,OAFA+J,EAAAxoN,KAAAgjN,eAAAviO,EAAAwiO,eAAAwF,UACAD,EAAAvC,cAAAxH,EAAAzgO,MACAwqO,EAGA,OAZAt6C,EAAAwxC,EAaCzB,GADDyB,EAbA,GAgBAC,EAAA,SAAA+I,GAGA,SAAA/I,EAAAlB,GACAlwC,EAAApzL,KAAAwkO,GAEA,IAAAgJ,EAAA56C,EAAA5yL,MAAAwkO,EAAArxC,WAAAh0L,OAAAw5L,eAAA6rC,IAAA1gO,KAAA9D,KAAAsjO,IAIA,OAFAkK,EAAA3oN,KAAAgjN,eAAAviO,EAAAwiO,eAAA2F,MACAD,EAAA1C,cAAAxH,EAAAzgO,MACA2qO,EAGA,OAZAz6C,EAAAyxC,EAaC1B,GADD0B,EAbA,GAgBAC,EAAA,SAAAiJ,GAGA,SAAAjJ,EAAAnB,GACAlwC,EAAApzL,KAAAykO,GAEA,IAAAkJ,EAAA/6C,EAAA5yL,MAAAykO,EAAAtxC,WAAAh0L,OAAAw5L,eAAA8rC,IAAA3gO,KAAA9D,KAAAsjO,IAEA/kC,EAAA,IAAAyjB,EAAAl4C,SAAAw5D,EAAAzgO,KAAA1C,IAAA,MAAAmjO,EAAA7iO,MAIA,OAHAktO,EAAA9oN,KAAAgjN,eAAAviO,EAAAwiO,eAAA8F,eACAD,EAAA9oN,KAAA05K,OAAAnvB,aACAu+D,EAAA7C,cAAAxH,EAAAzgO,MACA8qO,EAGA,OAdA56C,EAAA0xC,EAeC3B,GADD2B,EAfA,GAkBAplO,EAAAyjO,aACAzjO,EAAAwjO,wBACAxjO,EAAAulN,sDCp7BAzlN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAskN,wBAEA,IAAAr+M,EAAYC,EAAQ,KAEpBsoO,EAAYtoO,EAAQ,KAEpB2W,EAAc3W,EAAQ,KAEtBC,EAAkBD,EAAQ,KAE1BuoO,EAAavoO,EAAQ,KAErBq4L,EAAiBr4L,EAAQ,KAEzBwoO,EAAexoO,EAAQ,KAEvByoO,EAAsBzoO,EAAQ,KAE9B0oO,EAAe1oO,EAAQ,KAEvBslK,EAActlK,EAAQ,KAEtB2oO,EAAY3oO,EAAQ,KAEpBylK,EAAkBzlK,EAAQ,KAE1B4oO,EAAiB5oO,EAAQ,KAEzB6oO,EAAe7oO,EAAQ,KAEvB68M,EAAgB78M,EAAQ,KAExB8W,EAAmB9W,EAAQ,KAE3B8oO,EAAkB9oO,EAAQ,KAE1B28M,EAAqB38M,EAAQ,KAE7B+oO,EAAa/oO,EAAQ,KAErBo+M,EAAA,WACA,IAAA4qB,GACArpN,mBACA27L,cAAA,EACAC,mBACAC,0BAAAz7M,EAAAkpO,oBAAAC,OACAztB,gBACA9P,oBAEA,SAAAw9B,EAAAt+D,GACA,IAAA3vK,EAAA2vK,EAAA3vK,KACA0iN,EAAA/yC,EAAA+yC,UACA5H,EAAAnrC,EAAAmrC,QACAozB,EAAAv+D,EAAAlrJ,gBACAA,WAAAypN,KACAv8N,EAAAg+J,EAAAh+J,mBAEApS,KAAAS,OACAT,KAAAmjN,YACAnjN,KAAAu7M,UACAv7M,KAAAklB,kBACAllB,KAAAoS,qBAmCA,SAAAuxM,EAAAxR,GACA,IAAAhrC,EAAAnnK,KAEAirK,EAAAknC,EAAAlnC,WACAxqK,EAAA0xM,EAAA1xM,KACA86M,EAAApJ,EAAAoJ,QACA/wL,EAAA2nL,EAAA3nL,UACAs4L,EAAA3Q,EAAA2Q,UACAz3C,EAAA8mC,EAAA9mC,UACAC,EAAA6mC,EAAA7mC,iBACAsjE,EAAAz8B,EAAA54B,QACAA,WAAAq1D,EAAA,KAAAA,EACAx8N,EAAA+/L,EAAA//L,mBAEApS,KAAAirK,aACAjrK,KAAAS,OACAT,KAAAu7M,UACAv7M,KAAAwqB,YACAxqB,KAAA8iN,YACA9iN,KAAAqrK,YACArrK,KAAAsrK,mBACAtrK,KAAAu5K,WAAAg1D,EACAvuO,KAAAoS,qBACApS,KAAA6uO,iBAAA,SAAA9uO,GACA,IAAA+uO,EAAA3nE,EAAAmE,iBAAAvrK,GACA,OAAA+uO,EACAxtO,QAAAC,QAAAutO,GAEA3nE,EAAAo0C,QAAAT,gBAAA,oBAAgE/6M,SAAa6nK,KAAA,SAAA/iJ,GAI7E,OAHAA,EAAAkqN,kBAAAzpO,EAAA0pO,oBAAAC,OACA9nE,EAAAmE,iBAAAvrK,GAAA8kB,GAEAA,KAMA,SAAAqqN,IACAlvO,KAAA4G,QAxEA8nO,EAAA9uO,WACAuvO,UAAA,SAAAC,GACA,OAAAA,aAAA/yN,EAAAiE,YAAAouN,EAAAW,YAAAD,EAAApvO,KAAAS,KAAAT,KAAAmjN,UAAAnjN,KAAAoS,qBAEA+B,OAAA,SAAAi7N,GACA,IACAE,EADAF,EAAAvsO,KACA1C,IAAA,mBAEA,OADAmvO,EAAAtkE,EAAA37J,WAAA4C,MAAAq9N,EAAAtvO,KAAAS,KAAAT,KAAAmjN,UAAAnjN,KAAAoS,oBACApS,KAAAu7M,QAAAT,gBAAA,cAAAs0B,EAAAnqN,MAAAjlB,KAAAklB,iBAAAoqN,EAAAv+N,WAAA62J,KAAA,SAAAyI,GACA,IAAAxrJ,EAAAwrJ,EAAAxrJ,KAIA,OAHAwrJ,EAAA9/J,MACA8/J,EAAA7/J,OAEA,IAAA0L,EAAArX,OAAAggB,EAAA,EAAAA,EAAA/iB,OAAAstO,EAAAvsO,UAIA6rO,EAAAa,YAAA,SAAAH,EAAA3uO,EAAA0R,EAAAC,GACA,IAAAvP,EAAAusO,EAAAvsO,KACA,GAAAA,EAAAP,IAAA,gBAAAO,EAAAP,IAAA,MACA,SAEA,IAAA4P,EAAA84J,EAAA37J,WAAA4C,MAAApP,EAAA1C,IAAA,mBAAAM,EAAA0R,EAAAC,GACA,sBAAAF,EAAAnS,MAAA,cAAAmS,EAAAnS,OAAAmS,EAAAgC,gBAAArR,EAAArB,SAAA,gBAEAktO,EAAAW,YAAA,SAAAD,EAAA3uO,EAAA0R,EAAAC,GACA,IAAAvP,EAAAusO,EAAAvsO,KACA,GAAAA,EAAAP,IAAA,gBAAAO,EAAAP,IAAA,MACA,SAEA,IAAA4P,EAAA84J,EAAA37J,WAAA4C,MAAApP,EAAA1C,IAAA,mBAAAM,EAAA0R,EAAAC,GACA,WAAAF,EAAAnB,UAAA,IAAAmB,EAAAnB,WAAAmB,EAAAgC,gBAAArR,EAAArB,SAAA,gBA2CA0tO,EAAAtvO,WACAwL,MAAA,WACA,UAAApL,KAAAwvO,QANA,OASAxvO,KAAAwvO,QAAA,EACAxvO,KAAAyvO,SAAAtxB,KAAAC,QAEAx3M,MAAA,WACA5G,KAAAyvO,QAAAtxB,KAAAC,MAdA,GAeAp+M,KAAAwvO,QAAA,IA6CA,IAAAE,EAAApuO,QAAAC,UAk4DA,OA/3DAoiN,EAAA/jN,WACA+vO,MAAA,WACA,IAAAC,EAAAh8N,UAAA9R,OAAA,YAAA8R,UAAA,GAAAA,UAAA,GAAA26N,EAEAsB,EAAA1wO,OAAAe,OAAAF,MAEA,OADA6vO,EAAAt2D,QAAAq2D,EACAC,GAGA9rB,cAAA,SAAAZ,GACA,OAAA39M,EAAA1C,QAAAqgN,GACA,SAEA,IAAA52C,EAAAptK,OAAAe,OAAA,MACAijN,EAAAxiN,QACA4rK,EAAA42C,EAAAxiN,WAIA,IAFA,IAAAmvO,GAAA3sB,GACA1iN,EAAAT,KAAAS,KACAqvO,EAAAhuO,QAAA,CACA,IAAAI,EAAAP,EAAAC,EACAsvK,EAAA4+D,EAAA9nO,QACA+nO,EAAA7+D,EAAA/wK,IAAA,aACA,MAAAqF,EAAA1C,QAAAitO,GAAA,CACA,IAAAC,EAAAD,EAAA5tO,UACA,IAAAR,EAAA,EAAAC,EAAAouO,EAAAluO,OAAoDH,EAAAC,EAAQD,IAAA,CAC5DO,EAAA8tO,EAAAruO,GACA,IACAsuO,EADAF,EAAA5vO,IAAA+B,GACA/B,IAAA,MACA,MAAAqF,EAAAxB,QAAAisO,IAAA,WAAAA,EAAAlwO,KACA,UAIA,IAAAmwO,EAAAh/D,EAAA/wK,IAAA,WACA,MAAAqF,EAAA1C,QAAAotO,GAAA,CAGA,IAAAC,EAAAD,EAAA/tO,UACA,IAAAR,EAAA,EAAAC,EAAAuuO,EAAAruO,OAA6CH,EAAAC,EAAQD,IAAA,CACrDO,EAAAiuO,EAAAxuO,GACA,IAAAyuO,EAAAF,EAAAjuO,OAAAC,GACA,MAAAsD,EAAAzD,OAAAquO,GAAA,CACA,GAAA7jE,EAAA6jE,EAAAjtO,YACA,SAEAitO,EAAA3vO,EAAAuB,MAAAouO,GAEA,MAAA5qO,EAAAhB,UAAA4rO,GAAA,CAGA,GAAAA,EAAAvtO,KAAAlC,MAAA,CACA,GAAA4rK,EAAA6jE,EAAAvtO,KAAAlC,OACA,SAEA4rK,EAAA6jE,EAAAvtO,KAAAlC,UAEA,IAAA0vO,EAAAD,EAAAvtO,KAAA1C,IAAA,iBACAqF,EAAA1C,QAAAutO,MAAA1vO,OAAA4rK,EAAA8jE,EAAA1vO,SACAmvO,EAAAtyN,KAAA6yN,GACAA,EAAA1vO,QACA4rK,EAAA8jE,EAAA1vO,eAKA,UAEA2vO,iBAAA,SAAAntB,EAAAotB,EAAAC,EAAA9kN,EAAAmxL,EAAA4zB,GACA,IAAA5tO,EAAA0tO,EAAA1tO,KACAkQ,EAAAlQ,EAAArB,SAAA,UACAilO,EAAA5jO,EAAArB,SAAA,QACAkvO,EAAA7tO,EAAA1C,IAAA,SACA,GAAAuwO,EAAA,CACA,IAAAC,GACA59N,SACA0zN,OACA+J,QACAI,YACAC,aAEAC,EAAAJ,EAAAvwO,IAAA,KACAmvO,EAAA,QACA9pO,EAAAxB,QAAA8sO,EAAA,kBACAH,EAAAC,SAAAF,EAAAvwO,IAAA,SACAwwO,EAAAE,SAAAH,EAAAvwO,IAAA,SACAuwO,EAAApuO,IAAA,QACAgtO,EAAAtkE,EAAA37J,WAAA4C,MAAAy+N,EAAAvwO,IAAA,MAAAH,KAAAS,KAAA0iN,EAAAnjN,KAAAoS,sBAGAo+N,KAAAO,WACAzB,KAAAtkE,EAAA37J,WAAAsD,WAAAjD,IACA8gO,EAAAO,SAAAzB,EAAA//N,OAAAihO,EAAAO,SAAA,IAEArlN,EAAAZ,MAAAxlB,EAAA8gB,IAAA4qN,YAAAL,IAGA,OADAjlN,EAAAZ,MAAAxlB,EAAA8gB,IAAA6qN,uBAAAl+N,EAAA0zN,IACAzmO,KAAAq+M,iBACAl2M,OAAAooO,EACA1zB,OACAsG,UAAAtgN,EAAA1C,IAAA,cAAAgjN,EACAz3L,eACA+kN,iBACO7oE,KAAA,WACPl8I,EAAAZ,MAAAxlB,EAAA8gB,IAAA8qN,wBACAR,GACAhlN,EAAAZ,MAAAxlB,EAAA8gB,IAAA+qN,UAAAR,OAIAS,uBAAA,SAAA5+B,GACA,IAAAtiC,EAAAlwK,KAEAmjN,EAAA3Q,EAAA2Q,UACAisB,EAAA58B,EAAA48B,MACAiC,EAAA7+B,EAAA8+B,SACAA,WAAAD,KACA3lN,EAAA8mL,EAAA9mL,aACA3M,EAAAyzL,EAAAzzL,SACAjC,EAAA01L,EAAA11L,WACAy0N,EAAA/+B,EAAAg/B,+BACAA,WAAAD,KAEA1uO,EAAAusO,EAAAvsO,KACAqkB,EAAArkB,EAAA1C,IAAA,aACAgnB,EAAAtkB,EAAA1C,IAAA,cACA,KAAA+mB,MAAA5hB,EAAAge,OAAA4D,IAAAC,MAAA7hB,EAAAge,OAAA6D,IAEA,SADA7hB,EAAA2O,MAAA,iDACA3S,QAAAC,UAEA,IAMA+lB,EAAA6B,EANA03L,EAAA7gN,KAAAu5K,QAAAsnC,aACA,QAAAA,GAAA35L,EAAAC,EAAA05L,EAEA,SADAv7M,EAAA2O,MAAA,wDACA3S,QAAAC,UAIA,GAFAsB,EAAA1C,IAAA,kBAEA,CACA,IAAAoQ,EAAA1N,EAAA1C,IAAA,aACAqQ,EAAA3N,EAAA1C,IAAA,cACAsxO,EAAAlhO,EAAA,KACAmhO,EAAAtC,EAAA3qO,SAAAgtO,EAAAjhO,GACA2D,EAAAtR,EAAArB,SAAA,cAiBA,OAhBA8lB,EAAAgnN,EAAAqD,SAAAC,YACAF,WACAnhO,QACAC,SACAqhO,wBAAAzC,aAAAlzN,EAAAhX,aACA4sO,gBAAA39N,KAAA,QAEAqX,UACArC,GAAA7B,GACAoE,EAAAZ,MAAAxlB,EAAA8gB,IAAA4B,sBAAAmB,GACApK,IACAjC,EAAAiC,IACAnb,GAAA0B,EAAA8gB,IAAA4B,sBACAmB,SAGA7nB,QAAAC,UAEA,IAAAwwO,EAAAlvO,EAAA1C,IAAA,kBACAozN,EAAA1wN,EAAA1C,IAAA,YAEA,GAAAmxO,IAAAS,IAAAxe,KAAA6b,aAAA/yN,EAAAiE,aAAA4G,EAAAC,EADA,IAWA,OAFAG,EAPA,IAAAgnN,EAAAqD,UACAlxO,KAAAT,KAAAS,KACA0R,IAAAgxM,EACAisB,QACAkC,WACAl/N,mBAAApS,KAAAoS,qBAEA4/N,oBACAtmN,EAAAZ,MAAAxlB,EAAA8gB,IAAAE,yBAAAgB,IACAhmB,QAAAC,UAEA,IAAAw/M,EAAAywB,EAAAlsO,EAAAkpO,oBAAAS,KAAAjvO,KAAAu5K,QAAAwnC,0BACApgN,EAAA,OAAAX,KAAA8iN,UAAAC,cACA,GAAAhC,IAAAz7M,EAAAkpO,oBAAAS,OAAA8C,IAAAxe,GAAA6b,aAAA/yN,EAAAiE,YAAAouN,EAAAa,YAAAH,EAAApvO,KAAAS,KAAA0iN,EAAAnjN,KAAAoS,oBACA,OAAApS,KAAAu7M,QAAAT,gBAAA,OAAAn6M,EAAAX,KAAAwqB,UAAA,aAAA4kN,EAAAnqN,MAAAjlB,KAAAu5K,QAAAr0J,mBAAA0iJ,KAAA,WACAl8I,EAAAV,cAAArqB,GACAwoB,GAAAxoB,EAAAumB,EAAAC,GACAuE,EAAAZ,MAAAxlB,EAAA8gB,IAAA6rN,iBAAA9oN,GACApK,IACAjC,EAAAiC,IACAnb,GAAA0B,EAAA8gB,IAAA6rN,iBACA9oN,UAGS,SAAAgyL,GAET,SADA71M,EAAA2O,MAAA,sDAAAknM,KAAAj+B,UACAhN,EAAAkhE,wBACAjuB,YACAisB,QACAkC,WACA5lN,eACA3M,WACAjC,aACA00N,sCAIA,IAAAU,EAAA,KAkCA,OAjCAnxB,IAAAz7M,EAAAkpO,oBAAAC,SAAAW,aAAA/yN,EAAAiE,YAAAizM,aAAAl3M,EAAAiE,YAAAyxN,aAAA11N,EAAAiE,cACA4xN,EAAA,IAAAxD,GACAjuO,KAAAT,KAAAS,KACA0iN,YACA5H,QAAAv7M,KAAAu7M,QACAr2L,gBAAAllB,KAAAu5K,QAAAr0J,gBACA9S,mBAAApS,KAAAoS,sBAGAsZ,EAAAV,cAAArqB,GACAwoB,GAAAxoB,EAAAumB,EAAAC,GACAmnN,EAAAqD,SAAAQ,YACA52B,QAAAv7M,KAAAu7M,QACA96M,KAAAT,KAAAS,KACA0R,IAAAgxM,EACAisB,QACAkC,WACAc,cAAAF,EACA9/N,mBAAApS,KAAAoS,qBACOw1J,KAAA,SAAAyqE,GACP,IAAA/qN,EAAA+qN,EAAAL,oBACA9hE,EAAAqrC,QAAA9vL,KAAA,OAAA9qB,EAAAuvK,EAAA1lJ,UAAA,QAAAlD,MAAAzC,KAAA9d,WACO84M,MAAA,SAAA1E,MACP71M,EAAA2O,MAAA,2BAAAknM,GACAjrC,EAAAqrC,QAAA9vL,KAAA,OAAA9qB,EAAAuvK,EAAA1lJ,UAAA,iBAEAkB,EAAAZ,MAAAxlB,EAAA8gB,IAAA6C,kBAAAE,GACApK,IACAjC,EAAAiC,IACAnb,GAAA0B,EAAA8gB,IAAA6C,kBACAE,SAGA7nB,QAAAC,WAGA+wO,YAAA,SAAA9B,EAAArtB,EAAAz3L,EAAAmxL,EAAA01B,GACA,IAAAC,EAAAhC,EAAArwO,IAAA,KACAsyO,GACA5mE,QAAA2kE,EAAArwO,IAAA,KAAAJ,KACAgxO,SAAAP,EAAArwO,IAAA,OAEAuyO,EAAAlC,EAAArwO,IAAA,MACA,MAAAiiN,EAAArR,eAAA2hC,GAAA,CAIA,IAHA,IAAAC,EAAA3yO,KAAAoS,mBAAAlS,OAAAwyO,GACAE,EAAA,IAAAhtO,WAAA,KACA0tL,EAAA,IAAA5+K,aAAA,GACA/S,EAAA,EAAuBA,EAAA,IAASA,IAChC2xL,EAAA,GAAA3xL,EAAA,IACAgxO,EAAAr/C,EAAA,EAAAA,EAAA,GACAs/C,EAAAjxO,GAAA,IAAA2xL,EAAA,KAEAm/C,EAAAG,cAEA,OAAA5yO,KAAAswO,iBAAAntB,EAAAqvB,EAAAC,EAAA/mN,EAAAmxL,EAAA01B,EAAAx0N,MAAA4xN,UAEAkD,iBAAA,SAAAjvO,EAAAulB,EAAAg6L,EAAA39L,EAAAstN,EAAApnN,EAAAmxL,GACA,IAAAnkC,EAAA14K,KAEA+yO,EAAA,IAAA7wB,EAAA98L,aACA4tN,GAAAF,EAAA3yO,IAAA,aAAAgjN,GACA8vB,EAAAztO,EAAAjF,KAAAmC,MAAA1C,KAAAS,KAAAuyO,GACA,OAAAhzO,KAAAq+M,iBACAl2M,OAAAqd,EACAq3L,OACAsG,UAAA8vB,EACAvnN,aAAAqnN,IACOnrE,KAAA,WACP,SAAAqmE,EAAAiF,qBACAltN,QAAA+sN,EAAA/sN,QACAC,UAAA8sN,EAAA9sN,WACS6sN,EAAA3pN,KACFy+I,KAAA,SAAAurE,GACPznN,EAAAR,gBAAA6nN,EAAAroN,cACAgB,EAAAZ,MAAAlnB,EAAAuvO,IACO,SAAAh4B,GACP,GAAAziC,EAAAa,QAAAynC,aAGA,OAFAtoC,EAAA6iC,QAAA9vL,KAAA,sBAAqD8yL,UAAAj5M,EAAAk5M,qBAAAC,iBACrDn5M,EAAA2O,MAAA,yCAAAknM,EAAA,MAGA,MAAAA,KAIAi4B,cAAA,SAAAjwB,EAAAkwB,EAAAC,EAAA5nN,EAAAmxL,EAAA9+L,GACA,IAEAw1N,EAFAntB,EAAApmN,KAOA,OAJAqzO,IAEAE,GADAF,IAAAxxO,SACA,GAAA9B,MAEAC,KAAAwzO,SAAAD,EAAAD,EAAAnwB,GAAAv7C,KAAA,SAAAoI,GACA,OAAAA,EAAAyjE,KAAAC,YAGA1jE,EAAA2jE,cAAAvtB,EAAAjD,EAAAz3L,EAAAmxL,GAAAj1C,KAAA,WACA,OAAAoI,IACS6vC,MAAA,SAAA1E,GAET,OADAiL,EAAA7K,QAAA9vL,KAAA,sBAAqD8yL,UAAAj5M,EAAAk5M,qBAAAi1B,OACrD,IAAAG,EAAA,mBAAA9F,EAAA+F,UAAA,0BAAA14B,GAAAnrC,EAAAyjE,QANAzjE,IAQOpI,KAAA,SAAAoI,GAGP,OAFAjyJ,EAAA01N,KAAAzjE,EAAAyjE,KACAzjE,EAAAvkJ,KAAA26L,EAAA7K,SACAvrC,EAAA8jE,cAGAC,WAAA,SAAA7jC,EAAAnyL,GACA,IAAAosN,EAAAnqO,KAEAyzO,EAAA11N,EAAA01N,KACAO,EAAAP,EAAAQ,cAAA/jC,GACAgkC,KAAAn2N,EAAAo2N,kBAAA7uO,EAAA8uO,kBAAAC,kBACA,GAAAZ,EAAA5uN,OAAAqvN,GAAAl0O,KAAAu5K,QAAAunC,iBAAA,YAAA/iM,EAAAu2N,eAAAv0O,MAOA,IANA,IAAAw0O,EAAA,SAAAC,GACA,IAAAf,EAAAgB,SAAAC,aAAAF,GAAA,CACA,IAAAG,EAAAlB,EAAAgB,SAAAG,UAAAJ,GACArK,EAAA5uB,QAAA9vL,KAAA,aAAAgoN,EAAAK,WAAA,SAAAU,EAAA,WAAAG,MAGAhzO,EAAA,EAAAC,EAAAoyO,EAAAlyO,OAA2CH,EAAAC,EAAQD,IAAA,CACnD,IAAAkzO,EAAAb,EAAAryO,GACA4yO,EAAAM,EAAAL,UACA,IAAAM,EAAAD,EAAAC,OACAA,KAAAN,UACAD,EAAAO,EAAAN,UAIA,OAAAR,GAEAe,UAAA,SAAA5xB,EAAA6xB,EAAAtpN,EAAAmxL,EAAA01B,GAuEA,IAtEA,IAAA3H,EAAA5qO,KAEAi1O,KACAC,EAAAF,EAAA7yO,UACA8kK,EAAA3lK,QAAAC,UAEA4zO,EAAA,WACA,IAAAjzO,EAAAgzO,EAAAvzO,GACArC,EAAA01O,EAAA70O,IAAA+B,GACA,OAAAA,GACA,WACA,MACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA+yO,EAAAz3N,MAAAtb,EAAA5C,IACA,MACA,WACA2nK,IAAAW,KAAA,WACA,OAAAgjE,EAAAwI,cAAAjwB,EAAA,KAAA7jN,EAAA,GAAAosB,EAAAmxL,EAAA01B,EAAAx0N,OAAA6pJ,KAAA,SAAAksE,GACApoN,EAAAV,cAAA8oN,GACAmB,EAAAz3N,MAAAtb,GAAA4xO,EAAAx0O,EAAA,UAGA,MACA,SACA21O,EAAAz3N,MAAAtb,EA9ZA,SAAA5C,GACA,OAAAkG,EAAAxB,QAAA1E,GACA,oBAEA,OAAAA,EAAAS,MACA,aACA,iBACA,oBACA,eACA,iBACA,aACA,eACA,cACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,oBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,iBACA,mBACA,gBACA,kBACA,UACA,YACA,iBACA,mBACA,YACA,cACA,iBACA,mBAGA,SADAuF,EAAA2O,MAAA,2BAAA3U,EAAAS,MACA,cAxCA,CA8ZAT,KACA,MACA,YACA,MAAAkG,EAAAxB,QAAA1E,EAAA,SACA21O,EAAAz3N,MAAAtb,OACA,SAEAsD,EAAA1C,QAAAxD,IACA2nK,IAAAW,KAAA,WACA,OAAAgjE,EAAA0H,YAAAhzO,EAAA6jN,EAAAz3L,EAAAmxL,EAAA01B,KAEA0C,EAAAz3N,MAAAtb,SAAA,EAEAoD,EAAA2O,MAAA,0BAEA,MACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,YACA3O,EAAA+Q,MAAA,0BAAAnU,GACA,MACA,WACAoD,EAAA+Q,MAAA,kCAAAnU,KAKAP,EAAA,EAAAC,EAAAszO,EAAApzO,OAA6CH,EAAAC,EAAQD,IACrDwzO,IAEA,OAAAluE,EAAAW,KAAA,WACAqtE,EAAAnzO,OAAA,GACA4pB,EAAAZ,MAAAxlB,EAAA8gB,IAAA2uN,WAAAE,OAIAzB,SAAA,SAAAD,EAAAE,EAAAtwB,GACA,IAAA6nB,EAAAhrO,KAEA,SAAAo1O,IACA,OAAA9zO,QAAAC,QAAA,IAAAqyO,EAAA,mBAAA9F,EAAA+F,UAAA,QAAAN,EAAA,qBAAAE,IAEA,IAAAH,EACA7yO,EAAAT,KAAAS,KACA,GAAAgzO,EAAA,CACA,OAAAjuO,EAAAzD,OAAA0xO,GACA,UAAA/2N,MAAA,4CAEA42N,EAAAG,MACO,CACP,IAAA4B,EAAAlyB,EAAAhjN,IAAA,QACA,IAAAk1O,EAIA,SADA/vO,EAAA2O,MAAA,yBACAmhO,IAHA9B,EAAA+B,EAAApzO,OAAAsxO,GAMA,IAAAD,EAEA,SADAhuO,EAAA2O,MAAA,yBACAmhO,IAEA,GAAAp1O,KAAAqrK,UAAA/oK,IAAAgxO,GACA,OAAAtzO,KAAAqrK,UAAAlrK,IAAAmzO,GAGA,GADAG,EAAAhzO,EAAAU,WAAAmyO,OACA9tO,EAAA1C,QAAA2wO,GACA,OAAA2B,IAEA,GAAA3B,EAAAzjE,WACA,OAAAyjE,EAAAzjE,WAEA,IAIAslE,EAmCAC,EAvCAC,KAAAlwO,EAAAyhK,2BACA0uE,EAAAz1O,KAAA01O,gBAAAjC,GACAnhD,EAAAmjD,EAAAnjD,WACAqjD,KAAAnwO,EAAAzD,OAAAuxO,GAKA,GAHAqC,IACAL,EAAAhC,EAAAnwO,eAEAqC,EAAA1C,QAAAwvL,GAAA,CACAA,EAAAsjD,cACAtjD,EAAAsjD,YAAAz2O,OAAAe,OAAA,OAEA,IAAA01O,EAAAtjD,EAAAsjD,YACAp7C,EAAAi7C,EAAAj7C,KACA,GAAAo7C,EAAAp7C,GAAA,CACA,IAAAq7C,EAAAD,EAAAp7C,GAAA72L,SACA,GAAAgyO,GAAAE,GAAA71O,KAAAqrK,UAAA/oK,IAAAuzO,GAEA,OADA71O,KAAAqrK,UAAA3nK,SAAA4vO,EAAAuC,GACA71O,KAAAqrK,UAAAlrK,IAAAmzO,QAGAsC,EAAAp7C,IAA+B86C,OAAAxH,EAAAgI,KAAAC,aAE/BJ,IACAC,EAAAp7C,GAAA72L,SAAA2vO,GAEAgC,EAAAM,EAAAp7C,GAAA86C,OAEAK,EACA31O,KAAAqrK,UAAA9nK,IAAA+vO,EAAAkC,EAAAvuE,UAEAquE,IACAA,EAAAt1O,KAAA8iN,UAAAC,eAEA/iN,KAAAqrK,UAAA9nK,IAAA,MAAA+xO,EAAAE,EAAAvuE,aAEA3hK,EAAA2Y,QAAAq3N,EAAA,iCACA7B,EAAAK,WAAA,KAAA9zO,KAAAirK,WAAAwxC,MAAA,KAAA64B,EACA7B,EAAAzjE,WAAAwlE,EAAAvuE,QAEA,IACAsuE,EAAAv1O,KAAAg2O,cAAAP,GACO,MAAA35N,GACPy5N,EAAAj0O,QAAAomK,OAAA5rJ,GAoBA,OAlBAy5N,EAAA3tE,KAAA,SAAAquE,YACAA,EAAAC,WACAz1O,EAAAuf,MAAAyyJ,UACAwjE,EAAAC,cAEAV,EAAAj0O,QAAA,IAAAqyO,EAAAH,EAAAK,WAAAmC,EAAAxC,MACO5zB,MAAA,SAAA1E,GACP6vB,EAAAzvB,QAAA9vL,KAAA,sBAAmD8yL,UAAAj5M,EAAAk5M,qBAAAi1B,OACnD,IACA,IAAAnhD,EAAAmjD,EAAAnjD,WACA6jD,EAAA7jD,KAAAnyL,IAAA,aACA0rK,EAAAsqE,KAAAh2O,IAAA,WACA+1O,KAAApI,EAAAsI,aAAAX,EAAAvxO,KAAA2nK,KAAA9rK,MACAU,EAAAuf,MAAAyyJ,UACAyjE,MACS,MAAAl1N,IACTw0N,EAAAj0O,QAAA,IAAAqyO,EAAAH,EAAAK,WAAA,IAAAhG,EAAA+F,UAAA14B,aAAAz+L,MAAAy+L,EAAAj+B,QAAAi+B,GAAAs4B,MAEA+B,EAAAvuE,SAEAstE,UAAA,SAAA7oN,EAAA9nB,EAAAulB,GACA,IAAAktN,EAAA3qN,EAAA5pB,OAAA,EAIA,GAHAqnB,IACAA,MAEAktN,EAAA,GAAA3qN,EAAA1F,QAAAqwN,KAAA/wO,EAAA8gB,IAAAkwN,cACA5qN,EAAAZ,MAAAxlB,EAAA8gB,IAAAkwN,gBAAA1yO,GAAAulB,QACO,CACP,IAAAotN,EAAA7qN,EAAAzF,UAAAowN,GACAE,EAAA,GAAA/4N,KAAA5Z,GACAnC,MAAA7B,UAAA4d,KAAAo7L,MAAA29B,EAAA,GAAAptN,KAGAqtN,aAAA,SAAA9qN,EAAA9nB,EAAAulB,EAAAjX,EAAAqkN,EAAApT,EAAAtG,GACA,IACAr3L,EADAixN,EAAAttN,IAAArnB,OAAA,GAEA,MAAA0D,EAAAxB,QAAAyyO,KAAAjxN,EAAA+wM,EAAAp2N,IAAAs2O,EAAA12O,OAAA,CACA,IAAA8C,KAAA2C,EAAAhB,UAAAghB,KAAA3iB,KAAA2iB,EACAkxN,EAAA7zO,EAAA1C,IAAA,eACA,GA1hBA,IA0hBAu2O,EAAA,CACA,IAAAv+N,EAAAjG,EAAAsC,KAAAtC,EAAAsC,KAAAjF,OAAA4Z,EAAA,QACA,OAAAnpB,KAAA6yO,iBAAAjvO,EAAAuU,EAAAgrM,EAAA39L,EAAA3iB,EAAA6oB,EAAAmxL,GACS,GA5hBT,IA4hBS65B,EAAA,CACT,IAAAC,EAAA9zO,EAAA1C,IAAA,WACA4S,EAAAlQ,EAAArB,SAAA,UAGA,OAFAgkB,EAAAyoN,EAAA2I,QAAAC,aAAAF,EAAA5jO,EAAA/S,KAAAS,KAAA0iN,EAAAnjN,KAAAu7M,QAAAv7M,KAAAoS,oBACAsZ,EAAAZ,MAAAlnB,EAAA4hB,EAAAP,SACA3jB,QAAAC,UAEA,OAAAD,QAAAomK,OAAA,IAAAhrJ,MAAA,wBAAAg6N,IAGA,OADAhrN,EAAAZ,MAAAlnB,EAAAulB,GACA7nB,QAAAC,WAEA88M,gBAAA,SAAA5L,GACA,IAAA04B,EAAAnrO,KAEAmI,EAAAsqM,EAAAtqM,OACA00M,EAAApK,EAAAoK,KACAsG,EAAA1Q,EAAA0Q,UACAz3L,EAAA+mL,EAAA/mL,aACAorN,EAAArkC,EAAAg+B,aACAA,WAAAqG,EAAA,KAAAA,EAIA,GAFA3zB,KAAA39M,EAAAjF,KAAAkC,MACAguO,KAAA,IAAAsG,GACArrN,EACA,UAAAhP,MAAA,qDAEA,IAAAm2K,EAAA7yL,KACAS,EAAAT,KAAAS,KACAqc,EAAA3d,OAAAe,OAAA,MACA82O,EAAA7zB,EAAAhjN,IAAA,YAAAqF,EAAAjF,KAAAkC,MACA8zN,EAAApT,EAAAhjN,IAAA,YAAAqF,EAAAjF,KAAAkC,MACA8vO,EAAA,IAAA0E,EAAAxG,GACAyG,EAAA,IAAAC,EAAAhvO,EAAA1H,EAAA8xO,GACA6E,EAAA,IAAAlI,EACA,SAAAmI,EAAAC,GACA,QAAA31O,EAAA,EAAAC,EAAAs1O,EAAAK,iBAA2D51O,EAAAC,EAAQD,IACnE+pB,EAAAZ,MAAAxlB,EAAA8gB,IAAAG,YAGA,WAAAjlB,QAAA,SAAAk2O,EAAAj2O,EAAAmmK,GACA,IAAAgD,EAAA,SAAAzD,GACAA,EAAAW,KAAA,WACA,IACA4vE,EAAAj2O,EAAAmmK,GACa,MAAA1mJ,GACb0mJ,EAAA1mJ,KAEW0mJ,IAEXm1C,EAAA7C,sBACAo9B,EAAAxwO,QAMA,IALA,IAAA6wO,EAEA91O,EACAC,EACAsQ,EAHAmmM,OAIAo/B,EAAAL,EAAAhsO,WACAitM,EAAAlvL,KAAA,KACA+tN,EAAAvvE,KAAA0wC,KAFA,CAKA,IAAAlvL,EAAAkvL,EAAAlvL,KACAvlB,EAAAy0M,EAAAz0M,GACA,SAAAA,GACA,KAAA0B,EAAA8gB,IAAAsxN,aACA,IAAA33O,EAAAopB,EAAA,GAAAppB,KACA,GAAAA,YAAA+c,EAAA/c,GAAA,CACA2rB,EAAAZ,MAAAhO,EAAA/c,GAAA6D,GAAAkZ,EAAA/c,GAAAopB,MACAA,EAAA,KACA,SAiDA,YA/CAuhJ,EAAA,IAAAppK,QAAA,SAAAq2O,EAAAC,GACA,IAAA73O,EACA,UAAAuF,EAAAyD,YAAA,wCAEA,IAAAwnO,EAAAyG,EAAA72O,IAAAJ,GACA,IAAAwwO,EAGA,OAFA7kN,EAAAZ,MAAAlnB,EAAAulB,QACAwuN,IAGA,OAAAnyO,EAAAhB,UAAA+rO,GACA,UAAAjrO,EAAAyD,YAAA,8BAEA,IAAA7E,EAAAqsO,EAAA1tO,KAAA1C,IAAA,WACA,OAAAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,sCAEA,YAAA7E,EAAAnE,KAMA,OALAwyO,EAAAlsN,YACAwsK,EAAAy9C,iBAAAntB,EAAAotB,EAAA,KAAA7kN,EAAAmxL,EAAA01B,EAAAx0N,MAAA4xN,SAAA/nE,KAAA,WACA2qE,EAAAhsN,UACAoxN,KACmBC,GAEF,aAAA1zO,EAAAnE,KAAA,CASA,UAAAmE,EAAAnE,KAGjB,UAAAuF,EAAAyD,YAAA,6BAAA7E,EAAAnE,SAFAuF,EAAA+Q,MAAA,8BAIAshO,SAbA9kD,EAAAu+C,wBACAjuB,YACAisB,MAAAmB,EACA7kN,eACA3M,SAAAhf,EACA+c,eACmB8qJ,KAAA+vE,EAAAC,KAQJ/3B,MAAA,SAAA1E,GACf,GAAAtoB,EAAAtZ,QAAAynC,aAGA,OAFAnuB,EAAA0oB,QAAA9vL,KAAA,sBAA2D8yL,UAAAj5M,EAAAk5M,qBAAAC,iBAC3Dn5M,EAAA2O,MAAA,wCAAAknM,EAAA,MAGA,MAAAA,KAGA,KAAA71M,EAAA8gB,IAAAkD,QACA,IAAAuuN,EAAA1uN,EAAA,GAKA,YAJAuhJ,EAAAmoB,EAAAugD,cAAAjwB,EAAAh6L,EAAA,KAAAuC,EAAAmxL,EAAA01B,EAAAx0N,OAAA6pJ,KAAA,SAAAksE,GACApoN,EAAAV,cAAA8oN,GACApoN,EAAAZ,MAAAxlB,EAAA8gB,IAAAkD,SAAAwqN,EAAA+D,OAGA,KAAAvyO,EAAA8gB,IAAA0xN,eACA,IAAA/4N,EAAAoK,EAAA,GAAApK,SACA,GAAAA,EAAA,CACA,IAAAI,EAAArC,EAAAiC,GACA,YAAAI,EAAA,CACAuM,EAAAZ,MAAA3L,EAAAvb,GAAAub,EAAAgK,MACAA,EAAA,KACA,UAWA,YARAuhJ,EAAAmoB,EAAAu+C,wBACAjuB,YACAisB,MAAAjmN,EAAA,GACAmoN,YACA5lN,eACA3M,WACAjC,gBAGA,KAAAxX,EAAA8gB,IAAAoD,SACAL,EAAA,GAAA0pK,EAAAkhD,WAAA5qN,EAAA,GAAAopN,EAAAx0N,OACA,MACA,KAAAzY,EAAA8gB,IAAA2xN,eACA,IAAA5tE,EAAAhhJ,EAAA,GACA6uN,KACAC,EAAA9tE,EAAAroK,OACAic,EAAAw0N,EAAAx0N,MACA,IAAApc,EAAA,EAAyBA,EAAAs2O,IAAet2O,EAAA,CACxC,IAAAu2O,EAAA/tE,EAAAxoK,MACA2D,EAAA8P,UAAA8iO,GACAz2O,MAAA7B,UAAA4d,KAAAo7L,MAAAo/B,EAAAnlD,EAAAkhD,WAAAmE,EAAAn6N,OACiBzY,EAAAge,OAAA40N,IACjBF,EAAAx6N,KAAA06N,GAGA/uN,EAAA,GAAA6uN,EACAp0O,EAAA0B,EAAA8gB,IAAAoD,SACA,MACA,KAAAlkB,EAAA8gB,IAAA+xN,iBACAzsN,EAAAZ,MAAAxlB,EAAA8gB,IAAAgyN,UACAjvN,EAAA,GAAA0pK,EAAAkhD,WAAA5qN,EAAA,GAAAopN,EAAAx0N,OACAna,EAAA0B,EAAA8gB,IAAAoD,SACA,MACA,KAAAlkB,EAAA8gB,IAAAiyN,2BACA3sN,EAAAZ,MAAAxlB,EAAA8gB,IAAAgyN,UACA1sN,EAAAZ,MAAAxlB,EAAA8gB,IAAAkyN,gBAAAnvN,EAAAnhB,UACA0jB,EAAAZ,MAAAxlB,EAAA8gB,IAAAmyN,gBAAApvN,EAAAnhB,UACAmhB,EAAA,GAAA0pK,EAAAkhD,WAAA5qN,EAAA,GAAAopN,EAAAx0N,OACAna,EAAA0B,EAAA8gB,IAAAoD,SACA,MACA,KAAAlkB,EAAA8gB,IAAAoyN,qBACAjG,EAAAx0N,MAAAo2N,kBAAAhrN,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAAqyN,kBACAlG,EAAAx0N,MAAAu2N,eAAAtpE,EAAA37J,WAAA4C,MAAAkX,EAAA,GAAA1oB,EAAA0iN,EAAAtwB,EAAAzgL,oBACA,SACA,KAAA9M,EAAA8gB,IAAAsyN,oBACAnG,EAAAx0N,MAAA46N,iBAAA3tE,EAAA37J,WAAA4C,MAAAkX,EAAA,GAAA1oB,EAAA0iN,EAAAtwB,EAAAzgL,oBACA,SACA,KAAA9M,EAAA8gB,IAAAwyN,aACA1mO,EAAAqgO,EAAAx0N,MAAAu2N,eACAnrN,EAAAjX,EAAA3C,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAAyyN,gBACA,MACA,KAAAvzO,EAAA8gB,IAAA0yN,eACA5mO,EAAAqgO,EAAAx0N,MAAA46N,iBACAxvN,EAAAjX,EAAA3C,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAA2yN,kBACA,MACA,KAAAzzO,EAAA8gB,IAAA4yN,YACAzG,EAAAx0N,MAAAu2N,eAAAtpE,EAAA37J,WAAAsD,WAAAC,KACAuW,EAAA6hJ,EAAA37J,WAAAsD,WAAAC,KAAArD,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAAyyN,gBACA,MACA,KAAAvzO,EAAA8gB,IAAA6yN,cACA1G,EAAAx0N,MAAA46N,iBAAA3tE,EAAA37J,WAAAsD,WAAAC,KACAuW,EAAA6hJ,EAAA37J,WAAAsD,WAAAC,KAAArD,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAA2yN,kBACA,MACA,KAAAzzO,EAAA8gB,IAAA8yN,iBACA3G,EAAAx0N,MAAAu2N,eAAAtpE,EAAA37J,WAAAsD,WAAAE,KACAsW,EAAA6hJ,EAAA37J,WAAAsD,WAAAE,KAAAtD,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAAyyN,gBACA,MACA,KAAAvzO,EAAA8gB,IAAA+yN,mBACA5G,EAAAx0N,MAAA46N,iBAAA3tE,EAAA37J,WAAAsD,WAAAE,KACAsW,EAAA6hJ,EAAA37J,WAAAsD,WAAAE,KAAAtD,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAA2yN,kBACA,MACA,KAAAzzO,EAAA8gB,IAAAyyN,gBACAtG,EAAAx0N,MAAAu2N,eAAAtpE,EAAA37J,WAAAsD,WAAAjD,IACAyZ,EAAA6hJ,EAAA37J,WAAAsD,WAAAjD,IAAAH,OAAA4Z,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAA2yN,kBACAxG,EAAAx0N,MAAA46N,iBAAA3tE,EAAA37J,WAAAsD,WAAAjD,IACAyZ,EAAA6hJ,EAAA37J,WAAAsD,WAAAjD,IAAAH,OAAA4Z,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAAgzN,cAEA,gBADAlnO,EAAAqgO,EAAAx0N,MAAAu2N,gBACAv0O,KAEA,YADA2qK,EAAAmoB,EAAA2jD,aAAA9qN,EAAApmB,EAAA8gB,IAAAgzN,cAAAjwN,EAAAjX,EAAAqkN,EAAApT,EAAAtG,IAGA1zL,EAAAjX,EAAA3C,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAAyyN,gBACA,MACA,KAAAvzO,EAAA8gB,IAAAizN,gBAEA,gBADAnnO,EAAAqgO,EAAAx0N,MAAA46N,kBACA54O,KAEA,YADA2qK,EAAAmoB,EAAA2jD,aAAA9qN,EAAApmB,EAAA8gB,IAAAizN,gBAAAlwN,EAAAjX,EAAAqkN,EAAApT,EAAAtG,IAGA1zL,EAAAjX,EAAA3C,OAAA4Z,EAAA,GACAvlB,EAAA0B,EAAA8gB,IAAA2yN,kBACA,MACA,KAAAzzO,EAAA8gB,IAAAkzN,YACA,IAAAC,EAAAp2B,EAAAhjN,IAAA,WACA,IAAAo5O,EACA,UAAAj0O,EAAAyD,YAAA,6BAEA,IAAA4tO,EAAA4C,EAAAp5O,IAAAgpB,EAAA,GAAAppB,MACA,IAAA42O,EACA,UAAArxO,EAAAyD,YAAA,2BAEA,IACAywO,EADAvL,EAAA2I,QAAAC,aAAAF,EAAA,KAAAl2O,EAAA0iN,EAAAtwB,EAAA0oB,QAAA1oB,EAAAzgL,oBACA6S,QACAkE,GAAAqwN,GACA51O,EAAA0B,EAAA8gB,IAAAkzN,YACA,MACA,KAAAh0O,EAAA8gB,IAAA2uN,UACA,IAAA0E,EAAAtwN,EAAA,GACAuwN,EAAAv2B,EAAAhjN,IAAA,aACA,OAAAqF,EAAA1C,QAAA42O,OAAAp3O,IAAAm3O,EAAA15O,MACA,MAEA,IAAAi1O,EAAA0E,EAAAv5O,IAAAs5O,EAAA15O,MAEA,YADA2qK,EAAAmoB,EAAAkiD,UAAA5xB,EAAA6xB,EAAAtpN,EAAAmxL,EAAA01B,IAEA,KAAAjtO,EAAA8gB,IAAAuzN,OACA,KAAAr0O,EAAA8gB,IAAAwzN,OACA,KAAAt0O,EAAA8gB,IAAAyzN,QACA,KAAAv0O,EAAA8gB,IAAA0zN,SACA,KAAAx0O,EAAA8gB,IAAA2zN,SACA,KAAAz0O,EAAA8gB,IAAA4zN,UAGA,KAAA10O,EAAA8gB,IAAAg/M,UACAvyC,EAAA0hD,UAAA7oN,EAAA9nB,EAAAulB,GACA,SACA,KAAA7jB,EAAA8gB,IAAA6zN,UACA,KAAA30O,EAAA8gB,IAAA8zN,eACA,KAAA50O,EAAA8gB,IAAA+zN,mBACA,KAAA70O,EAAA8gB,IAAAg0N,wBACA,KAAA90O,EAAA8gB,IAAAi0N,iBACA,KAAA/0O,EAAA8gB,IAAAk0N,YACA,KAAAh1O,EAAA8gB,IAAAm0N,UACA,SACA,QACA,UAAApxN,EAAA,CACA,IAAAxnB,EAAA,EAAAC,EAAAunB,EAAArnB,OAA6CH,EAAAC,KAC7CunB,EAAAxnB,aAAA6D,EAAAjF,MADqDoB,KAKrD,GAAAA,EAAAC,EAAA,IACA0D,EAAA2O,MAAA,wCAAArQ,GACA,WAIA8nB,EAAAZ,MAAAlnB,EAAAulB,GAEAsuN,EACA/sE,EAAAglE,IAGA2H,IACA91O,OACOs+M,MAAA,SAAA1E,GACP,GAAAgwB,EAAA5xD,QAAAynC,aAIA,OAHAmqB,EAAA5vB,QAAA9vL,KAAA,sBAAqD8yL,UAAAj5M,EAAAk5M,qBAAAC,aACrDn5M,EAAA2O,MAAA,kDAAA4oM,EAAA98M,WACAs3O,IAGA,MAAAl8B,KAGAoJ,eAAA,SAAA7R,GACA,IAAAi5B,EAAA3rO,KAEAmI,EAAAuqM,EAAAvqM,OACA00M,EAAAnK,EAAAmK,KACAsG,EAAAzQ,EAAAyQ,UACAq3B,EAAA9nC,EAAA6/B,aACAA,WAAAiI,EAAA,KAAAA,EACAC,EAAA/nC,EAAAwM,oBACAA,WAAAu7B,KACAC,EAAAhoC,EAAAyM,iBACAA,WAAAu7B,KACA77B,EAAAnM,EAAAmM,KACA87B,EAAAjoC,EAAAkoC,WACAA,WAAAD,EAAAx7O,OAAAe,OAAA,MAAAy6O,EAEAx3B,KAAA39M,EAAAjF,KAAAkC,MACA8vO,KAAA,IAAA0E,EAAA,IAAA4D,GACA,IA8BAC,EA9BAC,EAAA,MACAC,GACA3uE,SACA4uE,OAAA97O,OAAAe,OAAA,OAEAg7O,GACA/tO,eACA/J,OACAmN,MAAA,EACAC,OAAA,EACA2qO,YACAC,iBAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,aAAAC,IACAC,kBAAAD,IACAE,mBAAA,EACAC,uBACAp3N,UAAA,KACA+uN,SAAA,MAEAsI,EAAA,GACAC,EAAA,IACAC,EAAA,EACAlpD,EAAA7yL,KACAS,EAAAT,KAAAS,KACAu2O,EAAA,KACAgF,EAAA78O,OAAAe,OAAA,MACAg3O,EAAA,IAAAC,EAAAhvO,EAAA1H,EAAA8xO,GAEA,SAAA0J,IACA,GAAAf,EAAA/tO,YACA,OAAA+tO,EAEA,IAAAzH,EAAAqH,EAAArH,KACAA,EAAAK,cAAA8G,IACAA,EAAAnH,EAAAK,eACAkH,EAAAC,OAAAxH,EAAAK,aACAoI,WAAAzI,EAAA0I,aACAl8C,OAAAwzC,EAAAxzC,OACAC,QAAAuzC,EAAAvzC,QACAi7C,SAAA1H,EAAA0H,WAGAD,EAAA3H,SAAAE,EAAAK,WACA,IAAAsI,GAAAtB,EAAAjD,SAAAiD,EAAAuB,WAAA,IAAAvB,EAAAjD,SAAA,EAAAiD,EAAAwB,UACA,GAAA7I,EAAAC,aAAAoH,EAAAh7C,aAAAx6L,EAAAi3O,sBAAA,IAAAzB,EAAAjD,SAAA,CACA,IAAA2E,EAAA/I,EAAAhN,KAAA,GAAAgN,EAAAhN,KAAA,GACA+V,EAAA,IACAA,GAAA1B,EAAAh7C,WAAA,GACAs8C,EAAA,IAAAI,GAGA,IAAAC,EAAAn3O,EAAA8C,KAAAoc,UAAAs2N,EAAA4B,IAAAp3O,EAAA8C,KAAAoc,UAAAs2N,EAAA6B,WAAAP,IACAlB,EAAA12N,UAAAi4N,EACAhJ,EAAA0H,UAKAD,EAAA3qO,MAAArB,KAAAiM,KAAAshO,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvB,EAAA1qO,OAAA,EACA0qO,EAAAC,cANAD,EAAA3qO,MAAA,EACA2qO,EAAA1qO,OAAAtB,KAAAiM,KAAAshO,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvB,EAAAC,aAMA,IAAAnjO,EAAA8iO,EAAA8B,eAAA,GACAxzO,EAAA0xO,EAAA8B,eAAA,GACAC,EAAA3tO,KAAAiM,KAAAnD,IAAA5O,KACA4O,EAAA8iO,EAAA4B,IAAA,GACAtzO,EAAA0xO,EAAA4B,IAAA,GACA,IAAAI,EAAA5tO,KAAAiM,KAAAnD,IAAA5O,KACA8xO,EAAAI,iBAAAwB,EAAAD,EACA3B,EAAAE,iBAAA,EACAF,EAAAG,kBAAA,EACA,IAAAE,EAAA9H,EAAA8H,WAAA,IAAAT,EAAAjD,SAeA,OAdA0D,GACAL,EAAAK,aACAL,EAAAM,aAAAD,EAAAM,EACAX,EAAAQ,kBAAAH,EAAAO,EACAZ,EAAAS,kBAAAJ,EAAAQ,EACAb,EAAAU,qBAAAnI,EAAAsJ,cAEA7B,EAAAK,WAAA,EACAL,EAAAM,aAAAC,IACAP,EAAAQ,kBAAAD,IACAP,EAAAS,kBAAA,EACAT,EAAAU,wBAEAV,EAAA/tO,eACA+tO,EAuBA,SAAA9H,EAAAG,EAAAD,GACA,OAAAzgD,EAAA2gD,SAAAD,EAAAD,EAAAnwB,GAAAv7C,KAAA,SAAAoI,GACA8qE,EAAArH,KAAAzjE,EAAAyjE,KACAqH,EAAAh7C,WAAA9vB,EAAAyjE,KAAA3zC,YAAAx6L,EAAAi3O,uBAGA,SAAAS,EAAA9sC,GAMA,IALA,IAAAujC,EAAAqH,EAAArH,KACAwJ,EAAAhB,IACA1rO,EAAA,EACAC,EAAA,EACAwjO,EAAAP,EAAAQ,cAAA/jC,GACAvuM,EAAA,EAAuBA,EAAAqyO,EAAAlyO,OAAmBH,IAAA,CAC1C,IACAu7O,EADArI,EAAAb,EAAAryO,GAGAu7O,EADAzJ,EAAA0H,UAAAtG,EAAAsI,QACAtI,EAAAsI,QAAA,GAEAtI,EAAAtkO,MAEA,IAAA6sO,EAAAvI,EAAAtkC,QACA8sC,KAAAtP,EAAAh+B,kCACAstC,EAAAD,KACAA,EAAAC,EAAAD,IAEAA,KAAArP,EAAA99B,cAAAmtC,GACA,IAAAE,EAAAxC,EAAAwC,YACA,GAAAzI,EAAAvnO,QAAA,CACA,IAAAiwO,EAAAzC,EAAAyC,YACAD,GAAAC,EACAA,EAAA,GACAC,EAAAD,EAAAN,EAAA75O,KAGA,IAAAq6O,EAAA,EACAC,EAAA,EACAjK,EAAA0H,SAOA3qO,GADAktO,EADAR,EAAApC,EAAAh7C,WAAA,GACAg7C,EAAAjD,SAAAyF,EAHA/sO,GADAktO,GADAP,EAAApC,EAAAh7C,WAAA,GACAg7C,EAAAjD,SAAAyF,GAAAxC,EAAAuB,WAOAvB,EAAA6C,oBAAAF,EAAAC,GACAT,EAAA75O,IAAAoa,KAAA4/N,GASA,OAPA3J,EAAA0H,UAIA8B,EAAA5B,kBAAA7qO,EACAysO,EAAAzsO,QAAAtB,KAAAinM,IAAA3lM,KAJAysO,EAAA7B,iBAAA7qO,EACA0sO,EAAA1sO,UAKA0sO,EAEA,SAAAO,EAAAjtO,EAAA2Q,GACA,KAAA3Q,EAAA2qO,EAAAM,cAGA,GAAAjrO,EAAA2qO,EAAAQ,kBACAx6N,EAAA1D,KAAA,UAIA,IADA,IAAAogO,EAAA1uO,KAAAiL,MAAA5J,EAAA2qO,EAAAK,YACAqC,KAAA,GACA18N,EAAA1D,KAAA,KAGA,SAAAqgO,IACA3C,EAAA/tO,cAGA+tO,EAAA3qO,OAAA2qO,EAAAI,iBACAJ,EAAA1qO,QAAA0qO,EAAAI,iBACAN,EAAA3uE,MAAA7uJ,KAxFA,SAAAy/N,GACA,IAAA75O,EAAA65O,EAAA75O,IAAAif,KAAA,IACAy7N,KAAA5P,EAAA6P,MAAA36O,GAAA,EAAA65O,EAAA9B,UACA,OACA/3O,IAAA87M,EAbA,SAAA97M,GAIA,IAHA,IAEAqG,EAFA9H,EAAA,EACAC,EAAAwB,EAAAtB,OAEAH,EAAAC,IAAA6H,EAAArG,EAAAiS,WAAA1T,KAAA,IAAA8H,GAAA,KACA9H,IAEA,OAAAA,EAAAC,EAAAwB,EAAA20K,QAAAgjE,EAAA,KAAA33O,EAPA,CAaA06O,EAAA16O,KAAA06O,EAAA16O,IACA46O,IAAAF,EAAAE,IACAztO,MAAA0sO,EAAA1sO,MACAC,OAAAysO,EAAAzsO,OACAgU,UAAAy4N,EAAAz4N,UACA+uN,SAAA0J,EAAA1J,UA+EA0K,CAAA/C,IACAA,EAAA/tO,eACA+tO,EAAA93O,IAAAtB,OAAA,GAEA,SAAAo8O,IACA,IAAAp8O,EAAAk5O,EAAA3uE,MAAAvqK,OACAA,EAAA,IACA+8M,EAAAs/B,QAAAnD,EAAAl5O,GACAk5O,EAAA3uE,SACA2uE,EAAAC,OAAA97O,OAAAe,OAAA,OAGA,IAAAk3O,EAAA,IAAAlI,EACA,WAAA5tO,QAAA,SAAAk2O,EAAAj2O,EAAAmmK,GACA,IAAAgD,EAAA,SAAAzD,GACAi3E,IACA58O,QAAAwuK,KAAA7I,EAAA43C,EAAAu/B,QAAAx2E,KAAA,WACA,IACA4vE,EAAAj2O,EAAAmmK,GACa,MAAA1mJ,GACb0mJ,EAAA1mJ,KAEW0mJ,IAEXm1C,EAAA7C,sBACAo9B,EAAAxwO,QAIA,IAHA,IAAA6wO,EACAp/B,KACAlvL,OACAsuN,EAAAL,EAAAhsO,WACA+d,EAAArnB,OAAA,EACAu2M,EAAAlvL,OACA+tN,EAAAvvE,KAAA0wC,KAHA,CAMAyiC,EAAAvI,EAAAx0N,MACA,IAEAsgO,EAFAz6O,EAAAy0M,EAAAz0M,GAGA,OAFAulB,EAAAkvL,EAAAlvL,KAEA,EAAAvlB,GACA,KAAA0B,EAAA8gB,IAAAkD,QACA,IAAAg1N,EAAAn1N,EAAA,GAAAppB,KACAw+O,EAAAp1N,EAAA,GACA,GAAA2xN,EAAArH,MAAA6K,IAAAxD,EAAAvH,UAAAgL,IAAAzD,EAAAjD,SACA,MAMA,OAJAgG,IACA/C,EAAAvH,SAAA+K,EACAxD,EAAAjD,SAAA0G,OACA7zE,EAAA0oE,EAAAkL,EAAA,OAEA,KAAAh5O,EAAA8gB,IAAAo4N,YACAX,IACA/C,EAAAwB,SAAAnzN,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAAq4N,UACAZ,IACA/C,EAAAuB,WAAAlzN,EAAA,OACA,MACA,KAAA7jB,EAAA8gB,IAAAs4N,WACAb,IACA/C,EAAA6D,QAAAx1N,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAAw4N,SACA,IAAAC,IAAA/D,EAAArH,MAAA,KAAAqH,EAAArH,KAAA0H,SAAAhyN,EAAA,GAAAA,EAAA,IAEA,GADAk1N,EAAAl1N,EAAA,GAAAA,EAAA,GACAg2L,GAAA0/B,GAAA3D,EAAA/tO,aAAAkxO,EAAA,GAAAA,GAAAnD,EAAAS,kBAAA,CACAb,EAAAgE,wBAAA31N,EAAA,GAAAA,EAAA,IACA+xN,EAAA3qO,OAAA4Y,EAAA,GAAA+xN,EAAAE,iBACAF,EAAA1qO,QAAA2Y,EAAA,GAAA+xN,EAAAG,kBAEAmC,EADAr0N,EAAA,GAAA+xN,EAAAE,kBAAAjyN,EAAA,GAAA+xN,EAAAG,mBACAH,EAAA93O,KACA,MAEAy6O,IACA/C,EAAAgE,wBAAA31N,EAAA,GAAAA,EAAA,IACA2xN,EAAA6B,WAAA7B,EAAA8B,eAAA/6O,QACA,MACA,KAAAyD,EAAA8gB,IAAA24N,mBACAlB,IACA/C,EAAA6D,SAAAx1N,EAAA,GACA2xN,EAAAgE,wBAAA31N,EAAA,GAAAA,EAAA,IACA2xN,EAAA6B,WAAA7B,EAAA8B,eAAA/6O,QACA,MACA,KAAAyD,EAAA8gB,IAAAgyN,SACAyF,IACA/C,EAAAkE,iBACA,MACA,KAAA15O,EAAA8gB,IAAAmD,cAEA,GADA80N,EAAAvD,EAAAmE,0BAAA91N,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAg2L,GAAA,OAAAk/B,GAAAnD,EAAA/tO,aAAAkxO,EAAA/+O,MAAA,GAAA++O,EAAA/+O,OAAA47O,EAAAS,kBAAA,CACAb,EAAAgE,wBAAAT,EAAA9tO,MAAA8tO,EAAA7tO,QACA0qO,EAAA3qO,OAAA8tO,EAAA9tO,MAAA2qO,EAAAE,iBACAF,EAAA1qO,QAAA6tO,EAAA7tO,OAAA0qO,EAAAG,kBAEAmC,EADAa,EAAA9tO,MAAA2qO,EAAAE,kBAAAiD,EAAA7tO,OAAA0qO,EAAAG,mBACAH,EAAA93O,KACA,MAEAy6O,IACA/C,EAAAvxN,cAAAJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA2xN,EAAAoE,kBAAA/1N,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,KAAA7jB,EAAA8gB,IAAAmyN,eACAuC,EAAAwC,YAAAn0N,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAAkyN,eACAwC,EAAAyC,YAAAp0N,EAAA,GACA,MACA,KAAA7jB,EAAA8gB,IAAAiD,UACAw0N,IACA/C,EAAA6B,WAAAr3O,EAAA65O,gBAAAt9O,QACAi5O,EAAA8B,eAAAt3O,EAAA65O,gBAAAt9O,QACA,MACA,KAAAyD,EAAA8gB,IAAA2xN,eAGA,IAFA,IACArwN,EADA2kJ,EAAAljJ,EAAA,GAEA5c,EAAA,EAAAyiK,EAAA3C,EAAAvqK,OAAgDyK,EAAAyiK,EAAQziK,IACxD,oBAAA8/J,EAAA9/J,GACAywO,EAAA3wE,EAAA9/J,SACiB,MAAAjH,EAAAge,OAAA+oJ,EAAA9/J,IAAA,CACjB0vO,IACAoC,EAAAhyE,EAAA9/J,GAAAuuO,EAAAjD,SAAA,IACA,IAAAuH,KACAtE,EAAArH,KAAA0H,UACAzzN,EAAA22N,EACAvD,EAAA6C,oBAAA,EAAAj2N,IACA03N,EAAAlE,EAAAU,qBAAAyC,EAAAnD,EAAAS,qBAEAT,EAAA1qO,QAAAkX,KAIAA,GADA22N,MACAvD,EAAAuB,WACAvB,EAAA6C,oBAAAj2N,EAAA,IACA03N,EAAAlE,EAAAU,qBAAAyC,EAAAnD,EAAAS,qBAEAT,EAAA3qO,OAAAmX,IAGA03N,EACAvB,IACmBQ,EAAA,GACnBb,EAAAa,EAAAnD,EAAA93O,KAIA,MACA,KAAAkC,EAAA8gB,IAAAoD,SACAwzN,EAAA7zN,EAAA,IACA,MACA,KAAA7jB,EAAA8gB,IAAA+xN,iBACA0F,IACA/C,EAAAkE,iBACAhC,EAAA7zN,EAAA,IACA,MACA,KAAA7jB,EAAA8gB,IAAAiyN,2BACAwF,IACA/C,EAAAyC,YAAAp0N,EAAA,GACA2xN,EAAAwC,YAAAn0N,EAAA,GACA2xN,EAAAkE,iBACAhC,EAAA7zN,EAAA,IACA,MACA,KAAA7jB,EAAA8gB,IAAAsxN,aACAmG,IACA7G,IACAA,EAAA7zB,EAAAhjN,IAAA,YAAAqF,EAAAjF,KAAAkC,OAEA,IAAA1C,EAAAopB,EAAA,GAAAppB,KACA,GAAAA,YAAAi8O,EAAAj8O,GACA,MAqEA,YAnEA2qK,EAAA,IAAAppK,QAAA,SAAAq2O,EAAAC,GACA,IAAA73O,EACA,UAAAuF,EAAAyD,YAAA,wCAEA,IAAAwnO,EAAAyG,EAAA72O,IAAAJ,GACA,GAAAwwO,EAAA,CAIA,OAAA/qO,EAAAhB,UAAA+rO,GACA,UAAAjrO,EAAAyD,YAAA,8BAEA,IAAA7E,EAAAqsO,EAAA1tO,KAAA1C,IAAA,WACA,OAAAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,sCAEA,YAAA7E,EAAAnE,KAGA,OAFAi8O,EAAAj8O,WACA43O,IAGA,IAAA0H,EAAA9M,EAAAx0N,MAAA4xN,QACA2P,EAAA,IAAArI,EAAAoI,GACAtsO,EAAAw9N,EAAA1tO,KAAArB,SAAA,UACAC,MAAAC,QAAAqR,IAAA,IAAAA,EAAAjR,QACAw9O,EAAA96N,UAAAzR,GAEAmrO,IACA,IAAAqB,GACAC,kBACArB,QAAA,SAAAp2O,EAAAL,GACA1H,KAAAw/O,kBACA3gC,EAAAs/B,QAAAp2O,EAAAL,IAGAq3M,kBACA,OAAAF,EAAAE,aAEAq/B,YACA,OAAAv/B,EAAAu/B,QAGAvrD,EAAA0xB,gBACAp8M,OAAAooO,EACA1zB,OACAsG,UAAAotB,EAAA1tO,KAAA1C,IAAA,cAAAgjN,EACAovB,aAAA+M,EACApgC,sBACAC,mBACAN,KAAA0gC,EACA3E,eACiBhzE,KAAA,WACjB23E,EAAAC,iBACAxD,EAAAj8O,OAEA43O,KACiBC,QAlDjBD,MAmDe93B,MAAA,SAAA1E,GACf,KAAAA,aAAA71M,EAAAm6O,gBAAA,CAGA,IAAA5sD,EAAAtZ,QAAAynC,aAIA,MAAA7F,KAHA71M,EAAA2O,MAAA,uCAAAknM,EAAA,UAMA,KAAA71M,EAAA8gB,IAAA2uN,UACA8I,IACA,IAAApE,EAAAtwN,EAAA,GACAuwN,EAAAv2B,EAAAhjN,IAAA,aACA,OAAAqF,EAAA1C,QAAA42O,QAAAl0O,EAAAxB,QAAAy1O,GACA,MAEA,IAAAzE,EAAA0E,EAAAv5O,IAAAs5O,EAAA15O,MACA,OAAAyF,EAAA1C,QAAAkyO,GACA,MAEA,IAAA0K,EAAA1K,EAAA70O,IAAA,QACA,GAAAu/O,EAIA,OAHA5E,EAAAvH,SAAA,KACAuH,EAAAjD,SAAA6H,EAAA,QACAh1E,EAAA0oE,EAAA,KAAAsM,EAAA,KAKA,GAAA1E,EAAA3uE,MAAAvqK,QAAA+8M,EAAAE,YAAA,CACA04B,KACA,OAGAA,EACA/sE,EAAAglE,IAGAmO,IACAK,IACA38O,OACOs+M,MAAA,SAAA1E,GACP,KAAAA,aAAA71M,EAAAm6O,gBAAA,CAGA,GAAA9T,EAAApyD,QAAAynC,aAIA,SAHA17M,EAAA2O,MAAA,iDAAA4oM,EAAA98M,MACA89O,SACAK,IAGA,MAAA/iC,MAIAwkC,sBAAA,SAAA98O,EAAA+8O,EAAAphD,GACA,IAAAutC,EAAA/rO,KAEAS,EAAAT,KAAAS,KACAo/O,EAAAh9O,EAAA1C,IAAA,cAAAy/O,EAAAz/O,IAAA,aACA2/O,EAAAD,EAAA7/O,KAAA+/O,cAAAF,GAAAv+O,QAAAC,gBACA,GAAAi9L,EAAAwhD,UAAA,CACA,IAAAC,EAAAp9O,EAAA1C,IAAA,oBACAqF,EAAA1C,QAAAm9O,KACAzhD,EAAAyhD,eACAC,SAAAD,EAAA9/O,IAAA,YACAggP,SAAAF,EAAA9/O,IAAA,YACAigP,WAAAH,EAAA9/O,IAAA,gBAGA,IAAAkgP,EAAAx9O,EAAA1C,IAAA,kBACAqF,EAAAhB,UAAA67O,KACA7hD,EAAA6hD,YAAArgP,KAAAsgP,gBAAAD,IAGA,IAEA7mE,EAFA+mE,KACAC,EAAA,KAEA,GAAA39O,EAAAP,IAAA,aAEA,GADAk3K,EAAA32K,EAAA1C,IAAA,eACAqF,EAAA1C,QAAA02K,IAGA,GAFAgnE,EAAAhnE,EAAAr5K,IAAA,gBACAqgP,KAAAh7O,EAAAxB,QAAAw8O,KAAAzgP,KAAA,KACAy5K,EAAAl3K,IAAA,eAGA,IAFA,IAAAm+O,EAAAjnE,EAAAr5K,IAAA,eACAujB,EAAA,EACAnX,EAAA,EAAAyiK,EAAAyxE,EAAA3+O,OAAqDyK,EAAAyiK,EAAQziK,IAAA,CAC7D,IAAAsY,EAAApkB,EAAAU,WAAAs/O,EAAAl0O,IACA,MAAAjH,EAAAge,OAAAuB,GACAnB,EAAAmB,MACe,QAAArf,EAAAxB,QAAA6gB,GAGf,UAAAvf,EAAAyD,YAAA,yCAAA8b,GAFA07N,EAAA78N,KAAAmB,EAAA9kB,WAMS,QAAAyF,EAAAxB,QAAAw1K,GAGT,UAAAl0K,EAAAyD,YAAA,qCAFAy3O,EAAAhnE,EAAAz5K,KAIA,qBAAAygP,GAAA,sBAAAA,GAAA,oBAAAA,IACAA,EAAA,MAGA,GAAAA,EACAhiD,EAAAkiD,mBAAA9iD,EAAAjiL,aAAA6kO,GAAA3+O,YACO,CACP,IAAA8+O,KAAAniD,EAAAzxB,MAAA+gE,EAAA8S,UAAAC,UACAC,KAAAtiD,EAAAzxB,MAAA+gE,EAAA8S,UAAAG,aACAvnE,EAAAokB,EAAAriL,iBACA,aAAAijL,EAAAt6L,MAAA48O,IACAtnE,EAAAokB,EAAApiL,iBAEAmlO,IACAnnE,EAAAokB,EAAAtiL,iBACAkjL,EAAAD,OACA,UAAA3oB,KAAA4oB,EAAAz+L,MACAy5K,EAAAokB,EAAAniL,kBACa,YAAAm6J,KAAA4oB,EAAAz+L,QACby5K,EAAAokB,EAAAliL,wBAIA8iL,EAAAkiD,gBAAAlnE,EAMA,OAJAglB,EAAA+hD,cACA/hD,EAAAgiD,mBACAhiD,EAAAwiD,cAAAR,GAAAD,EAAAz+O,OAAA,EACA08L,EAAA37L,OACAi9O,EAAAl4E,KAAA,SAAAi4E,GAEA,OADArhD,EAAAqhD,YACA9T,EAAAkV,eAAAziD,KACO52B,KAAA,SAAAi4E,GAEP,OADArhD,EAAAqhD,YACArhD,KAGA0iD,0BAAA,SAAA1iD,MACAl5L,EAAA2Y,SAAAugL,EAAAwhD,UAAA,0BACA,IAAAH,KACAsB,SACAC,SACA5nE,EAAAglB,EAAAkiD,gBAAA7+O,QACA2+O,EAAAhiD,EAAAgiD,iBACAD,EAAA/hD,EAAA+hD,YACA,IAAAY,KAAAZ,EAEA,aADAa,EAAAb,EAAAY,MAIA3nE,EAAA2nE,GAAAC,GAEA,IAAA9wC,KAAA69B,EAAAviN,oBACA,IAAAu1N,KAAA3nE,EAEA,SADA4nE,EAAA5nE,EAAA2nE,IAGS,YAAA7wC,EAAA8wC,GAqCTvB,EAAAsB,GAAAx/N,OAAAC,aAAA0uL,EAAA8wC,QArCS,CACT,IAAA33O,EAAA,EACA,OAAA23O,EAAA,IACA,QACA,IAAAA,EAAAt/O,SACA2H,EAAAmtK,SAAAwqE,EAAAn5C,OAAA,QAEA,MACA,QACA,IAAAm5C,EAAAt/O,SACA2H,EAAAmtK,SAAAwqE,EAAAn5C,OAAA,QAEA,MACA,QACA,QACAm5C,EAAAt/O,QAAA,IACA2H,GAAA23O,EAAAn5C,OAAA,IAEA,MACA,QACA,IAAAsI,KAAAw9B,EAAA19B,oBAAA+wC,EAAA9wC,IACA,IAAAC,IACA9mM,EAAA8mM,GAGA,GAAA9mM,EAAA,CACA,GAAA+2O,GAAA/2O,KAAA03O,EAAA,CACA,IAAA18C,KAAA7G,EAAAjiL,aAAA6kO,GACA,GAAA/7C,IAAA28C,EAAA38C,EAAA08C,IAAA,CACAtB,EAAAsB,GAAAx/N,OAAAC,aAAA0uL,EAAA8wC,IACA,UAGAvB,EAAAsB,GAAAx/N,OAAAC,aAAAnY,IAMA,WAAAqkO,EAAAuT,aAAAxB,IAEAoB,eAAA,SAAAziD,GAEA,GADAA,EAAA8iD,0BAAA9iD,EAAAqhD,WAAArhD,EAAAqhD,UAAA/9O,OAAA,EACA08L,EAAA8iD,wBAIA,OAHA9iD,EAAAwhD,WAAAxhD,EAAAwiD,cACAxiD,EAAA+iD,kBAAAvhP,KAAAkhP,0BAAA1iD,IAEAl9L,QAAAC,QAAAi9L,EAAAqhD,WAEA,IAAArhD,EAAAwhD,UACA,OAAA1+O,QAAAC,QAAAvB,KAAAkhP,0BAAA1iD,IAEA,GAAAA,EAAAwhD,YAAAxhD,EAAAgjD,KAAAC,eAAAjjD,EAAAgjD,gBAAA3T,EAAA6T,eAAA,UAAAljD,EAAAyhD,cAAAC,WAAA,QAAA1hD,EAAAyhD,cAAAE,UAAA,SAAA3hD,EAAAyhD,cAAAE,UAAA,WAAA3hD,EAAAyhD,cAAAE,UAAA,WAAA3hD,EAAAyhD,cAAAE,WAAA,CACA,IAAAD,EAAA1hD,EAAAyhD,cAAAC,SACAC,EAAA3hD,EAAAyhD,cAAAE,SACAwB,EAAAn8O,EAAA1F,KAAAK,IAAA+/O,EAAA,IAAAC,EAAA,SACA,OAAAtS,EAAA+T,YAAA1hP,QACAs5K,SAAAmoE,EACA9S,iBAAA7uO,KAAA6uO,iBACAgT,QAAA,OACSj6E,KAAA,SAAAk6E,GACT,IACAjC,KAUA,OAXArhD,EAAAgjD,KAEAj/O,QAAA,SAAA4+O,EAAAr9C,GACA,GAAAA,EAAA,MACA,UAAAx+L,EAAAyD,YAAA,6BAEA,IAAAg5O,EAAAD,EAAAzuO,OAAAywL,GACAi+C,IACAlC,EAAAsB,GAAAx/N,OAAAC,cAAAmgO,EAAA1sO,WAAA,OAAA0sO,EAAA1sO,WAAA,OAGA,IAAAy4N,EAAAuT,aAAAxB,KAGA,OAAAv+O,QAAAC,QAAA,IAAAusO,EAAAkU,qBAAAxjD,EAAAyjD,UAAAzjD,EAAA0jD,YAGAnC,cAAA,SAAAF,GACA,IAAAsC,EAAAtC,EACA,SAAAr6O,EAAAxB,QAAAm+O,GACAtU,EAAA+T,YAAA1hP,QACAs5K,SAAA2oE,EACAtT,iBAAA7uO,KAAA6uO,iBACAgT,QAAA,OACSj6E,KAAA,SAAAw6E,GACT,OAAAA,aAAAvU,EAAA6T,aACA,IAAA5T,EAAAkU,qBAAA,SAEA,IAAAlU,EAAAuT,aAAAe,EAAAC,eAEO78O,EAAAhB,UAAA29O,GACPtU,EAAA+T,YAAA1hP,QACAs5K,SAAA2oE,EACAtT,iBAAA7uO,KAAA6uO,iBACAgT,QAAA,OACSj6E,KAAA,SAAAw6E,GACT,GAAAA,aAAAvU,EAAA6T,aACA,WAAA5T,EAAAkU,qBAAA,SAEA,IAAAn7N,EAAA,IAAAplB,MAAA2gP,EAAAtgP,QAeA,OAdAsgP,EAAA7/O,QAAA,SAAA+/O,EAAAttE,GAEA,IADA,IAAA5xK,KACA8H,EAAA,EAA2BA,EAAA8pK,EAAAlzK,OAAkBoJ,GAAA,GAC7C,IAAAkG,EAAA4jK,EAAA3/J,WAAAnK,IAAA,EAAA8pK,EAAA3/J,WAAAnK,EAAA,GACA,iBAAAkG,GAAA,CAIAlG,GAAA,EACA,IAAAoG,EAAA0jK,EAAA3/J,WAAAnK,IAAA,EAAA8pK,EAAA3/J,WAAAnK,EAAA,GACA9H,EAAAoa,OAAA,KAAApM,IAAA,UAAAE,GAAA,YALAlO,EAAAoa,KAAApM,GAOAyV,EAAAy7N,GAAA3gO,OAAAC,aAAAg3L,MAAAj3L,OAAAve,KAEA,IAAA0qO,EAAAuT,aAAAx6N,KAGAvlB,QAAAC,QAAA,OAEA++O,gBAAA,SAAAiC,GAGA,IAFA,IAAAC,EAAAD,EAAA99O,WACAwT,KACA1L,EAAA,EAAAyiK,EAAAwzE,EAAA1gP,OAA6CyK,EAAAyiK,EAAQziK,IAAA,CACrD,IAAAk2O,EAAAD,EAAAj2O,MAAA,EAAAi2O,EAAAj2O,GACA,IAAAk2O,IAIAxqO,EADA1L,GAAA,GACAk2O,GAEA,OAAAxqO,GAEAyqO,cAAA,SAAA7/O,EAAAyvL,EAAAkM,GACA,IAIAmkD,EACAhhP,EAAAC,EAAA2K,EAAAyiK,EAAAtpK,EAAA+D,EAAA03L,EALA1gM,EAAAT,KAAAS,KACAmiP,KACAv/C,EAAA,EACAw/C,KAGA,GAAArkD,EAAAwhD,UAAA,CAGA,GAFA38C,EAAAxgM,EAAAP,IAAA,MAAAO,EAAA1C,IAAA,UACAghM,EAAAt+L,EAAA1C,IAAA,KAEA,IAAAwB,EAAA,EAAAC,EAAAu/L,EAAAr/L,OAAyCH,EAAAC,EAAQD,IAGjD,GAFA+D,EAAAjF,EAAAU,WAAAggM,EAAAx/L,MACA8H,EAAAhJ,EAAAU,WAAAggM,EAAAx/L,IACAF,MAAAC,QAAA+H,GACA,IAAA8C,EAAA,EAAAyiK,EAAAvlK,EAAA3H,OAA2CyK,EAAAyiK,EAAQziK,IACnDq2O,EAAAl9O,KAAAjF,EAAAU,WAAAsI,EAAA8C,QAEa,CACb,IAAAgE,EAAA9P,EAAAU,WAAAggM,IAAAx/L,IACA,IAAA4K,EAAA7G,EAA6B6G,GAAA9C,EAAW8C,IACxCq2O,EAAAr2O,GAAAgE,EAKA,GAAAiuL,EAAA28C,SAAA,CACA,IAAA2H,EAAAjgP,EAAArB,SAAA,mBAGA,GAFAmhP,GAAAG,EAAA,MAAAz/C,EAAAy/C,EAAA,IACAA,EAAAjgP,EAAA1C,IAAA,MAEA,IAAAwB,EAAA,EAAAC,EAAAkhP,EAAAhhP,OAA6CH,EAAAC,EAAQD,IAGrD,GAFA+D,EAAAjF,EAAAU,WAAA2hP,EAAAnhP,MACA8H,EAAAhJ,EAAAU,WAAA2hP,EAAAnhP,IACAF,MAAAC,QAAA+H,GACA,IAAA8C,EAAA,EAAAyiK,EAAAvlK,EAAA3H,OAA6CyK,EAAAyiK,EAAQziK,IACrDs2O,EAAAn9O,MAAAjF,EAAAU,WAAAsI,EAAA8C,MAAA9L,EAAAU,WAAAsI,EAAA8C,MAAA9L,EAAAU,WAAAsI,EAAA8C,SAEe,CACf,IAAA4wO,GAAA18O,EAAAU,WAAA2hP,IAAAnhP,IAAAlB,EAAAU,WAAA2hP,IAAAnhP,IAAAlB,EAAAU,WAAA2hP,IAAAnhP,KACA,IAAA4K,EAAA7G,EAA+B6G,GAAA9C,EAAW8C,IAC1Cs2O,EAAAt2O,GAAA4wO,QAMO,CACP,IAAA8E,EAAAzjD,EAAAyjD,UAEA,GADA9gD,EAAAt+L,EAAA1C,IAAA,UACA,CAEA,IADAoM,EAAA01O,EACAtgP,EAAA,EAAAC,EAAAu/L,EAAAr/L,OAAyCH,EAAAC,EAAQD,IACjDihP,EAAAr2O,KAAA9L,EAAAU,WAAAggM,EAAAx/L,IAEA0hM,EAAA3B,WAAApP,EAAAnyL,IAAA,wBACS,CACT,IAAA4iP,EAAAlgP,EAAA1C,IAAA,YACA,MAAAqF,EAAAxB,QAAA++O,GAAA,CACA,IAAAC,EAAAhjP,KAAAijP,mBAAAF,EAAAhjP,MACA6iP,EAAA5iP,KAAAkjP,qBAAAF,EAAA7hD,OAAA3C,GACA6E,EAAA2/C,EAAA3/C,eAIA,IAAA05C,KACAoG,EAAA9/C,EACA,QAAAwxC,KAAA+N,EAAA,CACA,IAAA1F,EAAA0F,EAAA/N,GACA,GAAAqI,EAGA,GAAAiG,GAIA,GAAAA,IAAAjG,EAAA,CACAH,KACA,YALAoG,EAAAjG,EAQAH,IACAv+C,EAAAzxB,OAAA+gE,EAAA8S,UAAAwC,YAEA5kD,EAAA6E,eACA7E,EAAA2C,OAAAyhD,EACApkD,EAAAmkD,kBACAnkD,EAAAskD,SAAAD,GAEAQ,YAAA,SAAAN,GACA,IAAAO,EAAAP,EAAArxE,MAAA,QACA,OAAA4xE,OAAAtV,EAAA3kC,mBAAA,IAAAi6C,EAAAC,OAAA,YAEAN,mBAAA,SAAAljP,GACA,IAAAsjM,EAAA,EACAlC,KACAqiD,KAEAC,KADAzV,EAAAzkC,iBACAxpM,MACA2jP,KAAAtV,EAAAuV,cACAF,KAAAC,IAEAD,EADAzjP,KAAAqjP,YAAAtjP,GACA,cAEA,aAGA,IAAA6jP,EAAAF,EAAAD,GAOA,SANAn+O,EAAAge,OAAAsgO,IACAvgD,EAAAugD,EACAJ,MAEAriD,EAAAyiD,KAGAvgD,eACAmgD,YACAriD,WAGA+hD,qBAAA,SAAAW,EAAArlD,GAIA,IAHA,IAAA2C,EAAAhiM,OAAAe,OAAA,MACAqgP,EAAA/hD,EAAA+hD,YACA/mE,EAAAglB,EAAAkiD,gBACA4B,EAAA,EAA4BA,EAAA,IAAgBA,IAC5CA,KAAA/B,GAAAsD,EAAAtD,EAAA+B,IACAnhD,EAAAmhD,GAAAuB,EAAAtD,EAAA+B,IAGAA,KAAA9oE,GAAAqqE,EAAArqE,EAAA8oE,MACAnhD,EAAAmhD,GAAAuB,EAAArqE,EAAA8oE,KAIA,OAAAnhD,GAEAu0C,gBAAA,SAAA7yO,GACA,IAAA+8O,EAAA/8O,EACAqB,EAAArB,EAAA1C,IAAA,WACA,OAAAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,wBAEA,IACA+6O,EADA9D,KAEA,aAAA97O,EAAAnE,KAAA,CACA,IAAAgkP,EAAAlhP,EAAA1C,IAAA,mBACA,IAAA4jP,EACA,UAAAz+O,EAAAyD,YAAA,sCAIA,GADA7E,GADArB,EAAApB,MAAAC,QAAAqiP,GAAA/jP,KAAAS,KAAAU,WAAA4iP,EAAA,IAAAA,GACA5jP,IAAA,eACAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,wBAEAi3O,KAEA,IAAA1tD,EAAAzvL,EAAA1C,IAAA,kBACA,GAAAmyL,EAAA,CACA,IAAAkI,EAAA,IAAA6zC,EAAA2V,eACAxqE,EAAAomE,EAAA39O,OAAA,YACA,MAAAuD,EAAAxB,QAAAw1K,GACAghB,EAAAypD,OAAAzqE,EAAAz5K,WACS,MAAAyF,EAAAzD,OAAAy3K,GACTghB,EAAAypD,OAAAzqE,EAAAr2K,iBACS,MAAAqC,EAAA1C,QAAA02K,GAET,IADA,IAAAp3K,EAAAo3K,EAAAr3K,UACAR,EAAA,EAAAC,EAAAQ,EAAAN,OAA2CH,EAAAC,EAAQD,IAAA,CACnD,IAAAoyK,EAAAyF,EAAAv3K,OAAAG,EAAAT,IACA,MAAA6D,EAAAxB,QAAA+vK,GACAymB,EAAAypD,OAAAlwE,EAAAh0K,WACa,MAAAyF,EAAAzD,OAAAgyK,GACbymB,EAAAypD,OAAAlwE,EAAA5wK,iBACa,GAAA1B,MAAAC,QAAAqyK,GAAA,CAGb,IAFA,IAAAmwE,EAAAnwE,EAAAjyK,OACAqiP,EAAA,IAAA1iP,MAAAyiP,GACA33O,EAAA,EAA6BA,EAAA23O,EAAgB33O,IAAA,CAC7C,IAAA63O,EAAArwE,EAAAxnK,MACA/G,EAAAxB,QAAAogP,GACAD,EAAA53O,GAAA63O,EAAArkP,SACiBuF,EAAAge,OAAA8gO,OAAA5+O,EAAAzD,OAAAqiP,MACjBD,EAAA53O,GAAA63O,EAAAjhP,YAGAq3L,EAAAypD,OAAAE,EAAA9hO,SAIA,IAAAw9N,EAAAh9O,EAAA1C,IAAA,cAAAy/O,EAAAz/O,IAAA,aACA,MAAAqF,EAAAhB,UAAAq7O,GAAA,CACA,IAAA13O,EAAA03O,EAAAz8O,KAAAy8O,EACAiE,EAAA37O,EAAApB,OAAA,IAAAnB,WAAAuC,EAAApB,cAAA,EAAAoB,EAAAhB,cAAA,IAAAvB,WAAAuC,EAAAxC,MAAAoB,OAAAoB,EAAAzC,MAAAyC,EAAArC,IAAAqC,EAAAzC,OACA80L,EAAAypD,OAAAH,UACSt+O,EAAAxB,QAAA67O,IACTrlD,EAAAypD,OAAApE,EAAA9/O,MAEA,IAAAohM,EAAAt+L,EAAA1C,IAAA,WAAAy/O,EAAAz/O,IAAA,UACAghM,IACA2iD,EAAA,IAAAl+O,WAAA,IAAAy0K,YAAA8mB,GAAAp6L,QACAyzL,EAAAypD,OAAAH,IAGA,OACAxxD,aACAzvL,OACA+8O,WACAI,YACA97O,OAAAnE,KACAy6L,SAAA6pD,YAAA,KAGArO,cAAA,SAAAP,GACA,IAQAj3C,EARA0tC,EAAAlsO,KAEA4/O,EAAAnK,EAAAmK,SACA/8O,EAAA4yO,EAAA5yO,KACAm9O,EAAAvK,EAAAuK,UACA1tD,EAAAmjD,EAAAnjD,WACApuL,EAAAuxO,EAAAvxO,KACAogP,EAAAtE,EAAA,UAEA,IAAA1tD,EAAA,CACA,aAAApuL,EAIS,CACT,IAAA6+O,EAAAlgP,EAAA1C,IAAA,YACA,OAAAqF,EAAAxB,QAAA++O,GACA,UAAAz9O,EAAAyD,YAAA,8BAEAg6O,IAAAhjP,KAAAg4K,QAAA,aACA,IAAAirE,EAAAhjP,KAAAijP,mBAAAF,GACAO,EAAAP,EAAArxE,MAAA,QACA3E,GAAA/sK,KAAAqjP,YAAAC,GAAAxV,EAAA8S,UAAA2D,MAAA,IAAAvB,EAAAQ,UAAA1V,EAAA8S,UAAAwC,WAAA,OAAApV,EAAA5kC,mBAAAk6C,GAAAxV,EAAA8S,UAAAC,SAAA/S,EAAA8S,UAAAG,aAUA,OATAviD,GACAt6L,OACAnE,KAAAgjP,EACA5hD,OAAA6hD,EAAA7hD,OACAkC,aAAA2/C,EAAA3/C,aACAt2B,QACAk1E,UAAA,EACAC,SAAAoC,GAEAtkP,KAAA2/O,sBAAA98O,IAAA27L,GAAA52B,KAAA,SAAA42B,GAEA,OADAA,EAAA2C,OAAA+qC,EAAAgX,qBAAAF,EAAA7hD,OAAA3C,GACA,IAAAsvC,EAAAgI,KAAAiN,EAAA,KAAAvkD,MAvBAlM,EAAA,IAAA9sL,EAAAjF,KAAA,OACA8B,IAAA,WAAAmD,EAAA1F,KAAAK,IAAA+D,IACAouL,EAAAjwL,IAAA,WAAAQ,EAAArB,SAAA,aAyBA,IAAAygP,EAAAp/O,EAAA1C,IAAA,gBACA+hP,EAAAr/O,EAAA1C,IAAA,aAAAmkP,EACA/Q,EAAAjhD,EAAAnyL,IAAA,YACAqkP,EAAA3hP,EAAA1C,IAAA,YAOA,MANAmF,EAAA8P,UAAAm+N,KACAA,EAAA/tO,EAAA1F,KAAAK,IAAAozO,OAEAjuO,EAAA8P,UAAAovO,KACAA,EAAAh/O,EAAA1F,KAAAK,IAAAqkP,IAEA,UAAAtgP,EAAA,CACA,IAAAugP,EAAAlR,KAAAxzO,KACA2kP,EAAAF,KAAAzkP,KACA0kP,IAAAC,OACAp/O,EAAA+Q,MAAA,sCAAAouO,EAAA,qDAAAC,EAAA,KACAD,GAAAC,GAAA,IAAAA,EAAApzE,QAAAmzE,KACAlR,EAAAiR,IAKA,GADAjR,KAAAiR,MACAh/O,EAAAxB,QAAAuvO,GACA,UAAAjuO,EAAAyD,YAAA,qBAEA,IAoCA47O,EApCAC,EAAAtyD,EAAAnyL,IAAA,oCACA,GAAAykP,GACAA,EAAA/hP,KAAA,CACA,IAAAgpK,EAAA+4E,EAAA/hP,KAAA1C,IAAA,WACA0rK,IACAA,IAAA9rK,MAEA,IAAA8kP,EAAAD,EAAA/hP,KAAA1C,IAAA,WACA2kP,EAAAF,EAAA/hP,KAAA1C,IAAA,WACA4kP,EAAAH,EAAA/hP,KAAA1C,IAAA,WA4BA,GAzBAq+L,GACAt6L,OACAnE,KAAAwzO,EAAAxzO,KACA8rK,UACA0yB,KAAAqmD,EACAC,UACAC,UACAC,UACAjR,WAAA8L,EAAA9L,WACAkM,YACAgF,UAAAhF,EACAiF,cACAnlD,WAAAj9L,EAAArB,SAAA,eAAA8D,EAAAi3O,qBACA0F,aAAA,EACAC,YAAAoC,EACA7d,KAAAn0C,EAAA9wL,SAAA,YACAy+L,OAAA3N,EAAAnyL,IAAA,UACA+/L,QAAA5N,EAAAnyL,IAAA,WACA+kP,QAAA5yD,EAAAnyL,IAAA,WACAglP,UAAA7yD,EAAAnyL,IAAA,aACA4sK,MAAAulB,EAAAnyL,IAAA,SACAilP,YAAA9yD,EAAAnyL,IAAA,eACAuzO,gBAGAsM,EAAA,CACA,IAAAqF,EAAAzF,EAAAz/O,IAAA,eACAqF,EAAAxB,QAAAqhP,KACA7mD,EAAA6mD,cAAAtlP,MAEA4kP,EAAA9W,EAAA+T,YAAA1hP,QACAs5K,SAAA6rE,EACAxW,iBAAA7uO,KAAA6uO,iBACAgT,QAAA,OACSj6E,KAAA,SAAA45E,GACThjD,EAAAgjD,OACAhjD,EAAA28C,SAAA38C,EAAAgjD,KAAArG,gBAGAwJ,EAAArjP,QAAAC,gBAEA,OAAAojP,EAAA/8E,KAAA,WACA,OAAAskE,EAAAyT,sBAAA98O,EAAA+8O,EAAAphD,KACO52B,KAAA,SAAA42B,GAKP,OAJA0tC,EAAAwW,cAAA7/O,EAAAyvL,EAAAkM,GACA,UAAAt6L,IACAs6L,EAAAk1C,gBAEA,IAAA5F,EAAAgI,KAAAvC,EAAAxzO,KAAA6kP,EAAApmD,OAIAmlB,EA1hEA,GA4hEAiwB,EAAA,WACA,SAAAA,EAAAE,EAAAL,EAAA5wO,GACA7C,KAAA8zO,aACA9zO,KAAAyzO,OACAzzO,KAAA6C,OACA7C,KAAAslP,YAAA,KACAtlP,KAAAulP,QA0DA,OAxDA3R,EAAAh0O,WACA6rB,KAAA,SAAA8vL,GACA,IAAAv7M,KAAAulP,KAAA,CAGA,IAAAC,EAAAxlP,KAAAyzO,KAAAgS,aACAlqC,EAAA9vL,KAAA,aAAAzrB,KAAA8zO,WAAA,OAAA0R,IACAxlP,KAAAulP,UAEA5R,cAAA,SAAAr+B,EAAA6N,EAAAuiC,EAAA7oC,GACA,IAAA78M,KAAAyzO,KAAAC,YACA,UAAAh3N,MAAA,yBAEA,GAAA1c,KAAAslP,YACA,OAAAtlP,KAAAslP,YAEA,IAAAK,EAAAxmP,OAAAe,OAAAo1M,EAAA/7B,SACAosE,EAAA3kC,gBA8BA,IA7BA,IAAA4kC,EAAAtwC,EAAAq6B,MAAAgW,GACA1P,EAAAj2O,KAAAyzO,KACAoS,EAAAvkP,QAAAC,UACAukP,EAAA9lP,KAAA6C,KAAA1C,IAAA,aACA4lP,EAAA/lP,KAAA6C,KAAA1C,IAAA,cAAAgjN,EACA6iC,EAAAF,EAAA3jP,UACA8jP,EAAA9mP,OAAAe,OAAA,MAEAgmP,EAAA,WACA,IAAAhkP,EAAA8jP,EAAArkP,GACAkkP,IAAAj+E,KAAA,WACA,IAAAu+E,EAAAL,EAAA3lP,IAAA+B,GACAwpB,EAAA,IAAAw2L,EAAA98L,aACA,OAAAwgO,EAAAvnC,iBACAl2M,OAAAg+O,EACAtpC,OACAsG,UAAA4iC,EACAr6N,iBACWk8I,KAAA,WACXq+E,EAAA/jP,GAAAwpB,EAAAzG,QACAygO,EAAAx6N,gBAAAQ,EAAAhB,gBACWm1L,MAAA,SAAA1E,MACX71M,EAAA2O,MAAA,wBAAA/R,EAAA,uBACA,IAAAwpB,EAAA,IAAAw2L,EAAA98L,aACA6gO,EAAA/jP,GAAAwpB,EAAAzG,aAKAtjB,EAAA,EAAAgF,EAAAq/O,EAAAlkP,OAA8CH,EAAAgF,IAAOhF,EACrDukP,IAKA,OAHAlmP,KAAAslP,YAAAO,EAAAj+E,KAAA,WACAquE,EAAAgQ,yBAEAjmP,KAAAslP,cAGA1R,EAhEA,GAkEAqD,EAAA,WACA,SAAAA,EAAAxG,GACAzwO,KAAA+d,MAAA0yN,EACAzwO,KAAAomP,cAkBA,OAhBAnP,EAAAr3O,WACAymB,KAAA,WACA,IAAAggO,EAAArmP,KAAA+d,MACA/d,KAAAomP,WAAA5oO,KAAAxd,KAAA+d,OACA/d,KAAA+d,MAAAsoO,EAAA1W,SAEAppN,QAAA,WACA,IAAAuhM,EAAA9nN,KAAAomP,WAAA11E,MACAo3C,IACA9nN,KAAA+d,MAAA+pM,IAGAtjM,UAAA,SAAA2E,GACAnpB,KAAA+d,MAAA2+N,IAAAp3O,EAAA8C,KAAAoc,UAAAxkB,KAAA+d,MAAA2+N,IAAAvzN,KAGA8tN,EArBA,GAuBA4D,EAAA,WACA,SAAAA,IACA76O,KAAA08O,IAAA,IAAAhoO,aAAApP,EAAA65O,iBACAn/O,KAAAuzO,SAAA,KACAvzO,KAAA63O,SAAA,EACA73O,KAAAyzO,KAAA,KACAzzO,KAAA8/L,WAAAx6L,EAAAi3O,qBACAv8O,KAAA28O,WAAAr3O,EAAA65O,gBAAAt9O,QACA7B,KAAA48O,eAAAt3O,EAAA65O,gBAAAt9O,QACA7B,KAAAs9O,YAAA,EACAt9O,KAAAu9O,YAAA,EACAv9O,KAAA2+O,QAAA,EACA3+O,KAAAq8O,WAAA,EACAr8O,KAAAs8O,SAAA,EA6EA,OA3EAzB,EAAAj7O,WACA2pB,cAAA,SAAAvR,EAAA5O,EAAA8C,EAAA07D,EAAA9rD,EAAA++D,GACA,IAAAjlE,EAAA5V,KAAA28O,WACA/mO,EAAA,GAAAoC,EACApC,EAAA,GAAAxM,EACAwM,EAAA,GAAA1J,EACA0J,EAAA,GAAAgyD,EACAhyD,EAAA,GAAAkG,EACAlG,EAAA,GAAAilE,GAEAqkK,kBAAA,SAAAlnO,EAAA5O,EAAA8C,EAAA07D,EAAA9rD,EAAA++D,GACA,IAAAjlE,EAAA5V,KAAA48O,eACAhnO,EAAA,GAAAoC,EACApC,EAAA,GAAAxM,EACAwM,EAAA,GAAA1J,EACA0J,EAAA,GAAAgyD,EACAhyD,EAAA,GAAAkG,EACAlG,EAAA,GAAAilE,GAEA8iK,oBAAA,SAAAljO,EAAA5E,GACA,IAAAD,EAAA5V,KAAA28O,WACA/mO,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,IAEAkpO,wBAAA,SAAArkO,EAAA5E,GACA,IAAAD,EAAA5V,KAAA48O,eACAhnO,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,IAEAqpO,0BAAA,SAAAjnO,EAAA5O,EAAA8C,EAAA07D,EAAA9rD,EAAA++D,GACA,IAAA44J,EAAAzzO,KAAAyzO,KACA,IAAAA,EACA,YAEA,IAAA79N,EAAA5V,KAAA48O,eACA,GAAA5kO,IAAApC,EAAA,IAAAxM,IAAAwM,EAAA,IAAA1J,IAAA0J,EAAA,IAAAgyD,IAAAhyD,EAAA,GACA,YAEA,IAAA0wO,EAAAxqO,EAAAlG,EAAA,GACA2wO,EAAA1rK,EAAAjlE,EAAA,GACA,GAAA69N,EAAA0H,UAAA,IAAAmL,IAAA7S,EAAA0H,UAAA,IAAAoL,EACA,YAEA,IAAA9I,EACAC,EACA8I,EAAAxuO,EAAA4vD,EAAAx+D,EAAA8C,EAQA,OAPAunO,EAAA0H,UACAsC,GAAA8I,EAAAr6O,EAAAs6O,EACA9I,EAAA6I,EAAAvuO,EAAAwuO,IAEA/I,EAAA6I,EAAA1+K,EAAA4+K,EACA9I,GAAA4I,EAAAl9O,EAAAo9O,IAGAj2O,MAAAktO,EACAjtO,OAAAktO,EACAp+O,MAAAm0O,EAAA0H,SAAAuC,EAAAD,IAGAgJ,iBAAA,SAAA/J,GACA,IAAAN,GAAAp8O,KAAA63O,SAAA73O,KAAAq8O,WAAA,IAAAr8O,KAAA63O,SAAA,EAAA73O,KAAAs8O,UACA,OAAAh3O,EAAA8C,KAAAoc,UAAAk4N,EAAAp3O,EAAA8C,KAAAoc,UAAAxkB,KAAA28O,WAAAP,KAEA4C,eAAA,WACAh/O,KAAA8+O,wBAAA,GAAA9+O,KAAA2+O,SACA3+O,KAAA28O,WAAA38O,KAAA48O,eAAA/6O,SAEA8tO,MAAA,WACA,IAAAA,EAAAxwO,OAAAe,OAAAF,MAIA,OAHA2vO,EAAAgN,WAAA38O,KAAA28O,WAAA96O,QACA8tO,EAAAiN,eAAA58O,KAAA48O,eAAA/6O,QACA8tO,EAAA7vC,WAAA9/L,KAAA8/L,WAAAj+L,QACA8tO,IAGAkL,EA1FA,GA4FA9D,EAAA,WACA,SAAAA,IACA/2O,KAAA08O,IAAA,IAAAhoO,aAAApP,EAAA65O,iBACAn/O,KAAAyzO,KAAA,KACAzzO,KAAAm0O,kBAAA7uO,EAAA8uO,kBAAAsS,KACA1mP,KAAAs0O,eAAAtpE,EAAA37J,WAAAsD,WAAAC,KACA5S,KAAA24O,iBAAA3tE,EAAA37J,WAAAsD,WAAAC,KAOA,OALAmkO,EAAAn3O,WACA+vO,MAAA,WACA,OAAAxwO,OAAAe,OAAAF,QAGA+2O,EAbA,GAeAI,EAAA,WACA,IAAAwP,KAAArhP,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAid,GACA42K,GAAAx4L,EAAA8gB,IAAAwgO,aACAC,QAAA,EACAC,iBAEA78O,EAAAq0B,GACAw/J,GAAAx4L,EAAA8gB,IAAA2gO,WACAF,QAAA,EACAC,iBAEA78O,EAAAsC,GACAuxL,GAAAx4L,EAAA8gB,IAAA4gO,YACAH,QAAA,EACAC,iBAEA78O,EAAAgR,GACA6iL,GAAAx4L,EAAA8gB,IAAA6gO,cACAJ,QAAA,EACAC,iBAEA78O,EAAA29D,GACAk2H,GAAAx4L,EAAA8gB,IAAA8gO,QACAL,QAAA,EACAC,iBAEA78O,EAAAk9O,IACArpD,GAAAx4L,EAAA8gB,IAAAghO,mBACAP,QAAA,EACAC,iBAEA78O,EAAAtI,GACAm8L,GAAAx4L,EAAA8gB,IAAAihO,YACAR,QAAA,EACAC,iBAEA78O,EAAAq9O,IACAxpD,GAAAx4L,EAAA8gB,IAAA2uN,UACA8R,QAAA,EACAC,iBAEA78O,EAAA0E,GACAmvL,GAAAx4L,EAAA8gB,IAAAC,KACAwgO,QAAA,EACAC,iBAEA78O,EAAA++B,GACA80J,GAAAx4L,EAAA8gB,IAAAG,QACAsgO,QAAA,EACAC,iBAEA78O,EAAAs9O,IACAzpD,GAAAx4L,EAAA8gB,IAAA5B,UACAqiO,QAAA,EACAC,iBAEA78O,EAAA2L,GACAkoL,GAAAx4L,EAAA8gB,IAAAuzN,OACAkN,QAAA,EACAC,iBAEA78O,EAAA23F,GACAk8F,GAAAx4L,EAAA8gB,IAAAwzN,OACAiN,QAAA,EACAC,iBAEA78O,EAAAiC,GACA4xL,GAAAx4L,EAAA8gB,IAAAyzN,QACAgN,QAAA,EACAC,iBAEA78O,EAAAhG,GACA65L,GAAAx4L,EAAA8gB,IAAA0zN,SACA+M,QAAA,EACAC,iBAEA78O,EAAA4L,GACAioL,GAAAx4L,EAAA8gB,IAAA2zN,SACA8M,QAAA,EACAC,iBAEA78O,EAAAkd,GACA22K,GAAAx4L,EAAA8gB,IAAA4zN,UACA6M,QAAA,EACAC,iBAEA78O,EAAAu9O,IACA1pD,GAAAx4L,EAAA8gB,IAAAg/M,UACAyhB,QAAA,EACAC,iBAEA78O,EAAAwgC,GACAqzJ,GAAAx4L,EAAA8gB,IAAAqhO,OACAZ,QAAA,EACAC,iBAEA78O,EAAAqtH,GACAwmE,GAAAx4L,EAAA8gB,IAAAshO,YACAb,QAAA,EACAC,iBAEA78O,EAAA4wE,GACAijH,GAAAx4L,EAAA8gB,IAAAuhO,KACAd,QAAA,EACAC,iBAEA78O,EAAAytB,GACAomK,GAAAx4L,EAAA8gB,IAAAuhO,KACAd,QAAA,EACAC,iBAEA78O,EAAA,OACA6zL,GAAAx4L,EAAA8gB,IAAAwhO,OACAf,QAAA,EACAC,iBAEA78O,EAAAqO,GACAwlL,GAAAx4L,EAAA8gB,IAAAyhO,WACAhB,QAAA,EACAC,iBAEA78O,EAAA,OACA6zL,GAAAx4L,EAAA8gB,IAAA0hO,aACAjB,QAAA,EACAC,iBAEA78O,EAAAb,GACA00L,GAAAx4L,EAAA8gB,IAAA2hO,gBACAlB,QAAA,EACAC,iBAEA78O,EAAA,OACA6zL,GAAAx4L,EAAA8gB,IAAA4hO,kBACAnB,QAAA,EACAC,iBAEA78O,EAAAtD,GACAm3L,GAAAx4L,EAAA8gB,IAAA6hO,QACApB,QAAA,EACAC,iBAEA78O,EAAAirC,GACA4oJ,GAAAx4L,EAAA8gB,IAAA8hO,KACArB,QAAA,EACAC,iBAEA78O,EAAA,OACA6zL,GAAAx4L,EAAA8gB,IAAA+hO,OACAtB,QAAA,EACAC,iBAEA78O,EAAAm+O,IACAtqD,GAAAx4L,EAAA8gB,IAAAiD,UACAw9N,QAAA,EACAC,iBAEA78O,EAAAo+O,IACAvqD,GAAAx4L,EAAA8gB,IAAAqD,QACAo9N,QAAA,EACAC,iBAEA78O,EAAAq+O,IACAxqD,GAAAx4L,EAAA8gB,IAAAmyN,eACAsO,QAAA,EACAC,iBAEA78O,EAAAs+O,IACAzqD,GAAAx4L,EAAA8gB,IAAAkyN,eACAuO,QAAA,EACAC,iBAEA78O,EAAAu+O,IACA1qD,GAAAx4L,EAAA8gB,IAAAq4N,UACAoI,QAAA,EACAC,iBAEA78O,EAAAw+O,IACA3qD,GAAAx4L,EAAA8gB,IAAAs4N,WACAmI,QAAA,EACAC,iBAEA78O,EAAAy+O,IACA5qD,GAAAx4L,EAAA8gB,IAAAkD,QACAu9N,QAAA,EACAC,iBAEA78O,EAAA0+O,IACA7qD,GAAAx4L,EAAA8gB,IAAAoyN,qBACAqO,QAAA,EACAC,iBAEA78O,EAAA2+O,IACA9qD,GAAAx4L,EAAA8gB,IAAAo4N,YACAqI,QAAA,EACAC,iBAEA78O,EAAA4+O,IACA/qD,GAAAx4L,EAAA8gB,IAAAw4N,SACAiI,QAAA,EACAC,iBAEA78O,EAAA6+O,IACAhrD,GAAAx4L,EAAA8gB,IAAA24N,mBACA8H,QAAA,EACAC,iBAEA78O,EAAA8+O,IACAjrD,GAAAx4L,EAAA8gB,IAAAmD,cACAs9N,QAAA,EACAC,iBAEA78O,EAAA,OACA6zL,GAAAx4L,EAAA8gB,IAAAgyN,SACAyO,QAAA,EACAC,iBAEA78O,EAAA++O,IACAlrD,GAAAx4L,EAAA8gB,IAAAoD,SACAq9N,QAAA,EACAC,iBAEA78O,EAAAg/O,IACAnrD,GAAAx4L,EAAA8gB,IAAA2xN,eACA8O,QAAA,EACAC,iBAEA78O,EAAA,MACA6zL,GAAAx4L,EAAA8gB,IAAA+xN,iBACA0O,QAAA,EACAC,iBAEA78O,EAAA,MACA6zL,GAAAx4L,EAAA8gB,IAAAiyN,2BACAwO,QAAA,EACAC,iBAEA78O,EAAAi/O,IACAprD,GAAAx4L,EAAA8gB,IAAA+iO,aACAtC,QAAA,EACAC,iBAEA78O,EAAAm/O,IACAtrD,GAAAx4L,EAAA8gB,IAAAijO,sBACAxC,QAAA,EACAC,iBAEA78O,EAAAq/O,IACAxrD,GAAAx4L,EAAA8gB,IAAAsyN,oBACAmO,QAAA,EACAC,iBAEA78O,EAAAiI,IACA4rL,GAAAx4L,EAAA8gB,IAAAqyN,kBACAoO,QAAA,EACAC,iBAEA78O,EAAAs/O,IACAzrD,GAAAx4L,EAAA8gB,IAAA0yN,eACA+N,QAAA,EACAC,iBAEA78O,EAAAu/O,KACA1rD,GAAAx4L,EAAA8gB,IAAAizN,gBACAwN,QAAA,GACAC,iBAEA78O,EAAAw/O,IACA3rD,GAAAx4L,EAAA8gB,IAAAwyN,aACAiO,QAAA,EACAC,iBAEA78O,EAAAy/O,KACA5rD,GAAAx4L,EAAA8gB,IAAAgzN,cACAyN,QAAA,GACAC,iBAEA78O,EAAAmM,GACA0nL,GAAAx4L,EAAA8gB,IAAA6yN,cACA4N,QAAA,EACAC,iBAEA78O,EAAAwL,GACAqoL,GAAAx4L,EAAA8gB,IAAA4yN,YACA6N,QAAA,EACAC,iBAEA78O,EAAA0/O,IACA7rD,GAAAx4L,EAAA8gB,IAAA2yN,kBACA8N,QAAA,EACAC,iBAEA78O,EAAA2/O,IACA9rD,GAAAx4L,EAAA8gB,IAAAyyN,gBACAgO,QAAA,EACAC,iBAEA78O,EAAA60B,GACAg/J,GAAAx4L,EAAA8gB,IAAA+yN,mBACA0N,QAAA,EACAC,iBAEA78O,EAAAiB,GACA4yL,GAAAx4L,EAAA8gB,IAAA8yN,iBACA2N,QAAA,EACAC,iBAEA78O,EAAA4/O,IACA/rD,GAAAx4L,EAAA8gB,IAAAkzN,YACAuN,QAAA,EACAC,iBAEA78O,EAAA6/O,IACAhsD,GAAAx4L,EAAA8gB,IAAA2jO,iBACAlD,QAAA,EACAC,iBAEA78O,EAAA+/O,IACAlsD,GAAAx4L,EAAA8gB,IAAA6jO,eACApD,QAAA,EACAC,iBAEA78O,EAAAigP,IACApsD,GAAAx4L,EAAA8gB,IAAA0xN,eACA+O,QAAA,EACAC,iBAEA78O,EAAAkgP,IACArsD,GAAAx4L,EAAA8gB,IAAAsxN,aACAmP,QAAA,EACAC,iBAEA78O,EAAAmgP,IACAtsD,GAAAx4L,EAAA8gB,IAAA6zN,UACA4M,QAAA,EACAC,iBAEA78O,EAAAogP,IACAvsD,GAAAx4L,EAAA8gB,IAAA8zN,eACA2M,QAAA,EACAC,iBAEA78O,EAAAqgP,KACAxsD,GAAAx4L,EAAA8gB,IAAA+zN,mBACA0M,QAAA,EACAC,iBAEA78O,EAAAsgP,KACAzsD,GAAAx4L,EAAA8gB,IAAAg0N,wBACAyM,QAAA,EACAC,iBAEA78O,EAAAugP,KACA1sD,GAAAx4L,EAAA8gB,IAAAi0N,iBACAwM,QAAA,EACAC,iBAEA78O,EAAAwgP,IACA3sD,GAAAx4L,EAAA8gB,IAAAk0N,YACAuM,QAAA,EACAC,iBAEA78O,EAAAygP,IACA5sD,GAAAx4L,EAAA8gB,IAAAm0N,UACAsM,QAAA,EACAC,iBAEA78O,EAAA0gP,GAAA,KACA1gP,EAAA2gP,GAAA,KACA3gP,EAAA4gP,KAAA,KACA5gP,EAAA6gP,GAAA,KACA7gP,EAAA8gP,IAAA,KACA9gP,EAAA+gP,KAAA,KACA/gP,EAAAghP,MAAA,KACAhhP,EAAA2tG,GAAA,KACA3tG,EAAAihP,IAAA,KACAjhP,EAAAkhP,KAAA,OAEA,SAAAhU,EAAAhvO,EAAA1H,EAAA8xO,GACAvyO,KAAAorP,MAAAzE,IACA3mP,KAAAkjB,OAAA,IAAA2nJ,EAAA9uJ,OAAA,IAAA8uJ,EAAA5uJ,MAAA9T,EAAAnI,KAAAorP,UAAA3qP,GACAT,KAAAuyO,eACAvyO,KAAAqrP,oBA8EA,OA5EAlU,EAAAv3O,WACA23O,uBACA,OAAAv3O,KAAAuyO,aAAA6T,WAAAtkP,QAEA6lK,KAAA,SAAA0wC,GAEA,IADA,IAAAlvL,EAAAkvL,EAAAlvL,OACA,CACA,IAAAzpB,EAAAM,KAAAkjB,OAAAjG,SACA,MAAAzX,EAAApB,OAAA1E,GAAA,CACA,IAAAW,EAAAX,EAAAW,IACAirP,EAAAtrP,KAAAorP,MAAA/qP,GACA,IAAAirP,EAAA,IACAhmP,EAAA2O,MAAA,oBAAA5T,EAAA,KACA,SAEA,IAAAuD,EAAA0nP,EAAAxtD,GACA+oD,EAAAyE,EAAAzE,QACA0E,EAAA,OAAApiO,IAAArnB,OAAA,EACA,GAAAwpP,EAAAxE,aAsBWyE,EAAA1E,MACXvhP,EAAA+Q,MAAA,WAAAzS,EAAA,iBAAAijP,EAAA,wBAAA0E,EAAA,cAvBA,CACA,GAAAA,IAAA1E,EAAA,CAEA,IADA,IAAAwE,EAAArrP,KAAAqrP,iBACAE,EAAA1E,GACAwE,EAAA7tO,KAAA2L,EAAAnhB,SACAujP,IAEA,KAAAA,EAAA1E,GAAA,IAAAwE,EAAAvpP,QACA,OAAAqnB,IACAA,MAEAA,EAAA6vL,QAAAqyC,EAAA36E,OACA66E,IAGA,GAAAA,EAAA1E,EAAA,IACAvhP,EAAA2O,MAAA,oBAAArQ,EAAA,cAAAijP,EAAA,uBAAA0E,EAAA,UACA,OAAApiO,IACAA,EAAArnB,OAAA,GAEA,UAQA,OAHA9B,KAAAwrP,kBAAA5nP,EAAAulB,GACAkvL,EAAAz0M,KACAy0M,EAAAlvL,UAGA,MAAA3jB,EAAArB,OAAAzE,GACA,SAEA,UAAAA,IACA,OAAAypB,IACAA,MAEAA,EAAA3L,KAAA9d,GACAypB,EAAArnB,OAAA,IACA,UAAAwD,EAAAyD,YAAA,wBAKAyiP,kBAAA,SAAA5nP,EAAAulB,GACA,SAAAvlB,GACA,KAAA0B,EAAA8gB,IAAAC,KACArmB,KAAAuyO,aAAAlsN,OACA,MACA,KAAA/gB,EAAA8gB,IAAAG,QACAvmB,KAAAuyO,aAAAhsN,UACA,MACA,KAAAjhB,EAAA8gB,IAAA5B,UACAxkB,KAAAuyO,aAAA/tN,UAAA2E,MAKAguN,EA5cA,GA8cA93O,EAAAskN,qDCztFAxkN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAuiP,YAAAviP,EAAAqiP,aAAAriP,EAAAosP,YAEA,IAAAnmP,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BslK,EAActlK,EAAQ,KAEtB2W,EAAc3W,EAAQ,KAEtBmmP,GAAA,+xEACAD,EAAA,WACA,SAAAA,EAAAhK,GACAzhP,KAAA2rP,8BACA3rP,KAAA4rP,mBAAA,EACA5rP,KAAAU,QACAV,KAAAD,KAAA,GACAC,KAAAm7O,YACAn7O,KAAA6hP,QAAA,KACA7hP,KAAAyhP,cAyGA,OAvGAgK,EAAA7rP,WACAisP,kBAAA,SAAAllP,EAAA2tL,EAAAD,GACAr0L,KAAA2rP,gBAAAhlP,EAAA,GAAA6W,KAAA82K,EAAAD,GACAr0L,KAAA4rP,sBAEAE,YAAA,SAAAx3D,EAAAD,EAAA03D,GACA,KAAAz3D,GAAAD,GACAr0L,KAAAU,KAAA4zL,KAAAy3D,KAGAC,WAAA,SAAA13D,EAAAD,EAAA03D,GAEA,IADA,IAAAE,EAAAF,EAAAjqP,OAAA,EACAwyL,GAAAD,GACAr0L,KAAAU,KAAA4zL,KAAAy3D,EACAA,IAAA9jD,OAAA,EAAAgkD,GAAAtqO,OAAAC,aAAAmqO,EAAA12O,WAAA42O,GAAA,IAGAC,kBAAA,SAAA53D,EAAAD,EAAA92K,GAGA,IAFA,IAAA5b,EAAA,EACAC,EAAA2b,EAAAzb,OACAwyL,GAAAD,GAAA1yL,EAAAC,GACA5B,KAAAU,KAAA4zL,GAAA/2K,EAAA5b,OACA2yL,GAGA63D,OAAA,SAAA38O,EAAA48O,GACApsP,KAAAU,KAAA8O,GAAA48O,GAEA/4O,OAAA,SAAA5J,GACA,OAAAzJ,KAAAU,KAAA+I,IAEA4iP,SAAA,SAAA5iP,GACA,gBAAAzJ,KAAAU,KAAA+I,IAEAlH,QAAA,SAAAC,GACA,IAAAqkB,EAAA7mB,KAAAU,KACAoB,EAAA+kB,EAAA/kB,OACA,GAAAA,GAAA,MACA,QAAAH,EAAA,EAAuBA,EAAAG,EAAYH,aACnCklB,EAAAllB,IACAa,EAAAb,EAAAklB,EAAAllB,SAIA,QAAA8oK,KAAA5jJ,EACArkB,EAAAioK,EAAA5jJ,EAAA4jJ,KAIA6hF,WAAA,SAAAhtP,GACA,IAAAunB,EAAA7mB,KAAAU,KACA,GAAAmmB,EAAA/kB,QAAA,MACA,OAAA+kB,EAAAyqJ,QAAAhyK,GAEA,QAAAgjP,KAAAz7N,EACA,GAAAA,EAAAy7N,KAAAhjP,EACA,SAAAgjP,EAGA,UAEAD,OAAA,WACA,OAAAriP,KAAAU,MAEA6rP,aAAA,SAAAnpP,EAAAskB,EAAA8lK,GAIA,IAHA,IAAAthL,EAAA,EACAy/O,EAAA3rP,KAAA2rP,gBACAa,EAAAxsP,KAAA2rP,gBAAA7pP,OACA6E,EAAA,EAAqBA,EAAA6lP,EAAwB7lP,IAAA,CAC7CuF,MAAA,EAAA9I,EAAAiS,WAAAqS,EAAA/gB,MAAA,EAEA,IADA,IAAA8lP,EAAAd,EAAAhlP,GACAuE,EAAA,EAAAsB,EAAAigP,EAAA3qP,OAAmDoJ,EAAAsB,GAAQ,CAC3D,IAAA8nL,EAAAm4D,EAAAvhP,KACAmpL,EAAAo4D,EAAAvhP,KACA,GAAAgB,GAAAooL,GAAApoL,GAAAmoL,EAGA,OAFA7G,EAAA2zD,SAAAj1O,OACAshL,EAAA1rL,OAAA6E,EAAA,IAKA6mL,EAAA2zD,SAAA,EACA3zD,EAAA1rL,OAAA,GAGAA,aACA,OAAA9B,KAAAU,KAAAoB,QAEA4qP,qBACA,kBAAA1sP,KAAAD,MAAA,eAAAC,KAAAD,KACA,SAEA,WAAAC,KAAAU,KAAAoB,OACA,SAEA,QAAAH,EAAA,EAAqBA,EAAA,MAAaA,IAClC,GAAA3B,KAAAU,KAAAiB,OACA,SAGA,WAGA8pP,EAjHA,GAmHA/J,EAAA,WACA,SAAAA,EAAAvG,EAAAx0O,GACA8kP,EAAA3nP,KAAA9D,MACAA,KAAAm7O,WACAn7O,KAAA6rP,kBAAAllP,EAAA,SA+CA,OA7CArB,EAAA8C,KAAAqvK,QAAAiqE,EAAA+J,MACA/J,EAAA9hP,WACAisP,kBAAAJ,EAAA7rP,UAAAisP,kBACAC,YAAA,SAAAx3D,EAAAD,EAAA03D,MACAzmP,EAAAgK,aAAA,gCAEA08O,WAAA,SAAA13D,EAAAD,EAAA03D,MACAzmP,EAAAgK,aAAA,+BAEA48O,kBAAA,SAAA53D,EAAAD,EAAA92K,MACAjY,EAAAgK,aAAA,sCAEA68O,OAAA,SAAA38O,EAAA48O,MACA9mP,EAAAgK,aAAA,8BAEA+D,OAAA,SAAA5J,GACA,OAAAiU,OAAAC,UAAAlU,OAAA,MAAAA,UAEA4iP,SAAA,SAAA5iP,GACA,OAAAiU,OAAAC,UAAAlU,OAAA,OAEAlH,QAAA,SAAAC,GACA,QAAAb,EAAA,EAAqBA,GAAA,MAAaA,IAClCa,EAAAb,MAGA2qP,WAAA,SAAAhtP,GACA,OAAAoe,OAAAC,UAAAre,OAAA,MAAAA,GAAA,GAEA+iP,OAAA,WAEA,IADA,IAAAx7N,EAAA,IAAAplB,MAAA,OACAE,EAAA,EAAqBA,GAAA,MAAaA,IAClCklB,EAAAllB,KAEA,OAAAklB,GAGA0lO,aAAAd,EAAA7rP,UAAA2sP,aACAzqP,aACA,cAEA4qP,wBACApnP,EAAAgK,aAAA,uCAGAoyO,EAnDA,GAqDAiL,EAAA,WACA,SAAAC,EAAA50O,EAAAtQ,GAEA,IADA,IAAAf,EAAA,EACAhF,EAAA,EAAmBA,GAAA+F,EAAW/F,IAC9BgF,KAAA,EAAAqR,EAAArW,GAEA,OAAAgF,IAAA,EAEA,SAAAkmP,EAAA70O,EAAAtQ,GACA,WAAAA,EACAia,OAAAC,aAAA5J,EAAA,GAAAA,EAAA,IAEA,IAAAtQ,EACAia,OAAAC,aAAA5J,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA2J,OAAAC,aAAAg3L,MAAA,KAAA5gM,EAAA1R,SAAA,EAAAoB,EAAA,IAEA,SAAAolP,EAAA90O,EAAA5O,EAAA1B,GAEA,IADA,IAAAwE,EAAA,EACAvK,EAAA+F,EAAsB/F,GAAA,EAAQA,IAC9BuK,GAAA8L,EAAArW,GAAAyH,EAAAzH,GACAqW,EAAArW,GAAA,IAAAuK,EACAA,IAAA,EAGA,SAAA6gP,EAAA/0O,EAAAtQ,GAEA,IADA,IAAAwE,EAAA,EACAvK,EAAA+F,EAAsB/F,GAAA,GAAAuK,EAAA,EAAiBvK,IACvCuK,GAAA8L,EAAArW,GACAqW,EAAArW,GAAA,IAAAuK,EACAA,IAAA,EAGA,IAAA8gP,EAAA,GACAC,EAAA,GACA,SAAAC,EAAAroO,GACA7kB,KAAA+G,OAAA8d,EACA7kB,KAAA6F,IAAA,EACA7F,KAAA8F,IAAA+e,EAAA/iB,OACA9B,KAAA2U,OAAA,IAAA/O,WAAAqnP,GA2NA,SAAAN,KAEA,OA3NAO,EAAAttP,WACAutP,SAAA,WACA,OAAAntP,KAAA6F,KAAA7F,KAAA8F,KACA,EAEA9F,KAAA+G,OAAA/G,KAAA6F,QAEAunP,WAAA,WACA,IACAv8E,EADAlqK,EAAA,EAEA,GACA,IAAAyC,EAAApJ,KAAAmtP,WACA,GAAA/jP,EAAA,EACA,UAAA9D,EAAAyD,YAAA,2BAEA8nK,IAAA,IAAAznK,GACAzC,KAAA,MAAAyC,SACOynK,GACP,OAAAlqK,GAEA0mP,WAAA,WACA,IAAA1mP,EAAA3G,KAAAotP,aACA,SAAAzmP,QAAA,GAAAA,IAAA,GAEA2mP,QAAA,SAAArqP,EAAAyE,GACAzE,EAAAZ,IAAArC,KAAA+G,OAAAT,SAAAtG,KAAA6F,IAAA7F,KAAA6F,IAAA6B,EAAA,IACA1H,KAAA6F,KAAA6B,EAAA,GAEA6lP,cAAA,SAAAtqP,EAAAyE,GACA,IAAAmpK,EACAytB,EAAAt+L,KAAA2U,OACA64O,EAAA,EACA,GACA,IAAApkP,EAAApJ,KAAAmtP,WACA,GAAA/jP,EAAA,EACA,UAAA9D,EAAAyD,YAAA,2BAEA8nK,IAAA,IAAAznK,GACAk1L,EAAAkvD,KAAA,IAAApkP,SACOynK,GAIP,IAHA,IAAAlvK,EAAA+F,EACAX,EAAA,EACAs/K,EAAA,EACA1kL,GAAA,IACA,KAAA0kL,EAAA,GAAAiY,EAAAx8L,OAAA,GACAiF,EAAAu3L,IAAAkvD,IAAAnnE,EAAAt/K,EACAs/K,GAAA,EAEApjL,EAAAtB,GAAA,IAAAoF,EACApF,IACAoF,IAAA,EACAs/K,GAAA,IAGAonE,cAAA,SAAAxqP,EAAAyE,GACA1H,KAAAutP,cAAAtqP,EAAAyE,GAGA,IAFA,IAAAga,EAAA,EAAAze,EAAAyE,GAAA,MACAwE,EAAA,EACAvK,EAAA,EAAqBA,GAAA+F,EAAW/F,IAChCuK,GAAA,EAAAA,IAAA,EAAAjJ,EAAAtB,GACAsB,EAAAtB,GAAAuK,GAAA,EAAAwV,GAGAgsO,WAAA,WAGA,IAFA,IAAA5jP,EAAA9J,KAAAotP,aACA91H,EAAA,GACA31H,EAAA,EAAqBA,EAAAmI,EAASnI,IAC9B21H,GAAA31G,OAAAC,aAAA5hB,KAAAotP,cAEA,OAAA91H,IAqJAq1H,EAAA/sP,WAAgC+tP,QAlJhC,SAAA9oO,EAAA28N,EAAA3wD,GACA,WAAAvvL,QAAA,SAAAC,EAAAmmK,GACA,IAAAv/J,EAAA,IAAA+kP,EAAAroO,GACA85K,EAAAx2L,EAAAglP,WACA3L,EAAArG,YAAA,EAAAx8C,GASA,IARA,IAMAl1L,EACAL,EAPAy4O,EAAA,KACAn8O,EAAA,IAAAE,WAAAonP,GACAlnP,EAAA,IAAAF,WAAAonP,GACA7kD,EAAA,IAAAviM,WAAAonP,GACA1K,EAAA,IAAA18O,WAAAonP,GACA15D,EAAA,IAAA1tL,WAAAonP,IAGA5jP,EAAAjB,EAAAglP,aAAA,IACA,IAAAjpP,EAAAkF,GAAA,EACA,OAAAlF,EAAA,CAWA,IAAA0pP,KAAA,GAAAxkP,GACAykP,EAAA,GAAAzkP,EACA,GAAAykP,EAAA,EAAAb,EACA,UAAAtwO,MAAA,wCAEA,IAEA/a,EADAmsP,EAAA3lP,EAAAilP,aAEA,OAAAlpP,GACA,OAKA,IAJAiE,EAAAmlP,QAAA5nP,EAAAmoP,GACA1lP,EAAAolP,cAAAznP,EAAA+nP,GACAf,EAAAhnP,EAAAJ,EAAAmoP,GACArM,EAAAqK,kBAAAgC,EAAA,EAAAjB,EAAAlnP,EAAAmoP,GAAAjB,EAAA9mP,EAAA+nP,IACAlsP,EAAA,EAAuBA,EAAAmsP,EAAmBnsP,IAC1CorP,EAAAjnP,EAAA+nP,GACA1lP,EAAAolP,cAAA7nP,EAAAmoP,GACAf,EAAApnP,EAAAI,EAAA+nP,GACA1lP,EAAAolP,cAAAznP,EAAA+nP,GACAf,EAAAhnP,EAAAJ,EAAAmoP,GACArM,EAAAqK,kBAAAgC,EAAA,EAAAjB,EAAAlnP,EAAAmoP,GAAAjB,EAAA9mP,EAAA+nP,IAEA,MACA,OAKA,IAJA1lP,EAAAmlP,QAAA5nP,EAAAmoP,GACA1lP,EAAAolP,cAAAznP,EAAA+nP,GACAf,EAAAhnP,EAAAJ,EAAAmoP,GACA1lP,EAAAilP,aACAzrP,EAAA,EAAuBA,EAAAmsP,EAAmBnsP,IAC1CorP,EAAAjnP,EAAA+nP,GACA1lP,EAAAolP,cAAA7nP,EAAAmoP,GACAf,EAAApnP,EAAAI,EAAA+nP,GACA1lP,EAAAolP,cAAAznP,EAAA+nP,GACAf,EAAAhnP,EAAAJ,EAAAmoP,GACA1lP,EAAAilP,aAEA,MACA,OAIA,IAHAjlP,EAAAmlP,QAAAnlD,EAAA0lD,GACApkP,EAAAtB,EAAAilP,aACA5L,EAAA2K,OAAAS,EAAAzkD,EAAA0lD,GAAApkP,GACA9H,EAAA,EAAuBA,EAAAmsP,EAAmBnsP,IAC1CorP,EAAA5kD,EAAA0lD,GACAD,IACAzlP,EAAAolP,cAAAj6D,EAAAu6D,GACAf,EAAA3kD,EAAA7U,EAAAu6D,IAEApkP,EAAAtB,EAAAklP,cAAA5jP,EAAA,GACA+3O,EAAA2K,OAAAS,EAAAzkD,EAAA0lD,GAAApkP,GAEA,MACA,OAMA,IALAtB,EAAAmlP,QAAA5nP,EAAAmoP,GACA1lP,EAAAolP,cAAAznP,EAAA+nP,GACAf,EAAAhnP,EAAAJ,EAAAmoP,GACApkP,EAAAtB,EAAAilP,aACA5L,EAAAsK,YAAAc,EAAAlnP,EAAAmoP,GAAAjB,EAAA9mP,EAAA+nP,GAAApkP,GACA9H,EAAA,EAAuBA,EAAAmsP,EAAmBnsP,IAC1CorP,EAAAjnP,EAAA+nP,GACAD,EAIAloP,EAAArD,IAAAyD,IAHAqC,EAAAolP,cAAA7nP,EAAAmoP,GACAf,EAAApnP,EAAAI,EAAA+nP,IAIA1lP,EAAAolP,cAAAznP,EAAA+nP,GACAf,EAAAhnP,EAAAJ,EAAAmoP,GACApkP,EAAAtB,EAAAilP,aACA5L,EAAAsK,YAAAc,EAAAlnP,EAAAmoP,GAAAjB,EAAA9mP,EAAA+nP,GAAApkP,GAEA,MACA,OAIA,IAHAtB,EAAAmlP,QAAAnlD,EAnEA,GAoEAhgM,EAAAmlP,QAAAhL,EAAAuL,GACArM,EAAA2K,OAAAS,EAAAzkD,EArEA,GAqEA0kD,EAAAvK,EAAAuL,IACAlsP,EAAA,EAAuBA,EAAAmsP,EAAmBnsP,IAC1CorP,EAAA5kD,EAvEA,GAwEAylD,IACAzlP,EAAAolP,cAAAj6D,EAzEA,GA0EAw5D,EAAA3kD,EAAA7U,EA1EA,IA4EAy5D,EAAAzK,EAAAuL,GACA1lP,EAAAslP,cAAAn6D,EAAAu6D,GACAf,EAAAxK,EAAAhvD,EAAAu6D,GACArM,EAAA2K,OAAAS,EAAAzkD,EA/EA,GA+EA0kD,EAAAvK,EAAAuL,IAEA,MACA,OAMA,IALA1lP,EAAAmlP,QAAA5nP,EAnFA,GAoFAyC,EAAAolP,cAAAznP,EApFA,GAqFAgnP,EAAAhnP,EAAAJ,EArFA,GAsFAyC,EAAAmlP,QAAAhL,EAAAuL,GACArM,EAAAwK,WAAAY,EAAAlnP,EAvFA,GAuFAknP,EAAA9mP,EAvFA,GAuFA+mP,EAAAvK,EAAAuL,IACAlsP,EAAA,EAAuBA,EAAAmsP,EAAmBnsP,IAC1CorP,EAAAjnP,EAzFA,GA0FA8nP,EAIAloP,EAAArD,IAAAyD,IAHAqC,EAAAolP,cAAA7nP,EA3FA,GA4FAonP,EAAApnP,EAAAI,EA5FA,IAgGAqC,EAAAolP,cAAAznP,EAhGA,GAiGAgnP,EAAAhnP,EAAAJ,EAjGA,GAkGAyC,EAAAmlP,QAAAhL,EAAAuL,GACArM,EAAAwK,WAAAY,EAAAlnP,EAnGA,GAmGAknP,EAAA9mP,EAnGA,GAmGA+mP,EAAAvK,EAAAuL,IAEA,MACA,QAEA,YADAnmF,EAAA,IAAAhrJ,MAAA,oCAAAxY,UAtHA,UAAAkF,GACA,OACAjB,EAAAulP,aACA,MACA,OACA7L,EAAA15O,EAAAulP,cAsHAnsP,EADAsgP,EACAhxD,EAAAgxD,GAGAL,OAKAmL,EApQA,GAsQA/K,EAAA,WACA,SAAAmM,EAAA3qP,GAEA,IADA,IAAA4U,EAAA,EACArW,EAAA,EAAmBA,EAAAyB,EAAAtB,OAAgBH,IACnCqW,KAAA,EAAA5U,EAAAiS,WAAA1T,GAEA,OAAAqW,IAAA,EAEA,SAAAg2O,EAAAtuP,GACA,OAAA4F,EAAA8P,UAAA1V,GACA,UAAA4F,EAAAyD,YAAA,oCAGA,SAAAklP,EAAAvuP,GACA,IAAAge,OAAAC,UAAAje,GACA,UAAA4F,EAAAyD,YAAA,iCAGA,SAAAmlP,EAAA1M,EAAA7kO,GACA,QACA,IAAAjd,EAAAid,EAAAM,SACA,MAAAzX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,aACA,OAEAsuP,EAAAtuP,GACA,IAAA8P,EAAAu+O,EAAAruP,GAEAsuP,EADAtuP,EAAAid,EAAAM,UAEA,IAAAmvO,EAAA1sP,EACA8hP,EAAA2K,OAAA38O,EAAA48O,IAGA,SAAA+B,EAAA3M,EAAA7kO,GACA,QACA,IAAAjd,EAAAid,EAAAM,SACA,MAAAzX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,cACA,OAEAsuP,EAAAtuP,GACA,IAAA40L,EAAAy5D,EAAAruP,GAEAsuP,EADAtuP,EAAAid,EAAAM,UAEA,IAAAo3K,EAAA05D,EAAAruP,GAEA,GADAA,EAAAid,EAAAM,SACAS,OAAAC,UAAAje,OAAA4F,EAAA8P,UAAA1V,GAAA,CACA,IAAAqsP,EAAAruO,OAAAC,UAAAje,GAAAiiB,OAAAC,aAAAliB,KACA8hP,EAAAwK,WAAA13D,EAAAD,EAAA03D,OACO,QAAAvmP,EAAApB,OAAA1E,EAAA,KASP,MARAA,EAAAid,EAAAM,SAEA,IADA,IAAAM,SACA/X,EAAApB,OAAA1E,EAAA,UAAA8F,EAAArB,OAAAzE,IACA6d,EAAAC,KAAA9d,GACAA,EAAAid,EAAAM,SAEAukO,EAAA0K,kBAAA53D,EAAAD,EAAA92K,IAKA,UAAAjY,EAAAyD,YAAA,qBAEA,SAAAqlP,EAAA5M,EAAA7kO,GACA,QACA,IAAAjd,EAAAid,EAAAM,SACA,MAAAzX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,cACA,OAEAsuP,EAAAtuP,GACA,IAAA8P,EAAAu+O,EAAAruP,GAEAuuP,EADAvuP,EAAAid,EAAAM,UAEA,IAAAmvO,EAAA1sP,EACA8hP,EAAA2K,OAAA38O,EAAA48O,IAGA,SAAAiC,EAAA7M,EAAA7kO,GACA,QACA,IAAAjd,EAAAid,EAAAM,SACA,MAAAzX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,eACA,OAEAsuP,EAAAtuP,GACA,IAAA40L,EAAAy5D,EAAAruP,GAEAsuP,EADAtuP,EAAAid,EAAAM,UAEA,IAAAo3K,EAAA05D,EAAAruP,GAEAuuP,EADAvuP,EAAAid,EAAAM,UAEA,IAAA8uO,EAAArsP,EACA8hP,EAAAsK,YAAAx3D,EAAAD,EAAA03D,IAGA,SAAAuC,EAAA9M,EAAA7kO,GACA,QACA,IAAAjd,EAAAid,EAAAM,SACA,MAAAzX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,qBACA,OAEA,OAAA4F,EAAA8P,UAAA1V,GACA,MAEA,IAAA40L,EAAAy5D,EAAAruP,GAEA,GADAA,EAAAid,EAAAM,aACA3X,EAAA8P,UAAA1V,GACA,MAEA,IAAA20L,EAAA05D,EAAAruP,GACA8hP,EAAAqK,kBAAAnsP,EAAAoC,OAAAwyL,EAAAD,GAEA,UAAA/uL,EAAAyD,YAAA,4BAEA,SAAAwlP,EAAA/M,EAAA7kO,GACA,IAAAjd,EAAAid,EAAAM,SACAS,OAAAC,UAAAje,KACA8hP,EAAArG,WAAAz7O,GAGA,SAAA8uP,EAAAhN,EAAA7kO,GACA,IAAAjd,EAAAid,EAAAM,YACAzX,EAAAxB,QAAAtE,OAAA4F,EAAA8P,UAAA1V,EAAAK,QACAyhP,EAAAzhP,KAAAL,EAAAK,MAGA,SAAA0uP,EAAAjN,EAAA7kO,EAAAkyN,EAAAgT,GACA,IAAA6M,EACAC,EACAC,EAAA,OACA,IACA,IAAAlvP,EAAAid,EAAAM,SACA,MAAAzX,EAAArB,OAAAzE,GACA,MACS,MAAA8F,EAAAxB,QAAAtE,GACT,UAAAA,EAAAK,KACAwuP,EAAA/M,EAAA7kO,GACW,aAAAjd,EAAAK,MACXyuP,EAAAhN,EAAA7kO,GAEA+xO,EAAAhvP,OACS,MAAA8F,EAAApB,OAAA1E,GACT,OAAAA,EAAAW,KACA,cACA,MAAAuuP,EACA,iBACAppP,EAAAxB,QAAA0qP,KACAC,EAAAD,EAAA3uP,MAEA,MACA,0BACAuuP,EAAA9M,EAAA7kO,GACA,MACA,kBACAuxO,EAAA1M,EAAA7kO,GACA,MACA,mBACAyxO,EAAA5M,EAAA7kO,GACA,MACA,mBACAwxO,EAAA3M,EAAA7kO,GACA,MACA,oBACA0xO,EAAA7M,EAAA7kO,IAIO,MAAAqE,GACP,GAAAA,aAAA1b,EAAA8X,qBACA,MAAA4D,KAEA1b,EAAA2O,MAAA,sBAAA+M,GACA,SAMA,OAHA6gO,GAAA8M,IACA9M,EAAA8M,GAEA9M,EACAgN,EAAArN,EAAA3S,EAAAgT,GAEAvgP,QAAAC,QAAAigP,GAEA,SAAAqN,EAAArN,EAAA3S,EAAAgT,GACA,OAAAiN,EAAAjN,EAAAhT,GAAAjnE,KAAA,SAAAmnF,GAEA,GADAvN,EAAAK,QAAAkN,EACA,IAAAvN,EAAAoK,mBAAA,CAEA,IADA,IAAAoD,EAAAxN,EAAAK,QAAA8J,gBACAhqP,EAAA,EAAuBA,EAAAqtP,EAAAltP,OAA+BH,IACtD6/O,EAAAmK,gBAAAhqP,GAAAqtP,EAAArtP,GAAAE,QAEA2/O,EAAAoK,mBAAApK,EAAAK,QAAA+J,mBAOA,OALApK,EAAAK,QAAAt/O,QAAA,SAAAL,EAAA5C,GACAkiP,EAAA6K,SAAAnqP,IACAs/O,EAAA2K,OAAAjqP,EAAAs/O,EAAAK,QAAAxuO,OAAAnR,MAGAs/O,IAGA,SAAAsN,EAAA/uP,EAAA8uO,GACA,qBAAA9uO,EACAuB,QAAAC,QAAA,IAAAmgP,KAAA,IACK,eAAA3hP,EACLuB,QAAAC,QAAA,IAAAmgP,KAAA,IAEAgK,EAAAziF,SAAAlpK,GAGA8uO,EAGAA,EAAA9uO,GAAA6nK,KAAA,SAAA/iJ,GACA,IAAAoqO,EAAApqO,EAAAoqO,SACAlgB,EAAAlqN,EAAAkqN,gBACAyS,EAAA,IAAAiK,MACA,GAAA1c,IAAAzpO,EAAA0pO,oBAAAkgB,OACA,WAAAvC,GAAAgB,QAAAsB,EAAAzN,EAAA,SAAAK,GACA,OAAAgN,EAAArN,EAAA3S,EAAAgT,KAGA,GAAA9S,IAAAzpO,EAAA0pO,oBAAAC,KAAA,CACA,IAAAtyN,EAAA,IAAAkuJ,EAAA5uJ,MAAA,IAAAC,EAAArX,OAAAoqP,IACA,OAAAR,EAAAjN,EAAA7kO,EAAAkyN,EAAA,MAEA,OAAAvtO,QAAAomK,OAAA,IAAAhrJ,MAAA,sEAfApb,QAAAomK,OAAA,IAAAhrJ,MAAA,+CAHApb,QAAAomK,OAAA,IAAAhrJ,MAAA,sBAAA3c,IAqBA,OACAG,OAAA,SAAAmL,GACA,IAAAmuK,EAAAnuK,EAAAmuK,SACAq1D,EAAAxjO,EAAAwjO,iBACAgT,EAAAx2O,EAAAw2O,QACA,SAAAr8O,EAAAxB,QAAAw1K,GACAs1E,EAAAt1E,EAAAz5K,KAAA8uO,MACOrpO,EAAAhB,UAAAg1K,GAGPi1E,EAFA,IAAAhD,EACA,IAAA5gF,EAAA5uJ,MAAAu9J,GACAq1D,EAAAgT,GAAAj6E,KAAA,SAAAunF,GACA,OAAAA,EAAAzC,eACAoC,EAAAK,EAAApvP,KAAA8uO,GAEAsgB,IAGA7tP,QAAAomK,OAAA,IAAAhrJ,MAAA,yBAlQA,GAsQArd,EAAAosP,OACApsP,EAAAqiP,eACAriP,EAAAuiP,gDCpsBAziP,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA+2O,YAAA/2O,EAAA+vP,sBAAA/vP,EAAA2iP,qBAAA3iP,EAAAgiP,aAAAhiP,EAAAuhP,UAAAvhP,EAAAy2O,KAAAz2O,EAAAw0O,UAAAx0O,EAAAgwP,uBAAAhwP,EAAAiwP,yBAAAjwP,EAAAkwP,6BAEA,IAAAjqP,EAAYC,EAAQ,KAEpBiqP,EAAkBjqP,EAAQ,KAE1B4oO,EAAiB5oO,EAAQ,KAEzBq4L,EAAiBr4L,EAAQ,KAEzByoO,EAAsBzoO,EAAQ,KAE9BwoO,EAAexoO,EAAQ,KAEvBkqP,EAAqBlqP,EAAQ,KAE7B2W,EAAc3W,EAAQ,KAEtBmqP,EAAoBnqP,EAAQ,KAE5B+pP,EAAA,MACAD,EAAA,MACAM,KACAC,EAAA,IACAL,KACA3O,GACAwC,WAAA,EACAmB,MAAA,EACA1D,SAAA,EACAgP,OAAA,EACA9O,YAAA,GACA+O,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,GAAA,+zEACA,SAAAC,EAAA3xD,GACA,GAAAA,EAAAsB,YAGAtB,EAAAsB,WAAA,KAAAx6L,EAAAi3O,qBAAA,IAGA,IAAA3nO,EAAA,KAAA4pL,EAAAsB,WAAA,GACA8iD,EAAApkD,EAAA2C,OACA,QAAA0zC,KAAA+N,EACAA,EAAA/N,IAAAjgO,EAEA4pL,EAAA6E,cAAAzuL,GA0BA,SAAAwhO,EAAAlyO,EAAA2nK,GACA,OAAA3nK,GACA,YACA,iBAAA2nK,EAAAvmK,EAAA8qP,SAAAC,OAAA/qP,EAAA8qP,SAAAE,MACA,mBACA,wBAAAzkF,EAAAvmK,EAAA8qP,SAAAG,cAAAjrP,EAAA8qP,SAAAI,aACA,eACA,OAAAlrP,EAAA8qP,SAAAK,SACA,eACA,OAAAnrP,EAAA8qP,SAAAM,SACA,mBACA,OAAAprP,EAAA8qP,SAAAO,aACA,cACA,OAAArrP,EAAA8qP,SAAAQ,QACA,YACA,OAAAtrP,EAAA8qP,SAAAS,MACA,QACA,OAAAvrP,EAAA8qP,SAAAU,SAGA,SAAAC,EAAAhxP,EAAAuwM,GACA,YAAAA,EAAAvwM,GACA,OAAAA,EAEA,IAAAwwM,KAAAw9B,EAAA19B,oBAAAtwM,EAAAuwM,GACA,QAAAC,EACA,QAAAruM,KAAAouM,EACA,GAAAA,EAAApuM,KAAAquM,EACA,OAAAruM,EAKA,SADAoD,EAAA+Q,MAAA,gDAAAtW,GACAA,EAEA,IAAAixP,EAAA,WACA,SAAAA,EAAAxc,EAAAjkC,EAAAukC,EAAAvkO,EAAA4sO,EAAA8T,EAAA3jP,EAAA4jP,GACAlxP,KAAAw0O,WACAx0O,KAAAuwM,UACAvwM,KAAA80O,SACA90O,KAAAuQ,QACAvQ,KAAAm9O,UACAn9O,KAAAixP,iBACAjxP,KAAAsN,UACAtN,KAAAkxP,WAKA,OAHAF,EAAApxP,UAAAuxP,gBAAA,SAAA3c,EAAAjkC,EAAAukC,EAAAvkO,EAAA4sO,EAAA8T,EAAA3jP,EAAA4jP,GACA,OAAAlxP,KAAAw0O,cAAAx0O,KAAAuwM,aAAAvwM,KAAA80O,YAAA90O,KAAAuQ,WAAAvQ,KAAAm9O,aAAAn9O,KAAAixP,oBAAAjxP,KAAAsN,aAAAtN,KAAAkxP,cAEAF,EAdA,GAgBA3P,EAAA,WACA,SAAAA,IACA,IAAAe,EAAAxuO,UAAA9R,OAAA,YAAA8R,UAAA,GAAAA,UAAA,MAEA5T,KAAAU,KAAA0hP,EAmCA,OAjCAf,EAAAzhP,WACAkC,aACA,OAAA9B,KAAAU,KAAAoB,QAEAS,QAAA,SAAAC,GACA,QAAA8/O,KAAAtiP,KAAAU,KACA8B,EAAA8/O,EAAAtiP,KAAAU,KAAA4hP,GAAAjtO,WAAA,KAGA/S,IAAA,SAAAX,GACA,gBAAA3B,KAAAU,KAAAiB,IAEAxB,IAAA,SAAAwB,GACA,OAAA3B,KAAAU,KAAAiB,IAEA2qP,WAAA,SAAAhtP,GACA,IAAAunB,EAAA7mB,KAAAU,KACA,GAAAmmB,EAAA/kB,QAAA,MACA,OAAA+kB,EAAAyqJ,QAAAhyK,GAEA,QAAAgjP,KAAAz7N,EACA,GAAAA,EAAAy7N,KAAAhjP,EACA,SAAAgjP,EAGA,UAEA8O,MAAA,SAAAvqO,GACA,QAAAy7N,KAAAz7N,EACA7mB,KAAAU,KAAA4hP,GAAAz7N,EAAAy7N,KAIAjB,EAvCA,GAyCAW,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAliP,KAAAiiP,YACAjiP,KAAAkiP,WA2BA,OAzBAF,EAAApiP,WACAkC,aACA,OAAA9B,KAAAkiP,SAAA,EAAAliP,KAAAiiP,WAEA1/O,QAAA,SAAAC,GACA,QAAAb,EAAA3B,KAAAiiP,UAAArgP,EAAA5B,KAAAkiP,SAAsDvgP,GAAAC,EAASD,IAC/Da,EAAAb,MAGAW,IAAA,SAAAX,GACA,OAAA3B,KAAAiiP,WAAAtgP,MAAA3B,KAAAkiP,UAEA/hP,IAAA,SAAAwB,GACA,GAAA3B,KAAAiiP,WAAAtgP,MAAA3B,KAAAkiP,SACA,OAAAvgO,OAAAC,aAAAjgB,IAIA2qP,WAAA,SAAAroP,GACA,OAAAyZ,OAAAC,UAAA1Z,OAAAjE,KAAAiiP,WAAAh+O,GAAAjE,KAAAkiP,SAAAj+O,GAAA,GAEAmtP,MAAA,SAAAvqO,MACAvhB,EAAAgK,aAAA,6BAGA0yO,EA9BA,GAgCAqP,EAAA,WACA,SAAAC,EAAA1hP,EAAA8X,EAAAzkB,GACA2M,EAAA8X,GAAAzkB,GAAA,MACA2M,EAAA8X,EAAA,OAAAzkB,EAEA,SAAAsuP,EAAA3hP,EAAA8X,EAAAzkB,GACA2M,EAAA8X,GAAAzkB,GAAA,OACA2M,EAAA8X,EAAA,GAAAzkB,GAAA,OACA2M,EAAA8X,EAAA,GAAAzkB,GAAA,MACA2M,EAAA8X,EAAA,OAAAzkB,EAEA,SAAAuuP,EAAA5hP,EAAA8X,EAAA7C,GACA,IAAAljB,EAAAC,EACA,GAAAijB,aAAAjf,WACAgK,EAAAvN,IAAAwiB,EAAA6C,QACK,oBAAA7C,EACL,IAAAljB,EAAA,EAAAC,EAAAijB,EAAA/iB,OAAmCH,EAAAC,EAAQD,IAC3CiO,EAAA8X,KAAA,IAAA7C,EAAAxP,WAAA1T,QAGA,IAAAA,EAAA,EAAAC,EAAAijB,EAAA/iB,OAAmCH,EAAAC,EAAQD,IAC3CiO,EAAA8X,KAAA,IAAA7C,EAAAljB,GAIA,SAAA0vP,EAAAI,GACAzxP,KAAAyxP,OACAzxP,KAAAqlM,OAAAlmM,OAAAe,OAAA,MA6EA,OA3EAmxP,EAAAK,gBAAA,SAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,EACAjqE,EAAA,GACAiqE,EAAAF,GAAAE,GACAA,IAAA,EACAjqE,IAEA,IAAAkqE,EAAAD,EAAAD,EACA,OACAl+O,MAAAo+O,EACA/9E,MAAA6T,EACAmqE,WAAAH,EAAAD,EAAAG,IAKAT,EAAAzxP,WACAoyP,QAAA,WACA,IAAAP,EAAAzxP,KAAAyxP,KACApsD,EAAArlM,KAAAqlM,OACA4sD,EAAA9yP,OAAAiD,KAAAijM,GACA4sD,EAAA/oF,OACA,IACAvnK,EAAA4K,EAAAyiK,EAAA1lK,EAAA4oP,EADAC,EAAAF,EAAAnwP,OAEA4lB,EAVA,GACA,GASAyqO,EACAC,GAAA1qO,GACA,IAAA/lB,EAAA,EAAiBA,EAAAwwP,EAAexwP,IAGhC+lB,KAFApe,EAAA+7L,EAAA4sD,EAAAtwP,KACAG,OAAA,UAEAswP,EAAA50O,KAAAkK,GAEA,IAAA62K,EAAA,IAAA34L,WAAA8hB,GACA,IAAA/lB,EAAA,EAAiBA,EAAAwwP,EAAexwP,IAChC2H,EAAA+7L,EAAA4sD,EAAAtwP,IACA6vP,EAAAjzD,EAAA6zD,EAAAzwP,GAAA2H,GAEA,SAAAmoP,IACAA,KAAAnsP,EAAA+sP,UAAA,QAEA9zD,EAAA,OAAAkzD,EAAAp8O,WAAA,GACAkpL,EAAA,OAAAkzD,EAAAp8O,WAAA,GACAkpL,EAAA,OAAAkzD,EAAAp8O,WAAA,GACAkpL,EAAA,OAAAkzD,EAAAp8O,WAAA,GACAi8O,EAAA/yD,EAAA,EAAA4zD,GACA,IAAAG,EAAAjB,EAAAK,gBAAAS,EAAA,IAKA,IAJAb,EAAA/yD,EAAA,EAAA+zD,EAAA5+O,OACA49O,EAAA/yD,EAAA,EAAA+zD,EAAAv+E,OACAu9E,EAAA/yD,EAAA,GAAA+zD,EAAAP,YACArqO,EAnCA,GAoCA/lB,EAAA,EAAiBA,EAAAwwP,EAAexwP,IAAA,CAChCuwP,EAAAD,EAAAtwP,GACA48L,EAAA72K,GAAA,IAAAwqO,EAAA78O,WAAA,GACAkpL,EAAA72K,EAAA,OAAAwqO,EAAA78O,WAAA,GACAkpL,EAAA72K,EAAA,OAAAwqO,EAAA78O,WAAA,GACAkpL,EAAA72K,EAAA,OAAAwqO,EAAA78O,WAAA,GACA,IAAAk9O,EAAA,EACA,IAAAhmP,EAAA6lP,EAAAzwP,GAAAqtK,EAAAojF,EAAAzwP,EAAA,GAA2D4K,EAAAyiK,EAAQziK,GAAA,EAEnEgmP,OADAjtP,EAAA8lL,YAAAmT,EAAAhyL,KACA,EAEAglP,EAAAhzD,EAAA72K,EAAA,EAAA6qO,GACAhB,EAAAhzD,EAAA72K,EAAA,EAAA0qO,EAAAzwP,IACA4vP,EAAAhzD,EAAA72K,EAAA,GAAA29K,EAAA6sD,GAAApwP,QACA4lB,GAjDA,GAmDA,OAAA62K,GAEAi0D,SAAA,SAAAC,EAAA5tO,GACA,GAAA4tO,KAAAzyP,KAAAqlM,OACA,UAAA3oL,MAAA,SAAA+1O,EAAA,mBAEAzyP,KAAAqlM,OAAAotD,GAAA5tO,IAGAwsO,EAxGA,GA0GAjC,EAAA,IAAA7mP,YAAA,6KACAutO,EAAA,WACA,SAAAA,EAAA/1O,EAAAw+L,EAAAC,GACA,IAAA8jD,EACAtiP,KAAAD,OACAC,KAAA8zO,WAAAt1C,EAAAs1C,WACA9zO,KAAA0zO,YAAAl1C,EAAAk1C,YACA1zO,KAAA0yP,SACA1yP,KAAA2yP,eACA3yP,KAAA4yP,WAAAzzP,OAAAe,OAAA,MACAF,KAAAqjP,eAAA7kD,EAAAzxB,MAAA6zE,EAAA2D,OACAvkP,KAAA2gP,kBAAAniD,EAAAzxB,MAAA6zE,EAAAC,UACA7gP,KAAA+8O,eAAAv+C,EAAAzxB,MAAA6zE,EAAAwC,YACA,IAAAl/O,EAAAs6L,EAAAt6L,KACA2nK,EAAA2yB,EAAA3yB,QAkBA,GAjBA7rK,KAAAkE,OACAlE,KAAA6rK,UACA7rK,KAAAm8O,aAAAn8O,KAAA+8O,YAAA,YAAA/8O,KAAAqjP,YAAA,qBACArjP,KAAAugP,YAAA/hD,EAAA+hD,YACAvgP,KAAAmhM,OAAA3C,EAAA2C,OACAnhM,KAAAqjM,aAAA7E,EAAA6E,aACArjM,KAAAggP,UAAAxhD,EAAAwhD,UACAhgP,KAAAglP,UAAAxmD,EAAAwmD,UACAhlP,KAAAwhP,KAAAhjD,EAAAgjD,KACAxhP,KAAAigM,OAAAzB,EAAAyB,OAAA2vD,EACA5vP,KAAAkgM,QAAA1B,EAAA0B,QAAA0vD,EACA5vP,KAAA8/L,WAAAtB,EAAAsB,WACA9/L,KAAAymO,KAAAjoC,EAAAioC,KACAzmO,KAAA0gP,gBAAAliD,EAAAkiD,gBACA1gP,KAAA6/O,UAAArhD,EAAAqhD,UACA7/O,KAAAuhP,kBAAA/iD,EAAA+iD,mBAAA,IAAAF,EACArhP,KAAA6yP,cACA,UAAAr0D,EAAAt6L,KAAA,CAaA,GANAlE,KAAAqlP,YAAA7mD,EAAA6mD,YACArlP,KAAAm7O,SAAA38C,EAAA28C,SACAn7O,KAAAm7O,WACAn7O,KAAA8iP,SAAAtkD,EAAAskD,SACA9iP,KAAA2iP,gBAAAnkD,EAAAmkD,kBAEApkD,KAAAx4L,QAKA,OAJAw4L,MACAj5L,EAAA2O,MAAA,0BAAAlU,EAAA,MAAAC,KAAA8zO,WAAA,UAEA9zO,KAAA8yP,uBAGA,WAAAjnF,IACA,UAAA3nK,GAAA,YAAAA,EA+FA,SAAAq6L,GACA,IAAAI,EAAAJ,EAAA93L,UAAA,GACA,kBAAAnB,EAAA8lL,YAAAuT,EAAA,GAFA,CA9FAJ,GACA1yB,EAAA,WAEA3nK,EAAA,QAEO6uP,EAAAx0D,KACP1yB,EAAA,aAGA,kBAAAA,GAAA,iBAAA3nK,IACAA,EAAA,gBAEA,iBAAAA,IAIA2nK,EA0FA,SAAA0yB,GACA,IAAAI,EAAAJ,EAAA93L,UAAA,GACA,YAAAk4L,EAAA,SAAAA,EAAA,IAGA,MAAAA,EAAA,QAAAA,EAAA,GALA,CA7FAJ,GACA,eACOw0D,EAAAx0D,GACP,WAEA,iBAGA,aAAA1yB,GAAA,aAAA3nK,IACAA,EAAA,YAEA,IACA,IAAA2gB,EACA,OAAA3gB,GACA,iBACAoB,EAAA+Q,MAAA,iBAAAtW,EAAA,6BACA,YACA,mBACAC,KAAAgzP,SAAA,gBACA,IAAAt0D,EAAA,WAAA7yB,GAAA,kBAAAA,EAAA,IAAAonF,EAAA10D,EAAAC,GAAA,IAAA00D,EAAAnzP,EAAAw+L,EAAAC,GACA2xD,EAAA3xD,GACA35K,EAAA7kB,KAAAmzP,QAAApzP,EAAA2+L,EAAAF,GACA,MACA,eACA,eACA,mBACAx+L,KAAAgzP,SAAA,gBACAnuO,EAAA7kB,KAAAozP,eAAArzP,EAAAw+L,EAAAC,GACAx+L,KAAAqzP,aACAlD,EAAA3xD,GACAt6L,EAAA,YAEA,MACA,QACA,UAAAoB,EAAAyD,YAAA,QAAA7E,EAAA,sBAEK,MAAA4X,GACL,KAAAA,aAAAxW,EAAAyD,aACA,MAAA+S,EAIA,SAFAxW,EAAA2O,MAAA6H,QACA9b,KAAA8yP,uBAGA9yP,KAAA6kB,OACA7kB,KAAAk2O,SAAAE,EAAAlyO,EAAA2nK,GACA7rK,KAAA8/L,WAAAtB,EAAAsB,WACA9/L,KAAAmhM,OAAA3C,EAAA2C,OACAnhM,KAAAqjM,aAAA7E,EAAA6E,aACArjM,KAAA6/O,UAAArhD,EAAAqhD,UACA7/O,KAAAw5K,SAAAglB,EAAAiG,aACAzkM,KAAAszP,QAAA90D,EAAA80D,QACAtzP,KAAAuzP,eAvFA,CACA,IAAAjR,EAAA,EAAwBA,EAAA,IAAgBA,IACxCtiP,KAAA6yP,WAAAvQ,GAAAtiP,KAAAugP,YAAA+B,IAAA9jD,EAAAkiD,gBAAA4B,GAEAtiP,KAAAk2O,SAAA5wO,EAAA8qP,SAAAoD,OAqFA,IACAxJ,EAKA,SAAAyJ,EAAAvtP,EAAAC,GACA,OAAAD,GAAA,GAAAC,EAMA,SAAAutP,EAAAxtP,EAAAC,GACA,IAAA7G,GAAA4G,GAAA,GAAAC,EACA,aAAA7G,IAAA,MAAAA,EAKA,SAAAq0P,EAAAr0P,GACA,OAAAqiB,OAAAC,aAAAtiB,GAAA,UAAAA,GAEA,SAAAs0P,EAAAt0P,GAEA,OADAA,IAAA,YAAAA,GAAA,aAAAA,EACAqiB,OAAAC,aAAAtiB,GAAA,UAAAA,GAUA,SAAAyzP,EAAAx0D,GACA,IAAAI,EAAAJ,EAAA93L,UAAA,GACA,kBAAAnB,EAAAymK,eAAA4yB,GAYA,SAAAk1D,EAAAr6E,EAAA82B,EAAAiwC,GAGA,IAFA,IACAhwC,EADAsiD,KAEAlxP,EAAA,EAAAC,EAAA43K,EAAA13K,OAAyCH,EAAAC,EAAQD,KAEjD,KADA4uM,KAAAw9B,EAAA19B,oBAAA72B,EAAA73K,GAAA2uM,MAEAuiD,EAAAlxP,GAAA4uM,GAGA,QAAA+xC,KAAA/B,GAEA,KADAhwC,KAAAw9B,EAAA19B,oBAAAkwC,EAAA+B,GAAAhyC,MAEAuiD,GAAAvQ,GAAA/xC,GAGA,OAAAsiD,EAEA,SAAAiB,EAAArqP,GAGA,IAFA,IAAA9H,EAAA,EACA4K,EAAA6iP,EAAAttP,OAAA,EACAH,EAAA4K,GAAA,CACA,IAAAL,EAAAvK,EAAA4K,EAAA,KACA9C,EAAA2lP,EAAAljP,GACAK,EAAAL,EAAA,EAEAvK,EAAAuK,EAGA,UAAAvK,GAEA,SAAAoyP,EAAAC,EAAAx1D,EAAAy1D,GACA,IAAApU,EAAArhD,EAAAqhD,UACAqU,KAAA11D,EAAAzxB,MAAA6zE,EAAAC,UACAsT,EAAA31D,EAAAqhD,qBAAAmC,EACAoS,EAAAj1P,OAAAe,OAAA,MACA2yP,KACAwB,KACAC,EAAAhF,EACA,QAAAiF,KAAAP,EAAA,CAEA,IAAAQ,EAAAR,EADAO,GAAA,GAEA,IAAAN,EAAAO,GAAA,CAGA,IAAAC,EAAAF,EACAG,KACA,IAAAP,GAAAtU,EAAAv9O,IAAAiyP,GAAA,CACAG,KACA,IAAAnkD,EAAAsvC,EAAA1/O,IAAAs0P,GACA,IAAAlkD,EAAAzuM,SACA2yP,EAAAlkD,EAAAl7L,WAAA,IAGA,YAAAg/O,EAAAI,IAAAX,EAAAW,IAAAP,IAAAQ,EACA,GACA,GAAAJ,EAAAjF,EAAA,IACA/pP,EAAA2O,MAAA,8CACA,MAEAwgP,EAAAH,IACA3E,GAAA,QAAA8E,IAEAH,EAAA,GADAG,EAAA,mBACA,IAESJ,EAAAI,IAETL,EAAAK,GAAAD,EACA3B,EAAA0B,GAAAE,EACAJ,EAAAI,OAEA,OACA5B,aACAmB,kBAAAI,EACAE,6BA0CA,SAAAK,EAAA3gB,EAAA4gB,GACA,IAGAjzP,EAAAC,EAAA2K,EAAAyiK,EAHAhG,EAxCA,SAAAgrE,EAAA4gB,GACA,IAAArrP,KACA,QAAA+4O,KAAAtO,EACAA,EAAAsO,IAAAsS,GAGArrP,EAAAiU,MACAi3O,aAAA,EAAAnS,EACAkS,QAAAxgB,EAAAsO,KAGA,IAAA/4O,EAAAzH,QACAyH,EAAAiU,MACAi3O,aAAA,EACAD,QAAA,IAGAjrP,EAAA2/J,KAAA,SAAAlxJ,EAAA5O,GACA,OAAA4O,EAAAy8O,aAAArrP,EAAAqrP,eAIA,IAFA,IAAAzrF,KACAlnK,EAAAyH,EAAAzH,OACA6E,EAAA,EAAmBA,EAAA7E,GAAY,CAC/B,IAAA4D,EAAA6D,EAAA5C,GAAA8tP,aACAI,GAAAtrP,EAAA5C,GAAA6tP,WACA7tP,EAEA,IADA,IAAAb,EAAAJ,EACAiB,EAAA7E,GAAAgE,EAAA,IAAAyD,EAAA5C,GAAA8tP,eACAI,EAAAr3O,KAAAjU,EAAA5C,GAAA6tP,WAEA7tP,EACA,SAFAb,KAMAkjK,EAAAxrJ,MAAA9X,EAAAI,EAAA+uP,IAEA,OAAA7rF,EArCA,CAwCAgrE,EAAA4gB,GACAzC,EAAAnpF,IAAAlnK,OAAA,gBACAsgP,EAAA,OAAAuR,EAAAxB,GAAA,YAAA7sP,EAAA+sP,UAAA,IAAAF,GAEA,IAAAxwP,EAAAqnK,EAAAlnK,OAAA,EAA+BH,GAAA,KAC/BqnK,EAAArnK,GAAA,aADuCA,GAKvC,IAAAmzP,EAAAnzP,EAAA,EACAqnK,EAAArnK,GAAA,kBAAAqnK,EAAArnK,GAAA,KACAqnK,EAAArnK,GAAA,UAEA,IASA+R,EAAAhO,EAAAI,EAAAyD,EATAwrP,EAAA/rF,EAAArnK,GAAA,aACAqzP,EAAAF,EAAAC,EACAzC,EAAAjB,EAAAK,gBAAAsD,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACA1yD,EAAA,EAEA,IAAAhhM,EAAA,EAAAC,EAAAkzP,EAA+BnzP,EAAAC,EAAQD,IAAA,CAEvC+D,GADAgO,EAAAs1J,EAAArnK,IACA,GACAmE,EAAA4N,EAAA,GACAuhP,GAAAtB,EAAAjuP,GACAwvP,GAAAvB,EAAA7tP,GAEA,IAAAwvP,KACA,IAAA/oP,EAAA,EAAAyiK,GAFAzlK,EAAAmK,EAAA,IAEA5R,OAAoCyK,EAAAyiK,IAAQziK,EAC5C,GAAAhD,EAAAgD,KAAAhD,EAAAgD,EAAA,MACA+oP,KACA,MAGA,GAAAA,EAUAH,GAAAxB,EADApqP,EAAA,GACA7D,EAAA,OACA0vP,GAAAzB,EAAA,OAXA,CACA,IAAAjsO,EAAA,GAAAstO,EAAArzP,GAAA,EAAAghM,EAIA,IAHAA,GAAA78L,EAAAJ,EAAA,EACAyvP,GAAAxB,EAAA,GACAyB,GAAAzB,EAAAjsO,GACAnb,EAAA,EAAAyiK,EAAAzlK,EAAAzH,OAAsCyK,EAAAyiK,IAAQziK,EAC9C8oP,GAAA1B,EAAApqP,EAAAgD,KAQAwoP,EAAA,IACAG,GAAA,KACAD,GAAA,KACAE,GAAA,MACAC,GAAA,QAEA,IAAAG,EAAA,OAAA5B,EAAA,EAAAqB,GAAArB,EAAArB,EAAA5+O,OAAAigP,EAAArB,EAAAv+E,OAAA4/E,EAAArB,EAAAP,YAAAmD,EAAA,OAAAD,EAAAE,EAAAC,EAAAC,EACAG,EAAA,GACAC,EAAA,GACA,GAAAtD,EAAA,GAGA,IAFA/P,GAAA,aAAA98O,EAAA+sP,UAAA,IAAAF,EAAA,EAAAoD,EAAAzzP,QACA0zP,EAAA,GACA7zP,EAAA,EAAAC,EAAAonK,EAAAlnK,OAAqCH,EAAAC,EAAQD,IAAA,CAE7C+D,GADAgO,EAAAs1J,EAAArnK,IACA,GAEA,IAAA8H,GADAF,EAAAmK,EAAA,IACA,GACA,IAAAnH,EAAA,EAAAyiK,EAAAzlK,EAAAzH,OAAsCyK,EAAAyiK,IAAQziK,EAC9ChD,EAAAgD,KAAAhD,EAAAgD,EAAA,OACAzG,EAAA4N,EAAA,GAAAnH,EAAA,EACAipP,MAAAlwP,EAAA+sP,UAAA3sP,MAAAJ,EAAA+sP,UAAAvsP,MAAAR,EAAA+sP,UAAA5oP,GACA/D,EAAAI,EAAA,EACA2D,EAAAF,EAAAgD,IAGAipP,MAAAlwP,EAAA+sP,UAAA3sP,MAAAJ,EAAA+sP,UAAA3+O,EAAA,OAAApO,EAAA+sP,UAAA5oP,GAEAgsP,EAAA,cAAAnwP,EAAA+sP,UAAAmD,EAAA1zP,OAAA,kBAAAwD,EAAA+sP,UAAAmD,EAAA1zP,OAAA,IAEA,OAAAsgP,EAAA,MAAAuR,EAAA4B,EAAAzzP,OAAA,GAAAyzP,EAAAE,EAAAD,EAuBA,SAAAE,EAAAl3D,EAAAm3D,EAAAC,GACAA,MACAC,WAAA,EACAC,KAAA,EACAC,KAAA,EACA91D,OAAA,EACAC,QAAA,GAEA,IAAA81D,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,EACA,GAAAV,EACA,QAAAlsP,KAAAksP,EAAA,EAEAS,GADA3sP,GAAA,KACA2sP,KACAA,EAAA3sP,GAEA4sP,EAAA5sP,IACA4sP,EAAA5sP,GAEA,IAAAk8J,KAAAooE,EAAA39B,oBAAA3mM,GACA,GAAAk8J,EAAA,GACAqwF,GAAA,GAAArwF,OACS,GAAAA,EAAA,GACTswF,GAAA,GAAAtwF,EAAA,QACS,GAAAA,EAAA,GACTuwF,GAAA,GAAAvwF,EAAA,OACS,MAAAA,EAAA,KAGT,UAAArgK,EAAAyD,YAAA,6DAFAotP,GAAA,GAAAxwF,EAAA,SAMAywF,EAAA,EACAC,EAAA,IAEA,IAAA5vB,EAAAjoC,EAAAioC,OAAA,SACAovB,EAAAD,EAAAC,YAAA,GAAAr3D,EAAAsB,YAAAx6L,EAAAi3O,sBAAA,GACA3nO,EAAA4pL,EAAA2B,aAAA,EAAA01D,EAAAjG,EACA0G,EAAAV,EAAA31D,QAAA/wL,KAAAiL,MAAAvF,GAAA4pL,EAAAyB,QAAAwmC,EAAA,KACA8vB,EAAAX,EAAA11D,SAAAhxL,KAAAiL,MAAAvF,GAAA4pL,EAAA0B,SAAAumC,EAAA,KACA8vB,EAAA,GAAA/3D,EAAA0B,QAAA,GAAAumC,EAAA,OACA8vB,MAEA,IAAAC,EAAAZ,EAAAE,MAAAQ,EACAG,GAAAb,EAAAG,OAAAQ,EACA,4DAAA50O,OAAAC,aAAA48K,EAAAymD,WAAA,uBAAA3/O,EAAA+sP,UAAA2D,MAAA1wP,EAAA+sP,UAAA4D,MAAA3wP,EAAA+sP,UAAA6D,MAAA5wP,EAAA+sP,UAAA8D,GAAA,OAAAxC,EAAAn1D,EAAA4mD,YAAA,KAAAuO,EAAAyC,GAAA53D,EAAAyjD,WAAA0R,EAAA0C,GAAA73D,EAAA0jD,UAAAyR,EAAA2C,GAAA3C,EAAA4C,GAAA,MAAA5C,EAAA6C,GAAA7C,EAAA8C,GAAA,mBAAA9C,EAAAn1D,EAAA0mD,SAAAyO,EAAAn1D,EAAA2mD,WAAAwO,EAAA,GAAAA,EAAAyC,GAAA53D,EAAAyjD,WAAA,MAEA,SAAAyU,EAAAl4D,GACA,IAAAxvI,EAAA9/C,KAAA6C,MAAAysL,EAAA4mD,YAAAl2O,KAAAsH,IAAA,OACA,mBAAAlR,EAAA+sP,UAAArjM,GAAA,cAAA1pD,EAAA+sP,UAAA7zD,EAAAymD,YAAA,mCAEA,SAAA0R,EAAA52P,EAAA62P,GACAA,IACAA,WAEA,IAEAj1P,EAAAC,EAAA2K,EAAAyiK,EAAA5rK,EAFAi8L,GAAAu3D,EAAA,0BAAAA,EAAA,OAAA72P,EAAA62P,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,OAAA72P,EAAA62P,EAAA,sBAAAA,EAAA,UAAAA,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBACAC,KAEA,IAAAl1P,EAAA,EAAAC,EAAAy9L,EAAAv9L,OAAoCH,EAAAC,EAAQD,IAAA,CAE5C,IAAAm1P,KACA,IAAAvqP,EAAA,EAAAyiK,GAFA5rK,EAAAwzP,EAAA,GAAAj1P,IAAA09L,EAAA19L,IAEAG,OAAkCyK,EAAAyiK,EAAQziK,IAC1CuqP,EAAAt5O,KAAAm2O,EAAAvwP,EAAAiS,WAAA9I,KAEAsqP,EAAAr5O,KAAAs5O,EAAAz0O,KAAA,KAEA,IAAAurJ,GAAAyxB,EAAAw3D,GACAE,GAAA,aACAC,GAAA,cACAC,GAAA,cACAC,EAAA73D,EAAAv9L,OAAAi1P,EAAAj1P,OACAq1P,EAAA,OAAAxD,EAAAuD,GAAAvD,EAAA,GAAAuD,EAAA,GACAE,EAAA,EACA,IAAAz1P,EAAA,EAAAC,EAAAm1P,EAAAj1P,OAAsCH,EAAAC,EAAQD,IAAA,CAC9C,IAAA01P,EAAAzpF,EAAAjsK,GACA,IAAA4K,EAAA,EAAAyiK,EAAAqoF,EAAAv1P,OAAmCyK,EAAAyiK,EAAQziK,IAC3CnJ,EAAAi0P,EAAA9qP,GAEA4qP,GADAJ,EAAAp1P,GAAAq1P,EAAAr1P,GAAAs1P,EAAAt1P,GAAAgyP,EAAApnP,GAAAonP,EAAAvwP,EAAAtB,QAAA6xP,EAAAyD,GAEAA,GAAAh0P,EAAAtB,OAIA,OADAq1P,GAAA93D,EAAAh9K,KAAA,IAAAw0O,EAAAx0O,KAAA,KAq1CA,OAxrDAyzN,EAAAC,WACAiU,EAAA,EACA,WACA,OAAAroO,OAAAqoO,OAmWAlU,EAAAl2O,WACAG,KAAA,KACA0zO,KAAA,KACAuf,SAAA,KACAx5E,SAAA,KACAi7D,eACA,IAAAA,EAAAgb,EAAA6H,oBAAAp3P,OAAAF,KAAAuvP,GACA,SAAAjqP,EAAA8O,QAAApU,KAAA,WAAAy0O,IAEAgR,WAAA,WACA,IAAA5gO,KACA,QAAAljB,KAAA3B,KACAA,KAAAu3P,eAAA51P,KACAkjB,EAAAljB,GAAA3B,KAAA2B,IAGA,OAAAkjB,GAEAiuO,qBAAA,WACA,IAGAxQ,EAAA/xC,EAHAppC,EAAAnnK,KAEAA,KAAA2yP,eAEA,IAAA5yP,EAAAC,KAAAD,KACAmE,EAAAlE,KAAAkE,KACA2nK,EAAA7rK,KAAA6rK,QACA0nE,EAAAxzO,EAAAg4K,QAAA,aACAy/E,KAAAxpB,EAAAzkC,iBACAkuD,KAAAzpB,EAAA1kC,oBACAouD,IAAAF,EAAAjkB,OAAAkkB,EAAAlkB,KAAAikB,EAAAC,EAAAlkB,KAMA,GALAA,EAAAikB,EAAAjkB,IAAAkkB,EAAAlkB,MACAvzO,KAAAqtK,MAAA,IAAAkmE,EAAAgQ,OAAA,UACAvjP,KAAAstK,QAAA,IAAAimE,EAAAgQ,OAAA,mBAAAhQ,EAAAgQ,OAAA,YACAvjP,KAAAk6K,OAAA,IAAAn6K,EAAAwjP,OAAA,UACAvjP,KAAA23P,UAAAx4P,OAAAiD,KAAApC,KAAAmhM,QAAAr/L,OAAA,EACA41P,GAAA,iBAAAxzP,GAAA,IAAAlE,KAAAqlP,YAAA/zE,QAAA,cACA,IAAAsmF,KAAA5pB,EAAA7kC,+BACAtiL,KACA,IAAAy7N,KAAAsV,EACA/wO,GAAAy7N,GAAAsV,EAAAtV,GAEA,mBAAA1sE,KAAA71K,GAAA,CACA,IAAA83P,KAAA7pB,EAAA9kC,wCACA,IAAAo5C,KAAAuV,EACAhxO,GAAAy7N,GAAAuV,EAAAvV,QAES,cAAA1sE,KAAA71K,GAAA,CACT,IAAA+3P,KAAA9pB,EAAA/kC,qCACA,IAAAq5C,KAAAwV,EACAjxO,GAAAy7N,GAAAwV,EAAAxV,GAGAtiP,KAAA6/O,qBAAAmC,GAEAhiP,KAAA6/O,UAAAt9O,QAAA,SAAA+/O,EAAAyV,GACAlxO,GAAAy7N,GAAAyV,IAGA/3P,KAAA6yP,WAAAhsO,EACA7mB,KAAA6/O,UAAA,IAAAwB,EAAAx6N,QACO,aAAA+uJ,KAAA29D,GACPvzO,KAAA6yP,WAAAgB,EAAAj2D,EAAAniL,qBAAA0yN,EAAAviN,oBAAA5rB,KAAAugP,kBACO,eAAA3qE,KAAA29D,GACP,aAAA39D,KAAA71K,OACAuF,EAAA2O,MAAA,8DAEAjU,KAAA6yP,WAAAgB,EAAAj2D,EAAAliL,wBAAAyyN,EAAAr2E,4BAAA93J,KAAAugP,kBACO,GAAAmX,EACP13P,KAAA6yP,WAAAgB,EAAA7zP,KAAA0gP,mBAAAvS,EAAAviN,oBAAA5rB,KAAAugP,iBACO,CACP,IAAAjwC,KAAA69B,EAAAviN,oBACA5rB,KAAA6/O,UAAAt9O,QAAA,SAAA+/O,EAAAyV,GACA,IAAA5wF,EAAA64E,UAAA,CACA,IAAAoB,EAAAj6E,EAAAo5E,YAAA+B,IAAAn7E,EAAAu5E,gBAAA4B,IAEA,KADA/xC,KAAAw9B,EAAA19B,oBAAA+wC,EAAA9wC,MAEAynD,EAAAxnD,GAGAppC,EAAA0rF,WAAAvQ,GAAAyV,IAGA/3P,KAAA8zO,WAAAP,EAAA7hE,MAAA,QACA1xK,KAAAuzP,WACAvzP,KAAAk2O,SAAAE,EAAAlyO,EAAA2nK,IAEAunF,eAAA,SAAArzP,EAAA0zO,EAAAj1C,GACA,IAAAw5D,GAAA,mGACA,SAAAC,EAAA15D,EAAA4zD,GACA,IAAA9sD,EAAAlmM,OAAAe,OAAA,MACAmlM,EAAA,aACAA,EAAA+8C,KAAA,KACA/8C,EAAA6yD,KAAA,KACA7yD,EAAA8yD,KAAA,KACA9yD,EAAA+yD,KAAA,KACA/yD,EAAAgzD,KAAA,KACAhzD,EAAAtlM,KAAA,KACAslM,EAAAizD,KAAA,KACA,QAAA32P,EAAA,EAAuBA,EAAAwwP,EAAexwP,IAAA,CACtC,IAAA2H,EAAAivP,EAAA9kB,GACAukB,EAAA/uF,SAAA3/J,EAAAmpP,MAGA,IAAAnpP,EAAAxH,SAGAujM,EAAA/7L,EAAAmpP,KAAAnpP,GAEA,OAAA+7L,EAEA,SAAAkzD,EAAAh6D,GACA,IAAAk0D,KAAAntP,EAAAymK,eAAAwyB,EAAA95L,SAAA,IACA8tP,EAAAh0D,EAAAn4L,aAAA,EACAshB,EAAA62K,EAAAn4L,aAAA,EACAtE,EAAAy8L,EAAAn4L,aAAA,EACAoyP,EAAAj6D,EAAA14L,IACA04L,EAAA14L,IAAA04L,EAAA74L,MAAA64L,EAAA74L,MAAA,EACA64L,EAAA73L,KAAAghB,GACA,IAAA7C,EAAA05K,EAAA95L,SAAA3C,GAMA,OALAy8L,EAAA14L,IAAA2yP,EACA,SAAA/F,IACA5tO,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,MACAA,EAAA,UAGA4tO,MACAF,WACAzwP,SACA4lB,SACA7C,QAGA,SAAA4zO,EAAAC,GACA,OACA9yC,WAAAtgN,EAAAymK,eAAA2sF,EAAAj0P,SAAA,IACA0tP,UAAAuG,EAAAzyP,YACA6rP,YAAA4G,EAAAzyP,YACA0yP,cAAAD,EAAAzyP,YACA8rP,WAAA2G,EAAAzyP,aAsPA,SAAA2yP,EAAAhrP,EAAAirP,EAAAC,EAAAlpP,EAAAmpP,EAAAC,GACA,IAAAC,GACAn3P,OAAA,EACAo3P,mBAAA,GAEA,GAAAJ,EAAAD,GAAA,GACA,OAAAI,EAEA,IAruBAtzP,EAAA+d,EAAApkB,EAquBA65P,EAAAvrP,EAAAtH,SAAAuyP,EAAAC,GACAM,EAAA1F,EAAAyF,EAAA,GAAAA,EAAA,IACA,GAAAC,EAAA,EAKA,OA5uBA95P,EAwuBA85P,GAAA,GAxuBAzzP,EAyuBAwzP,GAxuBA,GADAz1O,EAyuBA,IAxuBApkB,EACAqG,EAAA+d,GAAApkB,IAAA,EAwuBAsQ,EAAAvN,IAAA82P,EAAAJ,GACAE,EAAAn3P,OAAAq3P,EAAAr3P,OACAm3P,EAEA,IAAAt3P,EACA4K,EAAA,GACA8sP,EAAA,EACA,IAAA13P,EAAA,EAAmBA,EAAAy3P,EAAmBz3P,IAEtC03P,EAAA,GADAF,EAAA5sP,IAAA,EAAA4sP,EAAA5sP,EAAA,IAEAA,GAAA,EAEA,IAAA+sP,EAAA/sP,EACAgtP,EAAAJ,EAAA5sP,IAAA,EAAA4sP,EAAA5sP,EAAA,GACA0sP,EAAAC,mBAAAK,EAEA,IAAAC,EADAjtP,GAAA,EAAAgtP,EAEAE,EAAA,EACA,IAAA93P,EAAA,EAAmBA,EAAA03P,EAAgB13P,IAAA,CACnC,IAAA0jO,EAAA8zB,EAAA5sP,KACA,IAAA84N,IACA8zB,EAAA5sP,EAAA,MAAA84N,GAEA,IAAAq0B,GAAA,EAAAr0B,EAAA,KAAAA,EAAA,QAAAA,EAAA,KAAAA,EAAA,KAEA,GADAo0B,GAAAC,EACA,EAAAr0B,EAAA,CACA,IAAAs0B,EAAAR,EAAA5sP,KACA5K,GAAAg4P,EACAF,GAAAE,EAAAD,GAGA,OAAAD,EACA,OAAAR,EAEA,IAAAW,EAAArtP,EAAAktP,EACA,OAAAG,EAAAT,EAAAr3P,OACAm3P,GAEAD,GAAAO,EAAA,GACA3pP,EAAAvN,IAAA82P,EAAA7yP,SAAA,EAAAgzP,GAAAP,GACAnpP,EAAAvN,KAAA,KAAA02P,EAAAO,GACA1pP,EAAAvN,IAAA82P,EAAA7yP,SAAAkzP,EAAAI,GAAAb,EAAAO,EAAA,GACAM,GAAAL,EACAJ,EAAAr3P,OAAA83P,EAAA,IACAA,IAAA,MAEAX,EAAAn3P,OAAA83P,EACAX,GAEAE,EAAAr3P,OAAA83P,EAAA,GACAA,IAAA,KACAhqP,EAAAvN,IAAA82P,EAAA7yP,SAAA,EAAAszP,GAAAb,GACAE,EAAAn3P,OAAA83P,EACAX,IAEArpP,EAAAvN,IAAA82P,EAAAJ,GACAE,EAAAn3P,OAAAq3P,EAAAr3P,OACAm3P,GAkLA,SAAAY,EAAA1C,GACA,IAAAzxP,GAAA+tO,EAAA/tO,MAAA+tO,EAAA/tO,MAAA,GAAAyxP,EAAAzvO,OACA+rN,EAAA5tO,IAAAH,EACA,IAAAkoK,UACA9rK,EAAAq1P,EAAAr1P,OACAgE,EAAAJ,EAAA5D,EAGA,OAFA2xO,EAAAxtO,aAEAnE,EADA,EAEA,OAAA8rK,EAEA,IAIAjsK,EAAAC,EAJAk4P,EAAArmB,EAAAxtO,YACA8zP,EAAAtmB,EAAAxtO,YACA+zP,KAGA,IAAAr4P,EAAA,EAAmBA,EAAAm4P,GAAArmB,EAAA5tO,IAFnB,IAEmBC,EAAwDnE,IAAA,CAC3E,IAAA6T,GACAykP,SAAAxmB,EAAAxtO,YACAuzK,SAAAi6D,EAAAxtO,YACAi0P,SAAAzmB,EAAAxtO,YACAlG,KAAA0zO,EAAAxtO,YACAnE,OAAA2xO,EAAAxtO,YACAyhB,OAAA+rN,EAAAxtO,cAEA,IAAAuP,EAAAykP,UAAA,IAAAzkP,EAAAgkK,UAAA,IAAAhkK,EAAA0kP,UAAA,IAAA1kP,EAAAykP,UAAA,IAAAzkP,EAAAgkK,UAAA,OAAAhkK,EAAA0kP,WACAF,EAAAx8O,KAAAhI,GAGA,IAAA7T,EAAA,EAAAC,EAAAo4P,EAAAl4P,OAAwCH,EAAAC,EAAQD,IAAA,CAChD,IAAAw4P,EAAAH,EAAAr4P,GACA,KAAAw4P,EAAAr4P,QAAA,IAGA,IAAA+D,EAAAH,EAAAq0P,EAAAI,EAAAzyO,OACA,KAAA7hB,EAAAs0P,EAAAr4P,OAAAgE,GAAA,CAGA2tO,EAAA5tO,MACA,IAAAg5L,EAAAs7D,EAAAp6P,KACA,GAAAo6P,EAAA3gF,SAAA,CAEA,IADA,IAAAp2K,EAAA,GACAmJ,EAAA,EAAAyiK,EAAAmrF,EAAAr4P,OAA+CyK,EAAAyiK,EAAQziK,GAAA,EACvDnJ,GAAAue,OAAAC,aAAA6xN,EAAAxtO,aAEA2nK,EAAA,GAAAixB,GAAAz7L,OAEAwqK,EAAA,GAAAixB,MAAAv5L,EAAAymK,eAAA0nE,EAAAhvO,SAAA01P,EAAAr4P,WAGA,OAAA8rK,EAEA,IAAAwsF,GAAA,6YACA,SAAAC,EAAA/wP,EAAAgxP,GAiBA,IAhBA,IAEA/tP,EACA5F,EACAyC,EACAmxP,EACAvtP,EANA6X,EAAAvb,EAAAub,KACAljB,EAAA,EAMA64P,EAAA,EACAC,EAAA,EACAn8D,KACAo8D,KACAC,KACAC,EAAAN,EAAAM,4BACAC,KACAC,EAAA,EACAC,EAAA,EACAn5P,EAAAijB,EAAA/iB,OAAkCH,EAAAC,GAAQ,CAC1C,IAAAi1M,EAAAhyL,EAAAljB,KACA,QAAAk1M,EAEA,GADAlwM,EAAAke,EAAAljB,KACAk5P,GAAAE,EACAp5P,GAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChC+xL,EAAA9gL,KAAAqH,EAAAljB,WAGW,QAAAk1M,EAEX,GADAlwM,EAAAke,EAAAljB,KACAk5P,GAAAE,EACAp5P,GAAA,EAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCnD,EAAAyb,EAAAljB,KACA28L,EAAA9gL,KAAApU,GAAA,EAAAyb,EAAAljB,WAGW,aAAAk1M,GAEX,GADAlwM,EAAAkwM,EAAA,MACAgkD,GAAAE,EACAp5P,GAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChC+xL,EAAA9gL,KAAAqH,EAAAljB,WAGW,aAAAk1M,GAEX,GADAlwM,EAAAkwM,EAAA,MACAgkD,GAAAE,EACAp5P,GAAA,EAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCnD,EAAAyb,EAAAljB,KACA28L,EAAA9gL,KAAApU,GAAA,EAAAyb,EAAAljB,WAGW,QAAAk1M,GAAA+jD,EAuBA,QAAA/jD,GAAA+jD,GAYA,QAAA/jD,EACX,GAAAgkD,EACAA,KACAL,EAAA74P,MACa,CAEb,KADAqL,EAAA0tP,EAAAhqF,OAIA,SAFAprK,EAAA2O,MAAA,2BACAqmP,EAAAtB,eAGAuB,EAAAI,EAAAjqF,MACA7rJ,EAAA7X,EAAA6X,KACAljB,EAAAqL,EAAArL,EACA24P,EAAAU,qBAAAT,GAAAj8D,EAAAx8L,OAAAkL,EAAAiuP,cAEW,SAAApkD,GACXgkD,GAAAE,QACAz1P,EAAA2O,MAAA,gCACA2mP,MAEAC,KACAJ,EAAA94P,OACW,QAAAk1M,IACXikD,OACW,QAAAjkD,EACXkkD,EAAAD,OACW,QAAAjkD,EACXkkD,IAAAD,IACAC,EAAA,KAEAD,OACW,QAAAjkD,IACXgkD,IAAAE,EAAA,CACA,IAAArzO,EAAA42K,IAAAx8L,OAAA,GACA4lB,EAAA,IACA/lB,GAAA+lB,EAAA,SA/CAmzO,GAAAE,QACAz1P,EAAA2O,MAAA,gCACA2mP,MAEAC,KACAJ,EAAA94P,EACA44P,EAAAj8D,EAAA5tB,MACA4pF,EAAAY,iBAAAX,IACA11O,OACAljB,UAhCA,IAAAk5P,IAAAE,EAGA,GAFAR,EAAAj8D,IAAAx8L,OAAA,GACAw4P,EAAAa,cAAAZ,MACAA,KAAAD,EAAAU,qBACA18D,EAAAx8L,QAAAw4P,EAAAU,qBAAAT,QACe,GAAAA,KAAAD,EAAAY,mBAAAP,EAAA1xF,SAAAsxF,GAAA,CAQf,GAPAG,EAAAl9O,MACAqH,OACAljB,IACAs5P,SAAA38D,EAAAx8L,OAAA,IAEA64P,EAAAn9O,KAAA+8O,KACAvtP,EAAAstP,EAAAY,iBAAAX,IAIA,SAFAj1P,EAAA2O,MAAA,uCACAqmP,EAAAtB,eAGAn0O,EAAA7X,EAAA6X,KACAljB,EAAAqL,EAAArL,EAuDA,IAAAk5P,IAAAE,EAAA,CACA,IAAA38D,EAAAyY,GAAA,IAAAujD,EAAAvjD,MAAA,KAAAA,GAAA,OAAAA,GAAA,SAOA,IANAA,GAAA,KAAAA,GAAA,MACAlwM,EAAA23L,EAAA5tB,MACAoG,MAAAnwK,KACAy3L,EAAA,GAAAz3L,IAGAy3L,EAAA,GAAAE,EAAAx8L,OAAA,GACAw8L,EAAA5tB,MACA0tB,IAEA,KAAAA,EAAA,GACAE,EAAA9gL,KAAAmkL,KACAvD,KAIAk8D,EAAAM,8BACA,IAAA1kF,GAAArxJ,GACAljB,EAAAkjB,EAAA/iB,QACAo0K,EAAA14J,KAAA,IAAA5X,WAAAjE,EAAAkjB,EAAA/iB,SAEA24P,EAAAD,OACAl1P,EAAA2O,MAAA,6CACAiiK,EAAA14J,KAAA,IAAA5X,YAAA,UA0BA,SAAA0D,EAAA4sK,GACA,GAAAA,EAAAp0K,OAAA,GACA,IACAyK,EAAAyiK,EADA/mK,EAAA,EAEA,IAAAsE,EAAA,EAAAyiK,EAAAkH,EAAAp0K,OAA0CyK,EAAAyiK,EAAQziK,IAClDtE,GAAAiuK,EAAA3pK,GAAAzK,OAEAmG,IAAA,KACA,IAAAgQ,EAAA,IAAArS,WAAAqC,GACApC,EAAA,EACA,IAAA0G,EAAA,EAAAyiK,EAAAkH,EAAAp0K,OAA0CyK,EAAAyiK,EAAQziK,IAClD0L,EAAA5V,IAAA6zK,EAAA3pK,GAAA1G,GACAA,GAAAqwK,EAAA3pK,GAAAzK,OAEAwH,EAAAub,KAAA5M,EACA3O,EAAAxH,OAAAmG,GAfA,CAxBAqB,EAAA4sK,GAmEA,IAAAyoB,SACA0G,SACA,GAxtCA,SAAA9G,GACA,IAAAI,EAAAJ,EAAA93L,UAAA,GACA,kBAAAnB,EAAAymK,eAAA4yB,GAFA,CAqtCA80C,EAAA,IAAAv3N,EAAArX,OAAA,IAAAe,WAAA6tO,EAAAhvO,cAGA,CACA,IAAA22P,EAzuBA,SAAAC,EAAA9nB,GAKA,IAJA,IAAA+nB,EA7BA,SAAAD,GACA,IAAAE,KAAAj2P,EAAAymK,eAAAsvF,EAAA52P,SAAA,OACAa,EAAA2Y,QAAA,SAAAs9O,EAAA,uCAKA,IAJA,IAAAC,EAAAH,EAAAp1P,YACAw1P,EAAAJ,EAAAp1P,YACAy1P,EAAAL,EAAAj1P,aAAA,EACAu1P,KACAh6P,EAAA,EAAuBA,EAAA+5P,EAAc/5P,IACrCg6P,EAAAn+O,KAAA69O,EAAAj1P,aAAA,GAEA,IAAAu4L,GACA48D,SACAC,eACAC,eACAC,WACAC,eAEA,OAAAH,GACA,OACA,OAAA78D,EACA,OAIA,OAHAA,EAAAi9D,QAAAP,EAAAj1P,aAAA,EACAu4L,EAAAk9D,WAAAR,EAAAj1P,aAAA,EACAu4L,EAAAm9D,WAAAT,EAAAj1P,aAAA,EACAu4L,EAEA,UAAAr5L,EAAAyD,YAAA,6CAAAyyP,EAAA,KA1BA,CA6BAH,GACAK,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,YAEAh6P,EAAA,EAAuBA,EAAA+5P,EAAc/5P,IAAA,CACrC05P,EAAAx1P,KAAAw1P,EAAA31P,OAAA,GAAAi2P,EAAAh6P,GACA,IAAAo6P,EAAAtD,EAAA4C,GACAW,EAAA/D,EAAAoD,EAAAU,EAAA5J,WACA,IAAA6J,EAAAj8P,KACA,UAAAuF,EAAAyD,YAAA,yDAGA,IADA,IAAAouP,EAAA0C,EAAAmC,EAAAj8P,MACAwM,EAAA,EAAAyiK,EAAAmoF,EAAAr1P,OAAgDyK,EAAAyiK,EAAQziK,IACxD,QAAArB,EAAA,EAAAsB,EAAA2qP,EAAA5qP,GAAAzK,OAAqDoJ,EAAAsB,EAAQtB,IAAA,CAC7D,IAAA+wP,EAAA9E,EAAA5qP,GAAArB,GACA,GAAA+wP,KAAAlkF,QAAA,YAAAw7D,EACA,OACA50C,OAAAo9D,EACA12D,OAAA22D,IAMA,UAAA12P,EAAAyD,YAAA,yCAAAwqO,EAAA,WAzBA,CAyuBAE,EAAAzzO,KAAAD,MACA4+L,EAAAy8D,EAAAz8D,OACA0G,EAAA+1D,EAAA/1D,YAGAA,EAAA4yD,EAAAxkB,GADA90C,EAAA85D,EAAAhlB,IACA0e,WAEA,IAAAzzD,SACAw9D,SACAC,GAAA92D,EAAA,QACA,GAAA82D,EAaO,CACP,IAAA92D,EAAA+2D,KACA,UAAA92P,EAAAyD,YAAA,sCAEAs8L,EAAA8zD,QAAA,EACA7zP,EAAA2O,MAAA,4DACAoxL,EAAA8zD,MACA1G,IAAA,OACA5tO,KAAA,IAAAjf,WAAA,KAGA5F,KAAAqzP,kBAxBA,CACA,eAAA10D,EAAAinB,SAAApnB,EAAAwhD,WAAAxhD,EAAA6hD,cAAAh7C,EAAA6yD,MAAA7yD,EAAA8yD,MAAA9yD,EAAAgzD,MAAAhzD,EAAAizD,MAIA,OAHA4D,EAAA,IAAAhgP,EAAArX,OAAAwgM,EAAA,QAAAxgL,MACA65K,EAAA,IAAAu0D,EAAAiJ,EAAA19D,GACA2xD,EAAA3xD,GACAx+L,KAAAmzP,QAAApzP,EAAA2+L,EAAAF,UAEA6G,EAAA8zD,YACA9zD,EAAA+2D,YACA/2D,EAAAg3D,YACAh3D,EAAAi3D,YACAj3D,EAAA,QACArlM,KAAAqzP,cAcA,IAAAhuD,EAAAgzD,KACA,UAAA/yP,EAAAyD,YAAA,sCAEA0qO,EAAA5tO,KAAA4tO,EAAA/tO,OAAA,GAAA2/L,EAAAgzD,KAAA3wO,OACA,IAAAk+L,EAAA6tB,EAAArtO,WACAwuP,EAAAnhB,EAAAxtO,YACAs2P,EAAA,EACAC,EAAA,EACA52C,GAAA,OAAAvgB,EAAAgzD,KAAAv2P,QAAA,KACA2xO,EAAA5tO,KAAA,EACA4tO,EAAAxtO,YACA,IACAo/L,EAAAgzD,KAAAxzO,KAAA,MACAwgL,EAAAgzD,KAAAxzO,KAAA,OAEA4uN,EAAA5tO,KAAA,EACA02P,EAAA9oB,EAAAxtO,YACAwtO,EAAA5tO,KAAA,EACA22P,EAAA/oB,EAAAxtO,aAEA,IAAAw2P,KACA,iBAAAj+D,EAAAt6L,MAAAs6L,EAAAqhD,WAAArhD,EAAAqhD,UAAA1/O,IAAA,UACAs8P,KACA7H,IACAvvD,EAAAgzD,KAAAxzO,KAAA,GAAA+vO,GAAA,EACAvvD,EAAAgzD,KAAAxzO,KAAA,OAAA+vO,GAEA,IAAAoE,EA3FA,SAAAqD,EAAAC,EAAAI,EAAAH,GACA,IAAAjC,GACAY,oBACAC,iBACAH,wBACAJ,+BACA5B,eAWA,GATAqD,GACAhC,EAAAgC,EAAA/B,GAEAgC,GACAjC,EAAAiC,EAAAhC,GAEA+B,GAtDA,SAAA/B,EAAAiC,GACA,IAAAjC,EAAAM,4BAAA,CAGA,GAAAN,EAAAY,iBAAAp5P,OAAAy6P,EAGA,SAFAj3P,EAAA2O,MAAA,iDACAqmP,EAAAtB,eAGA,QAAAzsP,EAAA,EAAAyiK,EAAAsrF,EAAAa,cAAAr5P,OAA4DyK,EAAAyiK,EAAQziK,IAAA,CACpE,GAAAA,EAAAgwP,EAGA,SAFAj3P,EAAA2O,MAAA,4BAAA1H,QACA+tP,EAAAtB,eAGA,GAAAsB,EAAAa,cAAA5uP,KAAA+tP,EAAAY,iBAAA3uP,GAGA,SAFAjH,EAAA2O,MAAA,2BAAA1H,QACA+tP,EAAAtB,iBAjBA,CAuDAsB,EAAAiC,GAEAG,GAAA,EAAAA,EAAA56P,OAAA,CACA,IAAA66P,EAAA,IAAA/2P,WAAA82P,EAAA56P,OAAA,GACA66P,EAAAt6P,IAAAq6P,EAAA73O,MACA63O,EAAA73O,KAAA83O,EAEA,OAAArC,EAAAtB,WAtBA,CA2FA3zD,EAAAg3D,KAAAh3D,EAAAi3D,KAAAj3D,EAAA,QAAAk3D,GAOA,GANAvD,WACA3zD,EAAAg3D,YACAh3D,EAAAi3D,YACAj3D,EAAA,SA7mBA,SAAAouC,EAAA90C,EAAAqkD,EAAA4R,GACA,GAAAj2D,EAAA,CAMA80C,EAAA5tO,KAAA4tO,EAAA/tO,MAAA+tO,EAAA/tO,MAAA,GAAAi5L,EAAAj3K,OACA+rN,EAAA5tO,KAAA84L,EAAA78L,OAAA,EACA,IAAA86P,EAAAnpB,EAAAxtO,YACA22P,EAAAhI,OACAtvP,EAAA+Q,MAAA,qBAAAumP,EAAA,+CAAAhI,EAAA,KACAgI,EAAAhI,EACAj2D,EAAA95K,KAAA,WAAA+3O,IAAA,EACAj+D,EAAA95K,KAAA,QAAA+3O,GAEA,IACAC,EADAjI,EAAAgI,GACA5Z,EAAAlhP,OAAA,EAAA86P,GAAA,GACA,GAAAC,EAAA,GACA,IAAAvqF,EAAA,IAAA1sK,WAAAo9O,EAAAlhP,OAAA,EAAA+6P,GACAvqF,EAAAjwK,IAAA2gP,EAAAn+N,MACAm+N,EAAAn+N,KAAAytJ,QAnBA0wE,IACAA,EAAAn+N,KAAA,MAHA,CA+mBA4uN,EAAApuC,EAAA8yD,KAAA9yD,EAAA+yD,KAAAxD,IACAvvD,EAAA6yD,KACA,UAAA5yP,EAAAyD,YAAA,uCAjhBA,SAAAmvP,EAAAtD,EAAAkI,GACA,IAAAj4O,EAAAqzO,EAAArzO,KACA+gM,GAAA/gM,EAAA,IA9xBA,KA8xBAA,EAAA,IA9xBA,KA8xBAA,EAAA,IA9xBA,GA8xBAA,EAAA,GACA+gM,GAAA,WACAtgN,EAAA+Q,MAAA,oDAAAuvM,GACA/gM,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEA,IAAAk4O,EAAAtJ,EAAA5uO,EAAA,IAAAA,EAAA,KACA,GAAAk4O,EAAA,GAAAA,EAAA,MACAz3P,EAAA+Q,MAAA,6DAAA0mP,GACA,IAAAC,EAAApI,EAAA,EACA,GAAAkI,IAAAE,GAAA,EACAn4O,EAAA,MACAA,EAAA,UACW,IAAAi4O,IAAAE,GAAA,EAIX,UAAA13P,EAAAyD,YAAA,mCAAAg0P,GAHAl4O,EAAA,MACAA,EAAA,QAnBA,CAmhBAwgL,EAAA6yD,KAAAtD,EAAAuH,EAAA92D,EAAA+2D,KAAAt6P,OAAA,GACA,IAAAmyP,EAAA90P,OAAAe,OAAA,MACA,GAAAi8P,EAAA,CACA,IAAAc,EAAAxJ,EAAApuD,EAAA6yD,KAAArzO,KAAA,IAAAwgL,EAAA6yD,KAAArzO,KAAA,KACAq4O,EA9fA,SAAAd,EAAAjD,EAAAvE,EAAAqI,EAAAjE,EAAAyD,EAAAD,GACA,IAAAW,EAAAC,EAAAC,EA6fAJ,GA3fAE,EAAA,EACAC,EAAA,SAAAv4O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,IAEA21O,EAAA,SAAAx4O,EAAA6C,EAAApoB,GACAulB,EAAA6C,GAAApoB,IAAA,OACAulB,EAAA6C,EAAA,GAAApoB,GAAA,OACAulB,EAAA6C,EAAA,GAAApoB,GAAA,MACAulB,EAAA6C,EAAA,OAAApoB,KAGA69P,EAAA,EACAC,EAAA,SAAAv4O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,OAEA21O,EAAA,SAAAx4O,EAAA6C,EAAApoB,GACAulB,EAAA6C,GAAApoB,GAAA,MACAulB,EAAA6C,EAAA,GAAApoB,GAAA,QAGA,IAAAg+P,EAAAlB,EAAAv3O,KACA04O,EAAAJ,GAAA,EAAAvI,GACA0I,EAAAx7P,SAAAy7P,KACAD,EAAA,IAAA13P,WAAA23P,IACAl7P,IAAA+5P,EAAAv3O,KAAAve,SAAA,EAAAi3P,IACAnB,EAAAv3O,KAAAy4O,GAEA,IAOA37P,EAAA4K,EAPAixP,EAAArE,EAAAt0O,KACA44O,EAAAD,EAAA17P,OACA47P,EAAA,IAAA93P,WAAA63P,GACAjjC,EAAA4iC,EAAAE,EAAA,GACAK,EAAA,EACA1J,EAAA90P,OAAAe,OAAA,MACAm9P,EAAAC,EAAA,EAAAK,GAEA,IAAAC,EAAAnB,EAAA7H,EAAA,EAAAA,EACA,IAAAjzP,EAAA,EAAA4K,EAAA4wP,EAAiCx7P,EAAAi8P,EAAej8P,IAAA4K,GAAA4wP,EAAA,CAChD,IAAA7+B,EAAA8+B,EAAAE,EAAA/wP,GACA,IAAA+xN,IACAA,EAAA9D,GAEA8D,EAAAm/B,MAAA,QAAAn/B,IACAA,EAAAm/B,GAEAn/B,EAAAm/B,IACAjjC,EAAA8D,GAEA,IAAA26B,EAAAL,EAAA4E,EAAAhjC,EAAA8D,EAAAo/B,EAAAC,EAAA3E,GACA/wP,EAAAgxP,EAAAn3P,OACA,IAAAmG,IACAgsP,EAAAtyP,OAEAs3P,EAAAC,mBAAAsD,IACAA,EAAAvD,EAAAC,oBAGAmE,EAAAC,EAAA/wP,EADAoxP,GAAA11P,GAEAuyN,EAAA8D,EAEA,OAAAq/B,EAAA,CACA,IAAAE,EAAA,IAAAj4P,YAAA,mCACA,IAAAjE,EAAA,EAAA4K,EAAA4wP,EAAmCx7P,EAAAizP,EAAejzP,IAAA4K,GAAA4wP,EAClDE,EAAAC,EAAA/wP,EAAAsxP,EAAA/7P,QAEAq3P,EAAAt0O,KAAAg5O,OACS,GAAApB,EAAA,CACT,IAAAqB,EAAAV,EAAAE,EAAAH,GACAO,EAAA57P,OAAAg8P,EAAAH,EACAxE,EAAAt0O,KAAA64O,EAAAp3P,SAAA,EAAAw3P,EAAAH,IAEAxE,EAAAt0O,KAAA,IAAAjf,WAAAk4P,EAAAH,GACAxE,EAAAt0O,KAAAxiB,IAAAq7P,EAAAp3P,SAAA,EAAAq3P,KAEAxE,EAAAt0O,KAAAxiB,IAAAq7P,EAAAp3P,SAAA,EAAAw3P,GAAAH,GACAN,EAAAjB,EAAAv3O,KAAAy4O,EAAAx7P,OAAAq7P,EAAAQ,EAAAG,QAEA3E,EAAAt0O,KAAA64O,EAAAp3P,SAAA,EAAAq3P,GAEA,OACA1J,gBACAuI,yBAnFA,CA8fAn3D,EAAA+2D,KAAA/2D,EAAA8zD,KAAAvE,EAAAqI,EAAAjE,EAAAyD,EAAAD,GACAvI,EAAAiJ,EAAAjJ,cACAruC,GAAA,OAAAvgB,EAAAgzD,KAAAv2P,QAAA,KACAujM,EAAAgzD,KAAAxzO,KAAA,IAAAq4O,EAAAV,uBAAA,EACAn3D,EAAAgzD,KAAAxzO,KAAA,QAAAq4O,EAAAV,uBAGA,IAAAn3D,EAAA8yD,KACA,UAAA7yP,EAAAyD,YAAA,sCAEA,IAAAs8L,EAAA8yD,KAAAtzO,KAAA,SAAAwgL,EAAA8yD,KAAAtzO,KAAA,MACAwgL,EAAA8yD,KAAAtzO,KAAA,QACAwgL,EAAA8yD,KAAAtzO,KAAA,SAEA,IAAAk5O,GACAlI,WAAApC,EAAApuD,EAAA6yD,KAAArzO,KAAA,IAAAwgL,EAAA6yD,KAAArzO,KAAA,KACAixO,KAAArC,EAAApuD,EAAA6yD,KAAArzO,KAAA,IAAAwgL,EAAA6yD,KAAArzO,KAAA,KACAkxO,KAAArC,EAAAruD,EAAA6yD,KAAArzO,KAAA,IAAAwgL,EAAA6yD,KAAArzO,KAAA,KACAo7K,OAAAwzD,EAAApuD,EAAA8yD,KAAAtzO,KAAA,GAAAwgL,EAAA8yD,KAAAtzO,KAAA,IACAq7K,QAAAwzD,EAAAruD,EAAA8yD,KAAAtzO,KAAA,GAAAwgL,EAAA8yD,KAAAtzO,KAAA,KAEA7kB,KAAAigM,OAAA89D,EAAA99D,OAAA89D,EAAAlI,WACA71P,KAAAkgM,QAAA69D,EAAA79D,QAAA69D,EAAAlI,WACAxwD,EAAAizD,OA/bA,SAAAA,EAAA95D,EAAAw/D,GACA,IAAAt4P,GAAA+tO,EAAA/tO,MAAA+tO,EAAA/tO,MAAA,GAAA4yP,EAAA5wO,OACA+rN,EAAA5tO,IAAAH,EACA,IAIAu4P,EAHAn4P,EAAAJ,EADA4yP,EAAAx2P,OAEA8jN,EAAA6tB,EAAArtO,WACAqtO,EAAAhvO,SAAA,IAEA,IACA9C,EADAohM,KAEA,OAAA6iB,GACA,WACAq4C,EAAA/N,EACA,MACA,YACA,IAAA0E,EAAAnhB,EAAAxtO,YACA,GAAA2uP,IAAAoJ,EAAA,CACAj7D,KACA,MAEA,IAAAm7D,KACA,IAAAv8P,EAAA,EAAuBA,EAAAizP,IAAejzP,EAAA,CACtC,IAAA+hB,EAAA+vN,EAAAxtO,YACA,GAAAyd,GAAA,OACAq/K,KACA,MAEAm7D,EAAA1gP,KAAAkG,GAEA,IAAAq/K,EACA,MAIA,IAFA,IAAAo7D,KACAj9O,KACAuyN,EAAA5tO,IAAAC,GAAA,CACA,IAAAs4P,EAAA3qB,EAAAztO,UAEA,IADAkb,EAAApf,OAAAs8P,EACAz8P,EAAA,EAAyBA,EAAAy8P,IAAkBz8P,EAC3Cuf,EAAAvf,GAAAggB,OAAAC,aAAA6xN,EAAAztO,WAEAm4P,EAAA3gP,KAAA0D,EAAAmB,KAAA,KAGA,IADA47O,KACAt8P,EAAA,EAAuBA,EAAAizP,IAAejzP,EAAA,CACtC,IAAA4K,EAAA2xP,EAAAv8P,GACA4K,EAAA,IACA0xP,EAAAzgP,KAAA0yO,EAAA3jP,IAGA0xP,EAAAzgP,KAAA2gP,EAAA5xP,EAAA,MAEA,MACA,YACA,MACA,WACAjH,EAAA2O,MAAA,0CAAA2xM,GACA7iB,KACAvE,EAAAkiD,kBACAud,EAAAz/D,EAAAkiD,iBAKA,OADAliD,EAAAy/D,aACAl7D,EA/DA,CAgcAsC,EAAAizD,KAAA95D,EAAAo2D,KAEAvvD,EAAAizD,KAAA,OAGA,IACAhW,EADA0R,KAEA,SAAAqK,EAAA7J,GACA,OAAAP,EAAAO,GAEA,GAAAh2D,EAAAwhD,UAAA,CACA,IAAAK,EAAA7hD,EAAA6hD,gBACAie,EAAA,IAAAje,EAAAv+O,OACA08L,EAAAgjD,KAAAj/O,QAAA,SAAA+/O,EAAAx+C,GACA,GAAAA,EAAA,MACA,UAAAx+L,EAAAyD,YAAA,6BAEA,IAAAyrP,GAAA,EACA8J,EACA9J,EAAA1wD,WACWu8C,EAAAv8C,KACX0wD,EAAAnU,EAAAv8C,IAEA0wD,GAAA,GAAAA,EAAAI,GAAAyJ,EAAA7J,KACAR,EAAA1R,GAAAkS,MAGAiI,IAAA6B,GAAAtK,EAAA,KACAA,EAAA,GAAAY,EAAA,OAEO,CACP,IAAA2J,EAl1BA,SAAAnc,EAAA3O,EAAAkN,EAAAK,GACA,IAAAoB,EAEA,SADA98O,EAAA2O,MAAA,6BAEAuqP,YAAA,EACAC,YAAA,EACAC,YACAC,iBAGA,IAAA/vC,EACAlpN,GAAA+tO,EAAA/tO,MAAA+tO,EAAA/tO,MAAA,GAAA08O,EAAA16N,OACA+rN,EAAA5tO,IAAAH,EACA+tO,EAAAxtO,YAIA,IAHA,IACA24P,EADAzM,EAAA1e,EAAAxtO,YAEA44P,KACAl9P,EAAA,EAAuBA,EAAAwwP,EAAexwP,IAAA,CACtC,IAAA68P,EAAA/qB,EAAAxtO,YACAw4P,EAAAhrB,EAAAxtO,YACAyhB,EAAA+rN,EAAArtO,aAAA,EACA04P,KACA,KAAAF,KAAAJ,gBAAAI,EAAAH,kBAGA,IAAAD,GAAA,IAAAC,EACAK,KACW,IAAAN,GAAA,IAAAC,EACXK,KACW,IAAAN,GAAA,IAAAC,IAAAzd,GAAA4d,EAKAje,GAAA,IAAA6d,GAAA,IAAAC,IACXK,KACAD,OANAC,KACAne,IACAke,OAMAC,IACAF,GACAJ,aACAC,aACA/2O,WAGAm3O,GACA,MAMA,GAHAD,IACAnrB,EAAA5tO,IAAAH,EAAAk5P,EAAAl3O,SAEAk3O,IAAA,IAAAnrB,EAAAltO,WAEA,SADAjB,EAAA2O,MAAA,2CAEAuqP,YAAA,EACAC,YAAA,EACAC,YACAC,iBAGA,IAAAr6D,EAAAmvC,EAAAxtO,YACAwtO,EAAAxtO,YACAwtO,EAAAxtO,YACA,IAEAsG,EAAAioP,EAFAmK,KACAD,KAEA,OAAAp6D,EAAA,CACA,IAAA/3L,EAAA,EAAqBA,EAAA,IAASA,IAAA,CAC9B,IAAAmX,EAAA+vN,EAAAztO,UACA0d,GAGAg7O,EAAAlhP,MACA8kO,SAAA/1O,EACAioP,QAAA9wO,IAGAi7O,UACS,OAAAr6D,EAAA,CACT,IAAA0wD,EAAAvhB,EAAAxtO,aAAA,EACAwtO,EAAAhvO,SAAA,GACA,IAAAs6P,EACApwC,KACA,IAAAowC,EAAA,EAA4BA,EAAA/J,EAAqB+J,IACjDpwC,EAAAnxM,MAA2B1X,IAAA2tO,EAAAxtO,cAG3B,IADAwtO,EAAAxtO,YACA84P,EAAA,EAA4BA,EAAA/J,EAAqB+J,IACjDpwC,EAAAowC,GAAAr5P,MAAA+tO,EAAAxtO,YAEA,IAAA84P,EAAA,EAA4BA,EAAA/J,EAAqB+J,IACjDpwC,EAAAowC,GAAAryL,MAAA+mK,EAAAxtO,YAEA,IAAA+4P,EAAA,EACA,IAAAD,EAAA,EAA4BA,EAAA/J,EAAqB+J,IAAA,CACjDnwC,EAAAD,EAAAowC,GACA,IAAAE,EAAAxrB,EAAAxtO,YACA,GAAAg5P,EAAA,CAIA,IAAAC,GAAAD,GAAA,IAAAjK,EAAA+J,GACAnwC,EAAAswC,cACAF,EAAA9vP,KAAAwH,IAAAsoP,EAAAE,EAAAtwC,EAAA9oN,IAAA8oN,EAAAlpN,MAAA,QALAkpN,EAAAswC,aAAA,EAOA,IAAAp9D,KACA,IAAAv1L,EAAA,EAAqBA,EAAAyyP,EAAkBzyP,IACvCu1L,EAAAtkL,KAAAi2N,EAAAxtO,aAEA,IAAA84P,EAAA,EAA4BA,EAAA/J,EAAqB+J,IAAA,CAEjDr5P,GADAkpN,EAAAD,EAAAowC,IACAr5P,MACA,IAAAI,EAAA8oN,EAAA9oN,IACA4mE,EAAAkiJ,EAAAliJ,MAEA,IADAwyL,EAAAtwC,EAAAswC,YACA3yP,EAAA7G,EAA2B6G,GAAAzG,EAAUyG,IACrC,QAAAA,IAIAioP,GADAA,EAAA0K,EAAA,EAAA3yP,EAAAu1L,EAAAo9D,EAAA3yP,EAAA7G,IACAgnE,EAAA,MACAgyL,EAAAlhP,MACA8kO,SAAA/1O,EACAioP,kBAIS,QAAAlwD,EAaT,SADAh/L,EAAA2O,MAAA,sCAAAqwL,IAEAk6D,YAAA,EACAC,YAAA,EACAC,YACAC,iBAhBA,IAAArmC,EAAAmb,EAAAxtO,YACA4tK,EAAA4/D,EAAAxtO,YACA,IAAAsG,EAAA,EAAqBA,EAAAsnK,EAAgBtnK,IAAA,CACrCioP,EAAA/gB,EAAAxtO,YACA,IAAAq8O,EAAAhqB,EAAA/rN,EACAmyP,EAAAlhP,MACA8kO,WACAkS,aAeA,IAHAkK,EAAAx1F,KAAA,SAAAlxJ,EAAA5O,GACA,OAAA4O,EAAAsqO,SAAAl5O,EAAAk5O,WAEA3gP,EAAA,EAAmBA,EAAA+8P,EAAA58P,OAAqBH,IACxC+8P,EAAA/8P,EAAA,GAAA2gP,WAAAoc,EAAA/8P,GAAA2gP,WACAoc,EAAA/2O,OAAAhmB,EAAA,GACAA,KAGA,OACA68P,WAAAI,EAAAJ,WACAC,WAAAG,EAAAH,WACAC,WACAC,gBAjKA,CAk1BAt5D,EAAA+8C,KAAA3O,EAAAzzO,KAAA2gP,eAAAniD,EAAAwiD,aACAme,EAAAZ,EAAAC,WACAY,EAAAb,EAAAE,WACAY,EAAAd,EAAAG,SACAY,GAAAD,EAAAv9P,OACA,GAAA08L,EAAAwiD,cAAA,IAAAme,GAAA,IAAAC,GAAA,IAAAD,GAAA,IAAAC,KAAA,IAAAD,IAAA,IAAAC,MAAAxhE,EAAAjiL,aAAA6iL,EAAAgiD,kBAAA,CACA,IAAA/7C,MACA,qBAAAjG,EAAAgiD,kBAAA,oBAAAhiD,EAAAgiD,mBACA/7C,MAAA7G,EAAAjiL,aAAA6iL,EAAAgiD,mBAEA,IAAAlwC,MAAA69B,EAAAviN,oBACA,IAAA02N,EAAA,EAA4BA,EAAA,IAAgBA,IAAA,CAC5C,IAAAlB,GAAAme,GAQA,GANAne,GADAphP,KAAAugP,aAAA+B,KAAAtiP,KAAAugP,YACAvgP,KAAAugP,YAAA+B,GACaA,KAAA79C,IAAA,KAAAA,GAAA69C,GACb79C,GAAA69C,GAEA1kD,EAAAriL,iBAAA+mO,GAEA,CAIA,IAAAkd,GADAD,GAAAxO,EAAA3P,GAAA9wC,IAEA,IAAA6uD,GAAA,IAAAC,EACAI,GAAAlvD,GAAAivD,IACa,IAAAJ,GAAA,IAAAC,IACbI,GAAA5hE,EAAAtiL,iBAAAg2J,QAAAiuF,KAGA,IADA,IAAA9/O,MACA9d,GAAA,EAA2BA,GAAA29P,KAAwB39P,GACnD,GAAA09P,EAAA19P,IAAA2gP,WAAAkd,GAAA,CAGAxL,EAAA1R,GAAA+c,EAAA19P,IAAA6yP,QACA/0O,MACA,MAEA,IAAAA,IAAA++K,EAAAy/D,WAAA,CACA,IAAAzJ,GAAAh2D,EAAAy/D,WAAA3sF,QAAA8vE,KACA,IAAAoT,IAAA+K,KAAAne,KACAoT,GAAAh2D,EAAAy/D,WAAA3sF,QAAAiuF,KAEA/K,GAAA,GAAA6J,EAAA7J,MACAR,EAAA1R,GAAAkS,YAIS,OAAA2K,GAAA,IAAAC,EACT,QAAA30F,GAAA,EAA0BA,GAAA60F,KAAyB70F,GACnDupF,EAAAqL,EAAA50F,IAAA63E,UAAA+c,EAAA50F,IAAA+pF,aAGA,QAAA17E,GAAA,EAA2BA,GAAAwmF,KAA0BxmF,GACrDwpE,EAAA+c,EAAAvmF,IAAAwpE,SACA,IAAA6c,GAAA7c,GAAA,OAAAA,GAAA,QACAA,GAAA,KAEA0R,EAAA1R,GAAA+c,EAAAvmF,IAAA07E,QAIA,IAAAR,EAAAlyP,SACAkyP,EAAA,MAEA,IAAAyL,GAAA1L,EAAAC,EAAAx1D,EAAAy1D,GAkBA,GAjBAj0P,KAAA6yP,WAAA4M,GAAA5M,WACAxtD,EAAA+8C,MACAqQ,IAAA,OACA5tO,KAAA8vO,EAAA8K,GAAAzL,kBAAAY,IAEAvvD,EAAA,SA7sCA,SAAAq6D,GACA,IAAAv3P,EAAA,IAAA+T,EAAArX,OAAA66P,EAAA76O,MACA+gM,EAAAz9M,EAAAlC,YACAkC,EAAA1D,SAAA,IACA,IAAAk7P,EAAAx3P,EAAAlC,YACA,QAAA2/M,EAAA,OAAA+5C,GAGAx3P,EAAAlC,YACAkC,EAAAlC,cAIAkC,EAAA1D,SAAA,GAEA,IADA0D,EAAAlC,cAIAy5P,EAAA76O,KAAA,GAAA66O,EAAA76O,KAAA,KACA,KAnBA,CA6sCAwgL,EAAA,WACAA,EAAA,SACAotD,IAAA,OACA5tO,KAAA6wO,EAAAl3D,EAAAihE,GAAAzL,kBAAA+J,KAGA14D,EAAAizD,OACAjzD,EAAAizD,MACA7F,IAAA,OACA5tO,KAAA6xO,EAAAl4D,MAGA29D,EACA,IACAD,EAAA,IAAAhgP,EAAArX,OAAAwgM,EAAA,QAAAxgL,MAEA65K,EADA,IAAA8wD,EAAA/xD,UAAAy+D,EAAA19D,EAAA+wD,GACAt9O,QACA,IAAA2tP,GAAA,IAAApQ,EAAAvyD,YAAAyB,GACA2G,EAAA,QAAAxgL,KAAA+6O,GAAAh5D,UACS,MAAA9qL,MACTxW,EAAA2O,MAAA,0BAAAuqL,EAAAs1C,YAGA,GAAAzuC,EAAAtlM,KAKO,CACP,IAAA8/P,GAAAhG,EAAAx0D,EAAAtlM,MACAslM,EAAAtlM,KAAA8kB,KAAA8xO,EAAA52P,EAAA8/P,SANAx6D,EAAAtlM,MACA0yP,IAAA,OACA5tO,KAAA8xO,EAAA32P,KAAAD,OAMA,IAAA+/P,GAAA,IAAAzO,EAAA1yD,EAAAinB,SACA,QAAAm6C,MAAA16D,EACAy6D,GAAAtN,SAAAuN,GAAA16D,EAAA06D,IAAAl7O,MAEA,OAAAi7O,GAAA9N,WAEAmB,QAAA,SAAA5f,EAAAE,EAAAj1C,GACAA,EAAAymD,cACAzmD,EAAAwhE,iBAn2DA,SAAAxhE,EAAAwhE,GACA,IAAAxhE,EAAA8iD,2BAGA9iD,EAAAwiD,aAGAgf,IAAAxhE,EAAAkiD,iBAGAliD,EAAAqhD,qBAAAmC,GAAA,CAGA,IAAAnC,KACAvvC,KAAA69B,EAAAviN,oBACA,QAAA02N,KAAA0d,EAAA,CACA,IAAA5e,EAAA4e,EAAA1d,GACA/xC,KAAAw9B,EAAA19B,oBAAA+wC,EAAA9wC,IACA,IAAAC,IACAsvC,EAAAyC,GAAA3gO,OAAAC,aAAA2uL,IAGA/R,EAAAqhD,UAAAuR,MAAAvR,IAtBA,CAo2DArhD,IAAAwhE,iBAEA,IAAAC,EAAAxsB,EAAAysB,gBAAA1hE,GACAihE,EAAA1L,EAAAkM,EAAAzhE,EAAAr/L,OAAAe,OAAA,OACAF,KAAA6yP,WAAA4M,EAAA5M,WACA,IAAA+B,EAAAnhB,EAAAmhB,UACA,SAAAuL,EAAAnM,EAAAQ,GACA,IAAA4L,EAAA,KACA,QAAA9d,KAAA0R,EACAQ,IAAAR,EAAA1R,KACA8d,IACAA,MAEAA,EAAA5iP,KAAA,EAAA8kO,IAGA,OAAA8d,EAEA,SAAAC,EAAArM,EAAAQ,GACA,QAAAlS,KAAA0R,EACA,GAAAQ,IAAAR,EAAA1R,GACA,SAAAA,EAIA,OADAmd,EAAAzL,kBAAAyL,EAAAnL,2BAAAE,EACAiL,EAAAnL,4BAEA,IAAApzD,EAAAuyC,EAAAvyC,MACA,GAAAquD,GAAAruD,KAAAp/L,OAAA,CACA,IAAAiR,EAAAyrL,EAAAsB,YAAAx6L,EAAAi3O,qBACAx8C,EAAA0zC,EAAA6sB,aACAhN,EAAAn0P,OAAAe,OAAA,MACA,QAAAs0P,KAAAtzD,EAAA,CAEA,IAAAwB,EAAAxB,EADAszD,GAAA,GAEA+L,EAAA3iE,EAAAriL,iBAAAmnL,EAAA,IACA89D,EAAA5iE,EAAAriL,iBAAAmnL,EAAA,IACA+9D,EAAA1gE,EAAAzuB,QAAAivF,GACAG,EAAA3gE,EAAAzuB,QAAAkvF,GACA,KAAAC,EAAA,GAAAC,EAAA,IAGA,IAAAC,GACAlmP,EAAAioL,EAAA,GAAA3vL,EAAA,GAAA2vL,EAAA,GAAA3vL,EAAA,GAAAA,EAAA,GACA8C,EAAA6sL,EAAA,GAAA3vL,EAAA,GAAA2vL,EAAA,GAAA3vL,EAAA,GAAAA,EAAA,IAEAqtP,EAAAD,EAAAF,EAAAzL,GACA,GAAA4L,EAGA,QAAAz+P,EAAA,EAAAC,EAAAw+P,EAAAt+P,OAAgDH,EAAAC,EAAQD,IAAA,CACxD,IAAA2gP,EAAA8d,EAAAz+P,GACAqyP,EAAAyL,EAAAzL,kBACA4M,EAAAP,EAAArM,EAAAyM,GACAI,EAAAR,EAAArM,EAAA0M,GACApN,EAAAhR,IACAse,mBACAC,qBACAF,kBAIAniE,EAAA80D,UAEA,IAAAuC,EAAA,GAAAr3D,EAAAsB,YAAAx6L,EAAAi3O,sBAAA,GACAujB,EAAA,IAAAzO,EAAA,QAyBA,OAxBAyO,EAAAtN,SAAA,OAAA/e,EAAA5uN,MACAi7O,EAAAtN,SAAA,OAAAkD,EAAAl3D,EAAAihE,EAAAzL,oBACA8L,EAAAtN,SAAA,OAAAmC,EAAA8K,EAAAzL,kBAAAY,IACAkL,EAAAtN,SAAA,wCAAAoB,EAAAiC,GAAA,iCAAAjC,EAAAp1D,EAAA0B,SAAA,KAAA0zD,EAAAp1D,EAAAyB,QAAA0zD,EAAAn1D,EAAA4mD,YAAA,wBACA0a,EAAAtN,SAAA,iBAAAoB,EAAAp1D,EAAAyB,QAAA2zD,EAAAp1D,EAAA0B,SAAA,qBAAA0zD,EAAAp1D,EAAA2mD,WAAAyO,EAAA1kP,KAAA4xP,IAAAtiE,EAAA4mD,aAAA5mD,EAAA0mD,SAAA,2BAAAyO,EAAAiB,IACAkL,EAAAtN,SAAA,kBAIA,IAHA,IAAAmD,EAAAliB,EAAAkiB,YACAoL,EAAAttB,EAAA/0C,IAAA+0C,EAAA/0C,IAAAyC,OAAA,KACAi3D,EAAA,WACAz2P,EAAA,EAAAC,EAAAgzP,EAAuCjzP,EAAAC,EAAQD,IAAA,CAC/C,IAAA4O,EAAA,EACA,GAAAolP,EAAA,CACA,IAAA7yD,EAAA6yD,EAAAh0P,EAAA,GACA4O,EAAA,UAAAuyL,IAAAvyL,MAAA,OACWwwP,IACXxwP,EAAArB,KAAA61J,KAAAg8F,EAAAp/P,IAAA,IAEAy2P,GAAAzE,EAAApjP,GAAAojP,EAAA,GAEA,OAAAyE,EAdA,IAgBA0H,EAAAtN,SAAA,iBAAAmB,EAAAiB,IACAkL,EAAAtN,SAAA,OAAAmE,EAAApjB,IACAusB,EAAAtN,SAAA,OAAAkE,EAAAl4D,IACAshE,EAAA9N,WAEAzW,iBACA,oBAAAv7O,KACA,OAAAA,KAAAghQ,aAIA,IAFA,IACAzwP,EADA0wP,GAAA,+BAEAt/P,EAAA,EAAAC,EAAAq/P,EAAAn/P,OAA4DH,EAAAC,EAAQD,IAAA,CACpE,IAAAy/O,EAAA6f,EAAAt/P,GACA,GAAAy/O,KAAAphP,KAAAmhM,OAAA,CACA5wL,EAAAvQ,KAAAmhM,OAAAigD,GACA,MAEA,IACAhE,KADAjP,EAAAviN,oBACAw1N,GACAD,EAAA,EAaA,GAZAnhP,KAAAggP,WACAhgP,KAAAwhP,KAAA6K,SAAAjP,KACA+D,EAAAnhP,KAAAwhP,KAAAnuO,OAAA+pO,KAGA+D,GAAAnhP,KAAA6/O,YACAsB,EAAAnhP,KAAA6/O,UAAAyM,WAAAlP,IAEA+D,GAAA,IACAA,EAAA/D,GAEA7sO,EAAAvQ,KAAAmhM,OAAAggD,GAEA,MAKA,OAFA5wO,KAAAvQ,KAAAqjM,aACArjM,KAAAghQ,aAAAzwP,EACAA,GAEA2wP,YAAA,SAAA/f,EAAA7zO,GACA,IAAAmnP,EAAAlkP,EAAA0gP,EACAkQ,EAAAhgB,EACAnhP,KAAAwhP,MAAAxhP,KAAAwhP,KAAA6K,SAAAlL,KACAggB,EAAAnhQ,KAAAwhP,KAAAnuO,OAAA8tO,IAEA5wO,EAAAvQ,KAAAmhM,OAAAggE,GACA5wP,KAAAjL,EAAAge,OAAA/S,KAAAvQ,KAAAqjM,aACA,IAAA85C,EAAAn9O,KAAA8iP,UAAA9iP,KAAA8iP,SAAAqe,GACA5wD,EAAAvwM,KAAA6/O,UAAA1/O,IAAAghP,IAAAnhP,KAAAuhP,kBAAAphP,IAAAghP,MACA,iBAAA5wC,IACAA,EAAA5uL,OAAAC,aAAA2uL,IAEA,IAAA2gD,EAAA/P,KAAAnhP,KAAA6yP,WACA4B,EAAAz0P,KAAA6yP,WAAA1R,MACAnhP,KAAA2yP,cACA8B,KAAA1mB,EAAA/9B,yBAAAykD,IAEAz0P,KAAA0zO,cACAud,EAAAwD,GAEA,IAAA3f,EAAA,KACA,GAAA90O,KAAAszP,SAAAtzP,KAAAszP,QAAAnS,GAAA,CACA+P,KACA,IAAAxuD,EAAA1iM,KAAAszP,QAAAnS,GACAsT,EAAA/xD,EAAAk+D,iBACA9rB,GACAN,SAAA7yN,OAAAC,aAAA8gL,EAAAm+D,oBACAn5O,OAAAg7K,EAAAi+D,cAGA,IAAAnsB,EAAA7yN,OAAAC,aAAA6yO,GACA5f,EAAA70O,KAAA4yP,WAAAzR,GAKA,OAJAtM,KAAAsc,gBAAA3c,EAAAjkC,EAAAukC,EAAAvkO,EAAA4sO,EAAA8T,EAAA3jP,EAAA4jP,KACArc,EAAA,IAAAmc,EAAAxc,EAAAjkC,EAAAukC,EAAAvkO,EAAA4sO,EAAA8T,EAAA3jP,EAAA4jP,GACAlxP,KAAA4yP,WAAAzR,GAAAtM,GAEAA,GAEAZ,cAAA,SAAA/jC,GACA,IACA8jC,EAAAa,EAAAsM,EADAigB,EAAAphQ,KAAAohQ,WAEA,GAAAA,IACAptB,EAAAotB,EAAAlxD,IAEA,OAAA8jC,EAGAotB,IACAA,EAAAphQ,KAAAohQ,WAAAjiQ,OAAAe,OAAA,OAEA8zO,KACA,IAEApyO,EAFAy/P,EAAAnxD,EACAvuM,EAAA,EAEA,GAAA3B,KAAAwhP,KAEA,IADA,IAAAt1O,EAAA/M,OAAAe,OAAA,MACAyB,EAAAuuM,EAAApuM,QAAA,CACA9B,KAAAwhP,KAAA+K,aAAAr8C,EAAAvuM,EAAAuK,GACAi1O,EAAAj1O,EAAAi1O,SACA,IAAAr/O,EAAAoK,EAAApK,OACAH,GAAAG,EACA,IAAAwL,EAAA,IAAAxL,GAAA,KAAAouM,EAAA76L,WAAA1T,EAAA,GACAkzO,EAAA70O,KAAAkhQ,YAAA/f,EAAA7zO,GACA0mO,EAAAx2N,KAAAq3N,QAGA,IAAAlzO,EAAA,EAAAC,EAAAsuM,EAAApuM,OAAsCH,EAAAC,IAAQD,EAC9Cw/O,EAAAjxC,EAAA76L,WAAA1T,GACAkzO,EAAA70O,KAAAkhQ,YAAA/f,EAAA,KAAAA,GACAnN,EAAAx2N,KAAAq3N,GAGA,OAAAusB,EAAAC,GAAArtB,IAGA8B,EAhzDA,GAkzDAjC,EAAA,WACA,SAAAA,EAAAj1B,GACA5+M,KAAA4+M,QACA5+M,KAAA8zO,WAAA,eACA9zO,KAAAuzP,WAUA,OARA1f,EAAAj0O,WACAq0O,cAAA,WACA,UAEAwR,WAAA,WACA,OAAc7mC,MAAA5+M,KAAA4+M,SAGdi1B,EAdA,GAgBA,SAAAytB,EAAA9iE,EAAAwhE,EAAA/B,GACA,IACAzJ,EAAAlS,EAAA79C,EADAuvD,EAAA70P,OAAAe,OAAA,MAEAygP,KAAAniD,EAAAzxB,MAAA6zE,EAAAC,UACA,GAAAriD,EAAAgiD,iBAEA,IADA/7C,KAAA7G,EAAAjiL,aAAA6iL,EAAAgiD,kBACA8B,EAAA,EAAsBA,EAAA79C,EAAA3iM,OAAgCwgP,IACtDkS,EAAAyJ,EAAA3sF,QAAAmzB,EAAA69C,IAEA0R,EAAA1R,GADAkS,GAAA,EACAA,EAEA,OAGG,GAAA7T,EACH,IAAA2B,KAAA0d,EACAhM,EAAA1R,GAAA0d,EAAA1d,QAIA,IADA79C,EAAA7G,EAAAriL,iBACA+mO,EAAA,EAAsBA,EAAA79C,EAAA3iM,OAAgCwgP,IACtDkS,EAAAyJ,EAAA3sF,QAAAmzB,EAAA69C,IAEA0R,EAAA1R,GADAkS,GAAA,EACAA,EAEA,EAIA,IACAlkD,EADAiwC,EAAA/hD,EAAA+hD,YAEA,GAAAA,EACA,IAAA+B,KAAA/B,EAAA,CACA,IAAAa,EAAAb,EAAA+B,GAEA,SADAkS,EAAAyJ,EAAA3sF,QAAA8vE,IACA,CACA9wC,IACAA,KAAA69B,EAAAviN,qBAEA,IAAA2zO,EAAAxO,EAAA3P,EAAA9wC,GACAivD,IAAAne,IACAoT,EAAAyJ,EAAA3sF,QAAAiuF,IAIAvL,EAAA1R,GADAkS,GAAA,EACAA,EAEA,EAIA,OAAAR,EAEA,IAAAd,EAAA,WACA,SAAAqO,EAAAC,EAAAC,EAAAC,GAOA,IANA,IAIAn1P,EAJAo1P,EAAAH,EAAA1/P,OACA8/P,EAAAH,EAAA3/P,OACA6d,EAAAgiP,EAAAC,EACAjgQ,EAAA+/P,EAEAjiP,KACA9d,EAAAge,GAAA,CAEA,IADApT,EAAA,EACAA,EAAAq1P,GAAAJ,EAAA7/P,EAAA4K,KAAAk1P,EAAAl1P,IACAA,IAEA,GAAAA,GAAAq1P,EAAA,CAEA,IADAjgQ,GAAA4K,EACA5K,EAAAggQ,MAAAr8P,EAAAgI,SAAAk0P,EAAA7/P,KACAA,IAEA8d,KACA,MAEA9d,IAEA,OACA8d,QACA3d,OAAAH,GA4DA,SAAAuxP,EAAAnzP,EAAAw+L,EAAAC,GACA,IACAqjE,EAAArjE,EAAAqmD,QAEAid,GADAtjE,EAAAsmD,QACAvmD,EAAA93L,UAHA,IAIAs7P,EAAA,MAAAD,EAAA,QAAAA,EAAA,GACAC,IACAxjE,EAAA73L,KANA,GAOAm7P,EAAAC,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAE,EAnEA,SAAA75P,EAAA85P,GACA,IAEAC,EAAAC,EAAAloM,EAqBAmoM,EAvBAC,GAAA,oBACAC,EAAAn6P,EAAAtC,IAEA,IAEAs8P,GADAD,EAAA/5P,EAAA1D,SAAAw9P,IACAngQ,OACK,MAAAkf,GACL,GAAAA,aAAA1b,EAAA8X,qBACA,MAAA4D,EAGA,GAAAmhP,IAAAF,IACAhoM,EAAAsnM,EAAAW,EAAAG,EAAAJ,EAAA,EAAAI,EAAAvgQ,SACA2d,OAAAw6C,EAAAn4D,SAAAmgQ,EACA,OACA95P,OAAA,IAAA+T,EAAArX,OAAAq9P,GACApgQ,OAAAmgQ,GAQA,OAJA38P,EAAA2O,MAAA,kEACA9L,EAAAtC,IAAAy8P,EAMA,KADAroM,EAAAsnM,EADAp5P,EAAA1B,UAHA,MAIA47P,EAAA,IACAvgQ,QAIA,GADAqG,EAAAtC,KAAAo0D,EAAAn4D,OACAm4D,EAAAx6C,MAAA,CACA2iP,EAAAj6P,EAAAtC,IAAAy8P,EACA,MAIA,OADAn6P,EAAAtC,IAAAy8P,EACAF,GAEAj6P,OAAA,IAAA+T,EAAArX,OAAAsD,EAAA1D,SAAA29P,IACAtgQ,OAAAsgQ,OAGA98P,EAAA2O,MAAA,uEAEA9L,OAAA,IAAA+T,EAAArX,OAAAsD,EAAA1D,SAAAw9P,IACAngQ,OAAAmgQ,IA/CA,CAmEA1jE,EAAAsjE,GACA,IAAAnS,EAAA6S,YAAAP,EAAA75P,UAAAonP,GACAiT,kBAAAhkE,GACAujE,KACAD,EAAAvjE,EAAA95L,SAbA,IAcA,GAAAq9P,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAvBAW,EAuBAC,GAvBAD,EAuBAlkE,EAvBA95L,YAEA0D,OAAA,IAAA+T,EAAArX,OAAA49P,GACA3gQ,OAAA2gQ,EAAA3gQ,SAsBA+iB,EADA,IAAA6qO,EAAA6S,YAAAG,EAAAv6P,UAAAonP,GACAoT,qBACA,QAAAtsP,KAAAwO,EAAA25K,WACAA,EAAAnoL,GAAAwO,EAAA25K,WAAAnoL,GAEA,IAAAs/O,EAAA9wO,EAAA8wO,YACAiN,EAAA5iQ,KAAA6iQ,oBAAAlN,GACAhtD,EAAA3oM,KAAA8iQ,cAAAj+O,EAAA8jL,OACA3oM,KAAA21P,cACA31P,KAAA6kB,KAAA7kB,KAAA+iQ,KAAAhjQ,EAAA6iQ,EAAA5iQ,KAAA21P,YAAAhtD,EAAAnK,GACAx+L,KAAAkhM,MAAAlhM,KAAAgjQ,SAAAn+O,EAAA8wO,aAgJA,OA9IAzC,EAAAtzP,WACAg1P,gBACA,OAAA50P,KAAA21P,YAAA7zP,OAAA,GAEAw+P,WAAA,WAGA,IAFA,IAAAvgE,GAAA,WACA41D,EAAA31P,KAAA21P,YACAnB,EAAA,EAA2BA,EAAAmB,EAAA7zP,OAA8B0yP,IACzDz0D,EAAAviL,KAAAm4O,EAAAnB,GAAApT,WAEA,OAAArhD,GAEAmgE,gBAAA,SAAA1hE,GACA,IAEAg2D,EAFAmB,EAAA31P,KAAA21P,YACAsI,GAAA,WAEA,IAAAzJ,EAAA,EAAuBA,EAAAmB,EAAA7zP,OAA8B0yP,IACrDyJ,EAAAzgP,KAAAm4O,EAAAnB,GAAApT,WAEA,IAAA5nE,EAAAglB,EAAAwhE,gBACA,GAAAxmF,EAAA,CACA,IAAAwmF,EAAA7gQ,OAAAe,OAAA,MACA,QAAAoiP,KAAA9oE,GACAg7E,EAAAyJ,EAAA3sF,QAAAkI,EAAA8oE,MACA,IACA0d,EAAA1d,GAAAkS,GAIA,OAAA8M,EAAA9iE,EAAAwhE,EAAA/B,IAEA+E,SAAA,SAAArN,GACA,IAAAh0P,EAAAC,EACA0xP,KACA,IAAA3xP,EAAA,EAAAC,EAAA+zP,EAAA7zP,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAmhM,EAAA6yD,EAAAh0P,GACAmhM,EAAAJ,OACA4wD,EAAA3xP,EAAA,GAAAmhM,EAAAJ,MAGA,OAAA4wD,GAEAuP,oBAAA,SAAAI,GAEA,IADA,IAAAL,KACAjhQ,EAAA,EAAAC,EAAAqhQ,EAAAnhQ,OAAmDH,EAAAC,EAAQD,IAC3DihQ,EAAAplP,KAAAylP,EAAAthQ,GAAAmhM,YAEA,OAAA8/D,GAEAE,cAAA,SAAAI,GACA,IAAAvgE,EACA5yL,EAAAmzP,EAAAphQ,OAEA6gM,EADA5yL,EAAA,KACA,IACOA,EAAA,MACP,KAEA,MAEA,IACApO,EADAwhQ,KAEA,IAAAxhQ,EAAA,EAAiBA,EAAAghM,EAAUhhM,IAC3BwhQ,EAAA3lP,MAAA,KAEA,IAAA7b,EAAA,EAAiBA,EAAAoO,EAAWpO,IAC5BwhQ,EAAA3lP,KAAA0lP,EAAAvhQ,IAEA,OAAAwhQ,GAEAJ,KAAA,SAAAhjQ,EAAAi0O,EAAA2hB,EAAAhtD,EAAAnK,GACA,IAAAE,EAAA,IAAA8wD,EAAAhyD,IACAkB,EAAAC,OAAA,IAAA6wD,EAAAjyD,UAAA,SACAmB,EAAA9wB,OAAA7tK,GACA,IAAAu2K,EAAA,IAAAk5E,EAAAryD,WACA7mB,EAAAwvB,UAAA,eACAxvB,EAAAwvB,UAAA,cACAxvB,EAAAwvB,UAAA,gBACAxvB,EAAAwvB,UAAA,kBACAxvB,EAAAwvB,UAAA,cACAxvB,EAAAwvB,UAAA,iBACAxvB,EAAAwvB,UAAA,aAAAtH,EAAAsB,YACAxpB,EAAAwvB,UAAA,WAAAtH,EAAAioC,MACAnwD,EAAAwvB,UAAA,gBACAxvB,EAAAwvB,UAAA,oBACAxvB,EAAAwvB,UAAA,gBACApH,EAAApoB,UACA,IAAA+oB,EAAA,IAAAmwD,EAAAlyD,WACA+B,EAAArK,IAAA,gBACAqK,EAAArK,IAAA,uBACAqK,EAAArK,IAAAj1L,GACAs/L,EAAArK,IAAAj1L,GACAs/L,EAAArK,IAAA,UACA0J,EAAAW,UACAX,EAAAO,gBAAA,IAAAuwD,EAAAnyD,SACA,IAEA17L,EAAAC,EAFAmO,EAAAikO,EAAAlyO,OACAshQ,GAAA,GAEA,IAAAzhQ,EAAA,EAAiBA,EAAAoO,EAAWpO,IAAA,CAC5B,IAAA+hB,EAAA8rO,EAAA9xD,mBAAApsB,QAAAqkF,EAAAh0P,GAAAy/O,YACA,IAAA19N,IACAA,EAAA,GAEA0/O,EAAA5lP,KAAAkG,GAAA,UAAAA,GAEAg7K,EAAAqB,QAAA,IAAAyvD,EAAApyD,cAAA,KAAAgmE,GACA,IAAAC,EAAA,IAAA7T,EAAAnyD,SAEA,IADAgmE,EAAAruE,KAAA,SACArzL,EAAA,EAAiBA,EAAAoO,EAAWpO,IAAA,CAC5B,IAAAkzO,EAAAb,EAAAryO,GACA,IAAAkzO,EAAA/yO,OAIAuhQ,EAAAruE,IAAA6/C,GAHAwuB,EAAAruE,KAAA,SAKA0J,EAAAoC,YAAAuiE,EACA,IAAAriE,EAAA,IAAAwuD,EAAAtyD,eACA8D,EAAA8E,UAAA,cACA,IAAAkgB,GAAA,qLACA,IAAArkN,EAAA,EAAAC,EAAAokN,EAAAlkN,OAAqCH,EAAAC,EAAQD,IAAA,CAC7C,IAAA2hQ,EAAAt9C,EAAArkN,GACA,GAAA2hQ,KAAA9kE,EAAA+kE,YAAA,CAGA,IAAAjkQ,EAAAk/L,EAAA+kE,YAAAD,GACA,GAAA7hQ,MAAAC,QAAApC,GACA,QAAAiN,EAAAjN,EAAAwC,OAAA,EAAwCyK,EAAA,EAAOA,IAC/CjN,EAAAiN,IAAAjN,EAAAiN,EAAA,GAGAy0L,EAAA8E,UAAAw9D,EAAAhkQ,IAEAo/L,EAAApoB,QAAA0qB,cACA,IAAAwiE,EAAA,IAAAhU,EAAAnyD,SACA,IAAA17L,EAAA,EAAAC,EAAA+mM,EAAA7mM,OAAoCH,EAAAC,EAAQD,IAC5C6hQ,EAAAxuE,IAAA2T,EAAAhnM,IAIA,OAFAq/L,EAAAC,WAAAuiE,EACA,IAAAhU,EAAAvyD,YAAAyB,GACAkI,YAGAssD,EAjQA,GAmQAD,EAAA,WACA,SAAAA,EAAA10D,EAAAC,GACAx+L,KAAAw+L,aACA,IAAAt7K,EAAA,IAAAssO,EAAA/xD,UAAAc,EAAAC,EAAA+wD,GACAvvP,KAAA0+L,IAAAx7K,EAAAjR,QACA,IAAA2tP,EAAA,IAAApQ,EAAAvyD,YAAAj9L,KAAA0+L,KACA1+L,KAAAkhM,MAAAlhM,KAAA0+L,IAAAwC,MACA,IACAlhM,KAAA6kB,KAAA+6O,EAAAh5D,UACK,MAAA9qL,MACLxW,EAAA2O,MAAA,0BAAAuqL,EAAAs1C,YACA9zO,KAAA6kB,KAAA05K,GAoCA,OAjCA00D,EAAArzP,WACAg1P,gBACA,OAAA50P,KAAA0+L,IAAAoC,YAAA/wL,OAEAuwP,WAAA,WACA,OAAAtgQ,KAAA0+L,IAAAqB,iBAEAmgE,gBAAA,WACA,IAGAlM,EACAQ,EAJA91D,EAAA1+L,KAAA0+L,IACAF,EAAAx+L,KAAAw+L,WACAilE,EAAA/kE,EAAAqB,gBAGA,GAAAvB,EAAAwhD,UAAA,CAEA,GADAgU,EAAA70P,OAAAe,OAAA,MACAw+L,EAAAe,UACA,IAAA+0D,EAAA,EAA2BA,EAAAiP,EAAA3hQ,OAA2B0yP,IAAA,CACtD,IAAA1wD,EAAA2/D,EAAAjP,GAEAR,EADAx1D,EAAAgjD,KAAA8K,WAAAxoD,IACA0wD,OAGA,IAAAA,EAAA,EAA2BA,EAAA91D,EAAAoC,YAAA/wL,MAAiCykP,IAC5DR,EAAAQ,KAGA,OAAAR,EAIA,OADAsN,EAAA9iE,EADAE,EAAAllB,SAAAklB,EAAAllB,kBAAA,KACAiqF,KAIAxQ,EA/CA,GAkDA,oBAAAyQ,WAAA,UAAA9tF,KAAA8tF,UAAAC,aACAtkQ,EAAAkwP,4BAIA,oBAAAmU,WAAA,kBAAA9tF,KAAA8tF,UAAAC,aACAhU,MAGAtwP,EAAAkwP,wBACAlwP,EAAAiwP,2BACAjwP,EAAAgwP,yBACAhwP,EAAAw0O,YACAx0O,EAAAy2O,OACAz2O,EAAAuhP,YACAvhP,EAAAgiP,eACAhiP,EAAA2iP,uBACA3iP,EAAA+vP,wBACA/vP,EAAA+2O,gDCn/EAj3O,OAAAC,eAAAC,EAAA,cACAC,WAKAD,EAAA4kM,iBAHA,wgEAIA5kM,EAAA8kM,eAHA,urEAIA9kM,EAAAglM,qBAHA,grCAAAu/D,IAAA,SAAA9nP,EAAA7R,EAAAuL,GAAA,aCLArW,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAi4P,2BAEA,IAAAhyP,EAAYC,EAAQ,KAEpBiqP,EAAkBjqP,EAAQ,KAE1B4oO,EAAiB5oO,EAAQ,KAEzBq4L,EAAiBr4L,EAAQ,KAEzB2W,EAAc3W,EAAQ,KAEtB+xP,EAAA,WACA,SAAAuM,EAAAh/O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,GAEA,SAAAo8O,EAAAj/O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,GAEA,SAAAq8O,EAAAl/O,EAAAnf,EAAAI,GACA,IAEAkjK,EAAAn8J,EAAAlL,EAFA+lB,EAAA,IAAAo8O,EAAAj/O,EAAAnf,EAAA,GAAAm+P,EAAAh/O,EAAAnf,EAAA,GAAAm+P,EAAAh/O,EAAAnf,EAAA,IACA4+L,EAAAw/D,EAAAj/O,EAAAnf,EAAAgiB,GAEA,OAAA48K,EAAA,CACAw/D,EAAAj/O,EAAAnf,EAAAgiB,EAAA,GACA,IAAAstO,EAAA8O,EAAAj/O,EAAAnf,EAAAgiB,EAAA,MAGA,IAFA7a,EAAAnH,EAAAgiB,EAAA,GACAshJ,KACArnK,EAAA,EAAiBA,EAAAqzP,EAAcrzP,IAAAkL,GAAA,EAC/Bm8J,EAAArnK,IAAqBmE,IAAAg+P,EAAAj/O,EAAAhY,IAGrB,IADAA,GAAA,EACAlL,EAAA,EAAiBA,EAAAqzP,EAAcrzP,IAAAkL,GAAA,EAC/Bm8J,EAAArnK,GAAA+D,MAAAo+P,EAAAj/O,EAAAhY,GAEA,IAAAlL,EAAA,EAAiBA,EAAAqzP,EAAcrzP,IAAAkL,GAAA,EAC/Bm8J,EAAArnK,GAAAqiQ,QAAAF,EAAAj/O,EAAAhY,GAEA,IAAAlL,EAAA,EAAiBA,EAAAqzP,EAAcrzP,IAAAkL,GAAA,GAC/B,IAAAo3P,EAAAH,EAAAj/O,EAAAhY,GACA,OAAAo3P,EAAA,CAGAj7F,EAAArnK,GAAAsxK,OACA,QAAA1mK,EAAA,EAAAyiK,EAAAhG,EAAArnK,GAAAmE,IAAAkjK,EAAArnK,GAAA+D,MAAA,EAAiE6G,EAAAyiK,EAAQziK,IACzEy8J,EAAArnK,GAAAsxK,IAAA1mK,GAAAu3P,EAAAj/O,EAAAhY,EAAAo3P,GACAA,GAAA,GAGA,OAAAj7F,EACK,QAAAs7B,EAAA,CACLu/D,EAAAh/O,EAAAnf,EAAAgiB,EAAA,GACA,IAAAw8O,EAAAL,EAAAh/O,EAAAnf,EAAAgiB,EAAA,IAGA,IAFA7a,EAAAnH,EAAAgiB,EAAA,GACAshJ,KACArnK,EAAA,EAAiBA,EAAAuiQ,EAAYviQ,IAC7BqnK,EAAAxrJ,MACA9X,MAAAm+P,EAAAh/O,EAAAhY,GACA/G,IAAA+9P,EAAAh/O,EAAAhY,EAAA,GACAm3P,QAAAH,EAAAh/O,EAAAhY,EAAA,GAAAg3P,EAAAh/O,EAAAhY,KAEAA,GAAA,GAEA,OAAAm8J,EAEA,UAAA1jK,EAAAyD,YAAA,qBAAAu7L,GAEA,SAAA6/D,EAAAt/O,EAAAnf,EAAAI,EAAA24L,GACA,IAEAC,EADA,IAAA8wD,EAAA/xD,UAAA,IAAAvhL,EAAArX,OAAAggB,EAAAnf,EAAAI,EAAAJ,MAAA+4L,GACAxsL,QACA,OACA+hO,OAAAt1C,EAAAoC,YAAAqE,QACAwD,MAAAjK,EAAApoB,QAAA0qB,aAAAtC,EAAApoB,QAAA0qB,YAAAC,YAAAvC,EAAApoB,QAAA0qB,YAAAC,WAAAkE,QACAi/D,OAAA1lE,EAAAO,iBAAAP,EAAAO,gBAAAkG,QACAk/D,aAAA3lE,EAAAe,UACAgB,SAAA/B,EAAA+B,SACAF,QAAA7B,EAAA6B,SAyBA,SAAA+jE,EAAAt7F,EAAAunC,GAKA,IAJA,IAAA9mM,EAAA8mM,EAAAl7L,WAAA,GACAwvL,EAAA,EACAjjG,EAAA,EACApsF,EAAAwzJ,EAAAlnK,OAAA,EACA8/F,EAAApsF,GAAA,CACA,IAAAtJ,EAAA01F,EAAApsF,EAAA,KACA/L,EAAAu/J,EAAA98J,GAAAxG,MACA8P,EAAAtJ,EAAA,EAEA01F,EAAA11F,EAMA,OAHA88J,EAAApnE,GAAAl8F,OAAA+D,MAAAu/J,EAAApnE,GAAA97F,MACA++L,EAAA77B,EAAApnE,GAAAoiK,SAAAh7F,EAAApnE,GAAAqxE,IAAAjK,EAAApnE,GAAAqxE,IAAAxpK,EAAAu/J,EAAApnE,GAAAl8F,OAAA+D,GAAA,QAGA64O,SAAA74O,EACA+qP,QAAA3vD,GA2gBA,SAAA0/D,EAAAzkE,GACA9/L,KAAAwkQ,eAAArlQ,OAAAe,OAAA,MACAF,KAAAykQ,0BAAAtlQ,OAAAe,OAAA,MACAF,KAAA8/L,aAmDA,SAAA4kE,EAAA1wB,EAAAoO,EAAAtiD,GACAA,MAAA,uBACAykE,EAAAzgQ,KAAA9D,KAAA8/L,GACA9/L,KAAAg0O,SACAh0O,KAAAoiP,OAOA,SAAAuiB,EAAAC,EAAAxiB,EAAAtiD,EAAA+kE,GACA/kE,MAAA,mBACAykE,EAAAzgQ,KAAA9D,KAAA8/L,GACA9/L,KAAAg0O,OAAA4wB,EAAA5wB,OACAh0O,KAAAokQ,OAAAQ,EAAAR,WACApkQ,KAAA2oM,MAAAi8D,EAAAj8D,UACA3oM,KAAAoiP,OACApiP,KAAA6kQ,mBAAA12B,EAAAviN,oBACA5rB,KAAA8kQ,WAAA9kQ,KAAAokQ,OAAAtiQ,OAAA,SAAA9B,KAAAokQ,OAAAtiQ,OAAA,iBACA9B,KAAA+kQ,UAAA/kQ,KAAA2oM,MAAA7mM,OAAA,SAAA9B,KAAA2oM,MAAA7mM,OAAA,iBACA9B,KAAAqkQ,aAAAO,EAAAP,aACArkQ,KAAAygM,SAAAmkE,EAAAnkE,SACAzgM,KAAAugM,QAAAqkE,EAAArkE,QAOA,OA/EAgkE,EAAA3kQ,WACAg1O,UAAA,SAAArkC,GACA,IAAA6xC,EAAAkiB,EAAAtkQ,KAAAoiP,KAAA7xC,GACA3sM,EAAA5D,KAAAwkQ,eAAApiB,EAAAoS,SAQA,OAPA5wP,IACAA,EAAA5D,KAAAglQ,aAAAhlQ,KAAAg0O,OAAAoO,EAAAoS,SAAApS,EAAAoS,SACAx0P,KAAAwkQ,eAAApiB,EAAAoS,SAAA5wP,YAEA5D,KAAAykQ,0BAAAriB,EAAAE,YACAtiP,KAAAykQ,0BAAAriB,EAAAE,UAAAF,EAAAoS,SAEA5wP,GAEAohQ,aAAA,SAAAv7P,EAAA+qP,GACA,IAAA/qP,GAAA,IAAAA,EAAA3H,QAAA,KAAA2H,EAAA,GACA,MArBA,GAuBA,IAAAq2L,EAAA9/L,KAAA8/L,WACA,GAAA9/L,KAAAqkQ,aAAA,CACA,IAAAnhE,EAAAljM,KAAAygM,SAAA0C,WAAAqxD,GACAtxD,GAAA,GAAAA,EAAAljM,KAAAugM,QAAAz+L,OAEAg+L,EADA9/L,KAAAugM,QAAA2C,GACAtD,UAAA,eAAAt6L,EAAAi3O,wBAEAj3O,EAAA2O,MAAA,qCAGA,IAAAgxP,KAYA,OAXAA,EAAAznP,MAAiBnd,IAAA,SACjB4kQ,EAAAznP,MACAnd,IAAA,YACA8oB,KAAA22K,EAAAj+L,UAEAojQ,EAAAznP,MACAnd,IAAA,QACA8oB,MAAA,kBAEAnpB,KAAAklQ,iBAAAz7P,EAAAw7P,EAAAzQ,GACAyQ,EAAAznP,MAAiBnd,IAAA,YACjB4kQ,GAEAC,iBAAA,cACA5/P,EAAAgK,aAAA,4CAEAolO,aAAA,SAAAnkC,GACA,IAAA6xC,EAAAkiB,EAAAtkQ,KAAAoiP,KAAA7xC,GACA,gBAAAvwM,KAAAwkQ,eAAApiB,EAAAoS,mBAAAx0P,KAAAykQ,0BAAAriB,EAAAE,YASAh9O,EAAA8C,KAAAqvK,QAAAitF,EAAAH,GACAW,iBAAA,SAAAz7P,EAAAw7P,IArkBA,SAAAE,EAAA17P,EAAAw7P,EAAAxxB,GACA,SAAAkG,EAAAl/N,EAAA5E,GACAovP,EAAAznP,MACAnd,IAAA,SACA8oB,MAAA1O,EAAA5E,KAGA,SAAA+jO,EAAAn/N,EAAA5E,GACAovP,EAAAznP,MACAnd,IAAA,SACA8oB,MAAA1O,EAAA5E,KAGA,SAAAuvP,EAAAC,EAAAC,EAAA7qP,EAAA5E,GACAovP,EAAAznP,MACAnd,IAAA,mBACA8oB,MAAAk8O,EAAAC,EAAA7qP,EAAA5E,KAGA,IAEAk3J,EAFAprK,EAAA,EACA4jQ,GAAA97P,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YAEA8Y,EAAA,EACA5E,EAAA,EAEA,GADAlU,GAAA,GACA4jQ,EAAA,EACA,GACAx4F,EAAAtjK,EAAA9H,IAAA,EAAA8H,EAAA9H,EAAA,GACA,IAEAm1M,EAAAC,EAFA9Q,EAAAx8L,EAAA9H,EAAA,MAAA8H,EAAA9H,EAAA,GACAA,GAAA,EAEA,EAAAorK,GACA+pC,GAAArtM,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YACAo1M,GAAAttM,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,YACAA,GAAA,IAEAm1M,EAAArtM,EAAA9H,KACAo1M,EAAAttM,EAAA9H,MAEA,EAAAorK,GACAtyJ,EAAAq8L,EACAjhM,EAAAkhM,IAEAt8L,EAAA,EACA5E,EAAA,GAEA,IAAAmrN,EAAA,EACAC,EAAA,EACAukC,EAAA,EACAC,EAAA,EACA,EAAA14F,GACAi0D,EAAAC,GAAAx3N,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,mBACAA,GAAA,GACS,GAAAorK,GACTi0D,GAAAv3N,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,mBACAs/N,GAAAx3N,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACAA,GAAA,GACS,IAAAorK,IACTi0D,GAAAv3N,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,mBACA6jQ,GAAA/7P,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACA8jQ,GAAAh8P,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACAs/N,GAAAx3N,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACAA,GAAA,GAEA,IAAA+jQ,EAAAjyB,EAAAO,OAAA/tC,GACAy/D,IACAT,EAAAznP,MAAqBnd,IAAA,SACrB4kQ,EAAAznP,MACAnd,IAAA,YACA8oB,MAAA63M,EAAAwkC,EAAAC,EAAAxkC,EAAAxmN,EAAA5E,KAEAsvP,EAAAO,EAAAT,EAAAxxB,GACAwxB,EAAAznP,MAAqBnd,IAAA,mBAEd,GAAA0sK,OACF,CACL,IACAxgK,EAAAyiK,EADA22F,KAEA,IAAAp5P,EAAA,EAAiBA,EAAAg5P,EAAsBh5P,IACvCo5P,EAAAnoP,KAAA/T,EAAA9H,IAAA,EAAA8H,EAAA9H,EAAA,IACAA,GAAA,EAGAA,GAAA,GADA8H,EAAA9H,IAAA,EAAA8H,EAAA9H,EAAA,IAIA,IAFA,IAAAikQ,EAAAD,IAAA7jQ,OAAA,KACA+jQ,KACAA,EAAA/jQ,OAAA8jQ,GAAA,CAEA,IAAAjM,EAAA,EAIA,IAHA,GAFA5sF,EAAAtjK,EAAA9H,QAGAg4P,GAAAlwP,EAAA9H,MAEAg4P,KAAA,GACAkM,EAAAroP,MAAuBuvJ,UAGvB,IAAAxgK,EAAA,EAAiBA,EAAAq5P,EAAoBr5P,IAAA,CACrC,UAAAs5P,EAAAt5P,GAAAwgK,OACA,OACAtyJ,IAAAhR,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YACAA,GAAA,EACA,MACA,OACA8Y,GAAAhR,EAAA9H,KACA,MACA,QACA8Y,GAAAhR,EAAA9H,KAGAkkQ,EAAAt5P,GAAAkO,IAEA,IAAAlO,EAAA,EAAiBA,EAAAq5P,EAAoBr5P,IAAA,CACrC,UAAAs5P,EAAAt5P,GAAAwgK,OACA,OACAl3J,IAAApM,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YACAA,GAAA,EACA,MACA,OACAkU,GAAApM,EAAA9H,KACA,MACA,QACAkU,GAAApM,EAAA9H,KAGAkkQ,EAAAt5P,GAAAsJ,IAEA,IAAAiwP,EAAA,EACA,IAAAnkQ,EAAA,EAAiBA,EAAA4jQ,EAAsB5jQ,IAAA,CACvC,IAAAokQ,EAAAJ,EAAAhkQ,GACAqkQ,EAAAH,EAAAhkQ,MAAAikQ,EAAAC,EAAA,GACA,KAAAC,EAAA,GAAAj5F,MACAi5F,EAAAxoP,KAAAwoP,EAAA,SACS,KAAAA,IAAAlkQ,OAAA,GAAAirK,MACTi5F,EAAAhtD,QAAAgtD,IAAAlkQ,OAAA,QACS,CACT,IAAA+K,GACAkgK,MAAA,EACAtyJ,GAAAurP,EAAA,GAAAvrP,EAAAurP,IAAAlkQ,OAAA,GAAA2Y,GAAA,EACA5E,GAAAmwP,EAAA,GAAAnwP,EAAAmwP,IAAAlkQ,OAAA,GAAA+T,GAAA,GAEAmwP,EAAAhtD,QAAAnsM,GACAm5P,EAAAxoP,KAAA3Q,GAGA,IADA8sO,EAAAqsB,EAAA,GAAAvrP,EAAAurP,EAAA,GAAAnwP,GACAtJ,EAAA,EAAAyiK,EAAAg3F,EAAAlkQ,OAAwCyK,EAAAyiK,EAAQziK,IAChD,EAAAy5P,EAAAz5P,GAAAwgK,MACA6sE,EAAAosB,EAAAz5P,GAAAkO,EAAAurP,EAAAz5P,GAAAsJ,GACW,EAAAmwP,EAAAz5P,EAAA,GAAAwgK,OACXq4F,EAAAY,EAAAz5P,GAAAkO,EAAAurP,EAAAz5P,GAAAsJ,EAAAmwP,EAAAz5P,EAAA,GAAAkO,EAAAurP,EAAAz5P,EAAA,GAAAsJ,GACAtJ,KAEA64P,EAAAY,EAAAz5P,GAAAkO,EAAAurP,EAAAz5P,GAAAsJ,GAAAmwP,EAAAz5P,GAAAkO,EAAAurP,EAAAz5P,EAAA,GAAAkO,GAAA,GAAAurP,EAAAz5P,GAAAsJ,EAAAmwP,EAAAz5P,EAAA,GAAAsJ,GAAA,GAGAiwP,EAAAC,EAAA,IA1JA,CAskBAt8P,EAAAw7P,EAAAjlQ,SAiBAsF,EAAA8C,KAAAqvK,QAAAktF,EAAAJ,GACAW,iBAAA,SAAAz7P,EAAAw7P,EAAAzQ,IA1bA,SAAAyR,EAAAx8P,EAAAw7P,EAAAxxB,EAAA+gB,GACA,IAAAl2D,KACA7jL,EAAA,EACA5E,EAAA,EACAqwP,EAAA,EACA,SAAAvsB,EAAAl/N,EAAA5E,GACAovP,EAAAznP,MACAnd,IAAA,SACA8oB,MAAA1O,EAAA5E,KAGA,SAAA+jO,EAAAn/N,EAAA5E,GACAovP,EAAAznP,MACAnd,IAAA,SACA8oB,MAAA1O,EAAA5E,KAGA,SAAAswP,EAAAroF,EAAAK,EAAA37J,EAAA8qK,EAAA7yK,EAAA5E,GACAovP,EAAAznP,MACAnd,IAAA,gBACA8oB,MAAA20J,EAAAK,EAAA37J,EAAA8qK,EAAA7yK,EAAA5E,MAGA,SAAA5D,EAAAxI,GAEA,IADA,IAAA9H,EAAA,EACAA,EAAA8H,EAAA3H,QAAA,CACA,IAEAujQ,EAAAe,EAAAd,EAAAe,EAAAloF,EAAAmP,EAAA3mL,EAAA2/P,EAFAC,KACAtiQ,EAAAwF,EAAA9H,KAEA,OAAAsC,GACA,OAIA,OACAiiQ,GAAA5nE,EAAAx8L,QAAA,EACAykQ,KACA,MACA,OACA1wP,GAAAyoL,EAAA5tB,MACAipE,EAAAl/N,EAAA5E,GACA0wP,KACA,MACA,OACA,KAAAjoE,EAAAx8L,OAAA,GACA2Y,GAAA6jL,EAAAt2L,QACA6N,GAAAyoL,EAAAt2L,QACA4xO,EAAAn/N,EAAA5E,GAEA,MACA,OACA,KAAAyoL,EAAAx8L,OAAA,IAEA83O,EADAn/N,GAAA6jL,EAAAt2L,QACA6N,GACA,IAAAyoL,EAAAx8L,SAGA+T,GAAAyoL,EAAAt2L,QACA4xO,EAAAn/N,EAAA5E,GAEA,MACA,OACA,KAAAyoL,EAAAx8L,OAAA,IACA+T,GAAAyoL,EAAAt2L,QACA4xO,EAAAn/N,EAAA5E,GACA,IAAAyoL,EAAAx8L,SAIA83O,EADAn/N,GAAA6jL,EAAAt2L,QACA6N,GAEA,MACA,OACA,KAAAyoL,EAAAx8L,OAAA,GACAujQ,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GAEA,MACA,QAGA,GAFAlP,EAAA23L,EAAA5tB,MACA41F,EAAA,KACA7yB,EAAA4wB,aAAA,CACA,IAAAnhE,EAAAuwC,EAAAhzC,SAAA0C,WAAAqxD,GACA,GAAAtxD,GAAA,GAAAA,EAAAuwC,EAAAlzC,QAAAz+L,OAAA,CACA,IAAAw+L,EAAAmzC,EAAAlzC,QAAA2C,GACAyF,SAIA,GAHArI,EAAAU,aAAAV,EAAAU,YAAAC,aACA0H,EAAArI,EAAAU,YAAAC,WAAAkE,SAEAwD,EAAA,CACA,IAAA69D,EAAA79D,EAAA7mM,OAEAwkQ,EAAA39D,EADAhiM,GAAA6/P,EAAA,SAAAA,EAAA,0BAIAlhQ,EAAA2O,MAAA,0CAGAqyP,EAAA7yB,EAAA9qC,MAAAhiM,EAAA8sO,EAAAsxB,WAEAuB,GACAr0P,EAAAq0P,GAEA,MACA,QACA,OACA,QAEA,OADAriQ,EAAAwF,EAAA9H,MAEA,QAEAykQ,GADAf,EAAA5qP,EAAA6jL,EAAAt2L,SACAs2L,EAAAt2L,QACAm2K,EAAAtoK,EAAAyoL,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACAm+P,EAAAd,EAAAxvP,EAAAuwP,EAAAjoF,EAAA1jK,EAAA0jK,GAEAioF,GADAf,EAAA5qP,EAAA6jL,EAAAt2L,SACAs2L,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACAm+P,EAAAd,EAAAlnF,EAAAioF,EAAAvwP,EAAA4E,EAAA5E,GACA,MACA,QACAwvP,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GACAwvP,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GACAyoL,EAAA5tB,MACA,MACA,QAMAy1F,EALAd,EAAA5qP,EAAA6jL,EAAAt2L,QACAm2K,EAAAtoK,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAslL,EAAAnP,EAAAmgB,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACAslL,GAKA64E,EAJAd,EAAA5qP,EAAA6jL,EAAAt2L,QAIAslL,EAHA84E,EAAAf,EAAA/mE,EAAAt2L,QACAslL,EAAAgR,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,GACA,MACA,QACA,IAAA8nK,EAAAljK,EACAujK,EAAAnoK,EACAwvP,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GACAwvP,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EACAvwP,EAAAwwP,EACAn3P,KAAAinM,IAAA17L,EAAAkjK,GAAAzuK,KAAAinM,IAAAtgM,EAAAmoK,GACAvjK,GAAA6jL,EAAAt2L,QAEA6N,GAAAyoL,EAAAt2L,QAEAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GACA,MACA,QACA,UAAAvQ,EAAAyD,YAAA,wBAAA9E,GAEA,MACA,QACA,GAAAq6L,EAAAx8L,QAAA,GACA,IAAA2kQ,EAAAnoE,EAAA5tB,MACAg2F,EAAApoE,EAAA5tB,MACA76J,EAAAyoL,EAAA5tB,MACAj2J,EAAA6jL,EAAA5tB,MACAu0F,EAAAznP,MAAyBnd,IAAA,SACzB4kQ,EAAAznP,MACAnd,IAAA,YACA8oB,MAAA1O,EAAA5E,KAEA,IAAAusO,EAAAkiB,EAAA7wB,EAAA2O,KAAAzgO,OAAAC,aAAA6xN,EAAAoxB,aAAAjnE,EAAAriL,iBAAAkrP,MACAR,EAAAxyB,EAAAO,OAAAoO,EAAAoS,SAAAyQ,EAAAxxB,EAAA2O,EAAAoS,SACAyQ,EAAAznP,MAAyBnd,IAAA,YACzB+hP,EAAAkiB,EAAA7wB,EAAA2O,KAAAzgO,OAAAC,aAAA6xN,EAAAoxB,aAAAjnE,EAAAriL,iBAAAmrP,MACAT,EAAAxyB,EAAAO,OAAAoO,EAAAoS,SAAAyQ,EAAAxxB,EAAA2O,EAAAoS,SAEA,OACA,QACA0R,GAAA5nE,EAAAx8L,QAAA,EACAykQ,KACA,MACA,QAKA,QAEA5kQ,IADAukQ,GAAA5nE,EAAAx8L,QAAA,GACA,KACAykQ,KACA,MACA,QACA1wP,GAAAyoL,EAAA5tB,MAEAipE,EADAl/N,GAAA6jL,EAAA5tB,MACA76J,GACA0wP,KACA,MACA,QAEA5sB,EADAl/N,GAAA6jL,EAAA5tB,MACA76J,GACA0wP,KACA,MACA,QACAL,GAAA5nE,EAAAx8L,QAAA,EACAykQ,KACA,MACA,QACA,KAAAjoE,EAAAx8L,OAAA,GACAujQ,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GAEA4E,GAAA6jL,EAAAt2L,QACA6N,GAAAyoL,EAAAt2L,QACA4xO,EAAAn/N,EAAA5E,GACA,MACA,QACA,KAAAyoL,EAAAx8L,OAAA,GACA2Y,GAAA6jL,EAAAt2L,QACA6N,GAAAyoL,EAAAt2L,QACA4xO,EAAAn/N,EAAA5E,GAEAwvP,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GACA,MACA,QAIA,IAHAyoL,EAAAx8L,OAAA,IACA2Y,GAAA6jL,EAAAt2L,SAEAs2L,EAAAx8L,OAAA,GACAujQ,EAAA5qP,EACA6qP,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EACAvwP,EAAAwwP,EAAA/nE,EAAAt2L,QACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GAEA,MACA,QAIA,IAHAyoL,EAAAx8L,OAAA,IACA+T,GAAAyoL,EAAAt2L,SAEAs2L,EAAAx8L,OAAA,GAOAqkQ,EANAd,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EACAuwP,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,GAGA,MACA,QACA/nE,EAAA9gL,MAAA/T,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,aACAA,GAAA,EACA,MACA,QACAgF,EAAA23L,EAAA5tB,MAAA+iE,EAAAqxB,YACAwB,EAAA7yB,EAAA2wB,OAAAz9P,KAEAsL,EAAAq0P,GAEA,MACA,QACA,KAAAhoE,EAAAx8L,OAAA,IACAujQ,EAAA5qP,EACA6qP,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,GAAA,IAAA/nE,EAAAx8L,OAAAw8L,EAAAt2L,QAAA,GACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GACA,IAAAyoL,EAAAx8L,SAGAujQ,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EACAuwP,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QAEAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EADA5rP,EAAA2rP,GAAA,IAAA9nE,EAAAx8L,OAAAw8L,EAAAt2L,QAAA,GACA6N,GAEA,MACA,QACA,KAAAyoL,EAAAx8L,OAAA,IACAujQ,EAAA5qP,EAAA6jL,EAAAt2L,QACAs9P,EAAAzvP,EACAuwP,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACA6N,EAAAwwP,EAAA/nE,EAAAt2L,QAEAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EADA5rP,EAAA2rP,GAAA,IAAA9nE,EAAAx8L,OAAAw8L,EAAAt2L,QAAA,GACA6N,GACA,IAAAyoL,EAAAx8L,SAGAujQ,EAAA5qP,EACA6qP,EAAAzvP,EAAAyoL,EAAAt2L,QACAo+P,EAAAf,EAAA/mE,EAAAt2L,QACAq+P,EAAAf,EAAAhnE,EAAAt2L,QACAyS,EAAA2rP,EAAA9nE,EAAAt2L,QACA6N,EAAAwwP,GAAA,IAAA/nE,EAAAx8L,OAAAw8L,EAAAt2L,QAAA,GACAm+P,EAAAd,EAAAC,EAAAc,EAAAC,EAAA5rP,EAAA5E,GAEA,MACA,QACA,GAAA5R,EAAA,GACA,UAAAqB,EAAAyD,YAAA,qBAAA9E,GAEAA,EAAA,IACAq6L,EAAA9gL,KAAAvZ,EAAA,KACaA,EAAA,IACbq6L,EAAA9gL,KAAA,KAAAvZ,EAAA,KAAAwF,EAAA9H,KAAA,KACasC,EAAA,IACbq6L,EAAA9gL,KAAA,MAAAvZ,EAAA,KAAAwF,EAAA9H,KAAA,MAEA28L,EAAA9gL,MAAA/T,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,MAAA8H,EAAA9H,EAAA,WACAA,GAAA,GAIA4kQ,IACAjoE,EAAAx8L,OAAA,IA5UA,CAgVA2H,GAvWA,CA2bAA,EAAAw7P,EAAAjlQ,KAAAw0P,OAIAt0P,OAAA,SAAAuzO,EAAAh1C,GAIA,IAHA,IACA2jD,EAAA+W,EAAAiD,EAAA19D,EAAAq+D,EAAAlH,EADAhxO,EAAA,IAAAjf,WAAA6tO,EAAA5uN,MAEAstO,EAAA2R,EAAAj/O,EAAA,GACAljB,EAAA,EAAAkL,EAAA,GAA6BlL,EAAAwwP,EAAexwP,IAAAkL,GAAA,IAC5C,IAAA4lP,KAAAntP,EAAAymK,eAAAlnJ,EAAAve,SAAAuG,IAAA,IACA6a,EAAAm8O,EAAAh/O,EAAAhY,EAAA,GACA/K,EAAA+hQ,EAAAh/O,EAAAhY,EAAA,IACA,OAAA4lP,GACA,WACArQ,EAAA2hB,EAAAl/O,EAAA6C,GACA,MACA,WACAyxO,EAAAt0O,EAAAve,SAAAohB,IAAA5lB,GACA,MACA,WACAs6P,EAAAv3O,EAAAve,SAAAohB,IAAA5lB,GACA,MACA,WACA+zP,EAAAiO,EAAAj/O,EAAA6C,EAAA,IACAq1O,EAAA+G,EAAAj/O,EAAA6C,EAAA,IACA,MACA,WACAg3K,EAAAylE,EAAAt/O,EAAA6C,IAAA5lB,EAAA28L,IAIA,GAAA06D,EAAA,CACA,IAAAr5D,EAAA+1D,GAAA,EAAAA,EAAA,MAAAA,EAAA,KAAApiB,EAAA3zC,WACA,WAAA4kE,EArqBA,SAAAvL,EAAAiD,EAAAa,GACA,IAAAE,EAAAC,EAoqBAL,GAlqBAI,EAAA,EACAC,EAAA,SAAAv4O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,MAGAy1O,EAAA,EACAC,EAAA,SAAAv4O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,QAKA,IAFA,IAAAssN,KACAxZ,EAAA4iC,EAAAhB,EAAA,GACA7vP,EAAA4wP,EAA0B5wP,EAAA6vP,EAAAt6P,OAAiByK,GAAA4wP,EAAA,CAC3C,IAAA7+B,EAAA8+B,EAAAhB,EAAA7vP,GACAynO,EAAAx2N,KAAA27O,EAAA7yP,SAAAk0N,EAAA8D,IACA9D,EAAA8D,EAEA,OAAA0V,EApBA,CAqqBAmlB,EAAAiD,GAAAha,EAAAtiD,GAEA,WAAA6kE,EAAAjmE,EAAA0jD,EAAA3O,EAAA3zC,WAAA2zC,EAAAoxB,gBA3uBA,GA+uBAxlQ,EAAAi4P,wDC9vBAn4P,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAkjQ,mBAEA,IAAAj9P,EAAYC,EAAQ,KAEpBq4L,EAAiBr4L,EAAQ,KAEzB2W,EAAc3W,EAAQ,KAGtBohQ,EAAA,WACA,IAAAC,GAGA,GAHAA,GAIA,GAJAA,GAKA,GALAA,GAMA,GANAA,GAOA,GAPAA,GASA,OATAA,GAWA,IAXAA,GAYA,IAZAA,GAaA,IAbAA,GAcA,IAdAA,GAeA,IAEA,SAAAD,IACA3mQ,KAAAuQ,MAAA,EACAvQ,KAAA6mQ,IAAA,EACA7mQ,KAAA8mQ,WACA9mQ,KAAA0zL,UACA1zL,KAAAs+L,SA0NA,OAxNAqoE,EAAA/mQ,WACAuzP,QAAA,SAAA4T,EAAAp+D,EAAAlK,GAIA,IAHA,IAEAuoE,EAAAC,EAAArkE,EAFA7yL,EAAAg3P,EAAAjlQ,OACA88M,KAEAj9M,EAAA,EAAqBA,EAAAoO,EAAWpO,IAAA,CAChC,IAAArC,EAAAynQ,EAAAplQ,GACA,GAAArC,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAAynQ,IAAAplQ,IAEArC,GACA,OAOA,OAEAU,KAAAs+L,SACA,MAIA,OACA,GAAAt+L,KAAA8mQ,QAAA,CACA,GAAA9mQ,KAAAs+L,MAAAx8L,OAAA,GACA88M,KACA,MAEA,IAAAsoD,EAAAlnQ,KAAAs+L,MAAA5tB,MACA1wK,KAAAs+L,MAAA9gL,KAAA,EAAA0pP,GACA,MAEAtoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,OACAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,OACAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,OACAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,OACAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,OACA5mQ,KAAAs+L,SACA,MACA,QACA,GAAAt+L,KAAAs+L,MAAAx8L,OAAA,GACA88M,KACA,MAGA,IAAAjW,EADA/F,EAAA5iM,KAAAs+L,MAAA5tB,OACA,CACAkuC,KACA,MAEAA,EAAA5+M,KAAAmzP,QAAAxqD,EAAA/F,GAAA+F,EAAAlK,GACA,MACA,QACA,OAAAmgB,EACA,QACA,GAAA5+M,KAAAs+L,MAAAx8L,OAAA,GACA88M,KACA,MAEAooD,EAAAhnQ,KAAAs+L,MAAA5tB,MACAu2F,EAAAjnQ,KAAAs+L,MAAA5tB,MACA1wK,KAAA6mQ,IAAAI,EACAjnQ,KAAAuQ,MAAAy2P,EACAhnQ,KAAAs+L,MAAA9gL,KAAAwpP,EAAAC,GACAroD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,QACA5mQ,KAAA0zL,OAAAl2K,KAAAopP,EAAA,IACA,MACA,QACA,GAAA5mQ,KAAA8mQ,QACA,MAEAloD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,QACA,GAAA5mQ,KAAA8mQ,QAAA,CACA9mQ,KAAAs+L,MAAA9gL,KAAA,GACA,MAEAohM,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,QACAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,QACAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,UAGA,UAOA,UAEA5mQ,KAAAs+L,SACA,MAIA,UACAG,GACAz+L,KAAA0iM,KAAA1iM,KAAAs+L,MAAA32K,QAAA,KACAi3L,EAAA5+M,KAAAmnQ,eAAA,EAAAP,IAEAhoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GAEA,MACA,UACA,GAAA5mQ,KAAAs+L,MAAAx8L,OAAA,GACA88M,KACA,MAEA5+M,KAAAs+L,MAAA5tB,MACAs2F,EAAAhnQ,KAAAs+L,MAAA5tB,MACA,IAAA02F,EAAApnQ,KAAAs+L,MAAA5tB,MACAu2F,EAAAjnQ,KAAAs+L,MAAA5tB,MACA1wK,KAAA6mQ,IAAAI,EACAjnQ,KAAAuQ,MAAAy2P,EACAhnQ,KAAAs+L,MAAA9gL,KAAAwpP,EAAAC,EAAAG,GACAxoD,EAAA5+M,KAAAmnQ,eAAA,EAAAP,GACA,MACA,UACA,GAAA5mQ,KAAAs+L,MAAAx8L,OAAA,GACA88M,KACA,MAEA,IAAApH,EAAAx3M,KAAAs+L,MAAA5tB,MACA6mC,EAAAv3M,KAAAs+L,MAAA5tB,MACA1wK,KAAAs+L,MAAA9gL,KAAA+5L,EAAAC,GACA,MACA,UACA,GAAAx3M,KAAAs+L,MAAAx8L,OAAA,GACA88M,KACA,MAEAhc,EAAA5iM,KAAAs+L,MAAA5tB,MACA,IAAAm2E,EAAA7mP,KAAAs+L,MAAA5tB,MACA,OAAAkyB,GAAA,IAAAikD,EAAA,CACA,IAAAwgB,EAAArnQ,KAAAs+L,MAAA32K,OAAA3nB,KAAAs+L,MAAAx8L,OAAA,OACA9B,KAAAs+L,MAAA9gL,KAAA6pP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAzoD,EAAA5+M,KAAAmnQ,eAAA,GAAAP,MACA5mQ,KAAA8mQ,WACA9mQ,KAAAs+L,MAAA9gL,KAAA6pP,EAAA,IAAAA,EAAA,UACe,IAAAzkE,GAAA,IAAAikD,IACf7mP,KAAA8mQ,YAEA,MACA,UACA,MACA,UACA9mQ,KAAAs+L,SACA,MACA,WACAh5L,EAAA2O,MAAA,yCAAA3U,EAAA,KAGA,GAAAs/M,EACA,WAGSt/M,GAAA,IACTA,GAAA,IAEAA,EADSA,GAAA,IACT,KAAAA,EAAA,KAAAynQ,IAAAplQ,GAAA,IACSrC,GAAA,KACT,KAAAA,EAAA,KAAAynQ,IAAAplQ,GAAA,KAEA,IAAAolQ,IAAAplQ,KAAA,QAAAolQ,IAAAplQ,KAAA,QAAAolQ,IAAAplQ,KAAA,OAAAolQ,IAAAplQ,KAAA,EAEA3B,KAAAs+L,MAAA9gL,KAAAle,GAEA,OAAAs/M,GAEAuoD,eAAA,SAAAG,EAAAC,EAAAC,GACA,IAAAC,EAAAznQ,KAAAs+L,MAAAx8L,OACA,GAAAwlQ,EAAAG,EACA,SAGA,IADA,IAAA/hQ,EAAA+hQ,EAAAH,EACA3lQ,EAAA+D,EAAyB/D,EAAA8lQ,EAAiB9lQ,IAAA,CAC1C,IAAArC,EAAAU,KAAAs+L,MAAA38L,GACA+b,OAAAC,UAAAre,GACAU,KAAA0zL,OAAAl2K,KAAA,GAAAle,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACAU,KAAA0zL,OAAAl2K,KAAA,IAAAle,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,OANAU,KAAA0zL,OAAAl2K,KAAAo7L,MAAA54M,KAAA0zL,OAAA6zE,GACAC,EACAxnQ,KAAAs+L,MAAA32K,OAAAjiB,EAAA4hQ,GAEAtnQ,KAAAs+L,MAAAx8L,OAAA,OAKA6kQ,EAjPA,GAmPApE,EAAA,WACA,IAAAmF,EAAA,MAEA,SAAAC,EAAAl+P,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,SAAAwD,EAAA4X,EAAA3iB,EAAA0lQ,GACA,GAAAA,GAAA/iP,EAAA/iB,OACA,WAAA8D,WAAA,GAEA,IAGAjE,EACA4K,EAJAiJ,EAAA,EAAAtT,EAKA,IAAAP,EAAA,EAAeA,EAAAimQ,EAAmBjmQ,IAClC6T,EALA,OAKAqP,EAAAljB,GAAA6T,GAJA,MAIA,MAEA,IAAAzF,EAAA8U,EAAA/iB,OAAA8lQ,EACAC,EAAA,IAAAjiQ,WAAAmK,GACA,IAAApO,EAAAimQ,EAAAr7P,EAAA,EAAkCA,EAAAwD,EAAWpO,IAAA4K,IAAA,CAC7C,IAAAjN,EAAAulB,EAAAljB,GACAkmQ,EAAAt7P,GAAAjN,EAAAkW,GAAA,EACAA,EAZA,OAYAlW,EAAAkW,GAXA,MAWA,MAEA,OAAAqyP,EA4BA,SAAAC,EAAA57P,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,SAAAq2P,EAAAp6P,EAAA4/P,EAAAtpE,GACA,GAAAspE,EAAA,CACA,IAAAljP,EAAA1c,EAAA1D,WACAujQ,IAAAL,EAAA9iP,EAAA,KAAA8iP,EAAA9iP,EAAA,KAAA8iP,EAAA9iP,EAAA,KAAA8iP,EAAA9iP,EAAA,KACA1c,EAAA,IAAA+T,EAAArX,OAAAmjQ,EAAA/6P,EAAA4X,EAAA6iP,EAAA,GAjCA,SAAA7iP,EAAA3iB,EAAA0lQ,GACA,IAMAjmQ,EAAA4K,EANAiJ,EAAA,EAAAtT,EAGA6N,EAAA8U,EAAA/iB,OAEA+lQ,EAAA,IAAAjiQ,WADAmK,IAAA,GAGA,IAAApO,EAAA,EAAA4K,EAAA,EAAsB5K,EAAAoO,EAAWpO,IAAA,CACjC,IAAAsmQ,EAAApjP,EAAAljB,GACA,GAAAgmQ,EAAAM,GAAA,CAIA,IAAAC,EACA,IAFAvmQ,IAEAA,EAAAoO,IAAA43P,EAAAO,EAAArjP,EAAAljB,KACAA,IAEA,GAAAA,EAAAoO,EAAA,CACA,IAAAzQ,EAAAs3K,SAAAj1J,OAAAC,aAAAqmP,EAAAC,GAAA,IACAL,EAAAt7P,KAAAjN,EAAAkW,GAAA,EACAA,EAnBA,OAmBAlW,EAAAkW,GAlBA,MAkBA,QAGA,OAAA/T,MAAA7B,UAAAiC,MAAAiC,KAAA+jQ,EASA,EATAt7P,GAxBA,CAiCAsY,EAAA6iP,IAEA1nQ,KAAAy+L,wBACAz+L,KAAAmI,SACAnI,KAAAsf,WAuOA,OArOAijP,EAAA3iQ,WACAuoQ,gBAAA,WACAnoQ,KAAAooQ,WAEA,IADA,IAAA7qP,OACA,CACA,IAAAy3J,EAAAh1K,KAAAooQ,WACA,UAAApzF,GAAA,MAAAA,GAAA,MAAAA,EACA,MAEAz3J,EAAAC,KAAAkkL,WAAA1sB,GAAA,IAEA,OAAAz3J,GAEA6vO,WAAA,WACA,IAAAp4E,EAAAh1K,KAAAooQ,WACA,OAAA1mE,WAAA1sB,GAAA,IAEAqzF,QAAA,WACA,IAAArzF,EAAAh1K,KAAAooQ,WACA,SAAAxxF,SAAA5B,GAAA,OAEAszF,YAAA,WAEA,eADAtoQ,KAAAooQ,WACA,KAEA9oP,SAAA,WACA,OAAAtf,KAAAqhB,YAAArhB,KAAAmI,OAAAnC,WAEAoiQ,SAAA,WAGA,IAFA,IAAAxlP,KACAlV,EAAA1N,KAAAqhB,cACA,CACA,QAAA3T,EACA,YAEA,GAAAkV,EACA,KAAAlV,GAAA,KAAAA,IACAkV,WAES,QAAAlV,EACTkV,UACS,OAAAtd,EAAAgI,SAAAI,GACT,MAEAA,EAAA1N,KAAAsf,WAEA,GAAAwoP,EAAAp6P,GAEA,OADA1N,KAAAsf,WACAqC,OAAAC,aAAAlU,GAEA,IAAAsnK,EAAA,GACA,GACAA,GAAArzJ,OAAAC,aAAAlU,GACAA,EAAA1N,KAAAsf,iBACO5R,GAAA,OAAApI,EAAAgI,SAAAI,KAAAo6P,EAAAp6P,IACP,OAAAsnK,GAEAuzF,gBAAA,SAAA5iQ,EAAA6iQ,GACA,WAAAA,EACA7iQ,EAEAsH,EAAAtH,EA7HA,KA6HA6iQ,IAEA7F,mBAAA,WACA,IAAAx6P,EAAAnI,KAAAmI,OACAwgM,KACAgtD,KACA4N,EAAApkQ,OAAAe,OAAA,MACAqjQ,EAAAiF,MAAA,EAOA,IANA,IAKAxzF,EAAAlzK,EAAA+iB,EAAA2jP,EAAAzB,EALA0B,GACA9/D,SACAgtD,eACAn3D,YAAqB+kE,gBAGrB,QAAAvuF,EAAAh1K,KAAAooQ,aACA,SAAApzF,EAIA,OADAA,EAAAh1K,KAAAooQ,YAEA,kBAKA,IAJApoQ,KAAAooQ,WACApoQ,KAAAooQ,WACApoQ,KAAAooQ,WACApoQ,KAAAooQ,WAGA,QADApzF,EAAAh1K,KAAAooQ,aACA,QAAApzF,GAGA,SAAAA,EAAA,CAGA,IAAA6/D,EAAA70O,KAAAooQ,WACAtmQ,EAAA9B,KAAAqoQ,UACAroQ,KAAAooQ,WACAvjP,EAAA/iB,EAAA,EAAAqG,EAAA1D,SAAA3C,GAAA,IAAA8D,WAAA,GACA4iQ,EAAAC,EAAAjqE,WAAA+kE,YAAAiF,MACAzB,EAAA/mQ,KAAAuoQ,gBAAA1jP,EAAA2jP,GACAxoQ,KAAAsf,WAEA,cADA01J,EAAAh1K,KAAAooQ,aAEApoQ,KAAAooQ,WAEAzS,EAAAn4O,MACAq3N,QACAkyB,YAGA,MACA,YAGA,IAFA/mQ,KAAAqoQ,UACAroQ,KAAAooQ,WACA,QAAApoQ,KAAAooQ,YAAA,CACA,IAAA1kP,EAAA1jB,KAAAqoQ,UACAvmQ,EAAA9B,KAAAqoQ,UACAroQ,KAAAooQ,WACAvjP,EAAA/iB,EAAA,EAAAqG,EAAA1D,SAAA3C,GAAA,IAAA8D,WAAA,GACA4iQ,EAAAC,EAAAjqE,WAAA+kE,YAAAiF,MACAzB,EAAA/mQ,KAAAuoQ,gBAAA1jP,EAAA2jP,GACAxoQ,KAAAsf,WAEA,cADA01J,EAAAh1K,KAAAooQ,aAEApoQ,KAAAooQ,WAEAz/D,EAAAjlL,GAAAqjP,EAEA,MACA,iBACA,iBACA,kBACA,uBACA,IAAA2B,EAAA1oQ,KAAAmoQ,kBACAO,EAAA5mQ,OAAA,GAAA4mQ,EAAA5mQ,OAGA,MACA,gBACA,gBACA2mQ,EAAAjqE,WAAA+kE,YAAAvuF,GAAAh1K,KAAAmoQ,kBACA,MACA,YACA,YACAM,EAAAjqE,WAAA+kE,YAAAvuF,GAAAh1K,KAAAmoQ,kBAAA,GACA,MACA,gBACA,YACA,eACA,gBACA,oBACA,sBACAM,EAAAjqE,WAAA+kE,YAAAvuF,GAAAh1K,KAAAotP,aACA,MACA,gBACAqb,EAAAjqE,WAAA+kE,YAAAvuF,GAAAh1K,KAAAsoQ,cAIA,QAAA3mQ,EAAA,EAAqBA,EAAAg0P,EAAA7zP,OAAwBH,IAAA,CAC7CkzO,EAAA8gB,EAAAh0P,GAAAkzO,MACAkyB,EAAApR,EAAAh0P,GAAAolQ,QACA,IAAA4B,EAAA,IAAAhC,EACA/nD,EAAA+pD,EAAAxV,QAAA4T,EAAAp+D,EAAA3oM,KAAAy+L,qBACA/K,EAAAi1E,EAAAj1E,OACAkrB,IACAlrB,GAAA,KAEA+0E,EAAA9S,YAAAn4O,MACA4jO,UAAAvM,EACA/xC,WAAApP,EACAnjL,MAAAo4P,EAAAp4P,MACAs2P,IAAA8B,EAAA9B,IACAnkE,KAAAimE,EAAAjmE,OAGA,OAAA+lE,GAEAjG,kBAAA,SAAAhkE,GAEA,IADA,IAAAxpB,EACA,QAAAA,EAAAh1K,KAAAooQ,aACA,SAAApzF,EAIA,OADAA,EAAAh1K,KAAAooQ,YAEA,iBACA,IAAAr1P,EAAA/S,KAAAmoQ,kBACA3pE,EAAAsB,WAAA/sL,EACA,MACA,eACA,IACAymK,EADAovF,EAAA5oQ,KAAAooQ,WAEA,WAAAxyF,KAAAgzF,GAEa,CACbpvF,KACA,IAAA9xK,EAAA,EAAAkvK,SAAAgyF,EAAA,IACA5oQ,KAAAooQ,WACA,QAAA77P,EAAA,EAA6BA,EAAA7E,EAAU6E,IAAA,CAEvC,IADAyoK,EAAAh1K,KAAAooQ,WACA,QAAApzF,GAAA,QAAAA,GAEA,WADAA,EAAAh1K,KAAAooQ,YAEA,OAGA,WAAApzF,EACA,MAEA,IAAAtxJ,EAAA1jB,KAAAqoQ,UACAroQ,KAAAooQ,WACA,IAAAvzB,EAAA70O,KAAAooQ,WACA5uF,EAAA91J,GAAAmxN,EACA70O,KAAAooQ,iBApBA5uF,KAAAokB,EAAAjiL,aAAAitP,GAuBApqE,EAAAwhE,gBAAAxmF,EACA,MACA,eACA,IAAAwmB,EAAAhgM,KAAAmoQ,kBACA3pE,EAAAyB,OAAA/wL,KAAAwH,IAAAspL,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAAhxL,KAAAC,IAAA6wL,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,mBAMAoiE,EAvSA,GAySAljQ,EAAAkjQ,gDCxiBApjQ,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA6zO,mBAAA7zO,EAAAu3O,eAEA,IAAAtxO,EAAYC,EAAQ,KAEpBylK,EAAkBzlK,EAAQ,KAE1BC,EAAkBD,EAAQ,KAE1BsjQ,GACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEAxyB,EAAA,WACA,SAAAA,OACAtxO,EAAAgK,aAAA,uCAgCA,OA9BAsnO,EAAAh3O,WACAypQ,WAAA,SAAAC,MACAhkQ,EAAAgK,aAAA,qCAAAg6P,KAGA1yB,EAAAC,aAAA,SAAAF,EAAA5jO,EAAAtS,EAAA0R,EAAAopM,EAAAnpM,GACA,IAAAvP,KAAA2C,EAAAhB,UAAAmyO,KAAA9zO,KAAA8zO,EACAzyO,EAAArB,EAAA1C,IAAA,eACA,IACA,OAAA+D,GACA,KAAA2kQ,EAAAE,MACA,KAAAF,EAAAG,OACA,WAAAO,EAAAC,YAAA3mQ,EAAAkQ,EAAAtS,EAAA0R,EAAAC,GACA,KAAAy2P,EAAAI,eACA,KAAAJ,EAAAK,kBACA,KAAAL,EAAAM,iBACA,KAAAN,EAAAO,kBACA,WAAAG,EAAAE,KAAA9yB,EAAA5jO,EAAAtS,EAAA0R,EAAAC,GACA,QACA,UAAA9M,EAAAyD,YAAA,4BAAA7E,IAEK,MAAA8c,GACL,GAAAA,aAAA1b,EAAA8X,qBACA,MAAA4D,EAIA,OAFAu6L,EAAA9vL,KAAA,sBAA0C8yL,UAAAj5M,EAAAk5M,qBAAAkrD,oBAC1CpkQ,EAAA2O,MAAA+M,GACA,IAAAuoP,EAAAI,QAGA/yB,EAlCA,GAoCA2yB,GACAA,aAAA,MACAA,EAAAC,YAAA,WACA,SAAAA,EAAA3mQ,EAAAkQ,EAAAtS,EAAA0R,EAAAC,GACApS,KAAA+S,SACA/S,KAAA4pQ,UAAA/mQ,EAAArB,SAAA,UACAxB,KAAA6pQ,YAAAhnQ,EAAA1C,IAAA,eACAH,KAAAkE,KAAA,UACA,IAAAgO,EAAArP,EAAA1C,IAAA,mBACA+R,EAAA84J,EAAA37J,WAAA4C,MAAAC,EAAAzR,EAAA0R,EAAAC,GACApS,KAAAkS,KACA,IAAA43P,EAAA,EACAj0E,EAAA,EACA,GAAAhzL,EAAAP,IAAA,WACA,IAAAynQ,EAAAlnQ,EAAArB,SAAA,UACAsoQ,EAAAC,EAAA,GACAl0E,EAAAk0E,EAAA,GAEA,IAAAC,KACAC,KACA,GAAApnQ,EAAAP,IAAA,WACA,IAAA4nQ,EAAArnQ,EAAArB,SAAA,UACAwoQ,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,KAAAlqQ,KAAA6pQ,cAAAhB,EAAAG,QAAAgB,GAAAC,GAAA,CACA,IAAAnsF,EAAA99K,KAAA4pQ,UAAA,GACAzrF,EAAAn+K,KAAA4pQ,UAAA,GACAO,EAAAnqQ,KAAA4pQ,UAAA,GACApnP,EAAAxiB,KAAA4pQ,UAAA,GACAt8E,EAAAttL,KAAA4pQ,UAAA,GACAQ,EAAApqQ,KAAA4pQ,UAAA,GACAS,EAAAn7P,KAAAiM,MAAA2iK,EAAAt7J,IAAAs7J,EAAAt7J,IAAA27J,EAAAmP,IAAAnP,EAAAmP,IACA68E,GAAAC,EAAAC,GAAAD,GAAAD,EAAAE,MACA/kQ,EAAA2O,MAAA,gCAGAjU,KAAAgqQ,cACAhqQ,KAAAiqQ,YACA,IAAA54D,EAAAxuM,EAAA1C,IAAA,YACAyD,EAAAwO,EAAAk4P,gBAAAj5D,GACA+C,EAAAve,EAAAi0E,EACAS,EAAAn2D,EAAA,GACAo2D,EAAAxqQ,KAAAwqQ,cACA,GAAAV,GAAAj0E,GAAA00E,GAAA,KACAjlQ,EAAA+Q,MAAA,2BADA,CAOA,IAHA,IAEA22J,EAFA70J,EAAA,IAAAzD,aAAAxC,EAAAnB,UACAw/G,EAAA,IAAA77G,aAAA,GAEA/S,EAAAmoQ,EAAoBnoQ,GAAAk0L,EAASl0L,GAAA4oQ,EAAA,CAC7Bh6I,EAAA,GAAA5uH,EACAiC,EAAA2sH,EAAA,EAAAp4G,EAAA,GACA60J,EAAA96J,EAAA3C,OAAA4I,EAAA,GACA,IAAAsyP,EAAAnlQ,EAAA8C,KAAAsiQ,WAAA19F,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAw9F,EAAAhtP,OAAA7b,EAAAmoQ,GAAA11D,EAAAq2D,IAEA,IAAAE,EAAA,cACA9nQ,EAAAP,IAAA,gBACA0qK,EAAA96J,EAAA3C,OAAA1M,EAAA1C,IAAA,iBACAwqQ,EAAArlQ,EAAA8C,KAAAsiQ,WAAA19F,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAg9F,IACAQ,EAAAxxD,SAAA,EAAA2xD,IACAH,EAAA,OAAAjB,EAAAqB,cAEAX,IACAO,IAAA1oQ,OAAA,OAAAynQ,EAAAqB,aACAJ,EAAAhtP,MAAA,EAAAmtP,KAEA3qQ,KAAAwqQ,cAmCA,OAjCAhB,EAAA5pQ,WACAqlB,MAAA,WACA,IAEA/gB,EAAA44N,EAAAC,EAAA8tC,EAAAV,EAFAP,EAAA5pQ,KAAA4pQ,UACAC,EAAA7pQ,KAAA6pQ,YAEAA,IAAAhB,EAAAE,OACAjsC,GAAA8sC,EAAA,GAAAA,EAAA,IACA7sC,GAAA6sC,EAAA,GAAAA,EAAA,IACAiB,EAAA,KACAV,EAAA,KACAjmQ,EAAA,SACO2lQ,IAAAhB,EAAAG,QACPlsC,GAAA8sC,EAAA,GAAAA,EAAA,IACA7sC,GAAA6sC,EAAA,GAAAA,EAAA,IACAiB,EAAAjB,EAAA,GACAO,EAAAP,EAAA,GACA1lQ,EAAA,aAEAoB,EAAAgK,aAAA,4BAAAu6P,GAEA,IAAA92P,EAAA/S,KAAA+S,OACA,GAAAA,IACA+pN,EAAAx3N,EAAA8C,KAAA0iQ,eAAAhuC,EAAA/pN,GACAgqN,EAAAz3N,EAAA8C,KAAA0iQ,eAAA/tC,EAAAhqN,GACA82P,IAAAhB,EAAAG,QAAA,CACA,IAAAp0P,EAAAtP,EAAA8C,KAAA2iQ,8BAAAh4P,GACA83P,GAAAj2P,EAAA,GACAu1P,GAAAv1P,EAAA,GAGA,qBAAA1Q,EAAAlE,KAAAwqQ,WAAA1tC,EAAAC,EAAA8tC,EAAAV,KAGAX,EAxGA,GA0GAD,EAAAE,KAAA,WACA,SAAAuB,EAAA7iQ,EAAA2d,GACA9lB,KAAAmI,SACAnI,KAAA8lB,UACA9lB,KAAA+G,OAAA,EACA/G,KAAAmH,aAAA,EACA,IAAA4J,EAAA+U,EAAA/U,SACA/Q,KAAAirQ,YAAA,IAAAv2P,aAAA3D,GACA,IAAAm6P,EAAAplP,EAAAwpN,WAAAv+N,SACA/Q,KAAAmrQ,cAAArlP,EAAAslP,QAAA,IAAA12P,aAAAw2P,GAAAlrQ,KAAAirQ,YAEAD,EAAAprQ,WACAyrQ,cACA,GAAArrQ,KAAAmI,OAAArC,IACA,OAAA9F,KAAAmI,OAAAtC,IAAA7F,KAAAmI,OAAArC,IAEA,GAAA9F,KAAAmH,aAAA,EACA,SAEA,IAAAwzN,EAAA36N,KAAAmI,OAAAnC,UACA,QAAA20N,EAAA,IAGA36N,KAAA+G,OAAA4zN,EACA36N,KAAAmH,aAAA,OAGAsH,SAAA,SAAA9H,GACA,IAAAI,EAAA/G,KAAA+G,OACAI,EAAAnH,KAAAmH,aACA,QAAAR,EAAA,CACA,OAAAQ,EACA,OAAAnH,KAAAmI,OAAAnC,WAAA,GAAAhG,KAAAmI,OAAAnC,WAAA,GAAAhG,KAAAmI,OAAAnC,WAAA,EAAAhG,KAAAmI,OAAAnC,aAAA,EAEAe,KAAA,GAAA/G,KAAAmI,OAAAnC,WAAA,GAAAhG,KAAAmI,OAAAnC,WAAA,EAAAhG,KAAAmI,OAAAnC,UACA,IAAA20N,EAAA36N,KAAAmI,OAAAnC,UAEA,OADAhG,KAAA+G,OAAA4zN,GAAA,GAAAxzN,GAAA,GACAJ,GAAA,EAAAI,GAAA,IAAAwzN,IAAAxzN,KAAA,EAEA,OAAAR,GAAA,IAAAQ,EACA,OAAAnH,KAAAmI,OAAAnC,UAEA,KAAAmB,EAAAR,GACAI,KAAA,EAAA/G,KAAAmI,OAAAnC,UACAmB,GAAA,EAKA,OAHAA,GAAAR,EACA3G,KAAAmH,eACAnH,KAAA+G,UAAA,GAAAI,GAAA,EACAJ,GAAAI,GAEAmkQ,MAAA,WACAtrQ,KAAA+G,OAAA,EACA/G,KAAAmH,aAAA,GAEAokQ,SAAA,WACA,OAAAvrQ,KAAAyO,SAAAzO,KAAA8lB,QAAA0lP,cAEAC,eAAA,WACA,IAAAC,EAAA1rQ,KAAA8lB,QAAA4lP,kBACA5lH,EAAA9lJ,KAAAyO,SAAAi9P,GACAC,EAAA3rQ,KAAAyO,SAAAi9P,GACAv3P,EAAAnU,KAAA8lB,QAAA3R,OACAS,EAAA82P,EAAA,UAAAA,GAAA,0BACA,OAAA5lH,EAAAlxI,GAAAT,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAw3P,EAAA/2P,GAAAT,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAEAy3P,eAAA,WAMA,IALA,IAAA76P,EAAA/Q,KAAA8lB,QAAA/U,SACAuT,EAAAtkB,KAAA8lB,QAAAxB,iBACA1P,EAAA0P,EAAA,UAAAA,GAAA,0BACAnQ,EAAAnU,KAAA8lB,QAAA3R,OACAmqK,EAAAt+K,KAAAirQ,YACAtpQ,EAAA,EAAA4K,EAAA,EAA4B5K,EAAAoP,EAAcpP,IAAA4K,GAAA,GAC1C,IAAAs/P,EAAA7rQ,KAAAyO,SAAA6V,GACAg6J,EAAA38K,GAAAkqQ,EAAAj3P,GAAAT,EAAA5H,EAAA,GAAA4H,EAAA5H,IAAA4H,EAAA5H,GAEA,IAAA4L,EAAAnY,KAAAmrQ,cAIA,OAHAnrQ,KAAA8lB,QAAAslP,SACAprQ,KAAA8lB,QAAAslP,QAAA9sF,EAAA,EAAAnmK,EAAA,GAEAnY,KAAA8lB,QAAAwpN,WAAA//N,OAAA4I,EAAA,KA8DA,IAAA2zP,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,WAUA,IAAAz5F,KACA,gBAAAziK,GAIA,OAHAyiK,EAAAziK,KACAyiK,EAAAziK,GAZA,SAAAA,GAEA,IADA,IAAAm8P,KACAvqQ,EAAA,EAAqBA,GAAAoO,EAAYpO,IAAA,CACjC,IAAAsI,EAAAtI,EAAAoO,EACAo8P,EAAA,EAAAliQ,EACAiiQ,EAAA1uP,KAAA,IAAA9I,cAAAy3P,MAAA,EAAAliQ,EAAAkiQ,IAAA,EAAAliQ,IAAAkiQ,EAAAliQ,SAEA,OAAAiiQ,EAPA,CAYAn8P,IAEAyiK,EAAAziK,IAfA,GAkBA,SAAAq8P,EAAAC,EAAA3oP,GACA,IAAA4oP,EAAAD,EAAAE,QAAA7oP,MACApe,EAAA2Y,QAAA,UAAAquP,EAAApoQ,KAAA,gCACA,IAAAsoQ,EAAAH,EAAAG,OACA/gQ,EAAA4gQ,EAAA5gQ,OACAk8G,EAAA2kJ,EAAAE,OACAX,EAAAS,EAAA7gQ,OACAghQ,EAAAv9P,KAAAC,IAAAq9P,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,QAAA6kJ,EAAA7kJ,EAAA,SACA+kJ,EAAAx9P,KAAAC,IAAAq9P,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,QAAA6kJ,EAAA7kJ,EAAA,SACAglJ,EAAAz9P,KAAAwH,IAAA81P,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,QAAA6kJ,EAAA7kJ,EAAA,SACAilJ,EAAA19P,KAAAwH,IAAA81P,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,OAAA6kJ,EAAA7kJ,EAAA,QAAA6kJ,EAAA7kJ,EAAA,SACAklJ,EAAA39P,KAAA61J,MAAA4nG,EAAAF,GAAAT,GAAAK,EAAA33D,OAAA,GAAA23D,EAAA33D,OAAA,KACAm4D,EAAA39P,KAAAwH,IAAAo1P,EAAA58P,KAAAC,IAAA48P,EAAAc,IACA,IAAAC,EAAA59P,KAAA61J,MAAA6nG,EAAAF,GAAAV,GAAAK,EAAA33D,OAAA,GAAA23D,EAAA33D,OAAA,KACAo4D,EAAA59P,KAAAwH,IAAAo1P,EAAA58P,KAAAC,IAAA48P,EAAAe,IAaA,IAZA,IAAAC,EAAAF,EAAA,EACAG,EAAA,IAAAzkQ,YAAAukQ,EAAA,GAAAC,GACAE,EAAA,IAAA1kQ,YAAAukQ,EAAA,GAAAC,GACA7hQ,EAAA,EACAgiQ,EAAA,IAAAtnQ,WAAA,GACAunQ,EAAA,IAAAvnQ,WAAA,GACAsuM,EAAAzoM,EAAAogQ,EAAA,IACA13D,EAAA1oM,EAAAogQ,EAAA,IACAuB,EAAA3hQ,EAAAogQ,EAAA,IACAwB,EAAA5hQ,EAAAogQ,EAAA,IACAyB,EAAArB,EAAAa,GACAS,EAAAtB,EAAAY,GACAryF,EAAA,EAAqBA,GAAAsyF,EAAiBtyF,IAAA,CACtC0yF,EAAA,IAAAh5D,EAAA,IAAA44D,EAAAtyF,GAAA4yF,EAAA,GAAA5yF,GAAAsyF,EAAA,EACAI,EAAA,IAAAh5D,EAAA,IAAA44D,EAAAtyF,GAAA4yF,EAAA,GAAA5yF,GAAAsyF,EAAA,EACAI,EAAA,IAAAh5D,EAAA,IAAA44D,EAAAtyF,GAAA4yF,EAAA,GAAA5yF,GAAAsyF,EAAA,EACAK,EAAA,IAAAh5D,EAAA,IAAA24D,EAAAtyF,GAAA6yF,EAAA,GAAA7yF,GAAAsyF,EAAA,EACAK,EAAA,IAAAh5D,EAAA,IAAA24D,EAAAtyF,GAAA6yF,EAAA,GAAA7yF,GAAAsyF,EAAA,EACAK,EAAA,IAAAh5D,EAAA,IAAA24D,EAAAtyF,GAAA6yF,EAAA,GAAA7yF,GAAAsyF,EAAA,EACA,QAAAlzC,EAAA,EAAuBA,GAAAizC,EAAiBjzC,IAAA1uN,IACxC,OAAAsvK,OAAAsyF,GAAA,IAAAlzC,OAAAizC,EAAA,CAMA,IAHA,IAAApyP,EAAA,EACA5E,EAAA,EACAlH,EAAA,EACAhN,EAAA,EAAuBA,GAAA,EAAQA,IAC/B,QAAA4K,EAAA,EAAyBA,GAAA,EAAQA,IAAAoC,IAAA,CACjC,IAAAiH,EAAA03P,EAAA9yF,GAAA74K,GAAA4rQ,EAAA3zC,GAAArtN,GACAkO,GAAA+xP,EAAA7kJ,EAAAh5G,IAAA,GAAAiH,EACAC,GAAA22P,EAAA7kJ,EAAAh5G,IAAA,GAAAiH,EAGAo3P,EAAA9hQ,GAAAshQ,EAAA1qQ,OACA0qQ,EAAAhvP,MAAA/C,EAAA5E,IACAo3P,EAAA/hQ,GAAAO,EAAA3J,OACA,IAAA0rQ,EAAA,IAAA5nQ,WAAA,GACA4nQ,EAAA,IAAAN,EAAA,IAAAL,EAAAjzC,GAAAuzC,EAAA,GAAAvzC,GAAAizC,EAAA,EACAW,EAAA,IAAAN,EAAA,IAAAL,EAAAjzC,GAAAuzC,EAAA,GAAAvzC,GAAAizC,EAAA,EACAW,EAAA,IAAAN,EAAA,IAAAL,EAAAjzC,GAAAuzC,EAAA,GAAAvzC,GAAAizC,EAAA,EACAphQ,EAAA+R,KAAAgwP,IAGAR,EAAA,GAAArlJ,EAAA,GACAslJ,EAAA,GAAApB,EAAA,GACAmB,EAAAH,GAAAllJ,EAAA,GACAslJ,EAAAJ,GAAAhB,EAAA,GACAmB,EAAAD,EAAAD,GAAAnlJ,EAAA,IACAslJ,EAAAF,EAAAD,GAAAjB,EAAA,GACAmB,EAAAD,EAAAD,EAAAD,GAAAllJ,EAAA,IACAslJ,EAAAF,EAAAD,EAAAD,GAAAhB,EAAA,GACAQ,EAAAE,QAAA7oP,IACAxf,KAAA,UACAsoQ,OAAAQ,EACAvhQ,OAAAwhQ,EACAF,kBAuPA,SAAAU,EAAApB,GAKA,IAJA,IAAA5iD,EAAA4iD,EAAAG,OAAA,MACA9iD,EAAA2iD,EAAAG,OAAA,MACA5lP,EAAA6iM,EACAkd,EAAAjd,EACA/nN,EAAA,EAAAC,EAAAyqQ,EAAAG,OAAA1qQ,OAA4CH,EAAAC,EAAQD,IAAA,CACpD,IAAA8Y,EAAA4xP,EAAAG,OAAA7qQ,GAAA,GACAkU,EAAAw2P,EAAAG,OAAA7qQ,GAAA,GACA8nN,IAAAhvM,IAAAgvM,EACAC,IAAA7zM,IAAA6zM,EACA9iM,IAAAnM,IAAAmM,EACA+/M,IAAA9wN,IAAA8wN,EAEA0lC,EAAA33D,QAAA+U,EAAAC,EAAA9iM,EAAA+/M,GAgCA,SAAA8iC,EAAAthQ,EAAA4K,EAAAtS,EAAA0R,EAAAC,GACA,OAAA5M,EAAAhB,UAAA2D,GACA,UAAA7C,EAAAyD,YAAA,6BAEA,IAAAlG,EAAAsF,EAAAtF,KACA7C,KAAA+S,SACA/S,KAAA6pQ,YAAAhnQ,EAAA1C,IAAA,eACAH,KAAAkE,KAAA,UACAlE,KAAAymO,KAAA5jO,EAAArB,SAAA,QACA,IAAA0Q,EAAArP,EAAA1C,IAAA,mBACA+R,EAAA84J,EAAA37J,WAAA4C,MAAAC,EAAAzR,EAAA0R,EAAAC,GACApS,KAAAkS,KACAlS,KAAA2qQ,WAAA9nQ,EAAAP,IAAA,cAAA4P,EAAA3C,OAAA1M,EAAA1C,IAAA,sBACA,IAAAkxM,EAAAxuM,EAAA1C,IAAA,YACAyD,EAAAytM,EAAAj/L,EAAAk4P,gBAAAj5D,GAAA,KACArxM,KAAAwsQ,UACAxsQ,KAAAyL,UACAzL,KAAAusQ,WACA,IASArxD,EAAA,IAAA8vD,EAAA7iQ,GARAujQ,kBAAA7oQ,EAAA1C,IAAA,qBACAmkB,iBAAAzhB,EAAA1C,IAAA,oBACAqrQ,YAAA3oQ,EAAA1C,IAAA,eACAgU,OAAAtR,EAAArB,SAAA,UACA4pQ,QAAAxnQ,EACA0rO,WAAAp9N,EACAnB,SAAAnN,EAAA,EAAAsO,EAAAnB,WAGA28P,KACA,OAAA1tQ,KAAA6pQ,aACA,KAAAhB,EAAAI,gBAxdA,SAAAoD,EAAAnxD,GAMA,IALA,IAAAsxD,EAAAH,EAAAG,OACA/gQ,EAAA4gQ,EAAA5gQ,OACAuqM,KACA23D,KACAC,EAAA,EACA1yD,EAAAmwD,SAAA,CACA,IAAAxwL,EAAAqgI,EAAAqwD,WACAsC,EAAA3yD,EAAAuwD,iBACAtzP,EAAA+iM,EAAA0wD,iBACA,OAAAgC,EAAA,CACA,QAAA/yL,MAAA,GACA,UAAAv1E,EAAAyD,YAAA,sBAEA,OAAA8xE,GACA,OACA+yL,EAAA,EACA,MACA,OACAD,EAAAnwP,KAAAmwP,IAAA7rQ,OAAA,GAAA6rQ,IAAA7rQ,OAAA,IACA8rQ,EAAA,EACA,MACA,OACAD,EAAAnwP,KAAAmwP,IAAA7rQ,OAAA,GAAA6rQ,IAAA7rQ,OAAA,IACA8rQ,EAAA,EAGA53D,EAAAx4L,KAAAq9D,GAEA8yL,EAAAnwP,KAAAgvP,EAAA1qQ,QACA0qQ,EAAAhvP,KAAAqwP,GACApiQ,EAAA+R,KAAArF,GACAy1P,IACA1yD,EAAAowD,QAEAe,EAAAE,QAAA/uP,MACAtZ,KAAA,YACAsoQ,OAAA,IAAAjkQ,WAAAolQ,GACAliQ,OAAA,IAAAlD,WAAAolQ,KAtCA,CAydA3tQ,KAAAk7M,GACA,MACA,KAAA2tD,EAAAK,kBACA,IAAA6D,EAAA,EAAAlqQ,EAAA1C,IAAA,kBACA,GAAA4sQ,EAAA,EACA,UAAAznQ,EAAAyD,YAAA,2BArbA,SAAAsjQ,EAAAnxD,EAAA6xD,GAIA,IAHA,IAAAP,EAAAH,EAAAG,OACA/gQ,EAAA4gQ,EAAA5gQ,OACAkiQ,KACAzyD,EAAAmwD,SAAA,CACA,IAAAwC,EAAA3yD,EAAAuwD,iBACAtzP,EAAA+iM,EAAA0wD,iBACA+B,EAAAnwP,KAAAgvP,EAAA1qQ,QACA0qQ,EAAAhvP,KAAAqwP,GACApiQ,EAAA+R,KAAArF,GAEAk0P,EAAAE,QAAA/uP,MACAtZ,KAAA,UACAsoQ,OAAA,IAAAjkQ,WAAAolQ,GACAliQ,OAAA,IAAAlD,WAAAolQ,GACAZ,mBAfA,CAubA/sQ,KAAAk7M,EAAA6xD,GACA,MACA,KAAAlE,EAAAM,kBAzUA,SAAAkD,EAAAnxD,GAKA,IAJA,IAAAsxD,EAAAH,EAAAG,OACA/gQ,EAAA4gQ,EAAA5gQ,OACAkiQ,EAAA,IAAAplQ,WAAA,IACA2J,EAAA,IAAA3J,WAAA,GACA2yM,EAAAmwD,SAAA,CACA,IAIA1pQ,EAAAC,EAJAi5E,EAAAqgI,EAAAqwD,WACA,QAAA1wL,MAAA,GACA,UAAAv1E,EAAAyD,YAAA,sBAGA,IAAA4+G,EAAA6kJ,EAAA1qQ,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAi5E,EAAA,KAAwCl5E,EAAAC,EAAQD,IAChD6qQ,EAAAhvP,KAAA09L,EAAAuwD,kBAEA,IAIAv1E,EAAAzC,EAAAwC,EAAA63E,EAJAjC,EAAApgQ,EAAA3J,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAi5E,EAAA,IAAuCl5E,EAAAC,EAAQD,IAC/C8J,EAAA+R,KAAA09L,EAAA0wD,kBAGA,OAAA/wL,GACA,OACA8yL,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,EACAz1G,EAAA,GAAA25P,EAAA,EACA35P,EAAA,GAAA25P,EAAA,EACA35P,EAAA,GAAA25P,EACA35P,EAAA,GAAA25P,EAAA,EACA,MACA,OACA31E,EAAAy3E,EAAA,IACAl6E,EAAAk6E,EAAA,IACA13E,EAAA03E,EAAA,IACAG,EAAAH,EAAA,IACAA,EAAA,IAAAG,EACAH,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAA13E,EACA03E,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAl6E,EACAk6E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAz3E,EACAy3E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAuuE,EAAAhkL,EAAA,GACAuhL,EAAAvhL,EAAA,GACAA,EAAA,GAAAuhL,EACAvhL,EAAA,GAAA25P,EACA35P,EAAA,GAAAgkL,EACAhkL,EAAA,GAAA25P,EAAA,EACA,MACA,OACA31E,EAAAy3E,EAAA,IACAl6E,EAAAk6E,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAl6E,EACAk6E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAz3E,EACAy3E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAuuE,EAAAhkL,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA25P,EACA35P,EAAA,GAAAgkL,EACAhkL,EAAA,GAAA25P,EAAA,EACA,MACA,OACA8B,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAz1G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA25P,EACA35P,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA25P,EAAA,EAGA8B,EAAA,GAAAnB,EAAA1qQ,OACA0qQ,EAAAhvP,QAAA,EAAAgvP,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,eAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,aACAA,EAAA,GAAAnB,EAAA1qQ,OACA0qQ,EAAAhvP,QAAA,EAAAgvP,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,gBAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,cACAA,EAAA,GAAAnB,EAAA1qQ,OACA0qQ,EAAAhvP,QAAA,EAAAgvP,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,eAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,aACAA,EAAA,IAAAnB,EAAA1qQ,OACA0qQ,EAAAhvP,QAAA,EAAAgvP,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,eAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,aACAtB,EAAAE,QAAA/uP,MACAtZ,KAAA,QACAsoQ,OAAA,IAAAjkQ,WAAAolQ,GACAliQ,OAAA,IAAAlD,WAAA2J,MAlHA,CA0UAlS,KAAAk7M,GACAwyD,KACA,MACA,KAAA7E,EAAAO,mBAvNA,SAAAiD,EAAAnxD,GAKA,IAJA,IAAAsxD,EAAAH,EAAAG,OACA/gQ,EAAA4gQ,EAAA5gQ,OACAkiQ,EAAA,IAAAplQ,WAAA,IACA2J,EAAA,IAAA3J,WAAA,GACA2yM,EAAAmwD,SAAA,CACA,IAIA1pQ,EAAAC,EAJAi5E,EAAAqgI,EAAAqwD,WACA,QAAA1wL,MAAA,GACA,UAAAv1E,EAAAyD,YAAA,sBAGA,IAAA4+G,EAAA6kJ,EAAA1qQ,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAi5E,EAAA,MAAyCl5E,EAAAC,EAAQD,IACjD6qQ,EAAAhvP,KAAA09L,EAAAuwD,kBAEA,IAIAv1E,EAAAzC,EAAAwC,EAAA63E,EAJAjC,EAAApgQ,EAAA3J,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAi5E,EAAA,IAAuCl5E,EAAAC,EAAQD,IAC/C8J,EAAA+R,KAAA09L,EAAA0wD,kBAGA,OAAA/wL,GACA,OACA8yL,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,IAAAhmJ,EAAA,GACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,EACAz1G,EAAA,GAAA25P,EAAA,EACA35P,EAAA,GAAA25P,EAAA,EACA35P,EAAA,GAAA25P,EACA35P,EAAA,GAAA25P,EAAA,EACA,MACA,OACA31E,EAAAy3E,EAAA,IACAl6E,EAAAk6E,EAAA,IACA13E,EAAA03E,EAAA,IACAG,EAAAH,EAAA,IACAA,EAAA,IAAAG,EACAH,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAA13E,EACA03E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,GACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAl6E,EACAk6E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAz3E,EACAy3E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAuuE,EAAAhkL,EAAA,GACAuhL,EAAAvhL,EAAA,GACAA,EAAA,GAAAuhL,EACAvhL,EAAA,GAAA25P,EACA35P,EAAA,GAAAgkL,EACAhkL,EAAA,GAAA25P,EAAA,EACA,MACA,OACA31E,EAAAy3E,EAAA,IACAl6E,EAAAk6E,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,GACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAl6E,EACAk6E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAz3E,EACAy3E,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAuuE,EAAAhkL,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA25P,EACA35P,EAAA,GAAAgkL,EACAhkL,EAAA,GAAA25P,EAAA,EACA,MACA,OACA8B,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,IAAAhmJ,EAAA,GACAgmJ,EAAA,IAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,GACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAgmJ,EAAA,GAAAhmJ,EAAA,EACAz1G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA25P,EACA35P,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA25P,EAAA,EAGAQ,EAAAE,QAAA/uP,MACAtZ,KAAA,QACAsoQ,OAAA,IAAAjkQ,WAAAolQ,GACAliQ,OAAA,IAAAlD,WAAA2J,MA1HA,CAwNAlS,KAAAk7M,GACAwyD,KACA,MACA,WACApoQ,EAAAgK,aAAA,0BAGA,GAAAo+P,EAAA,CACAD,EAAAztQ,MACA,QAAA2B,EAAA,EAAAC,EAAA5B,KAAAusQ,QAAAzqQ,OAA+CH,EAAAC,EAAQD,IACvDyqQ,EAAApsQ,KAAA2B,GAGA8rQ,EAAAztQ,MAxFA,SAAAqsQ,GACA,IAAA1qQ,EAAAC,EAAA2K,EAAAyiK,EACAw9F,EAAAH,EAAAG,OACAuB,EAAA,IAAAr5P,aAAA,EAAA83P,EAAA1qQ,QACA,IAAAH,EAAA,EAAA4K,EAAA,EAAA3K,EAAA4qQ,EAAA1qQ,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAqsQ,EAAAxB,EAAA7qQ,GACAosQ,EAAAxhQ,KAAAyhQ,EAAA,GACAD,EAAAxhQ,KAAAyhQ,EAAA,GAEA3B,EAAAG,OAAAuB,EACA,IAAAtiQ,EAAA4gQ,EAAA5gQ,OACAwiQ,EAAA,IAAAroQ,WAAA,EAAA6F,EAAA3J,QACA,IAAAH,EAAA,EAAA4K,EAAA,EAAA3K,EAAA6J,EAAA3J,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAuK,EAAAT,EAAA9J,GACAssQ,EAAA1hQ,KAAAL,EAAA,GACA+hQ,EAAA1hQ,KAAAL,EAAA,GACA+hQ,EAAA1hQ,KAAAL,EAAA,GAEAmgQ,EAAA5gQ,OAAAwiQ,EACA,IAAA1B,EAAAF,EAAAE,QACA,IAAA5qQ,EAAA,EAAAC,EAAA2qQ,EAAAzqQ,OAAoCH,EAAAC,EAAQD,IAAA,CAC5C,IAAA2qQ,EAAAC,EAAA5qQ,GACAgsQ,EAAArB,EAAAE,OACAt6P,EAAAo6P,EAAA7gQ,OACA,IAAAc,EAAA,EAAAyiK,EAAA2+F,EAAA7rQ,OAAiCyK,EAAAyiK,EAAQziK,IACzCohQ,EAAAphQ,IAAA,EACA2F,EAAA3F,IAAA,GA1BA,CAyFAvM,MAOA,OALAypQ,EAAA7pQ,WACAqlB,MAAA,WACA,cAAAjlB,KAAA6pQ,YAAA7pQ,KAAAwsQ,OAAAxsQ,KAAAyL,OAAAzL,KAAAusQ,QAAAvsQ,KAAA00M,OAAA10M,KAAA+S,OAAA/S,KAAAymO,KAAAzmO,KAAA2qQ,cAGAlB,EA/kBA,GAilBAF,EAAAI,MAAA,WACA,SAAAA,IACA3pQ,KAAAkE,KAAA,UAOA,OALAylQ,EAAA/pQ,WACAqlB,MAAA,WACA,kBAGA0kP,EATA,GAuBAtqQ,EAAAu3O,UACAv3O,EAAA6zO,mBAbA,SAAAxnN,EAAA7oB,EAAAsmB,GACA,IAAApW,EAAAlQ,EAAArB,SAAA,UACAilO,EAAAnhO,EAAA8C,KAAAw9N,cAAA/iO,EAAArB,SAAA,SACA0sQ,EAAArrQ,EAAA1C,IAAA,SACAguQ,EAAAtrQ,EAAA1C,IAAA,SACAiuQ,EAAAvrQ,EAAA1C,IAAA,aACAkuQ,EAAAxrQ,EAAA1C,IAAA,cACA,GAAAsmO,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,MACA,UAAAnhO,EAAAyD,YAAA,4CAAA09N,EAAA,MAEA,uBAAAt9M,EAAAuC,EAAA3Y,EAAA0zN,EAAAynC,EAAAC,EAAAC,EAAAC,sCC1wBAlvQ,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA0+O,YAEA,IAAAz4O,EAAYC,EAAQ,KAEpB+oQ,GAAA,moCACAC,GAAA,mzCACA,SAAAC,EAAA7sQ,GACA,aAAAA,GAEA,SAAA8sQ,EAAA9sQ,GACA,aAAAA,GAEA,SAAA+sQ,EAAAvkG,EAAAzkK,EAAApG,GACA,QAAAiN,EAAA7G,EAAAspK,EAAA7E,EAAAroK,OAAsCyK,EAAAyiK,IAAQziK,EAC9C,GAAA49J,EAAA59J,KAAAjN,EACA,OAAAiN,EAGA,OAAAA,EAEA,SAAAoiQ,EAAAxkG,EAAAzkK,EAAAI,EAAAxG,GACA,QAAAiN,EAAA7G,EAAqB6G,EAAAzG,IAASyG,EAC9B49J,EAAA59J,GAAAjN,EAGA,SAAAsvQ,EAAAzkG,EAAAzkK,EAAAI,GACA,QAAAnE,EAAA+D,EAAA6G,EAAAzG,EAAA,EAAkCnE,EAAA4K,IAAO5K,IAAA4K,EAAA,CACzC,IAAAsiQ,EAAA1kG,EAAAxoK,GACAwoK,EAAAxoK,GAAAwoK,EAAA59J,GACA49J,EAAA59J,GAAAsiQ,GAGA,SAAAC,EAAA1rQ,EAAA2rQ,EAAA5zB,GACA,OACA/3O,MACA46O,IAAA7C,EAAA,MAAA4zB,EAAA,aAGA,IAAA7+D,KACAzK,KAkMApmM,EAAA0+O,KAjMA,SAAA36O,EAAA4rQ,EAAA7zB,GACA,IAAA4zB,KACAE,EAAA7rQ,EAAAtB,OACA,OAAAmtQ,GAAA9zB,EACA,OAAA2zB,EAAA1rQ,EAAA2rQ,EAAA5zB,GAEAjrC,EAAApuM,OAAAmtQ,EACAxpE,EAAA3jM,OAAAmtQ,EACA,IACAttQ,EAAAC,EADAstQ,EAAA,EAEA,IAAAvtQ,EAAA,EAAaA,EAAAstQ,IAAettQ,EAAA,CAC5BuuM,EAAAvuM,GAAAyB,EAAAmlL,OAAA5mL,GACA,IAAA2gP,EAAAl/O,EAAAiS,WAAA1T,GACAwtQ,EAAA,IACA7sB,GAAA,IACA6sB,EAAAb,EAAAhsB,GACK,MAAAA,MAAA,KACL6sB,EAAA,IACK,MAAA7sB,MAAA,MACL6sB,EAAAZ,EAAA,IAAAjsB,QAEAh9O,EAAA2O,MAAA,mCAAAquO,EAAAn/O,SAAA,KAEK,MAAAm/O,MAAA,OACL6sB,EAAA,MAEA,MAAAA,GAAA,OAAAA,GAAA,OAAAA,GACAD,IAEAzpE,EAAA9jM,GAAAwtQ,EAEA,OAAAD,EAEA,OAAAJ,EAAA1rQ,EADA2rQ,OAGA,IAAAC,IACAE,EAAAD,EAAA,IACAF,KACAC,EAAA,IAEAD,KACAC,EAAA,IAGA,IAAA/gF,KACA,IAAAtsL,EAAA,EAAaA,EAAAstQ,IAAettQ,EAC5BssL,EAAAtsL,GAAAqtQ,EAEA,IAYA/kQ,EAZA6R,EAAA0yP,EAAAQ,GAAA,QACAI,EAAAtzP,EACAuzP,EAAAD,EACAE,EAAAF,EACA,IAAAztQ,EAAA,EAAaA,EAAAstQ,IAAettQ,EAC5B,QAAA8jM,EAAA9jM,GACA8jM,EAAA9jM,GAAA2tQ,EAEAA,EAAA7pE,EAAA9jM,GAKA,IAFA2tQ,EAAAF,EAEAztQ,EAAA,EAAaA,EAAAstQ,IAAettQ,EAE5B,QADAsI,EAAAw7L,EAAA9jM,IAEA8jM,EAAA9jM,GAAA,OAAA2tQ,EAAA,UACK,MAAArlQ,GAAA,MAAAA,GAAA,OAAAA,IACLqlQ,EAAArlQ,GAGA,IAAAtI,EAAA,EAAaA,EAAAstQ,IAAettQ,EAE5B,QADAsI,EAAAw7L,EAAA9jM,MAEA8jM,EAAA9jM,GAAA,KAGA,IAAAA,EAAA,EAAaA,EAAAstQ,EAAA,IAAmBttQ,EAChC,OAAA8jM,EAAA9jM,IAAA,OAAA8jM,EAAA9jM,EAAA,WAAA8jM,EAAA9jM,EAAA,KACA8jM,EAAA9jM,GAAA,MAEA,OAAA8jM,EAAA9jM,IAAA,OAAA8jM,EAAA9jM,EAAA,WAAA8jM,EAAA9jM,EAAA,IAAA8jM,EAAA9jM,EAAA,KAAA8jM,EAAA9jM,EAAA,KACA8jM,EAAA9jM,GAAA8jM,EAAA9jM,EAAA,IAGA,IAAAA,EAAA,EAAaA,EAAAstQ,IAAettQ,EAC5B,UAAA8jM,EAAA9jM,GAAA,CACA,IAAA4K,EACA,IAAAA,EAAA5K,EAAA,EAAqB4K,GAAA,GACrB,OAAAk5L,EAAAl5L,KAD6BA,EAI7Bk5L,EAAAl5L,GAAA,KAEA,IAAAA,EAAA5K,EAAA,EAAqB4K,EAAA0iQ,GACrB,OAAAxpE,EAAAl5L,KADoCA,EAIpCk5L,EAAAl5L,GAAA,KAIA,IAAA5K,EAAA,EAAaA,EAAAstQ,IAAettQ,EAE5B,QADAsI,EAAAw7L,EAAA9jM,KACA,OAAAsI,GAAA,OAAAA,GAAA,OAAAA,IACAw7L,EAAA9jM,GAAA,MAIA,IADA2tQ,EAAAF,EACAztQ,EAAA,EAAaA,EAAAstQ,IAAettQ,EAE5B,QADAsI,EAAAw7L,EAAA9jM,IAEA8jM,EAAA9jM,GAAA,MAAA2tQ,EAAA,SACK,MAAArlQ,GAAA,MAAAA,IACLqlQ,EAAArlQ,GAGA,IAAAtI,EAAA,EAAaA,EAAAstQ,IAAettQ,EAC5B,UAAA8jM,EAAA9jM,GAAA,CACA,IAAAmE,EAAA4oQ,EAAAjpE,EAAA9jM,EAAA,QACA4tQ,EAAAH,EACAztQ,EAAA,IACA4tQ,EAAA9pE,EAAA9jM,EAAA,IAEA,IAAA6tQ,EAAAH,EACAvpQ,EAAA,EAAAmpQ,IACAO,EAAA/pE,EAAA3/L,EAAA,IAEA,MAAAypQ,IACAA,EAAA,KAEA,MAAAC,IACAA,EAAA,KAEAD,IAAAC,GACAb,EAAAlpE,EAAA9jM,EAAAmE,EAAAypQ,GAEA5tQ,EAAAmE,EAAA,EAGA,IAAAnE,EAAA,EAAaA,EAAAstQ,IAAettQ,EAC5B,OAAA8jM,EAAA9jM,KACA8jM,EAAA9jM,GAAAma,GAGA,IAAAna,EAAA,EAAaA,EAAAstQ,IAAettQ,EAC5BsI,EAAAw7L,EAAA9jM,GACA8sQ,EAAAxgF,EAAAtsL,IACA,MAAAsI,EACAgkL,EAAAtsL,IAAA,EACO,OAAAsI,GAAA,OAAAA,IACPgkL,EAAAtsL,IAAA,GAGA,MAAAsI,GAAA,OAAAA,GAAA,OAAAA,IACAgkL,EAAAtsL,IAAA,GAIA,IAEAusL,EAFAuhF,GAAA,EACAC,EAAA,GAEA,IAAA/tQ,EAAA,EAAAC,EAAAqsL,EAAAnsL,OAAiCH,EAAAC,IAAQD,EAEzC8tQ,GADAvhF,EAAAD,EAAAtsL,MAEA8tQ,EAAAvhF,GAEAwhF,EAAAxhF,GAAAsgF,EAAAtgF,KACAwhF,EAAAxhF,GAGA,IAAAA,EAAAuhF,EAA4BvhF,GAAAwhF,IAAyBxhF,EAAA,CACrD,IAAAxoL,GAAA,EACA,IAAA/D,EAAA,EAAAC,EAAAqsL,EAAAnsL,OAAmCH,EAAAC,IAAQD,EAC3CssL,EAAAtsL,GAAAusL,EACAxoL,GAAA,IACAkpQ,EAAA1+D,EAAAxqM,EAAA/D,GACA+D,GAAA,GAEOA,EAAA,IACPA,EAAA/D,GAGA+D,GAAA,GACAkpQ,EAAA1+D,EAAAxqM,EAAAuoL,EAAAnsL,QAGA,IAAAH,EAAA,EAAAC,EAAAsuM,EAAApuM,OAAgCH,EAAAC,IAAQD,EAAA,CACxC,IAAA+L,EAAAwiM,EAAAvuM,GACA,MAAA+L,GAAA,MAAAA,IACAwiM,EAAAvuM,GAAA,IAGA,OAAAmtQ,EAAA5+D,EAAA7tL,KAAA,IAAA0sP,sCC1OA5vQ,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAskP,kBAEA,IAAAr+O,EAAYC,EAAQ,KAEpBo+O,KAAAr+O,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAA0lQ,QAAA,IACA1lQ,EAAA,oBACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA6/L,WAAA,EAAAxkM,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,KACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA,qBAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,IACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA,4BAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,IACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA,wBAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,KACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAAzK,QAAA,EAAA8F,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAiyI,UAAA,IACAjyI,EAAAmuG,WAAA,IACAnuG,EAAAswE,YAAA,IACAtwE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA89H,SAAA,IACA99H,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAAiqD,aAAA,IACAjqD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA6iG,MAAA,IACA7iG,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAi6D,UAAA,IACAj6D,EAAAikB,MAAA,IACAjkB,EAAAmlB,KAAA,IACAnlB,EAAAgnB,IAAA,IACAhnB,EAAAooB,MAAA,IACApoB,EAAAqsB,QAAA,IACArsB,EAAAu+B,IAAA,IACAv+B,EAAAsuB,MAAA,IACAtuB,EAAA8sB,IAAA,IACA9sB,EAAA2zB,KAAA,IACA3zB,EAAAkkI,OAAA,IACAlkI,EAAAq1B,MAAA,IACAr1B,EAAA42B,OAAA,IACA52B,EAAAy4B,GAAA,IACAz4B,EAAA65B,GAAA,IACA75B,EAAA+8B,QAAA,IACA/8B,EAAAy+B,GAAA,IACAz+B,EAAA6lC,MAAA,IACA7lC,EAAAggC,IAAA,IACAhgC,EAAAykC,MAAA,IACAzkC,EAAAglC,IAAA,IACAhlC,EAAAupC,QAAA,IACAvpC,EAAAk3H,OAAA,IACAl3H,EAAAy8B,MAAA,IACAz8B,EAAA+rC,GAAA,IACA/rC,EAAA4+B,IAAA,IACA5+B,EAAAsuC,KAAA,IACAtuC,EAAAsxD,YAAA,IACAtxD,EAAAgkI,UAAA,IACAhkI,EAAA2xD,aAAA,IACA3xD,EAAAo8G,cAAA,IACAp8G,EAAA2xI,WAAA,IACA3xI,EAAAwlH,UAAA,IACAxlH,EAAAkkD,MAAA,IACAlkD,EAAAwtD,KAAA,IACAxtD,EAAAo2D,IAAA,IACAp2D,EAAAyiE,MAAA,IACAziE,EAAAutE,QAAA,IACAvtE,EAAA48G,IAAA,IACA58G,EAAAyI,MAAA,IACAzI,EAAA+uE,IAAA,IACA/uE,EAAAutF,KAAA,IACAvtF,EAAA68G,KAAA,IACA78G,EAAA+xF,MAAA,IACA/xF,EAAA24F,OAAA,IACA34F,EAAAukG,GAAA,IACAvkG,EAAA2tG,GAAA,IACA3tG,EAAAizG,QAAA,IACAjzG,EAAA09G,GAAA,IACA19G,EAAAikI,MAAA,IACAjkI,EAAAuoH,IAAA,IACAvoH,EAAAi3H,MAAA,IACAj3H,EAAAy/H,IAAA,IACAz/H,EAAAsyI,QAAA,IACAtyI,EAAA0yG,OAAA,IACA1yG,EAAAyyG,MAAA,IACAzyG,EAAA67I,GAAA,IACA77I,EAAA2gH,IAAA,IACA3gH,EAAAslJ,KAAA,IACAtlJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAA03H,QAAA,IACA13H,EAAAqtB,KAAA,IACArtB,EAAAwpC,SAAA,IACAxpC,EAAAkjG,OAAA,IACAljG,EAAA06F,UAAA,IACA16F,EAAA62E,SAAA,IACA72E,EAAAwsF,SAAA,IACAxsF,EAAA40E,OAAA,IACA50E,EAAAo4D,KAAA,IACAp4D,EAAAojE,QAAA,IACApjE,EAAA4gF,MAAA,IACA5gF,EAAAk7H,MAAA,IACAl7H,EAAA6mD,UAAA,KACA7mD,EAAAgoD,UAAA,IACAhoD,EAAA4oD,QAAA,IACA5oD,EAAAqoD,WAAA,IACAroD,EAAAunD,UAAA,IACAvnD,EAAAkiE,OAAA,IACAliE,EAAA8+G,UAAA,IACA9+G,EAAAywH,OAAA,IACAzwH,EAAAk8E,aAAA,IACAl8E,EAAAmlG,SAAA,IACAnlG,EAAA0gH,aAAA,IACA1gH,EAAAu5G,YAAA,IACAv5G,EAAA8yD,OAAA,IACA9yD,EAAA+jE,OAAA,IACA/jE,EAAA0sG,SAAA,IACA1sG,EAAA6tE,YAAA,IACA7tE,EAAAmmD,YAAA,IACAnmD,EAAA0rE,SAAA,IACA1rE,EAAAopD,YAAA,IACAppD,EAAA+nD,aAAA,IACA/nD,EAAAk0D,eAAA,IACAl0D,EAAAgkD,MAAA,IACAhkD,EAAA8yB,SAAA,IACA9yB,EAAA+/B,SAAA,IACA//B,EAAAy4I,YAAA,IACAz4I,EAAAu3D,eAAA,IACAv3D,EAAAy3D,WAAA,IACAz3D,EAAAosE,SAAA,IACApsE,EAAAgtF,aAAA,IACAhtF,EAAAgyI,MAAA,IACAhyI,EAAAwgH,eAAA,IACAxgH,EAAAknH,eAAA,IACAlnH,EAAAmtG,UAAA,IACAntG,EAAAugH,aAAA,IACAvgH,EAAAinH,aAAA,IACAjnH,EAAAqrE,QAAA,IACArrE,EAAAwsG,WAAA,IACAxsG,EAAA+kD,MAAA,IACA/kD,EAAAw7E,SAAA,IACAx7E,EAAAqnH,cAAA,IACArnH,EAAAu8D,eAAA,IACAv8D,EAAAkqI,eAAA,IACAlqI,EAAAmgH,QAAA,IACAngH,EAAAulH,QAAA,IACAvlH,EAAA6lE,QAAA,IACA7lE,EAAAs8F,WAAA,IACAt8F,EAAAq8F,WAAA,IACAr8F,EAAAw8F,UAAA,IACAx8F,EAAAknD,aAAA,KACAlnD,EAAAonD,aAAA,IACApnD,EAAAsnD,WAAA,IACAtnD,EAAAqnD,cAAA,IACArnD,EAAAmnD,aAAA,IACAnnD,EAAA88F,QAAA,IACA98F,EAAAolD,UAAA,IACAplD,EAAAonH,aAAA,IACApnH,EAAAs8D,cAAA,IACAt8D,EAAAiqI,cAAA,IACAjqI,EAAAm+H,UAAA,IACAn+H,EAAA24G,YAAA,IACA34G,EAAAs4G,YAAA,IACAt4G,EAAAq4G,YAAA,IACAr4G,EAAA0xD,cAAA,IACA1xD,EAAAwxD,cAAA,IACAxxD,EAAAuxD,cAAA,IACAvxD,EAAA6wD,YAAA,IACA7wD,EAAA0wD,aAAA,IACA1wD,EAAAywD,YAAA,IACAzwD,EAAAuwD,QAAA,IACAvwD,EAAAqlD,WAAA,IACArlD,EAAA0sF,SAAA,IACA1sF,EAAA+sF,WAAA,IACA/sF,EAAA6sF,WAAA,IACA7sF,EAAA4sF,WAAA,IACA5sF,EAAAq5G,aAAA,IACAr5G,EAAAg5G,aAAA,IACAh5G,EAAA+4G,aAAA,IACA/4G,EAAA+xD,eAAA,IACA/xD,EAAA6xD,eAAA,IACA7xD,EAAA4xD,eAAA,IACA5xD,EAAAoxD,aAAA,IACApxD,EAAAixD,cAAA,IACAjxD,EAAAgxD,aAAA,IACAhxD,EAAAimD,MAAA,MAEAjmD,EAAA,kBAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,IACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA,iBAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,IACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA,uBAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,IACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA,mBAAA3E,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA+vE,OAAA,IACA/vE,EAAAokH,SAAA,IACApkH,EAAAmuG,WAAA,IACAnuG,EAAA6kE,OAAA,IACA7kE,EAAAu7G,QAAA,IACAv7G,EAAAskD,UAAA,IACAtkD,EAAA8kH,WAAA,IACA9kH,EAAAm4G,UAAA,IACAn4G,EAAA64G,WAAA,IACA74G,EAAA8pD,SAAA,IACA9pD,EAAA2+G,KAAA,IACA3+G,EAAAk5D,MAAA,IACAl5D,EAAA4lF,OAAA,IACA5lF,EAAA27G,OAAA,IACA37G,EAAA85H,MAAA,IACA95H,EAAAskJ,KAAA,IACAtkJ,EAAAozG,IAAA,IACApzG,EAAAmtI,IAAA,IACAntI,EAAAulI,MAAA,IACAvlI,EAAAm1E,KAAA,IACAn1E,EAAAszE,KAAA,IACAtzE,EAAAs4H,IAAA,IACAt4H,EAAAqyH,MAAA,IACAryH,EAAAspE,MAAA,IACAtpE,EAAAkpG,KAAA,IACAlpG,EAAA24D,MAAA,IACA34D,EAAA6xH,UAAA,IACA7xH,EAAAy6F,KAAA,IACAz6F,EAAAytE,MAAA,IACAztE,EAAAi8E,QAAA,IACAj8E,EAAA4jH,SAAA,IACA5jH,EAAAuqD,GAAA,IACAvqD,EAAAqM,EAAA,IACArM,EAAAqO,EAAA,IACArO,EAAAsO,EAAA,IACAtO,EAAAsnB,EAAA,IACAtnB,EAAAwpB,EAAA,IACAxpB,EAAAytB,EAAA,IACAztB,EAAAmM,EAAA,IACAnM,EAAAgwB,EAAA,IACAhwB,EAAAwxB,EAAA,IACAxxB,EAAAq0B,EAAA,IACAr0B,EAAA60B,EAAA,IACA70B,EAAAwM,EAAA,IACAxM,EAAAgR,EAAA,IACAhR,EAAAiR,EAAA,IACAjR,EAAA85B,EAAA,IACA95B,EAAAg+B,EAAA,IACAh+B,EAAA++B,EAAA,IACA/+B,EAAAm/B,EAAA,IACAn/B,EAAAwgC,EAAA,IACAxgC,EAAA+kC,EAAA,IACA/kC,EAAAgnC,EAAA,IACAhnC,EAAAuqC,EAAA,IACAvqC,EAAAirC,EAAA,IACAjrC,EAAA0O,EAAA,IACA1O,EAAA2O,EAAA,IACA3O,EAAA4O,EAAA,IACA5O,EAAAsxD,YAAA,IACAtxD,EAAA4rD,UAAA,IACA5rD,EAAA2xD,aAAA,IACA3xD,EAAAqpD,YAAA,IACArpD,EAAA2xI,WAAA,IACA3xI,EAAA2kH,UAAA,IACA3kH,EAAA+N,EAAA,IACA/N,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAA29D,EAAA,IACA39D,EAAA6R,EAAA,IACA7R,EAAA4wE,EAAA,IACA5wE,EAAAwL,EAAA,IACAxL,EAAAkd,EAAA,IACAld,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAA23F,EAAA,IACA33F,EAAA2L,EAAA,IACA3L,EAAAtD,EAAA,IACAsD,EAAAmvG,EAAA,IACAnvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAAuL,EAAA,IACAvL,EAAAqtH,EAAA,IACArtH,IAAA,IACAA,EAAA6uI,EAAA,IACA7uI,EAAAhG,EAAA,IACAgG,EAAAid,EAAA,IACAjd,EAAAwQ,EAAA,IACAxQ,EAAA4L,EAAA,IACA5L,EAAAqiJ,EAAA,IACAriJ,EAAAwwD,UAAA,IACAxwD,EAAAosD,IAAA,IACApsD,EAAA+wD,WAAA,IACA/wD,EAAAupD,WAAA,IACAvpD,EAAAkwE,WAAA,IACAlwE,EAAA+0D,KAAA,IACA/0D,EAAAs9H,SAAA,IACAt9H,EAAA62E,SAAA,IACA72E,EAAAq+I,IAAA,IACAr+I,EAAA40E,OAAA,IACA50E,EAAA2wH,QAAA,IACA3wH,EAAAs9D,SAAA,IACAt9D,EAAAilH,YAAA,IACAjlH,EAAAskH,aAAA,IACAtkH,EAAA48E,cAAA,IACA58E,EAAA88E,cAAA,IACA98E,EAAA+8E,eAAA,IACA/8E,EAAAgyE,GAAA,IACAhyE,EAAA20E,GAAA,IACA30E,EAAAusE,OAAA,IACAvsE,EAAAq+D,OAAA,IACAr+D,EAAAs+D,UAAA,IACAt+D,EAAA67G,eAAA,IACA77G,EAAAi4G,UAAA,IACAj4G,EAAA8yD,OAAA,IACA9yD,EAAAglH,eAAA,IACAhlH,EAAAqkH,aAAA,IACArkH,EAAA0kH,cAAA,IACA1kH,EAAA68E,eAAA,IACA78E,EAAA0rE,SAAA,IACA1rE,EAAAq8G,YAAA,IACAr8G,EAAA+jH,aAAA,IACA/jH,EAAAy7E,MAAA,IACAz7E,EAAA6wC,MAAA,IACA7wC,EAAA63D,WAAA,IACA73D,EAAAwnI,MAAA,IACAxnI,EAAA29F,OAAA,IACA39F,EAAAgyD,MAAA,IACAhyD,EAAAqlE,UAAA,IACArlE,EAAAsjE,SAAA,IACAtjE,EAAAoqH,KAAA,IACApqH,EAAA60D,QAAA,IACA70D,EAAAylF,aAAA,IACAzlF,EAAAixG,OAAA,IACAjxG,EAAA+zD,MAAA,IACA/zD,EAAAgsE,OAAA,IACAhsE,EAAA4hB,GAAA,IACA5hB,EAAAu1G,YAAA,IACAv1G,EAAA23B,OAAA,IACA33B,EAAAs9B,OAAA,IACAt9B,EAAA+5B,GAAA,IACA/5B,EAAAw1G,aAAA,IACAx1G,EAAA6xC,GAAA,IACA7xC,EAAA0lE,SAAA,IACA1lE,EAAAg9F,OAAA,IACAh9F,EAAA41G,OAAA,IACA51G,EAAA+wG,GAAA,IACA/wG,EAAA64E,WAAA,IACA74E,EAAAqyB,UAAA,IACAryB,EAAAgnE,OAAA,IACAhnE,EAAA8vC,OAAA,IACA9vC,EAAA+wI,cAAA,IACA/wI,EAAAynE,OAAA,IACAznE,EAAAusC,UAAA,IACAvsC,EAAA+jE,OAAA,IACA/jE,EAAAksC,OAAA,IACAlsC,EAAA2iB,YAAA,IACA3iB,EAAAivC,OAAA,IACAjvC,EAAAsnC,YAAA,IACAtnC,EAAAm8I,OAAA,IACAn8I,EAAAowH,aAAA,IACApwH,EAAA8nE,YAAA,IACA9nE,EAAA+pC,MAAA,IACA/pC,EAAA4nC,UAAA,IACA5nC,EAAA4lD,QAAA,IACA5lD,EAAAinC,OAAA,IACAjnC,EAAAkyI,QAAA,IACAlyI,EAAA0qB,UAAA,IACA1qB,EAAA+nB,OAAA,IACA/nB,EAAAq5D,YAAA,IACAr5D,EAAAq8D,UAAA,IACAr8D,EAAAyrB,QAAA,IACAzrB,EAAAo0D,OAAA,IACAp0D,EAAA0mD,MAAA,IACA1mD,EAAAg5B,aAAA,IACAh5B,EAAA63F,OAAA,IACA73F,EAAAuhD,OAAA,IACAvhD,EAAAslC,aAAA,IACAtlC,EAAA2lB,OAAA,IACA3lB,EAAAwqD,OAAA,IACAxqD,EAAA6qB,WAAA,IACA7qB,EAAA2vH,OAAA,IACA3vH,EAAA6vH,SAAA,IACA7vH,EAAAkmF,OAAA,IACAlmF,EAAA88F,QAAA,IACA98F,EAAAs/B,OAAA,IACAt/B,EAAA8uB,aAAA,IACA9uB,EAAAqvI,YAAA,IACArvI,EAAAuwC,YAAA,IACAvwC,EAAAmkB,QAAA,IACAnkB,EAAAwmH,OAAA,IACAxmH,EAAAq0D,SAAA,IACAr0D,EAAAiuC,WAAA,IACAjuC,EAAA+lC,MAAA,IACA/lC,EAAAs8B,QAAA,IACAt8B,EAAAq/B,OAAA,IACAr/B,EAAAijC,OAAA,IACAjjC,EAAA6gE,OAAA,IACA7gE,EAAAkpC,QAAA,IACAlpC,EAAA8yI,MAAA,IACA9yI,EAAA6mI,cAAA,IACA7mI,EAAAw7B,OAAA,IACAx7B,EAAA4jB,OAAA,IACA5jB,EAAAkiB,OAAA,IACAliB,EAAAmlG,SAAA,IACAnlG,EAAA8uI,OAAA,IACA9uI,EAAAklC,OAAA,IACAllC,EAAAu5G,YAAA,IACAv5G,EAAAm9I,UAAA,IACAn9I,EAAA24B,OAAA,IACA34B,EAAAymF,YAAA,IACAzmF,EAAAgqB,YAAA,IACAhqB,EAAAwxC,UAAA,IACAxxC,EAAAwoE,UAAA,IACAxoE,EAAAozD,OAAA,IACApzD,EAAAomG,OAAA,IACApmG,EAAAsxI,QAAA,IACAtxI,EAAA44B,OAAA,IACA54B,EAAA4xB,OAAA,IACA5xB,EAAA8+G,UAAA,IACA9+G,EAAAwyD,UAAA,IACAxyD,EAAAmnH,WAAA,IACAnnH,EAAAyuB,OAAA,IACAzuB,EAAA0yB,WAAA,IACA1yB,EAAAm+H,UAAA,IACAn+H,EAAAgrB,OAAA,IACAhrB,EAAAqlH,OAAA,IACArlH,EAAAqyG,QAAA,IACAryG,EAAA2tC,OAAA,IACA3tC,EAAA4tC,OAAA,IACA5tC,EAAAk8E,aAAA,IACAl8E,EAAAitB,IAAA,IACAjtB,EAAA+lB,SAAA,IACA/lB,EAAAk6F,aAAA,IACAl6F,EAAAigI,OAAA,IACAjgI,EAAA+sE,QAAA,IACA/sE,EAAAspC,QAAA,IACAtpC,EAAAgiB,OAAA,IACAhiB,EAAAsjB,UAAA,IACAtjB,EAAA+oE,OAAA,IACA/oE,EAAAuiJ,OAAA,IACAviJ,EAAAstF,QAAA,IACAttF,EAAAi6B,OAAA,IACAj6B,EAAAovG,OAAA,IACApvG,EAAAokD,QAAA,IACApkD,EAAAutH,OAAA,IACAvtH,EAAAiqF,UAAA,IACAjqF,EAAAy6B,YAAA,IACAz6B,EAAAqoC,OAAA,IACAroC,EAAAooB,MAAA,IACApoB,EAAA+kI,MAAA,IACA/kI,EAAA0uI,YAAA,IACA1uI,EAAAm7B,UAAA,IACAn7B,EAAAukG,GAAA,IACAvkG,EAAA4qF,OAAA,IACA5qF,EAAA8xG,cAAA,IACA9xG,EAAAmsB,QAAA,IACAnsB,EAAAihE,OAAA,IACAjhE,EAAA0mI,cAAA,IACA1mI,EAAAujC,SAAA,IACAvjC,EAAA85F,OAAA,IACA95F,EAAA21B,aAAA,IACA31B,EAAA22B,OAAA,IACA32B,EAAAgqI,UAAA,IACAhqI,EAAA0oE,WAAA,IACA1oE,EAAA+yB,OAAA,IACA/yB,EAAAqzB,QAAA,IACArzB,EAAA62B,OAAA,IACA72B,EAAAg0G,QAAA,IACAh0G,EAAA06F,UAAA,IACA16F,EAAAkwG,YAAA,IACAlwG,EAAA0tG,OAAA,IACA1tG,EAAA8oC,cAAA,IACA9oC,EAAAypB,OAAA,IACAzpB,EAAA4rE,QAAA,IACA5rE,EAAA83E,OAAA,IACA93E,EAAA00G,WAAA,IACA10G,EAAAojC,OAAA,IACApjC,EAAA6jC,aAAA,IACA7jC,EAAAm8B,cAAA,IACAn8B,EAAAkiE,OAAA,IACAliE,EAAAmxG,OAAA,IACAnxG,EAAA8lB,OAAA,IACA9lB,EAAAowI,OAAA,IACApwI,EAAAulH,QAAA,IACAvlH,EAAA2nB,OAAA,IACA3nB,EAAA2mH,aAAA,IACA3mH,EAAA25B,OAAA,IACA35B,EAAAo2G,OAAA,IACAp2G,EAAAy/B,aAAA,IACAz/B,EAAAi3B,aAAA,IACAj3B,EAAA2kB,OAAA,IACA3kB,EAAAqkB,QAAA,IACArkB,EAAAskB,MAAA,IACAtkB,EAAA49B,OAAA,IACA59B,EAAA+jJ,WAAA,IACA/jJ,EAAA4pB,OAAA,IACA5pB,EAAA0zB,QAAA,IACA1zB,EAAAozF,aAAA,IACApzF,EAAA6iG,MAAA,IACA7iG,EAAAiyB,YAAA,IACAjyB,EAAA+mG,OAAA,IACA/mG,EAAA0gI,aAAA,IACA1gI,EAAAs8F,WAAA,IACAt8F,EAAA4wG,UAAA,IACA5wG,EAAA4vI,UAAA,IACA5vI,EAAA0sG,SAAA,IACA1sG,EAAAm4E,aAAA,IACAn4E,EAAAkvE,IAAA,IACAlvE,EAAA0jJ,OAAA,IACA1jJ,EAAAmnG,aAAA,IACAnnG,EAAA40G,YAAA,IACA50G,EAAAksF,QAAA,IACAlsF,EAAAqtB,KAAA,MAEArtB,EAAA2lM,cAAA,EAAAtqM,EAAAqmB,uBAAA,SAAA1hB,GACAA,EAAAg7H,MAAA,IACAh7H,EAAA8tJ,GAAA,IACA9tJ,EAAA+tJ,GAAA,IACA/tJ,EAAAguJ,KAAA,IACAhuJ,EAAAiuJ,GAAA,IACAjuJ,EAAAkuJ,GAAA,IACAluJ,EAAAmuJ,GAAA,IACAnuJ,EAAAouJ,KAAA,IACApuJ,EAAAquJ,KAAA,IACAruJ,EAAAsuJ,KAAA,IACAtuJ,EAAAuuJ,IAAA,IACAvuJ,EAAAwuJ,IAAA,IACAxuJ,EAAAyuJ,IAAA,IACAzuJ,EAAA0uJ,IAAA,IACA1uJ,EAAA2uJ,IAAA,IACA3uJ,EAAA4uJ,IAAA,IACA5uJ,EAAA6uJ,KAAA,IACA7uJ,EAAA8uJ,IAAA,IACA9uJ,EAAA+uJ,IAAA,IACA/uJ,EAAAgvJ,IAAA,IACAhvJ,EAAAivJ,IAAA,IACAjvJ,EAAAkvJ,IAAA,IACAlvJ,EAAAmvJ,IAAA,IACAnvJ,EAAAovJ,IAAA,IACApvJ,EAAAqvJ,IAAA,IACArvJ,EAAAsvJ,IAAA,IACAtvJ,EAAAuvJ,IAAA,IACAvvJ,EAAAwvJ,IAAA,IACAxvJ,EAAAyvJ,IAAA,IACAzvJ,EAAA0vJ,GAAA,IACA1vJ,EAAA2vJ,GAAA,IACA3vJ,EAAA4vJ,GAAA,IACA5vJ,EAAA6vJ,GAAA,IACA7vJ,EAAA8vJ,IAAA,IACA9vJ,EAAA+vJ,IAAA,IACA/vJ,EAAAgwJ,IAAA,IACAhwJ,EAAAiwJ,IAAA,IACAjwJ,EAAAkwJ,IAAA,IACAlwJ,EAAAmwJ,IAAA,IACAnwJ,EAAAowJ,IAAA,IACApwJ,EAAAqwJ,IAAA,IACArwJ,EAAAswJ,IAAA,IACAtwJ,EAAAuwJ,IAAA,IACAvwJ,EAAAwwJ,IAAA,IACAxwJ,EAAAywJ,IAAA,IACAzwJ,EAAA0wJ,IAAA,IACA1wJ,EAAA2wJ,IAAA,IACA3wJ,EAAA4wJ,IAAA,IACA5wJ,EAAA6wJ,IAAA,IACA7wJ,EAAA8wJ,IAAA,IACA9wJ,EAAA+wJ,IAAA,IACA/wJ,EAAAgxJ,IAAA,IACAhxJ,EAAAixJ,IAAA,IACAjxJ,EAAAkxJ,IAAA,IACAlxJ,EAAAmxJ,IAAA,IACAnxJ,EAAAoxJ,IAAA,IACApxJ,EAAAqxJ,IAAA,IACArxJ,EAAAsxJ,IAAA,IACAtxJ,EAAAuxJ,IAAA,IACAvxJ,EAAAwxJ,IAAA,IACAxxJ,EAAAyxJ,IAAA,IACAzxJ,EAAA0xJ,IAAA,IACA1xJ,EAAA2xJ,IAAA,IACA3xJ,EAAA4xJ,IAAA,IACA5xJ,EAAA6xJ,IAAA,IACA7xJ,EAAA8xJ,IAAA,IACA9xJ,EAAA+xJ,IAAA,IACA/xJ,EAAAgyJ,IAAA,IACAhyJ,EAAAiyJ,IAAA,IACAjyJ,EAAAkyJ,IAAA,IACAlyJ,EAAAmyJ,IAAA,IACAnyJ,EAAAoyJ,IAAA,IACApyJ,EAAAqyJ,IAAA,IACAryJ,EAAAsyJ,IAAA,IACAtyJ,EAAAuyJ,IAAA,IACAvyJ,EAAAwyJ,IAAA,IACAxyJ,EAAAyyJ,IAAA,IACAzyJ,EAAA0yJ,IAAA,IACA1yJ,EAAA2yJ,IAAA,IACA3yJ,EAAA4yJ,IAAA,IACA5yJ,EAAA6yJ,KAAA,IACA7yJ,EAAA8yJ,IAAA,IACA9yJ,EAAA+yJ,KAAA,IACA/yJ,EAAAgzJ,IAAA,IACAhzJ,EAAAizJ,IAAA,IACAjzJ,EAAAkzJ,IAAA,IACAlzJ,EAAAmzJ,IAAA,IACAnzJ,EAAAozJ,IAAA,IACApzJ,EAAAqzJ,IAAA,IACArzJ,EAAAszJ,IAAA,IACAtzJ,EAAAuzJ,IAAA,IACAvzJ,EAAAwzJ,IAAA,IACAxzJ,EAAAyzJ,IAAA,IACAzzJ,EAAA0zJ,IAAA,IACA1zJ,EAAA2zJ,KAAA,IACA3zJ,EAAAy5J,IAAA,IACAz5J,EAAA05J,IAAA,IACA15J,EAAA25J,IAAA,IACA35J,EAAA45J,IAAA,IACA55J,EAAA65J,IAAA,IACA75J,EAAA85J,IAAA,IACA95J,EAAA+5J,KAAA,IACA/5J,EAAAg6J,IAAA,IACAh6J,EAAAi6J,KAAA,IACAj6J,EAAAk6J,IAAA,IACAl6J,EAAAm6J,IAAA,IACAn6J,EAAAo6J,IAAA,IACAp6J,EAAAq6J,IAAA,IACAr6J,EAAAs6J,IAAA,IACAt6J,EAAA4zJ,KAAA,IACA5zJ,EAAA6zJ,KAAA,IACA7zJ,EAAA8zJ,KAAA,IACA9zJ,EAAA+zJ,KAAA,IACA/zJ,EAAAg0J,KAAA,IACAh0J,EAAAi0J,KAAA,IACAj0J,EAAAk0J,KAAA,IACAl0J,EAAAm0J,KAAA,IACAn0J,EAAAo0J,KAAA,IACAp0J,EAAAq0J,KAAA,IACAr0J,EAAAs0J,KAAA,IACAt0J,EAAAu0J,KAAA,IACAv0J,EAAAw0J,KAAA,IACAx0J,EAAAy0J,KAAA,IACAz0J,EAAA00J,KAAA,IACA10J,EAAA20J,KAAA,IACA30J,EAAA40J,KAAA,IACA50J,EAAA60J,KAAA,IACA70J,EAAA80J,KAAA,IACA90J,EAAA+0J,KAAA,IACA/0J,EAAAg1J,KAAA,IACAh1J,EAAAi1J,KAAA,IACAj1J,EAAAk1J,KAAA,IACAl1J,EAAAm1J,KAAA,IACAn1J,EAAAo1J,KAAA,IACAp1J,EAAAq1J,KAAA,IACAr1J,EAAAs1J,KAAA,IACAt1J,EAAAu1J,KAAA,IACAv1J,EAAAw1J,KAAA,IACAx1J,EAAAy1J,KAAA,IACAz1J,EAAA01J,KAAA,IACA11J,EAAA21J,KAAA,IACA31J,EAAA41J,KAAA,IACA51J,EAAA61J,KAAA,IACA71J,EAAA81J,KAAA,IACA91J,EAAA+1J,KAAA,IACA/1J,EAAAg2J,KAAA,IACAh2J,EAAAi2J,KAAA,IACAj2J,EAAAk2J,KAAA,IACAl2J,EAAAm2J,KAAA,IACAn2J,EAAAo2J,KAAA,IACAp2J,EAAAq2J,KAAA,IACAr2J,EAAAs2J,KAAA,IACAt2J,EAAAu2J,KAAA,IACAv2J,EAAAw2J,KAAA,IACAx2J,EAAAy2J,KAAA,IACAz2J,EAAA02J,KAAA,IACA12J,EAAA22J,KAAA,IACA32J,EAAA42J,KAAA,IACA52J,EAAA62J,KAAA,IACA72J,EAAA82J,KAAA,IACA92J,EAAA+2J,KAAA,IACA/2J,EAAAg3J,KAAA,IACAh3J,EAAAi3J,KAAA,KACAj3J,EAAAk3J,KAAA,IACAl3J,EAAAm3J,KAAA,IACAn3J,EAAAo3J,KAAA,IACAp3J,EAAAq3J,KAAA,IACAr3J,EAAAs3J,KAAA,IACAt3J,EAAAu3J,KAAA,IACAv3J,EAAAw3J,KAAA,IACAx3J,EAAAy3J,KAAA,IACAz3J,EAAA03J,KAAA,IACA13J,EAAA23J,KAAA,IACA33J,EAAA43J,KAAA,IACA53J,EAAA63J,KAAA,IACA73J,EAAA83J,KAAA,IACA93J,EAAA+3J,KAAA,IACA/3J,EAAAg4J,KAAA,IACAh4J,EAAAi4J,KAAA,IACAj4J,EAAAk4J,KAAA,IACAl4J,EAAAm4J,KAAA,IACAn4J,EAAAo4J,KAAA,IACAp4J,EAAAq4J,KAAA,IACAr4J,EAAAs4J,KAAA,IACAt4J,EAAAu4J,KAAA,IACAv4J,EAAAw4J,KAAA,IACAx4J,EAAAy4J,KAAA,IACAz4J,EAAA04J,KAAA,IACA14J,EAAA24J,KAAA,IACA34J,EAAA44J,KAAA,IACA54J,EAAA64J,KAAA,IACA74J,EAAA84J,KAAA,IACA94J,EAAA+4J,KAAA,IACA/4J,EAAAg5J,KAAA,IACAh5J,EAAAi5J,KAAA,IACAj5J,EAAAk5J,KAAA,IACAl5J,EAAAm5J,KAAA,IACAn5J,EAAAo5J,KAAA,IACAp5J,EAAAq5J,KAAA,IACAr5J,EAAAs5J,KAAA,IACAt5J,EAAAu5J,KAAA,IACAv5J,EAAAw5J,KAAA,QAGApkK,EAAAskP,+CCj4FAxkP,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA41M,iBAAA51M,EAAA21M,uBAEA,IAAA1vM,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1B0vM,EAAA,WACA,SAAAA,EAAAt4L,GACA3c,KAAA2c,QACA3c,KAAAg2M,aACAh2M,KAAAg1K,MAAA,KACAh1K,KAAA8nN,KAAA,KAgEA,OA9DA7S,EAAAr1M,WACAgwQ,UAAA,WACA5vQ,KAAA8nN,KAAA9nN,KAAAg1K,MACAh1K,KAAAg1K,MAAAh1K,KAAA2c,MAAAyrP,YAEAyH,OAAA,SAAA3rQ,GACA,OAAAlE,KAAAg1K,MAAA9wK,WACAlE,KAAA4vQ,iBAKAE,OAAA,SAAA5rQ,GACA,GAAAlE,KAAA6vQ,OAAA3rQ,GACA,SAEA,UAAAoB,EAAAyD,YAAA,4BAAA/I,KAAAg1K,MAAA9wK,KAAA,aAAAA,EAAA,MAEA+N,MAAA,WAKA,OAJAjS,KAAA4vQ,YACA5vQ,KAAA8vQ,OAAAC,EAAAC,QACAhwQ,KAAAiwQ,aACAjwQ,KAAA8vQ,OAAAC,EAAAG,QACAlwQ,KAAAg2M,WAEAi6D,WAAA,WACA,OACA,GAAAjwQ,KAAA6vQ,OAAAE,EAAAI,QACAnwQ,KAAAg2M,UAAAx4L,KAAAxd,KAAA8nN,KAAAxoN,YACS,GAAAU,KAAA6vQ,OAAAE,EAAAK,UACTpwQ,KAAAg2M,UAAAx4L,KAAAxd,KAAA8nN,KAAAxoN,WACS,KAAAU,KAAA6vQ,OAAAE,EAAAC,QAGT,OAFAhwQ,KAAAqwQ,mBAMAA,eAAA,WACA,IAAAC,EAAAtwQ,KAAAg2M,UAAAl0M,OAIA,GAHA9B,KAAAg2M,UAAAx4L,KAAA,WACAxd,KAAAiwQ,aACAjwQ,KAAA8vQ,OAAAC,EAAAG,QACAlwQ,KAAA6vQ,OAAAE,EAAAQ,IACAvwQ,KAAAg2M,UAAAs6D,GAAAtwQ,KAAAg2M,UAAAl0M,OACA9B,KAAAg2M,UAAAs6D,EAAA,YACO,KAAAtwQ,KAAA6vQ,OAAAE,EAAAC,QAYP,UAAA1qQ,EAAAyD,YAAA,2CAXA,IAAAynQ,EAAAxwQ,KAAAg2M,UAAAl0M,OACA9B,KAAAg2M,UAAAx4L,KAAA,WACA,IAAAizP,EAAAzwQ,KAAAg2M,UAAAl0M,OACA9B,KAAAiwQ,aACAjwQ,KAAA8vQ,OAAAC,EAAAG,QACAlwQ,KAAA8vQ,OAAAC,EAAAW,QACA1wQ,KAAAg2M,UAAAw6D,GAAAxwQ,KAAAg2M,UAAAl0M,OACA9B,KAAAg2M,UAAAw6D,EAAA,OACAxwQ,KAAAg2M,UAAAs6D,GAAAG,EACAzwQ,KAAAg2M,UAAAs6D,EAAA,WAMAr7D,EArEA,GAuEA86D,GACAC,OAAA,EACAE,OAAA,EACAC,OAAA,EACAC,SAAA,EACAG,GAAA,EACAG,OAAA,GAEAC,EAAA,WACA,SAAAA,EAAAzsQ,EAAA5E,GACAU,KAAAkE,OACAlE,KAAAV,QAEA,IAAAsxQ,EAAAzxQ,OAAAe,OAAA,MAYA,OAXAywQ,EAAAE,YAAA,SAAAh6D,GAEA,OADA+5D,EAAA/5D,KAIA+5D,EAAA/5D,GAAA,IAAA85D,EAAAZ,EAAAK,SAAAv5D,KAEA85D,EAAAX,OAAA,IAAAW,EAAAZ,EAAAC,OAAA,KACAW,EAAAT,OAAA,IAAAS,EAAAZ,EAAAG,OAAA,KACAS,EAAAJ,GAAA,IAAAI,EAAAZ,EAAAQ,GAAA,MACAI,EAAAD,OAAA,IAAAC,EAAAZ,EAAAW,OAAA,UACAC,EAjBA,GAmBA37D,EAAA,WACA,SAAAA,EAAA7sM,GACAnI,KAAAmI,SACAnI,KAAAsf,WACAtf,KAAAkhB,UAiFA,OA/EA8zL,EAAAp1M,WACA0f,SAAA,WACA,OAAAtf,KAAAqhB,YAAArhB,KAAAmI,OAAAnC,WAEAoiQ,SAAA,WAGA,IAFA,IAAAxlP,KACAlV,EAAA1N,KAAAqhB,cACA,CACA,GAAA3T,EAAA,EACA,OAAAlI,EAAA3F,IAEA,GAAA+iB,EACA,KAAAlV,GAAA,KAAAA,IACAkV,WAES,QAAAlV,EACTkV,UACS,OAAAtd,EAAAgI,SAAAI,GACT,MAEAA,EAAA1N,KAAAsf,WAEA,SAAA5R,GACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WAAAijQ,EAAAZ,EAAAI,OAAAnwQ,KAAAuhB,aACA,SAEA,OADAvhB,KAAAsf,WACAqxP,EAAAX,OACA,SAEA,OADAhwQ,KAAAsf,WACAqxP,EAAAT,OAEA,IAAAhvP,EAAAlhB,KAAAkhB,OAGA,IAFAA,EAAApf,OAAA,EACAof,EAAA,GAAAS,OAAAC,aAAAlU,IACAA,EAAA1N,KAAAsf,aAAA,IAAA5R,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAwT,EAAA1D,KAAAmE,OAAAC,aAAAlU,IAEA,IAAAtK,EAAA8d,EAAAmB,KAAA,IACA,OAAAjf,EAAA0tQ,eACA,SACA,OAAAH,EAAAJ,GACA,aACA,OAAAI,EAAAD,OACA,QACA,OAAAC,EAAAE,YAAAztQ,KAGAme,UAAA,WACA,IAAA7T,EAAA1N,KAAAqhB,YACAH,EAAAlhB,KAAAkhB,OAGA,IAFAA,EAAApf,OAAA,EACAof,EAAA,GAAAS,OAAAC,aAAAlU,IACAA,EAAA1N,KAAAsf,aAAA,IACA5R,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,IACAwT,EAAA1D,KAAAmE,OAAAC,aAAAlU,IAKA,IAAApO,EAAAoiM,WAAAxgL,EAAAmB,KAAA,KACA,GAAAy0J,MAAAx3K,GACA,UAAAgG,EAAAyD,YAAA,kCAAAzJ,GAEA,OAAAA,IAGA01M,EArFA,GAuFA31M,EAAA21M,kBACA31M,EAAA41M,qDCnMA91M,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA2kP,sBAEA,IAAA1+O,EAAYC,EAAQ,KAEpBy+O,EAAA,SAAA+sB,GAGA,SAAA/sB,EAAA+sB,GAEA/wQ,KAAAqR,GAAA0/P,EAAA,WAAAA,EADA,WAEA/wQ,KAAAuR,GAAAw/P,EAAA,WAAAA,EAFA,WAiGA,OA7FA/sB,EAAApkP,WACAqkP,OAAA,SAAA52O,GACA,IAAAwX,SACA/iB,SACA,MAAAwD,EAAA8P,UAAA/H,GAAA,CACAwX,EAAA,IAAAjf,WAAA,EAAAyH,EAAAvL,QACAA,EAAA,EACA,QAAAH,EAAA,EAAAC,EAAAyL,EAAAvL,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAA8H,EAAA4D,EAAAgI,WAAA1T,GACA8H,GAAA,IACAob,EAAA/iB,KAAA2H,GAEAob,EAAA/iB,KAAA2H,IAAA,EACAob,EAAA/iB,KAAA,IAAA2H,QAGO,QAAAnE,EAAAu/M,eAAAx3M,GAIP,UAAAqP,MAAA,gFAFA5a,GADA+iB,EAAAxX,GACA5F,WAeA,IAXA,IAAAupQ,EAAAlvQ,GAAA,EACAmvQ,EAAAnvQ,EAAA,EAAAkvQ,EACAE,EAAA,IAAA72F,YAAAx1J,EAAA9d,OAAA,EAAAiqQ,GACA12E,EAAA,EACA62E,EAAA,EACA9/P,EAAArR,KAAAqR,GACAE,EAAAvR,KAAAuR,GACA6/P,EAAA,WACAC,EAAA,UAGA5mG,EAAA,EAAsBA,EAAAumG,EAAkBvmG,IACxC,EAAAA,EAOAp5J,EAAA,GADAA,GADAA,GADAipL,GADAA,GADAA,GADAA,EAAA42E,EAAAzmG,IACA2mG,EA3CA,WAsCAA,MAKA92E,EA1CA,QA2CA,GAAAA,IAAA,IACA+2E,EA7CA,WAuCAA,MAMA/2E,EA5CA,QA8CA,GAAAjpL,IAAA,IACA,WAQAE,EAAA,GADAA,GADAA,GADA4/P,GADAA,GADAA,GADAA,EAAAD,EAAAzmG,IACA2mG,EAnDA,WAsCAA,MAaAD,EAlDA,QAmDA,GAAAA,IAAA,IACAE,EArDA,WAuCAA,MAcAF,EApDA,QAsDA,GAAA5/P,IAAA,IACA,WAIA,OADA+oL,EAAA,EACA22E,GACA,OACA32E,GAAAz1K,EAAA,EAAAmsP,EAAA,OACA,OACA12E,GAAAz1K,EAAA,EAAAmsP,EAAA,MACA,OAIA12E,GADAA,GADAA,GADAA,GAAAz1K,EAAA,EAAAmsP,IACAI,EAnEA,WAsCAA,MA6BA92E,EAlEA,QAmEA,GAAAA,IAAA,IACA+2E,EArEA,WAuCAA,MA8BA/2E,EApEA,MAqEA,EAAA02E,EACA3/P,GAAAipL,EAEA/oL,GAAA+oL,EAKA,OAFAt6L,KAAAqR,KACArR,KAAAuR,KACAvR,MAEAqkP,UAAA,WACA,IAAAhzO,EAAArR,KAAAqR,GACAE,EAAAvR,KAAAuR,GAEAF,EAAA,YADAA,GAAAE,IAAA,GAnFA,WAoFA,MAAAF,EAnFA,MAsFAA,EAAA,WADAA,IADAE,EAAA,WAAAA,EArFA,YAqFA,YAAAA,GAAA,GAAAF,IAAA,IArFA,cAqFA,MACA,GAtFA,WAuFA,MAAAA,EAtFA,MAyFA,QAAA1P,EAAA,EAAAwoK,GADA94J,IADAE,EAAA,WAAAA,EAxFA,YAwFA,YAAAA,GAAA,GAAAF,IAAA,IAxFA,cAwFA,MACA,EACAE,GAAAnO,EAAA,GAA+CzB,EAAAwoK,EAAAroK,OAAgBH,IAAA,CAE/D,IADA,IAAAmlN,GAAA38C,EAAAxoK,KAAA,GAAAwB,SAAA,IACA2jN,EAAAhlN,OAAA,GACAglN,EAAA,IAAAA,EAEA1jN,GAAA0jN,EAEA,OAAA1jN,IAGA4gP,EArGA,GAuGA3kP,EAAA2kP,mDC9GA7kP,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAsyO,gBAEA,IAAAznE,EAA4a,SAAAC,EAAAxoK,GAA2B,GAAAF,MAAAC,QAAAyoK,GAA0B,OAAAA,EAAc,GAAA3qK,OAAAC,YAAAN,OAAAgrK,GAA2C,OAAxf,SAAAA,EAAAxoK,GAAiC,IAAAyoK,KAAeC,KAAeC,KAAgBC,SAAoB,IAAM,QAAAC,EAAAC,EAAAN,EAAA3qK,OAAAC,cAA0C4qK,GAAAG,EAAAC,EAAAC,QAAAvoJ,QAA4CioJ,EAAA5sJ,KAAAgtJ,EAAAlrK,QAAqBqC,GAAAyoK,EAAAtoK,SAAAH,GAAlC0oK,OAAyE,MAAAV,GAAcW,KAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAAE,QAAAF,EAAAE,SAA2C,QAAU,GAAAL,EAAA,MAAAC,GAAsB,OAAAH,EAA3X,CAAwfD,EAAAxoK,GAAuC,UAAAipK,UAAA,yDAEjkBtlK,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BylK,EAAkBzlK,EAAQ,KAE1B2W,EAAc3W,EAAQ,KAEtB8W,EAAmB9W,EAAQ,KAE3B28N,EAAW38N,EAAQ,KAEnBosO,EAAA,WACA,SAAA2/B,EAAAliC,EAAAgD,GACA,OAAAA,KAAAjD,UAAAC,GACAgD,EAAAj+N,OAAAi7N,GAAAvvB,MAAA,SAAA1E,GAEA,SADA71M,EAAA2O,MAAA,uDAAAknM,KAAAj+B,UACAkyD,IAGA9tO,QAAAC,QAAA6tO,GAEA,SAAAmiC,EAAAjyQ,EAAAkyQ,EAAAC,EAAA/6P,GAEA,OADApX,EAAAkyQ,EAAAlyQ,EAAAmyQ,GACA,IAAAnyQ,EAAAoX,IAAApX,EAEA,SAAAoyQ,EAAAliQ,EAAAkB,EAAAU,EAAAC,EAAAC,EAAAC,GACA,IAIA5P,EACA4K,EACAiF,EAEAC,EARA3P,EAAAwP,EAAAC,EACA3B,EAAAc,GAAA,MAAA9K,WAAA9D,GAAA4O,GAAA,OAAArC,YAAAvM,GAAA,IAAAu4K,YAAAv4K,GACA4P,EAAAN,EAAAE,EACAK,EAAAN,EAAAE,EAIAK,EAAA,EAEAC,EAAA,IAAAxD,YAAAiD,GACAQ,EAAAV,EACA,IAAAzP,EAAA,EAAeA,EAAA2P,EAAQ3P,IACvBkQ,EAAAlQ,GAAAuN,KAAA6C,MAAApQ,EAAA+P,GAEA,IAAA/P,EAAA,EAAeA,EAAA4P,EAAQ5P,IAEvB,IADA6P,EAAAtC,KAAA6C,MAAApQ,EAAAgQ,GAAAG,EACAvF,EAAA,EAAiBA,EAAA+E,EAAQ/E,IACzBkF,EAAAD,EAAAK,EAAAtF,GACAqD,EAAAgC,KAAApC,EAAAiC,GAGA,OAAA7B,EAEA,SAAA+hO,EAAAvhE,GACA,IAAA3vK,EAAA2vK,EAAA3vK,KACA0R,EAAAi+J,EAAAj+J,IACAi9N,EAAAh/D,EAAAg/D,MACAuiC,EAAAvhG,EAAAkhE,SACAA,WAAAqgC,KACAC,EAAAxhG,EAAAogE,MACAA,WAAAohC,EAAA,KAAAA,EACAC,EAAAzhG,EAAAmjD,KACAA,WAAAs+C,EAAA,KAAAA,EACAC,EAAA1hG,EAAA2hG,OACAA,WAAAD,KACA1/P,EAAAg+J,EAAAh+J,mBAEApS,KAAAovO,QACA,IAAAvsO,EAAAusO,EAAAvsO,KACA,GAAAA,EAAAP,IAAA,WACA,IAAAsc,EAAA/b,EAAA1C,IAAA,UAAAJ,KACA,iBAAA6e,EAAA,CACA,IAAAujN,EAAA,IAAAD,EAAAplD,SACAqlD,EAAAx2C,qBAAAyjD,EAAAjnO,QACAinO,EAAAjnO,OAAAvB,QACAwoO,EAAA9qN,iBAAA69M,EAAA79M,iBACA8qN,EAAAr+N,SAAAoxN,EAAA99C,oBACO,gBAAAzlK,IACPwwN,EAAA9qN,iBAAA,EACA8qN,EAAAr+N,SAAA,GAKA,GAFA/Q,KAAAuQ,MAAA1N,EAAA1C,IAAA,aACAH,KAAAwQ,OAAA3N,EAAA1C,IAAA,cACAH,KAAAuQ,MAAA,GAAAvQ,KAAAwQ,OAAA,EACA,UAAAlL,EAAAyD,YAAA,wBAAA/I,KAAAuQ,MAAA,eAAAvQ,KAAAwQ,QAEAxQ,KAAAgzM,YAAAnwM,EAAA1C,IAAA,uBACAH,KAAAmoB,UAAAtlB,EAAA1C,IAAA,sBACAH,KAAAgyQ,MAAAnvQ,EAAA1C,IAAA,aACA,IAAAmkB,EAAA8qN,EAAA9qN,iBACA,IAAAA,KACAA,EAAAzhB,EAAA1C,IAAA,2BACA,CACA,IAAAH,KAAAmoB,UAGA,UAAA7iB,EAAAyD,YAAA,wCAAA/I,KAAAmoB,WAFA7D,EAAA,EAOA,GADAtkB,KAAA0Q,IAAA4T,GACAtkB,KAAAmoB,UAAA,CACA,IAAAmnN,EAAAzsO,EAAA1C,IAAA,mBACA,IAAAmvO,EAEA,UADAhqO,EAAA+Q,MAAA,kDACA+4N,EAAAr+N,UACA,OACAu+N,EAAA9pO,EAAA1F,KAAAK,IAAA,cACA,MACA,OACAmvO,EAAA9pO,EAAA1F,KAAAK,IAAA,aACA,MACA,OACAmvO,EAAA9pO,EAAA1F,KAAAK,IAAA,cACA,MACA,QACA,UAAAuc,MAAA,mBAAA1c,KAAA+Q,SAAA,oCAGA,IAAAoyM,EAAAmuB,EAAAn/N,EAAA,KACAnS,KAAAsvO,WAAAtkE,EAAA37J,WAAA4C,MAAAq9N,EAAA7uO,EAAA0iN,EAAA/wM,GACApS,KAAA+Q,SAAA/Q,KAAAsvO,WAAAv+N,SAIA,GAFA/Q,KAAAmU,OAAAtR,EAAArB,SAAA,cACAxB,KAAAiyQ,eACAjyQ,KAAAmU,SAAAnU,KAAAsvO,aAAAtvO,KAAAsvO,WAAAp7N,gBAAAlU,KAAAmU,SAAA49P,IAAA/mG,EAAA37J,WAAA6E,gBAAAlU,KAAAmU,OAAA,KACAnU,KAAAiyQ,eACA,IAAAv7P,GAAA,GAAA4N,GAAA,EACAtkB,KAAAkyQ,sBACAlyQ,KAAAmyQ,iBACA,QAAAxwQ,EAAA,EAAA4K,EAAA,EAA4B5K,EAAA3B,KAAAmU,OAAArS,OAAwBH,GAAA,IAAA4K,EAAA,CACpD,IAAAooM,EAAA30M,KAAAmU,OAAAxS,GACAizM,EAAA50M,KAAAmU,OAAAxS,EAAA,GACA3B,KAAAkyQ,mBAAA3lQ,GAAAqoM,EAAAD,EACA30M,KAAAmyQ,cAAA5lQ,GAAAmK,EAAAi+L,GAGA67B,EACAxwO,KAAAwwO,MAAA,IAAAmB,GACAlxO,OACA0R,MACAi9N,MAAAoB,EACAc,WACAl/N,uBAEKmhN,KACL,EAAA/tN,EAAAhB,UAAA+uN,GACAA,EAAA1wN,KACA1C,IAAA,kBAIAH,KAAAuzN,KAAA,IAAAoe,GACAlxO,OACA0R,MACAi9N,MAAA7b,EACA+d,WACAygC,UACA3/P,0BARA9M,EAAA2O,MAAA,+CAYAjU,KAAAuzN,QAkYA,OA9XAoe,EAAAQ,WAAA,SAAA9hE,GACAA,EAAAkrC,QAAA,IAWA62D,EACAC,EAXA5xQ,EAAA4vK,EAAA5vK,KACA0R,EAAAk+J,EAAAl+J,IACAi9N,EAAA/+D,EAAA++D,MACAkjC,EAAAjiG,EAAAihE,SACAA,WAAAghC,KACAC,EAAAliG,EAAA+hE,cACAA,WAAAmgC,EAAA,KAAAA,EACAngQ,EAAAi+J,EAAAj+J,mBAEAogQ,EAAAlB,EAAAliC,EAAAgD,GAGA5B,EAAApB,EAAAvsO,KAAA1C,IAAA,SACAozN,EAAA6b,EAAAvsO,KAAA1C,IAAA,QAmBA,OAlBAqwO,GACA4hC,EAAAd,EAAA9gC,EAAA4B,GACAigC,EAAA/wQ,QAAAC,QAAA,QAEA6wQ,EAAA9wQ,QAAAC,QAAA,MACAgyN,KACA/tN,EAAAhB,UAAA+uN,GACA8+C,EAAAf,EAAA/9C,EAAA6e,GACS3wO,MAAAC,QAAA6xN,GACT8+C,EAAA/wQ,QAAAC,QAAAgyN,OAEAjuN,EAAA2O,MAAA,4BACAo+P,EAAA/wQ,QAAAC,QAAA,OAGA8wQ,EAAA/wQ,QAAAC,QAAA,OAGAD,QAAAwuK,KAAA0iG,EAAAJ,EAAAC,IAAAzqG,KAAA,SAAAuqC,GACA,IAAAK,EAAAtoC,EAAAioC,EAAA,GACAsgE,EAAAjgE,EAAA,GACAkgE,EAAAlgE,EAAA,GACAmgE,EAAAngE,EAAA,GAEA,WAAAm/B,GACAlxO,OACA0R,MACAi9N,MAAAqjC,EACAnhC,WACAd,MAAAkiC,EACAn/C,KAAAo/C,EACAvgQ,0BAIAu/N,EAAAC,WAAA,SAAAn/B,GACA,IASA5tL,EAAAljB,EATA+vO,EAAAj/B,EAAAi/B,SACAnhO,EAAAkiM,EAAAliM,MACAC,EAAAiiM,EAAAjiM,OACAqhO,EAAAp/B,EAAAo/B,wBACAC,EAAAr/B,EAAAq/B,cAEA8gC,GAAAriQ,EAAA,MAAAC,EACA4xP,EAAA1wB,EAAAjqO,WAGA,IAAAoqO,GAAAC,GAFA8gC,IAAAxQ,EAIK,GAAAtwB,EAML,KAFAjtN,EAAA,IAAAjf,WAAAgtQ,IACAvwQ,IAAAqvO,GACA/vO,EAAAygQ,EAA4BzgQ,EAAAixQ,EAAoBjxQ,IAChDkjB,EAAAljB,GAAA,SANAkjB,EAAA,IAAAjf,WAAAw8P,IACA//P,IAAAqvO,QAHA7sN,EAAA6sN,EAWA,GAAAI,EACA,IAAAnwO,EAAA,EAAiBA,EAAAygQ,EAAkBzgQ,IACnCkjB,EAAAljB,IAAA,IAGA,OACAkjB,OACAtU,QACAC,WAGAmhO,EAAA/xO,WACAmlB,gBACA,OAAA7V,KAAAwH,IAAA1W,KAAAuQ,MAAAvQ,KAAAwwO,OAAAxwO,KAAAwwO,MAAAjgO,OAAA,EAAAvQ,KAAAuzN,MAAAvzN,KAAAuzN,KAAAhjN,OAAA,IAEAyU,iBACA,OAAA9V,KAAAwH,IAAA1W,KAAAwQ,OAAAxQ,KAAAwwO,OAAAxwO,KAAAwwO,MAAAhgO,QAAA,EAAAxQ,KAAAuzN,MAAAvzN,KAAAuzN,KAAA/iN,QAAA,IAEAqiQ,aAAA,SAAA9rQ,GACA,IAKApF,EAAAC,EALA8O,EAAA1Q,KAAA0Q,IACAK,EAAA/Q,KAAA+Q,SACAohQ,EAAAnyQ,KAAAmyQ,cACAD,EAAAlyQ,KAAAkyQ,mBACAx7P,GAAA,GAAAhG,GAAA,EAEA,OAAAA,EAAA,CAMA,IAAAgT,EAAA,EACA,IAAA/hB,EAAA,EAAAC,EAAA5B,KAAAuQ,MAAAvQ,KAAAwQ,OAAgD7O,EAAAC,EAAQD,IACxD,QAAA4K,EAAA,EAAuBA,EAAAwE,EAAcxE,IACrCxF,EAAA2c,GAAA6tP,EAAAxqQ,EAAA2c,GAAAyuP,EAAA5lQ,GAAA2lQ,EAAA3lQ,GAAAmK,GACAgN,SATA,IAAA/hB,EAAA,EAAAC,EAAAmF,EAAAjF,OAAuCH,EAAAC,EAAQD,IAC/CoF,EAAApF,KAAAoF,EAAApF,IAYAmxQ,cAAA,SAAA/rQ,GACA,IAAA2J,EAAA1Q,KAAA0Q,IACA,OAAAA,EACA,OAAA3J,EAEA,IASAnF,EACAmxQ,EAVAxiQ,EAAAvQ,KAAAuQ,MACAC,EAAAxQ,KAAAwQ,OACAO,EAAA/Q,KAAA+Q,SACAjP,EAAAyO,EAAAC,EAAAO,EACAiiQ,EAAA,EACAt/E,EAAAhjL,GAAA,MAAA9K,WAAA9D,GAAA4O,GAAA,OAAArC,YAAAvM,GAAA,IAAAu4K,YAAAv4K,GACAmxQ,EAAA1iQ,EAAAQ,EACA2F,GAAA,GAAAhG,GAAA,EACA/O,EAAA,EAGA,OAAA+O,EAEA,IADA,IAAA6iN,EAAA2/C,EAAAC,EACA5mQ,EAAA,EAAuBA,EAAAiE,EAAYjE,IAAA,CAGnC,IAFA2mQ,EAAAvxQ,IAAA,EAAAsxQ,GACAE,EAAAxxQ,EAAAsxQ,EACAtxQ,EAAAuxQ,GACAH,EAAAhsQ,EAAAisQ,KACAt/E,EAAA/xL,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,GAAAoxQ,GAAA,IACAr/E,EAAA/xL,EAAA,KAAAoxQ,EACApxQ,GAAA,EAEA,GAAAA,EAAAwxQ,EAGA,IAFAJ,EAAAhsQ,EAAAisQ,KACAz/C,EAAA,IACA5xN,EAAAwxQ,GACAz/E,EAAA/xL,SAAAoxQ,EAAAx/C,GACAA,IAAA,MAIO,CACP,IAAApqN,EAAA,EAEA,IADA4pQ,EAAA,EACApxQ,EAAA,EAAAC,EAAAE,EAAgCH,EAAAC,IAAQD,EAAA,CAKxC,IAJAA,EAAAsxQ,GAAA,IACAF,EAAA,EACA5pQ,EAAA,GAEAA,EAAAuH,GACAqiQ,KAAA,EAAAhsQ,EAAAisQ,KACA7pQ,GAAA,EAEA,IAAAiqQ,EAAAjqQ,EAAAuH,EACApR,EAAAyzQ,GAAAK,EACA1/E,EAAA/xL,GAAArC,EAAA,IAAAA,EAAAoX,IAAApX,EACAyzQ,IAAA,GAAAK,GAAA,EACAjqQ,EAAAiqQ,GAGA,OAAA1/E,GAEA2/E,YAAA,SAAAC,EAAA/iQ,EAAAC,EAAAC,EAAA2+N,GACA,IAEAmkC,EAAAC,EAAA3pB,EAAAloP,EAAAC,EAAA2K,EAFAikO,EAAAxwO,KAAAwwO,MACAjd,EAAAvzN,KAAAuzN,KAEA,GAAAid,EACAgjC,EAAAhjC,EAAAjgO,MACAs5O,EAAArZ,EAAAhgO,OACA+iQ,EAAA,IAAA3tQ,WAAA4tQ,EAAA3pB,GACArZ,EAAAijC,eAAAF,GACAC,IAAAjjQ,GAAAs5O,IAAAr5O,IACA+iQ,EAAA7B,EAAA6B,EAAA/iC,EAAA9/N,IAAA8iQ,EAAA3pB,EAAAt5O,EAAAC,SAEO,GAAA+iN,EACP,GAAAA,aAAAoe,EAAA,CAMA,IALA6hC,EAAAjgD,EAAAhjN,MACAs5O,EAAAt2B,EAAA/iN,OACA+iQ,EAAA,IAAA3tQ,WAAA4tQ,EAAA3pB,GACAt2B,EAAAxiN,SAAA,EACAwiN,EAAAkgD,eAAAF,GACA5xQ,EAAA,EAAAC,EAAA4xQ,EAAA3pB,EAAmCloP,EAAAC,IAAQD,EAC3C4xQ,EAAA5xQ,GAAA,IAAA4xQ,EAAA5xQ,GAEA6xQ,IAAAjjQ,GAAAs5O,IAAAr5O,IACA+iQ,EAAA7B,EAAA6B,EAAAhgD,EAAA7iN,IAAA8iQ,EAAA3pB,EAAAt5O,EAAAC,QAES,KAAA/O,MAAAC,QAAA6xN,GAiBT,UAAAjuN,EAAAyD,YAAA,wBAhBAwqQ,EAAA,IAAA3tQ,WAAA2K,EAAAC,GACA,IAAAO,EAAA/Q,KAAA+Q,SACA,IAAApP,EAAA,EAAAC,EAAA2O,EAAAC,EAA0C7O,EAAAC,IAAQD,EAAA,CAClD,IAAA+xQ,EAAA,EACAC,EAAAhyQ,EAAAoP,EACA,IAAAxE,EAAA,EAAuBA,EAAAwE,IAAcxE,EAAA,CACrC,IAAA4L,EAAAi3N,EAAAukC,EAAApnQ,GACAqnQ,EAAA,EAAArnQ,EACA,GAAA4L,EAAAo7M,EAAAqgD,IAAAz7P,EAAAo7M,EAAAqgD,EAAA,IACAF,EAAA,IACA,OAGAH,EAAA5xQ,GAAA+xQ,GAMA,GAAAH,EACA,IAAA5xQ,EAAA,EAAA4K,EAAA,EAAA3K,EAAA2O,EAAAE,EAAqD9O,EAAAC,IAAQD,EAAA4K,GAAA,EAC7D+mQ,EAAA/mQ,GAAAgnQ,EAAA5xQ,QAGA,IAAAA,EAAA,EAAA4K,EAAA,EAAA3K,EAAA2O,EAAAE,EAAqD9O,EAAAC,IAAQD,EAAA4K,GAAA,EAC7D+mQ,EAAA/mQ,GAAA,KAIAsnQ,aAAA,SAAA9sQ,EAAAwJ,EAAAC,GACA,IAAAwhQ,EAAAhyQ,KAAAwwO,OAAAxwO,KAAAwwO,MAAAwhC,MACA,GAAAA,EASA,IANA,IAKAx8P,EAAAC,EAAArM,EALA0qQ,EAAA9zQ,KAAAsvO,WAAA//N,OAAAyiQ,EAAA,GACA+B,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAhyQ,EAAAyO,EAAAC,EAAA,EAEA7O,EAAA,EAAqBA,EAAAG,EAAYH,GAAA,GACjC,IAAAwsD,EAAApnD,EAAApF,EAAA,GACA,OAAAwsD,EAAA,CAMA,IAAAjjD,EAAA,IAAAijD,EACA34C,GAAAzO,EAAApF,GAAAoyQ,GAAA7oQ,EAAA6oQ,EACAt+P,GAAA1O,EAAApF,EAAA,GAAAqyQ,GAAA9oQ,EAAA8oQ,EACA5qQ,GAAArC,EAAApF,EAAA,GAAAsyQ,GAAA/oQ,EAAA+oQ,EACAltQ,EAAApF,GAAA6T,GAAA,IAAAA,GAAA,UAAAA,EACAzO,EAAApF,EAAA,GAAA8T,GAAA,IAAAA,GAAA,UAAAA,EACA1O,EAAApF,EAAA,GAAAyH,GAAA,IAAAA,GAAA,UAAAA,OAXArC,EAAApF,GAAA,IACAoF,EAAApF,EAAA,OACAoF,EAAApF,EAAA,SAYAqwO,gBAAA,WACA,IAaAN,EAbAwiC,EAAAtgQ,UAAA9R,OAAA,YAAA8R,UAAA,IAAAA,UAAA,GAEAmR,EAAA/kB,KAAA+kB,UACAC,EAAAhlB,KAAAglB,WACAsC,GACA/W,MAAAwU,EACAvU,OAAAwU,GAEAjU,EAAA/Q,KAAA+Q,SACAV,EAAArQ,KAAAuQ,MACAD,EAAAtQ,KAAAwQ,OACAE,EAAA1Q,KAAA0Q,IACA9E,EAAAyE,EAAAU,EAAAL,EAAA,KAEA,IAAAwjQ,EAAA,CACA,IAAArsP,EAMA,GALA,eAAA7nB,KAAAsvO,WAAAvvO,MAAA,IAAA2Q,EACAmX,EAAAviB,EAAAwiB,UAAAqsP,eACS,cAAAn0Q,KAAAsvO,WAAAvvO,MAAA,IAAA2Q,GAAA1Q,KAAAiyQ,cACTpqP,EAAAviB,EAAAwiB,UAAAssP,WAEAvsP,IAAA7nB,KAAAwwO,QAAAxwO,KAAAuzN,MAAAxuM,IAAA1U,GAAA2U,IAAA1U,EAAA,CAGA,GAFAgX,EAAAO,OACA6pN,EAAA1xO,KAAAq0Q,cAAA/jQ,EAAA1E,GACA5L,KAAAovO,iBAAAlzN,EAAAhX,aACAoiB,EAAAzC,KAAA6sN,MACW,CACX,IAAA4iC,EAAA,IAAA1uQ,WAAA8rO,EAAA5vO,QACAwyQ,EAAAjyQ,IAAAqvO,GACApqN,EAAAzC,KAAAyvP,EAEA,GAAAt0Q,KAAAiyQ,YAAA,IACA3sQ,EAAA2Y,QAAA4J,IAAAviB,EAAAwiB,UAAAqsP,gBAEA,IADA,IAAAptQ,EAAAugB,EAAAzC,KACAljB,EAAA,EAAAC,EAAAmF,EAAAjF,OAA+CH,EAAAC,EAAQD,IACvDoF,EAAApF,IAAA,IAGA,OAAA2lB,EAEA,GAAAtnB,KAAAovO,iBAAA/yN,EAAAiE,aAAAtgB,KAAAwwO,QAAAxwO,KAAAuzN,KAAA,CACA,IAAAghD,EAAAjkQ,EAAA1E,EACA,OAAA5L,KAAAsvO,WAAAvvO,MACA,iBACAw0Q,GAAA,EACA,gBACA,iBAGA,OAFAjtP,EAAAO,KAAAviB,EAAAwiB,UAAAssP,UACA9sP,EAAAzC,KAAA7kB,KAAAq0Q,cAAAE,EAAAxvP,EAAAC,MACAsC,IAKA,IAEAtX,EAAAwkQ,EAFA/jQ,EAAA,GADAihO,EAAA1xO,KAAAq0Q,cAAA/jQ,EAAA1E,IACA9J,OAAA8J,EAAAoZ,EAAA1U,EACAK,EAAA3Q,KAAA8yQ,cAAAphC,GAqBA,OAnBAwiC,GAAAl0Q,KAAAwwO,OAAAxwO,KAAAuzN,MAMAjsM,EAAAO,KAAAviB,EAAAwiB,UAAAC,WACAT,EAAAzC,KAAA,IAAAjf,WAAAmf,EAAAC,EAAA,GACAhV,EAAA,EACAwkQ,KACAx0Q,KAAAqzQ,YAAA/rP,EAAAzC,KAAAE,EAAAC,EAAAvU,EAAAE,KATA2W,EAAAO,KAAAviB,EAAAwiB,UAAAssP,UACA9sP,EAAAzC,KAAA,IAAAjf,WAAAmf,EAAAC,EAAA,GACAhV,EAAA,EACAwkQ,MAQAx0Q,KAAAiyQ,aACAjyQ,KAAA6yQ,aAAAliQ,GAEA3Q,KAAAsvO,WAAAl/N,QAAAkX,EAAAzC,KAAAxU,EAAAC,EAAAyU,EAAAC,EAAAvU,EAAAC,EAAAC,EAAAX,GACAwkQ,GACAx0Q,KAAA6zQ,aAAAvsP,EAAAzC,KAAAE,EAAAtU,GAEA6W,GAEAmsP,eAAA,SAAA1sQ,GACA,IAAAgK,EAAA/Q,KAAA+Q,SACA,OAAAA,EACA,UAAAzL,EAAAyD,YAAA,0CAAAgI,GAEA,IAMApP,EAAAG,EANAyO,EAAAvQ,KAAAuQ,MACAC,EAAAxQ,KAAAwQ,OACAE,EAAA1Q,KAAA0Q,IACA9E,EAAA2E,EAAAQ,EAAAL,EAAA,KACAghO,EAAA1xO,KAAAq0Q,cAAA7jQ,EAAA5E,GACA+E,EAAA3Q,KAAA8yQ,cAAAphC,GAEA,OAAAhhO,EAAA,CAaA1Q,KAAAiyQ,aACAjyQ,KAAA6yQ,aAAAliQ,GAEA7O,EAAAyO,EAAAC,EACA,IAAAoE,EAAA,SAAAlE,GAAA,GACA,IAAA/O,EAAA,EAAiBA,EAAAG,IAAYH,EAC7BoF,EAAApF,GAAAiT,EAAAjE,EAAAhP,GAAA,OAjBA,GADAG,EAAAyO,EAAAC,EACAxQ,KAAAiyQ,YACA,IAAAtwQ,EAAA,EAAqBA,EAAAG,IAAYH,EACjCoF,EAAApF,GAAAgP,EAAAhP,GAAA,WAGA,IAAAA,EAAA,EAAqBA,EAAAG,IAAYH,EACjCoF,EAAApF,GAAA,KAAAgP,EAAAhP,IAcA0yQ,cAAA,SAAAvyQ,EAAAijB,EAAAC,GACA,IAAAX,EAAAzQ,UAAA9R,OAAA,YAAA8R,UAAA,IAAAA,UAAA,GAMA,OAJA5T,KAAAovO,MAAAxoO,QACA5G,KAAAovO,MAAArqN,aAAA/kB,KAAAuQ,MACAvQ,KAAAovO,MAAApqN,cAAAhlB,KAAAwQ,OACAxQ,KAAAovO,MAAA/qN,aACArkB,KAAAovO,MAAA3qO,SAAA3C,KAGA6vO,EAthBA,GAwhBAtyO,EAAAsyO","file":"15-184e62a6ac1848707f86.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR);\n  };\n  ColorSpace.fromIR = function (IR) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFn = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFn];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nfunction toNumberArray(arr) {\n  if (!Array.isArray(arr)) {\n    return null;\n  }\n  var length = arr.length;\n  for (var i = 0; i < length; i++) {\n    if (typeof arr[i] !== 'number') {\n      var result = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        result[_i] = +arr[_i];\n      }\n      return result;\n    }\n  }\n  return arr;\n}\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = toNumberArray(dict.getArray('Size'));\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = toNumberArray(dict.getArray('Encode'));\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push([0, size[i] - 1]);\n        }\n      } else {\n        encode = toMultiArray(encode);\n      }\n      var decode = toNumberArray(dict.getArray('Decode'));\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = toNumberArray(dict.getArray('C0')) || [0];\n      var c1 = toNumberArray(dict.getArray('C1')) || [1];\n      var n = dict.get('N');\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = toNumberArray(dict.getArray('Bounds'));\n      var encode = toNumberArray(dict.getArray('Encode'));\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fns = IR[4];\n      var tmpBuf = new Float32Array(1);\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.550';\nvar pdfjsBuild = '76337fdc';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _message_handler = require('../shared/message_handler');\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.550';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _message_handler.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (boundException) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', boundException);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _message_handler.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar EOIMarkerError = function EOIMarkerErrorClosure() {\n  function EOIMarkerError(message) {\n    this.message = message;\n  }\n  EOIMarkerError.prototype = new Error();\n  EOIMarkerError.prototype.name = 'EOIMarkerError';\n  EOIMarkerError.constructor = EOIMarkerError;\n  return EOIMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          } else if (nextByte === 0xD9) {\n            throw new EOIMarkerError('Found EOI marker (0xFFD9) while parsing scan data');\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      markerLoop: while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)(ex.message + ' -- attempting to re-parse the JPEG image.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              } else if (ex instanceof EOIMarkerError) {\n                (0, _util.warn)(ex.message + ' -- ignoring the rest of the image data.');\n                break markerLoop;\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;"],"sourceRoot":""}