{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","EOF","Name","name","this","nameCache","create","get","Cmd","cmd","cmdCache","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","Promise","resolve","getArray","Array","isArray","i","ii","slice","length","isRef","fetch","getRaw","key","getKeys","keys","set","has","forEach","callback","empty","merge","dictArray","mergedDict","dict","isDict","keyName","Ref","num","gen","toString","str","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","call","clear","isName","v","type","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","__webpack_require__","_primitives","arrayBuffer","start","bytes","Uint8Array","pos","end","isEmpty","getByte","getUint16","b0","b1","getInt32","strEnd","subarray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","buffer","stringToBytes","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","chunk","shift","newLength","baseStreams","stream","Util","appendToArray","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","isSpace","firstDigit","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","Math","min","log","ColorSpace","unreachable","getRgb","src","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","bpc","comps","rgbBuf","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","arguments","colorSpaces","resCS","mode","altIR","warn","createIR","isDefaultDecode","decode","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","tintFn","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","isString","charCodeAt","outputDelta","lookupPos","r","g","convertToRgb","srcScale","m","y","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","max","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","sRGBTransferFunction","color","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","XYZ_D65","LMS_D65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","257","e","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","MissingDataException","cipherTransform","makeInlineImage","array","push","makeStream","Number","isInteger","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","assert","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","StreamType","FLATE","LZW","DCT","JpegStream","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","ex","knownCommands","strBuf","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","Error","parser","obj1","obj2","obj3","isNum","hints","hintsLength","item","index","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","_jpg","configurable","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transform","transformNeeded","maxValue","decodeTransform","colorTransform","data","getData","drawWidth","drawHeight","getIR","forceDataSchema","createObjectURL","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","offset","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","extendObj","lastChunk","transfers","cached","send","operatorList","getLookupTableFactory","getGlyphsUnicode","AE","AEacute","AEmacron","AEsmall","Aacute","Aacutesmall","Abreve","Abreveacute","Abrevecyrillic","Abrevedotbelow","Abrevegrave","Abrevehookabove","Abrevetilde","Acaron","Acircle","Acircumflex","Acircumflexacute","Acircumflexdotbelow","Acircumflexgrave","Acircumflexhookabove","Acircumflexsmall","Acircumflextilde","Acute","Acutesmall","Acyrillic","Adblgrave","Adieresis","Adieresiscyrillic","Adieresismacron","Adieresissmall","Adotbelow","Adotmacron","Agrave","Agravesmall","Ahookabove","Aiecyrillic","Ainvertedbreve","Alpha","Alphatonos","Amacron","Amonospace","Aogonek","Aring","Aringacute","Aringbelow","Aringsmall","Asmall","Atilde","Atildesmall","Aybarmenian","Bcircle","Bdotaccent","Bdotbelow","Becyrillic","Benarmenian","Beta","Bhook","Blinebelow","Bmonospace","Brevesmall","Bsmall","Btopbar","Caarmenian","Cacute","Caron","Caronsmall","Ccaron","Ccedilla","Ccedillaacute","Ccedillasmall","Ccircle","Ccircumflex","Cdot","Cdotaccent","Cedillasmall","Chaarmenian","Cheabkhasiancyrillic","Checyrillic","Chedescenderabkhasiancyrillic","Chedescendercyrillic","Chedieresiscyrillic","Cheharmenian","Chekhakassiancyrillic","Cheverticalstrokecyrillic","Chi","Chook","Circumflexsmall","Cmonospace","Coarmenian","Csmall","D","DZ","DZcaron","Daarmenian","Dafrican","Dcaron","Dcedilla","Dcircle","Dcircumflexbelow","Dcroat","Ddotaccent","Ddotbelow","Decyrillic","Deicoptic","Delta","Deltagreek","Dhook","Dieresis","DieresisAcute","DieresisGrave","Dieresissmall","Digammagreek","Djecyrillic","Dlinebelow","Dmonospace","Dotaccentsmall","Dslash","Dsmall","Dtopbar","Dz","Dzcaron","Dzeabkhasiancyrillic","Dzecyrillic","Dzhecyrillic","E","Eacute","Eacutesmall","Ebreve","Ecaron","Ecedillabreve","Echarmenian","Ecircle","Ecircumflex","Ecircumflexacute","Ecircumflexbelow","Ecircumflexdotbelow","Ecircumflexgrave","Ecircumflexhookabove","Ecircumflexsmall","Ecircumflextilde","Ecyrillic","Edblgrave","Edieresis","Edieresissmall","Edot","Edotaccent","Edotbelow","Efcyrillic","Egrave","Egravesmall","Eharmenian","Ehookabove","Eightroman","Einvertedbreve","Eiotifiedcyrillic","Elcyrillic","Elevenroman","Emacron","Emacronacute","Emacrongrave","Emcyrillic","Emonospace","Encyrillic","Endescendercyrillic","Eng","Enghecyrillic","Enhookcyrillic","Eogonek","Eopen","Epsilon","Epsilontonos","Ercyrillic","Ereversed","Ereversedcyrillic","Escyrillic","Esdescendercyrillic","Esh","Esmall","Eta","Etarmenian","Etatonos","Eth","Ethsmall","Etilde","Etildebelow","Euro","Ezh","Ezhcaron","Ezhreversed","F","Fcircle","Fdotaccent","Feharmenian","Feicoptic","Fhook","Fitacyrillic","Fiveroman","Fmonospace","Fourroman","Fsmall","GBsquare","Gacute","Gamma","Gammaafrican","Gangiacoptic","Gbreve","Gcaron","Gcedilla","Gcircle","Gcircumflex","Gcommaaccent","Gdot","Gdotaccent","Gecyrillic","Ghadarmenian","Ghemiddlehookcyrillic","Ghestrokecyrillic","Gheupturncyrillic","Ghook","Gimarmenian","Gjecyrillic","Gmacron","Gmonospace","Grave","Gravesmall","Gsmall","Gsmallhook","Gstroke","H","H18533","H18543","H18551","H22073","HPsquare","Haabkhasiancyrillic","Hadescendercyrillic","Hardsigncyrillic","Hbar","Hbrevebelow","Hcedilla","Hcircle","Hcircumflex","Hdieresis","Hdotaccent","Hdotbelow","Hmonospace","Hoarmenian","Horicoptic","Hsmall","Hungarumlaut","Hungarumlautsmall","Hzsquare","I","IAcyrillic","IJ","IUcyrillic","Iacute","Iacutesmall","Ibreve","Icaron","Icircle","Icircumflex","Icircumflexsmall","Icyrillic","Idblgrave","Idieresis","Idieresisacute","Idieresiscyrillic","Idieresissmall","Idot","Idotaccent","Idotbelow","Iebrevecyrillic","Iecyrillic","Ifraktur","Igrave","Igravesmall","Ihookabove","Iicyrillic","Iinvertedbreve","Iishortcyrillic","Imacron","Imacroncyrillic","Imonospace","Iniarmenian","Iocyrillic","Iogonek","Iota","Iotaafrican","Iotadieresis","Iotatonos","Ismall","Istroke","Itilde","Itildebelow","Izhitsacyrillic","Izhitsadblgravecyrillic","J","Jaarmenian","Jcircle","Jcircumflex","Jecyrillic","Jheharmenian","Jmonospace","Jsmall","K","KBsquare","KKsquare","Kabashkircyrillic","Kacute","Kacyrillic","Kadescendercyrillic","Kahookcyrillic","Kappa","Kastrokecyrillic","Kaverticalstrokecyrillic","Kcaron","Kcedilla","Kcircle","Kcommaaccent","Kdotbelow","Keharmenian","Kenarmenian","Khacyrillic","Kheicoptic","Khook","Kjecyrillic","Klinebelow","Kmonospace","Koppacyrillic","Koppagreek","Ksicyrillic","Ksmall","LJ","LL","Lacute","Lambda","Lcaron","Lcedilla","Lcircle","Lcircumflexbelow","Lcommaaccent","Ldot","Ldotaccent","Ldotbelow","Ldotbelowmacron","Liwnarmenian","Lj","Ljecyrillic","Llinebelow","Lmonospace","Lslash","Lslashsmall","Lsmall","MBsquare","Macron","Macronsmall","Macute","Mcircle","Mdotaccent","Mdotbelow","Menarmenian","Mmonospace","Msmall","Mturned","Mu","NJ","Nacute","Ncaron","Ncedilla","Ncircle","Ncircumflexbelow","Ncommaaccent","Ndotaccent","Ndotbelow","Nhookleft","Nineroman","Nj","Njecyrillic","Nlinebelow","Nmonospace","Nowarmenian","Nsmall","Ntilde","Ntildesmall","Nu","O","OE","OEsmall","Oacute","Oacutesmall","Obarredcyrillic","Obarreddieresiscyrillic","Obreve","Ocaron","Ocenteredtilde","Ocircle","Ocircumflex","Ocircumflexacute","Ocircumflexdotbelow","Ocircumflexgrave","Ocircumflexhookabove","Ocircumflexsmall","Ocircumflextilde","Ocyrillic","Odblacute","Odblgrave","Odieresis","Odieresiscyrillic","Odieresissmall","Odotbelow","Ogoneksmall","Ograve","Ogravesmall","Oharmenian","Ohm","Ohookabove","Ohorn","Ohornacute","Ohorndotbelow","Ohorngrave","Ohornhookabove","Ohorntilde","Ohungarumlaut","Oi","Oinvertedbreve","Omacron","Omacronacute","Omacrongrave","Omega","Omegacyrillic","Omegagreek","Omegaroundcyrillic","Omegatitlocyrillic","Omegatonos","Omicron","Omicrontonos","Omonospace","Oneroman","Oogonek","Oogonekmacron","Oopen","Oslash","Oslashacute","Oslashsmall","Osmall","Ostrokeacute","Otcyrillic","Otilde","Otildeacute","Otildedieresis","Otildesmall","P","Pacute","Pcircle","Pdotaccent","Pecyrillic","Peharmenian","Pemiddlehookcyrillic","Phi","Phook","Pi","Piwrarmenian","Pmonospace","Psi","Psicyrillic","Psmall","Q","Qcircle","Qmonospace","Qsmall","R","Raarmenian","Racute","Rcaron","Rcedilla","Rcircle","Rcommaaccent","Rdblgrave","Rdotaccent","Rdotbelow","Rdotbelowmacron","Reharmenian","Rfraktur","Rho","Ringsmall","Rinvertedbreve","Rlinebelow","Rmonospace","Rsmall","Rsmallinverted","Rsmallinvertedsuperior","S","SF010000","SF020000","SF030000","SF040000","SF050000","SF060000","SF070000","SF080000","SF090000","SF100000","SF110000","SF190000","SF200000","SF210000","SF220000","SF230000","SF240000","SF250000","SF260000","SF270000","SF280000","SF360000","SF370000","SF380000","SF390000","SF400000","SF410000","SF420000","SF430000","SF440000","SF450000","SF460000","SF470000","SF480000","SF490000","SF500000","SF510000","SF520000","SF530000","SF540000","Sacute","Sacutedotaccent","Sampigreek","Scaron","Scarondotaccent","Scaronsmall","Scedilla","Schwa","Schwacyrillic","Schwadieresiscyrillic","Scircle","Scircumflex","Scommaaccent","Sdotaccent","Sdotbelow","Sdotbelowdotaccent","Seharmenian","Sevenroman","Shaarmenian","Shacyrillic","Shchacyrillic","Sheicoptic","Shhacyrillic","Shimacoptic","Sigma","Sixroman","Smonospace","Softsigncyrillic","Ssmall","Stigmagreek","T","Tau","Tbar","Tcaron","Tcedilla","Tcircle","Tcircumflexbelow","Tcommaaccent","Tdotaccent","Tdotbelow","Tecyrillic","Tedescendercyrillic","Tenroman","Tetsecyrillic","Theta","Thook","Thorn","Thornsmall","Threeroman","Tildesmall","Tiwnarmenian","Tlinebelow","Tmonospace","Toarmenian","Tonefive","Tonesix","Tonetwo","Tretroflexhook","Tsecyrillic","Tshecyrillic","Tsmall","Twelveroman","Tworoman","U","Uacute","Uacutesmall","Ubreve","Ucaron","Ucircle","Ucircumflex","Ucircumflexbelow","Ucircumflexsmall","Ucyrillic","Udblacute","Udblgrave","Udieresis","Udieresisacute","Udieresisbelow","Udieresiscaron","Udieresiscyrillic","Udieresisgrave","Udieresismacron","Udieresissmall","Udotbelow","Ugrave","Ugravesmall","Uhookabove","Uhorn","Uhornacute","Uhorndotbelow","Uhorngrave","Uhornhookabove","Uhorntilde","Uhungarumlaut","Uhungarumlautcyrillic","Uinvertedbreve","Ukcyrillic","Umacron","Umacroncyrillic","Umacrondieresis","Umonospace","Uogonek","Upsilon","Upsilon1","Upsilonacutehooksymbolgreek","Upsilonafrican","Upsilondieresis","Upsilondieresishooksymbolgreek","Upsilonhooksymbol","Upsilontonos","Uring","Ushortcyrillic","Usmall","Ustraightcyrillic","Ustraightstrokecyrillic","Utilde","Utildeacute","Utildebelow","V","Vcircle","Vdotbelow","Vecyrillic","Vewarmenian","Vhook","Vmonospace","Voarmenian","Vsmall","Vtilde","W","Wacute","Wcircle","Wcircumflex","Wdieresis","Wdotaccent","Wdotbelow","Wgrave","Wmonospace","Wsmall","Xcircle","Xdieresis","Xdotaccent","Xeharmenian","Xi","Xmonospace","Xsmall","Yacute","Yacutesmall","Yatcyrillic","Ycircle","Ycircumflex","Ydieresis","Ydieresissmall","Ydotaccent","Ydotbelow","Yericyrillic","Yerudieresiscyrillic","Ygrave","Yhook","Yhookabove","Yiarmenian","Yicyrillic","Yiwnarmenian","Ymonospace","Ysmall","Ytilde","Yusbigcyrillic","Yusbigiotifiedcyrillic","Yuslittlecyrillic","Yuslittleiotifiedcyrillic","Zaarmenian","Zacute","Zcaron","Zcaronsmall","Zcircle","Zcircumflex","Zdot","Zdotaccent","Zdotbelow","Zecyrillic","Zedescendercyrillic","Zedieresiscyrillic","Zeta","Zhearmenian","Zhebrevecyrillic","Zhecyrillic","Zhedescendercyrillic","Zhedieresiscyrillic","Zlinebelow","Zmonospace","Zsmall","Zstroke","aabengali","aacute","aadeva","aagujarati","aagurmukhi","aamatragurmukhi","aarusquare","aavowelsignbengali","aavowelsigndeva","aavowelsigngujarati","abbreviationmarkarmenian","abbreviationsigndeva","abengali","abopomofo","abreve","abreveacute","abrevecyrillic","abrevedotbelow","abrevegrave","abrevehookabove","abrevetilde","acaron","acircle","acircumflex","acircumflexacute","acircumflexdotbelow","acircumflexgrave","acircumflexhookabove","acircumflextilde","acute","acutebelowcmb","acutecmb","acutecomb","acutedeva","acutelowmod","acutetonecmb","acyrillic","adblgrave","addakgurmukhi","adeva","adieresis","adieresiscyrillic","adieresismacron","adotbelow","adotmacron","ae","aeacute","aekorean","aemacron","afii00208","afii08941","afii10017","afii10018","afii10019","afii10020","afii10021","afii10022","afii10023","afii10024","afii10025","afii10026","afii10027","afii10028","afii10029","afii10030","afii10031","afii10032","afii10033","afii10034","afii10035","afii10036","afii10037","afii10038","afii10039","afii10040","afii10041","afii10042","afii10043","afii10044","afii10045","afii10046","afii10047","afii10048","afii10049","afii10050","afii10051","afii10052","afii10053","afii10054","afii10055","afii10056","afii10057","afii10058","afii10059","afii10060","afii10061","afii10062","afii10063","afii10064","afii10065","afii10066","afii10067","afii10068","afii10069","afii10070","afii10071","afii10072","afii10073","afii10074","afii10075","afii10076","afii10077","afii10078","afii10079","afii10080","afii10081","afii10082","afii10083","afii10084","afii10085","afii10086","afii10087","afii10088","afii10089","afii10090","afii10091","afii10092","afii10093","afii10094","afii10095","afii10096","afii10097","afii10098","afii10099","afii10100","afii10101","afii10102","afii10103","afii10104","afii10105","afii10106","afii10107","afii10108","afii10109","afii10110","afii10145","afii10146","afii10147","afii10148","afii10192","afii10193","afii10194","afii10195","afii10196","afii10831","afii10832","afii10846","afii299","afii300","afii301","afii57381","afii57388","afii57392","afii57393","afii57394","afii57395","afii57396","afii57397","afii57398","afii57399","afii57400","afii57401","afii57403","afii57407","afii57409","afii57410","afii57411","afii57412","afii57413","afii57414","afii57415","afii57416","afii57417","afii57418","afii57419","afii57420","afii57421","afii57422","afii57423","afii57424","afii57425","afii57426","afii57427","afii57428","afii57429","afii57430","afii57431","afii57432","afii57433","afii57434","afii57440","afii57441","afii57442","afii57443","afii57444","afii57445","afii57446","afii57448","afii57449","afii57450","afii57451","afii57452","afii57453","afii57454","afii57455","afii57456","afii57457","afii57458","afii57470","afii57505","afii57506","afii57507","afii57508","afii57509","afii57511","afii57512","afii57513","afii57514","afii57519","afii57534","afii57636","afii57645","afii57658","afii57664","afii57665","afii57666","afii57667","afii57668","afii57669","afii57670","afii57671","afii57672","afii57673","afii57674","afii57675","afii57676","afii57677","afii57678","afii57679","afii57680","afii57681","afii57682","afii57683","afii57684","afii57685","afii57686","afii57687","afii57688","afii57689","afii57690","afii57694","afii57695","afii57700","afii57705","afii57716","afii57717","afii57718","afii57723","afii57793","afii57794","afii57795","afii57796","afii57797","afii57798","afii57799","afii57800","afii57801","afii57802","afii57803","afii57804","afii57806","afii57807","afii57839","afii57841","afii57842","afii57929","afii61248","afii61289","afii61352","afii61573","afii61574","afii61575","afii61664","afii63167","afii64937","agrave","agujarati","agurmukhi","ahiragana","ahookabove","aibengali","aibopomofo","aideva","aiecyrillic","aigujarati","aigurmukhi","aimatragurmukhi","ainarabic","ainfinalarabic","aininitialarabic","ainmedialarabic","ainvertedbreve","aivowelsignbengali","aivowelsigndeva","aivowelsigngujarati","akatakana","akatakanahalfwidth","akorean","alef","alefarabic","alefdageshhebrew","aleffinalarabic","alefhamzaabovearabic","alefhamzaabovefinalarabic","alefhamzabelowarabic","alefhamzabelowfinalarabic","alefhebrew","aleflamedhebrew","alefmaddaabovearabic","alefmaddaabovefinalarabic","alefmaksuraarabic","alefmaksurafinalarabic","alefmaksurainitialarabic","alefmaksuramedialarabic","alefpatahhebrew","alefqamatshebrew","aleph","allequal","alpha","alphatonos","amacron","amonospace","ampersand","ampersandmonospace","ampersandsmall","amsquare","anbopomofo","angbopomofo","angbracketleft","angbracketright","angkhankhuthai","angle","anglebracketleft","anglebracketleftvertical","anglebracketright","anglebracketrightvertical","angleleft","angleright","angstrom","anoteleia","anudattadeva","anusvarabengali","anusvaradeva","anusvaragujarati","aogonek","apaatosquare","aparen","apostrophearmenian","apostrophemod","apple","approaches","approxequal","approxequalorimage","approximatelyequal","araeaekorean","araeakorean","arc","arighthalfring","aring","aringacute","aringbelow","arrowboth","arrowdashdown","arrowdashleft","arrowdashright","arrowdashup","arrowdblboth","arrowdbldown","arrowdblleft","arrowdblright","arrowdblup","arrowdown","arrowdownleft","arrowdownright","arrowdownwhite","arrowheaddownmod","arrowheadleftmod","arrowheadrightmod","arrowheadupmod","arrowhorizex","arrowleft","arrowleftdbl","arrowleftdblstroke","arrowleftoverright","arrowleftwhite","arrowright","arrowrightdblstroke","arrowrightheavy","arrowrightoverleft","arrowrightwhite","arrowtableft","arrowtabright","arrowup","arrowupdn","arrowupdnbse","arrowupdownbase","arrowupleft","arrowupleftofdown","arrowupright","arrowupwhite","arrowvertex","asciicircum","asciicircummonospace","asciitilde","asciitildemonospace","ascript","ascriptturned","asmallhiragana","asmallkatakana","asmallkatakanahalfwidth","asterisk","asteriskaltonearabic","asteriskarabic","asteriskmath","asteriskmonospace","asterisksmall","asterism","asuperior","asymptoticallyequal","at","atilde","atmonospace","atsmall","aturned","aubengali","aubopomofo","audeva","augujarati","augurmukhi","aulengthmarkbengali","aumatragurmukhi","auvowelsignbengali","auvowelsigndeva","auvowelsigngujarati","avagrahadeva","aybarmenian","ayin","ayinaltonehebrew","ayinhebrew","babengali","backslash","backslashmonospace","badeva","bagujarati","bagurmukhi","bahiragana","bahtthai","bakatakana","bar","barmonospace","bbopomofo","bcircle","bdotaccent","bdotbelow","beamedsixteenthnotes","because","becyrillic","beharabic","behfinalarabic","behinitialarabic","behiragana","behmedialarabic","behmeeminitialarabic","behmeemisolatedarabic","behnoonfinalarabic","bekatakana","benarmenian","bet","beta","betasymbolgreek","betdagesh","betdageshhebrew","bethebrew","betrafehebrew","bhabengali","bhadeva","bhagujarati","bhagurmukhi","bhook","bihiragana","bikatakana","bilabialclick","bindigurmukhi","birusquare","blackcircle","blackdiamond","blackdownpointingtriangle","blackleftpointingpointer","blackleftpointingtriangle","blacklenticularbracketleft","blacklenticularbracketleftvertical","blacklenticularbracketright","blacklenticularbracketrightvertical","blacklowerlefttriangle","blacklowerrighttriangle","blackrectangle","blackrightpointingpointer","blackrightpointingtriangle","blacksmallsquare","blacksmilingface","blacksquare","blackstar","blackupperlefttriangle","blackupperrighttriangle","blackuppointingsmalltriangle","blackuppointingtriangle","blank","blinebelow","block","bmonospace","bobaimaithai","bohiragana","bokatakana","bparen","bqsquare","braceex","braceleft","braceleftbt","braceleftmid","braceleftmonospace","braceleftsmall","bracelefttp","braceleftvertical","braceright","bracerightbt","bracerightmid","bracerightmonospace","bracerightsmall","bracerighttp","bracerightvertical","bracketleft","bracketleftbt","bracketleftex","bracketleftmonospace","bracketlefttp","bracketright","bracketrightbt","bracketrightex","bracketrightmonospace","bracketrighttp","breve","brevebelowcmb","brevecmb","breveinvertedbelowcmb","breveinvertedcmb","breveinverteddoublecmb","bridgebelowcmb","bridgeinvertedbelowcmb","brokenbar","bstroke","bsuperior","btopbar","buhiragana","bukatakana","bullet","bulletinverse","bulletoperator","bullseye","caarmenian","cabengali","cacute","cadeva","cagujarati","cagurmukhi","calsquare","candrabindubengali","candrabinducmb","candrabindudeva","candrabindugujarati","capslock","careof","caron","caronbelowcmb","caroncmb","carriagereturn","cbopomofo","ccaron","ccedilla","ccedillaacute","ccircle","ccircumflex","ccurl","cdot","cdotaccent","cdsquare","cedilla","cedillacmb","cent","centigrade","centinferior","centmonospace","centoldstyle","centsuperior","chaarmenian","chabengali","chadeva","chagujarati","chagurmukhi","chbopomofo","cheabkhasiancyrillic","checkmark","checyrillic","chedescenderabkhasiancyrillic","chedescendercyrillic","chedieresiscyrillic","cheharmenian","chekhakassiancyrillic","cheverticalstrokecyrillic","chi","chieuchacirclekorean","chieuchaparenkorean","chieuchcirclekorean","chieuchkorean","chieuchparenkorean","chochangthai","chochanthai","chochingthai","chochoethai","chook","cieucacirclekorean","cieucaparenkorean","cieuccirclekorean","cieuckorean","cieucparenkorean","cieucuparenkorean","circle","circlecopyrt","circlemultiply","circleot","circleplus","circlepostalmark","circlewithlefthalfblack","circlewithrighthalfblack","circumflex","circumflexbelowcmb","circumflexcmb","clickalveolar","clickdental","clicklateral","clickretroflex","club","clubsuitblack","clubsuitwhite","cmcubedsquare","cmonospace","cmsquaredsquare","coarmenian","colon","colonmonetary","colonmonospace","colonsign","colonsmall","colontriangularhalfmod","colontriangularmod","comma","commaabovecmb","commaaboverightcmb","commaaccent","commaarabic","commaarmenian","commainferior","commamonospace","commareversedabovecmb","commareversedmod","commasmall","commasuperior","commaturnedabovecmb","commaturnedmod","compass","congruent","contourintegral","control","controlACK","controlBEL","controlBS","controlCAN","controlCR","controlDC1","controlDC2","controlDC3","controlDC4","controlDEL","controlDLE","controlEM","controlENQ","controlEOT","controlESC","controlETB","controlETX","controlFF","controlFS","controlGS","controlHT","controlLF","controlNAK","controlNULL","controlRS","controlSI","controlSO","controlSOT","controlSTX","controlSUB","controlSYN","controlUS","controlVT","copyright","copyrightsans","copyrightserif","cornerbracketleft","cornerbracketlefthalfwidth","cornerbracketleftvertical","cornerbracketright","cornerbracketrighthalfwidth","cornerbracketrightvertical","corporationsquare","cosquare","coverkgsquare","cparen","cruzeiro","cstretched","curlyand","curlyor","currency","cyrBreve","cyrFlex","cyrbreve","cyrflex","d","daarmenian","dabengali","dadarabic","dadeva","dadfinalarabic","dadinitialarabic","dadmedialarabic","dagesh","dageshhebrew","dagger","daggerdbl","dagujarati","dagurmukhi","dahiragana","dakatakana","dalarabic","dalet","daletdagesh","daletdageshhebrew","dalethebrew","dalfinalarabic","dammaarabic","dammalowarabic","dammatanaltonearabic","dammatanarabic","danda","dargahebrew","dargalefthebrew","dasiapneumatacyrilliccmb","dblGrave","dblanglebracketleft","dblanglebracketleftvertical","dblanglebracketright","dblanglebracketrightvertical","dblarchinvertedbelowcmb","dblarrowleft","dblarrowright","dbldanda","dblgrave","dblgravecmb","dblintegral","dbllowline","dbllowlinecmb","dbloverlinecmb","dblprimemod","dblverticalbar","dblverticallineabovecmb","dbopomofo","dbsquare","dcaron","dcedilla","dcircle","dcircumflexbelow","dcroat","ddabengali","ddadeva","ddagujarati","ddagurmukhi","ddalarabic","ddalfinalarabic","dddhadeva","ddhabengali","ddhadeva","ddhagujarati","ddhagurmukhi","ddotaccent","ddotbelow","decimalseparatorarabic","decimalseparatorpersian","decyrillic","degree","dehihebrew","dehiragana","deicoptic","dekatakana","deleteleft","deleteright","delta","deltaturned","denominatorminusonenumeratorbengali","dezh","dhabengali","dhadeva","dhagujarati","dhagurmukhi","dhook","dialytikatonos","dialytikatonoscmb","diamond","diamondsuitwhite","dieresis","dieresisacute","dieresisbelowcmb","dieresiscmb","dieresisgrave","dieresistonos","dihiragana","dikatakana","dittomark","divide","divides","divisionslash","djecyrillic","dkshade","dlinebelow","dlsquare","dmacron","dmonospace","dnblock","dochadathai","dodekthai","dohiragana","dokatakana","dollar","dollarinferior","dollarmonospace","dollaroldstyle","dollarsmall","dollarsuperior","dong","dorusquare","dotaccent","dotaccentcmb","dotbelowcmb","dotbelowcomb","dotkatakana","dotlessi","dotlessj","dotlessjstrokehook","dotmath","dottedcircle","doubleyodpatah","doubleyodpatahhebrew","downtackbelowcmb","downtackmod","dparen","dsuperior","dtail","dtopbar","duhiragana","dukatakana","dz","dzaltone","dzcaron","dzcurl","dzeabkhasiancyrillic","dzecyrillic","dzhecyrillic","eacute","earth","ebengali","ebopomofo","ebreve","ecandradeva","ecandragujarati","ecandravowelsigndeva","ecandravowelsigngujarati","ecaron","ecedillabreve","echarmenian","echyiwnarmenian","ecircle","ecircumflex","ecircumflexacute","ecircumflexbelow","ecircumflexdotbelow","ecircumflexgrave","ecircumflexhookabove","ecircumflextilde","ecyrillic","edblgrave","edeva","edieresis","edot","edotaccent","edotbelow","eegurmukhi","eematragurmukhi","efcyrillic","egrave","egujarati","eharmenian","ehbopomofo","ehiragana","ehookabove","eibopomofo","eight","eightarabic","eightbengali","eightcircle","eightcircleinversesansserif","eightdeva","eighteencircle","eighteenparen","eighteenperiod","eightgujarati","eightgurmukhi","eighthackarabic","eighthangzhou","eighthnotebeamed","eightideographicparen","eightinferior","eightmonospace","eightoldstyle","eightparen","eightperiod","eightpersian","eightroman","eightsuperior","eightthai","einvertedbreve","eiotifiedcyrillic","ekatakana","ekatakanahalfwidth","ekonkargurmukhi","ekorean","elcyrillic","element","elevencircle","elevenparen","elevenperiod","elevenroman","ellipsis","ellipsisvertical","emacron","emacronacute","emacrongrave","emcyrillic","emdash","emdashvertical","emonospace","emphasismarkarmenian","emptyset","enbopomofo","encyrillic","endash","endashvertical","endescendercyrillic","eng","engbopomofo","enghecyrillic","enhookcyrillic","enspace","eogonek","eokorean","eopen","eopenclosed","eopenreversed","eopenreversedclosed","eopenreversedhook","eparen","epsilon","epsilontonos","equal","equalmonospace","equalsmall","equalsuperior","equivalence","erbopomofo","ercyrillic","ereversed","ereversedcyrillic","escyrillic","esdescendercyrillic","esh","eshcurl","eshortdeva","eshortvowelsigndeva","eshreversedloop","eshsquatreversed","esmallhiragana","esmallkatakana","esmallkatakanahalfwidth","estimated","esuperior","eta","etarmenian","etatonos","eth","etilde","etildebelow","etnahtafoukhhebrew","etnahtafoukhlefthebrew","etnahtahebrew","etnahtalefthebrew","eturned","eukorean","euro","evowelsignbengali","evowelsigndeva","evowelsigngujarati","exclam","exclamarmenian","exclamdbl","exclamdown","exclamdownsmall","exclammonospace","exclamsmall","existential","ezh","ezhcaron","ezhcurl","ezhreversed","ezhtail","f","fadeva","fagurmukhi","fahrenheit","fathaarabic","fathalowarabic","fathatanarabic","fbopomofo","fcircle","fdotaccent","feharabic","feharmenian","fehfinalarabic","fehinitialarabic","fehmedialarabic","feicoptic","female","ff","ffi","ffl","fi","fifteencircle","fifteenparen","fifteenperiod","figuredash","filledbox","filledrect","finalkaf","finalkafdagesh","finalkafdageshhebrew","finalkafhebrew","finalmem","finalmemhebrew","finalnun","finalnunhebrew","finalpe","finalpehebrew","finaltsadi","finaltsadihebrew","firsttonechinese","fisheye","fitacyrillic","five","fivearabic","fivebengali","fivecircle","fivecircleinversesansserif","fivedeva","fiveeighths","fivegujarati","fivegurmukhi","fivehackarabic","fivehangzhou","fiveideographicparen","fiveinferior","fivemonospace","fiveoldstyle","fiveparen","fiveperiod","fivepersian","fiveroman","fivesuperior","fivethai","fl","florin","fmonospace","fmsquare","fofanthai","fofathai","fongmanthai","forall","four","fourarabic","fourbengali","fourcircle","fourcircleinversesansserif","fourdeva","fourgujarati","fourgurmukhi","fourhackarabic","fourhangzhou","fourideographicparen","fourinferior","fourmonospace","fournumeratorbengali","fouroldstyle","fourparen","fourperiod","fourpersian","fourroman","foursuperior","fourteencircle","fourteenparen","fourteenperiod","fourthai","fourthtonechinese","fparen","fraction","franc","gabengali","gacute","gadeva","gafarabic","gaffinalarabic","gafinitialarabic","gafmedialarabic","gagujarati","gagurmukhi","gahiragana","gakatakana","gammalatinsmall","gammasuperior","gangiacoptic","gbopomofo","gbreve","gcaron","gcedilla","gcircle","gcircumflex","gcommaaccent","gdot","gdotaccent","gecyrillic","gehiragana","gekatakana","geometricallyequal","gereshaccenthebrew","gereshhebrew","gereshmuqdamhebrew","germandbls","gershayimaccenthebrew","gershayimhebrew","getamark","ghabengali","ghadarmenian","ghadeva","ghagujarati","ghagurmukhi","ghainarabic","ghainfinalarabic","ghaininitialarabic","ghainmedialarabic","ghemiddlehookcyrillic","ghestrokecyrillic","gheupturncyrillic","ghhadeva","ghhagurmukhi","ghook","ghzsquare","gihiragana","gikatakana","gimarmenian","gimel","gimeldagesh","gimeldageshhebrew","gimelhebrew","gjecyrillic","glottalinvertedstroke","glottalstop","glottalstopinverted","glottalstopmod","glottalstopreversed","glottalstopreversedmod","glottalstopreversedsuperior","glottalstopstroke","glottalstopstrokereversed","gmacron","gmonospace","gohiragana","gokatakana","gparen","gpasquare","gradient","grave","gravebelowcmb","gravecmb","gravecomb","gravedeva","gravelowmod","gravemonospace","gravetonecmb","greater","greaterequal","greaterequalorless","greatermonospace","greaterorequivalent","greaterorless","greateroverequal","greatersmall","gscript","gstroke","guhiragana","guillemotleft","guillemotright","guilsinglleft","guilsinglright","gukatakana","guramusquare","gysquare","haabkhasiancyrillic","haaltonearabic","habengali","hadescendercyrillic","hadeva","hagujarati","hagurmukhi","haharabic","hahfinalarabic","hahinitialarabic","hahiragana","hahmedialarabic","haitusquare","hakatakana","hakatakanahalfwidth","halantgurmukhi","hamzaarabic","hamzalowarabic","hangulfiller","hardsigncyrillic","harpoonleftbarbup","harpoonrightbarbup","hasquare","hatafpatah","hatafpatah16","hatafpatah23","hatafpatah2f","hatafpatahhebrew","hatafpatahnarrowhebrew","hatafpatahquarterhebrew","hatafpatahwidehebrew","hatafqamats","hatafqamats1b","hatafqamats28","hatafqamats34","hatafqamatshebrew","hatafqamatsnarrowhebrew","hatafqamatsquarterhebrew","hatafqamatswidehebrew","hatafsegol","hatafsegol17","hatafsegol24","hatafsegol30","hatafsegolhebrew","hatafsegolnarrowhebrew","hatafsegolquarterhebrew","hatafsegolwidehebrew","hbar","hbopomofo","hbrevebelow","hcedilla","hcircle","hcircumflex","hdieresis","hdotaccent","hdotbelow","he","heart","heartsuitblack","heartsuitwhite","hedagesh","hedageshhebrew","hehaltonearabic","heharabic","hehebrew","hehfinalaltonearabic","hehfinalalttwoarabic","hehfinalarabic","hehhamzaabovefinalarabic","hehhamzaaboveisolatedarabic","hehinitialaltonearabic","hehinitialarabic","hehiragana","hehmedialaltonearabic","hehmedialarabic","heiseierasquare","hekatakana","hekatakanahalfwidth","hekutaarusquare","henghook","herutusquare","het","hethebrew","hhook","hhooksuperior","hieuhacirclekorean","hieuhaparenkorean","hieuhcirclekorean","hieuhkorean","hieuhparenkorean","hihiragana","hikatakana","hikatakanahalfwidth","hiriq","hiriq14","hiriq21","hiriq2d","hiriqhebrew","hiriqnarrowhebrew","hiriqquarterhebrew","hiriqwidehebrew","hlinebelow","hmonospace","hoarmenian","hohipthai","hohiragana","hokatakana","hokatakanahalfwidth","holam","holam19","holam26","holam32","holamhebrew","holamnarrowhebrew","holamquarterhebrew","holamwidehebrew","honokhukthai","hookabovecomb","hookcmb","hookpalatalizedbelowcmb","hookretroflexbelowcmb","hoonsquare","horicoptic","horizontalbar","horncmb","hotsprings","house","hparen","hsuperior","hturned","huhiragana","huiitosquare","hukatakana","hukatakanahalfwidth","hungarumlaut","hungarumlautcmb","hv","hyphen","hypheninferior","hyphenmonospace","hyphensmall","hyphensuperior","hyphentwo","iacute","iacyrillic","ibengali","ibopomofo","ibreve","icaron","icircle","icircumflex","icyrillic","idblgrave","ideographearthcircle","ideographfirecircle","ideographicallianceparen","ideographiccallparen","ideographiccentrecircle","ideographicclose","ideographiccomma","ideographiccommaleft","ideographiccongratulationparen","ideographiccorrectcircle","ideographicearthparen","ideographicenterpriseparen","ideographicexcellentcircle","ideographicfestivalparen","ideographicfinancialcircle","ideographicfinancialparen","ideographicfireparen","ideographichaveparen","ideographichighcircle","ideographiciterationmark","ideographiclaborcircle","ideographiclaborparen","ideographicleftcircle","ideographiclowcircle","ideographicmedicinecircle","ideographicmetalparen","ideographicmoonparen","ideographicnameparen","ideographicperiod","ideographicprintcircle","ideographicreachparen","ideographicrepresentparen","ideographicresourceparen","ideographicrightcircle","ideographicsecretcircle","ideographicselfparen","ideographicsocietyparen","ideographicspace","ideographicspecialparen","ideographicstockparen","ideographicstudyparen","ideographicsunparen","ideographicsuperviseparen","ideographicwaterparen","ideographicwoodparen","ideographiczero","ideographmetalcircle","ideographmooncircle","ideographnamecircle","ideographsuncircle","ideographwatercircle","ideographwoodcircle","ideva","idieresis","idieresisacute","idieresiscyrillic","idotbelow","iebrevecyrillic","iecyrillic","ieungacirclekorean","ieungaparenkorean","ieungcirclekorean","ieungkorean","ieungparenkorean","igrave","igujarati","igurmukhi","ihiragana","ihookabove","iibengali","iicyrillic","iideva","iigujarati","iigurmukhi","iimatragurmukhi","iinvertedbreve","iishortcyrillic","iivowelsignbengali","iivowelsigndeva","iivowelsigngujarati","ij","ikatakana","ikatakanahalfwidth","ikorean","ilde","iluyhebrew","imacron","imacroncyrillic","imageorapproximatelyequal","imatragurmukhi","imonospace","increment","infinity","iniarmenian","integral","integralbottom","integralbt","integralex","integraltop","integraltp","intersection","intisquare","invbullet","invcircle","invsmileface","iocyrillic","iogonek","iota","iotadieresis","iotadieresistonos","iotalatin","iotatonos","iparen","irigurmukhi","ismallhiragana","ismallkatakana","ismallkatakanahalfwidth","issharbengali","istroke","isuperior","iterationhiragana","iterationkatakana","itilde","itildebelow","iubopomofo","iucyrillic","ivowelsignbengali","ivowelsigndeva","ivowelsigngujarati","izhitsacyrillic","izhitsadblgravecyrillic","jaarmenian","jabengali","jadeva","jagujarati","jagurmukhi","jbopomofo","jcaron","jcircle","jcircumflex","jcrossedtail","jdotlessstroke","jecyrillic","jeemarabic","jeemfinalarabic","jeeminitialarabic","jeemmedialarabic","jeharabic","jehfinalarabic","jhabengali","jhadeva","jhagujarati","jhagurmukhi","jheharmenian","jis","jmonospace","jparen","jsuperior","kabashkircyrillic","kabengali","kacute","kacyrillic","kadescendercyrillic","kadeva","kaf","kafarabic","kafdagesh","kafdageshhebrew","kaffinalarabic","kafhebrew","kafinitialarabic","kafmedialarabic","kafrafehebrew","kagujarati","kagurmukhi","kahiragana","kahookcyrillic","kakatakana","kakatakanahalfwidth","kappa","kappasymbolgreek","kapyeounmieumkorean","kapyeounphieuphkorean","kapyeounpieupkorean","kapyeounssangpieupkorean","karoriisquare","kashidaautoarabic","kashidaautonosidebearingarabic","kasmallkatakana","kasquare","kasraarabic","kasratanarabic","kastrokecyrillic","katahiraprolongmarkhalfwidth","kaverticalstrokecyrillic","kbopomofo","kcalsquare","kcaron","kcedilla","kcircle","kcommaaccent","kdotbelow","keharmenian","kehiragana","kekatakana","kekatakanahalfwidth","kenarmenian","kesmallkatakana","kgreenlandic","khabengali","khacyrillic","khadeva","khagujarati","khagurmukhi","khaharabic","khahfinalarabic","khahinitialarabic","khahmedialarabic","kheicoptic","khhadeva","khhagurmukhi","khieukhacirclekorean","khieukhaparenkorean","khieukhcirclekorean","khieukhkorean","khieukhparenkorean","khokhaithai","khokhonthai","khokhuatthai","khokhwaithai","khomutthai","khook","khorakhangthai","khzsquare","kihiragana","kikatakana","kikatakanahalfwidth","kiroguramusquare","kiromeetorusquare","kirosquare","kiyeokacirclekorean","kiyeokaparenkorean","kiyeokcirclekorean","kiyeokkorean","kiyeokparenkorean","kiyeoksioskorean","kjecyrillic","klinebelow","klsquare","kmcubedsquare","kmonospace","kmsquaredsquare","kohiragana","kohmsquare","kokaithai","kokatakana","kokatakanahalfwidth","kooposquare","koppacyrillic","koreanstandardsymbol","koroniscmb","kparen","kpasquare","ksicyrillic","ktsquare","kturned","kuhiragana","kukatakana","kukatakanahalfwidth","kvsquare","kwsquare","l","labengali","lacute","ladeva","lagujarati","lagurmukhi","lakkhangyaothai","lamaleffinalarabic","lamalefhamzaabovefinalarabic","lamalefhamzaaboveisolatedarabic","lamalefhamzabelowfinalarabic","lamalefhamzabelowisolatedarabic","lamalefisolatedarabic","lamalefmaddaabovefinalarabic","lamalefmaddaaboveisolatedarabic","lamarabic","lambda","lambdastroke","lamed","lameddagesh","lameddageshhebrew","lamedhebrew","lamfinalarabic","lamhahinitialarabic","laminitialarabic","lamjeeminitialarabic","lamkhahinitialarabic","lamlamhehisolatedarabic","lammedialarabic","lammeemhahinitialarabic","lammeeminitialarabic","largecircle","lbar","lbelt","lbopomofo","lcaron","lcedilla","lcircle","lcircumflexbelow","lcommaaccent","ldot","ldotaccent","ldotbelow","ldotbelowmacron","leftangleabovecmb","lefttackbelowcmb","less","lessequal","lessequalorgreater","lessmonospace","lessorequivalent","lessorgreater","lessoverequal","lesssmall","lezh","lfblock","lhookretroflex","lira","liwnarmenian","lj","ljecyrillic","ll","lladeva","llagujarati","llinebelow","llladeva","llvocalicbengali","llvocalicdeva","llvocalicvowelsignbengali","llvocalicvowelsigndeva","lmiddletilde","lmonospace","lmsquare","lochulathai","logicaland","logicalnot","logicalnotreversed","logicalor","lolingthai","longs","lowlinecenterline","lowlinecmb","lowlinedashed","lozenge","lparen","lslash","lsquare","lsuperior","ltshade","luthai","lvocalicbengali","lvocalicdeva","lvocalicvowelsignbengali","lvocalicvowelsigndeva","lxsquare","mabengali","macron","macronbelowcmb","macroncmb","macronlowmod","macronmonospace","macute","madeva","magujarati","magurmukhi","mahapakhhebrew","mahapakhlefthebrew","mahiragana","maichattawalowleftthai","maichattawalowrightthai","maichattawathai","maichattawaupperleftthai","maieklowleftthai","maieklowrightthai","maiekthai","maiekupperleftthai","maihanakatleftthai","maihanakatthai","maitaikhuleftthai","maitaikhuthai","maitholowleftthai","maitholowrightthai","maithothai","maithoupperleftthai","maitrilowleftthai","maitrilowrightthai","maitrithai","maitriupperleftthai","maiyamokthai","makatakana","makatakanahalfwidth","male","mansyonsquare","maqafhebrew","mars","masoracirclehebrew","masquare","mbopomofo","mbsquare","mcircle","mcubedsquare","mdotaccent","mdotbelow","meemarabic","meemfinalarabic","meeminitialarabic","meemmedialarabic","meemmeeminitialarabic","meemmeemisolatedarabic","meetorusquare","mehiragana","meizierasquare","mekatakana","mekatakanahalfwidth","mem","memdagesh","memdageshhebrew","memhebrew","menarmenian","merkhahebrew","merkhakefulahebrew","merkhakefulalefthebrew","merkhalefthebrew","mhook","mhzsquare","middledotkatakanahalfwidth","middot","mieumacirclekorean","mieumaparenkorean","mieumcirclekorean","mieumkorean","mieumpansioskorean","mieumparenkorean","mieumpieupkorean","mieumsioskorean","mihiragana","mikatakana","mikatakanahalfwidth","minus","minusbelowcmb","minuscircle","minusmod","minusplus","minute","miribaarusquare","mirisquare","mlonglegturned","mlsquare","mmcubedsquare","mmonospace","mmsquaredsquare","mohiragana","mohmsquare","mokatakana","mokatakanahalfwidth","molsquare","momathai","moverssquare","moverssquaredsquare","mparen","mpasquare","mssquare","msuperior","mturned","mu","mu1","muasquare","muchgreater","muchless","mufsquare","mugreek","mugsquare","muhiragana","mukatakana","mukatakanahalfwidth","mulsquare","multiply","mumsquare","munahhebrew","munahlefthebrew","musicalnote","musicalnotedbl","musicflatsign","musicsharpsign","mussquare","muvsquare","muwsquare","mvmegasquare","mvsquare","mwmegasquare","mwsquare","nabengali","nabla","nacute","nadeva","nagujarati","nagurmukhi","nahiragana","nakatakana","nakatakanahalfwidth","napostrophe","nasquare","nbopomofo","nbspace","ncaron","ncedilla","ncircle","ncircumflexbelow","ncommaaccent","ndotaccent","ndotbelow","nehiragana","nekatakana","nekatakanahalfwidth","newsheqelsign","nfsquare","ngabengali","ngadeva","ngagujarati","ngagurmukhi","ngonguthai","nhiragana","nhookleft","nhookretroflex","nieunacirclekorean","nieunaparenkorean","nieuncieuckorean","nieuncirclekorean","nieunhieuhkorean","nieunkorean","nieunpansioskorean","nieunparenkorean","nieunsioskorean","nieuntikeutkorean","nihiragana","nikatakana","nikatakanahalfwidth","nikhahitleftthai","nikhahitthai","nine","ninearabic","ninebengali","ninecircle","ninecircleinversesansserif","ninedeva","ninegujarati","ninegurmukhi","ninehackarabic","ninehangzhou","nineideographicparen","nineinferior","ninemonospace","nineoldstyle","nineparen","nineperiod","ninepersian","nineroman","ninesuperior","nineteencircle","nineteenparen","nineteenperiod","ninethai","nj","njecyrillic","nkatakana","nkatakanahalfwidth","nlegrightlong","nlinebelow","nmonospace","nmsquare","nnabengali","nnadeva","nnagujarati","nnagurmukhi","nnnadeva","nohiragana","nokatakana","nokatakanahalfwidth","nonbreakingspace","nonenthai","nonuthai","noonarabic","noonfinalarabic","noonghunnaarabic","noonghunnafinalarabic","nooninitialarabic","noonjeeminitialarabic","noonjeemisolatedarabic","noonmedialarabic","noonmeeminitialarabic","noonmeemisolatedarabic","noonnoonfinalarabic","notcontains","notelement","notelementof","notequal","notgreater","notgreaternorequal","notgreaternorless","notidentical","notless","notlessnorequal","notparallel","notprecedes","notsubset","notsucceeds","notsuperset","nowarmenian","nparen","nssquare","nsuperior","ntilde","nu","nuhiragana","nukatakana","nukatakanahalfwidth","nuktabengali","nuktadeva","nuktagujarati","nuktagurmukhi","numbersign","numbersignmonospace","numbersignsmall","numeralsigngreek","numeralsignlowergreek","numero","nun","nundagesh","nundageshhebrew","nunhebrew","nvsquare","nwsquare","nyabengali","nyadeva","nyagujarati","nyagurmukhi","o","oacute","oangthai","obarred","obarredcyrillic","obarreddieresiscyrillic","obengali","obopomofo","obreve","ocandradeva","ocandragujarati","ocandravowelsigndeva","ocandravowelsigngujarati","ocaron","ocircle","ocircumflex","ocircumflexacute","ocircumflexdotbelow","ocircumflexgrave","ocircumflexhookabove","ocircumflextilde","ocyrillic","odblacute","odblgrave","odeva","odieresis","odieresiscyrillic","odotbelow","oe","oekorean","ogonek","ogonekcmb","ograve","ogujarati","oharmenian","ohiragana","ohookabove","ohorn","ohornacute","ohorndotbelow","ohorngrave","ohornhookabove","ohorntilde","ohungarumlaut","oi","oinvertedbreve","okatakana","okatakanahalfwidth","okorean","olehebrew","omacron","omacronacute","omacrongrave","omdeva","omega","omega1","omegacyrillic","omegalatinclosed","omegaroundcyrillic","omegatitlocyrillic","omegatonos","omgujarati","omicron","omicrontonos","omonospace","one","onearabic","onebengali","onecircle","onecircleinversesansserif","onedeva","onedotenleader","oneeighth","onefitted","onegujarati","onegurmukhi","onehackarabic","onehalf","onehangzhou","oneideographicparen","oneinferior","onemonospace","onenumeratorbengali","oneoldstyle","oneparen","oneperiod","onepersian","onequarter","oneroman","onesuperior","onethai","onethird","oogonek","oogonekmacron","oogurmukhi","oomatragurmukhi","oopen","oparen","openbullet","option","ordfeminine","ordmasculine","orthogonal","oshortdeva","oshortvowelsigndeva","oslash","oslashacute","osmallhiragana","osmallkatakana","osmallkatakanahalfwidth","ostrokeacute","osuperior","otcyrillic","otilde","otildeacute","otildedieresis","oubopomofo","overline","overlinecenterline","overlinecmb","overlinedashed","overlinedblwavy","overlinewavy","overscore","ovowelsignbengali","ovowelsigndeva","ovowelsigngujarati","paampssquare","paasentosquare","pabengali","pacute","padeva","pagedown","pageup","pagujarati","pagurmukhi","pahiragana","paiyannoithai","pakatakana","palatalizationcyrilliccmb","palochkacyrillic","pansioskorean","paragraph","parallel","parenleft","parenleftaltonearabic","parenleftbt","parenleftex","parenleftinferior","parenleftmonospace","parenleftsmall","parenleftsuperior","parenlefttp","parenleftvertical","parenright","parenrightaltonearabic","parenrightbt","parenrightex","parenrightinferior","parenrightmonospace","parenrightsmall","parenrightsuperior","parenrighttp","parenrightvertical","partialdiff","paseqhebrew","pashtahebrew","pasquare","patah","patah11","patah1d","patah2a","patahhebrew","patahnarrowhebrew","patahquarterhebrew","patahwidehebrew","pazerhebrew","pbopomofo","pcircle","pdotaccent","pe","pecyrillic","pedagesh","pedageshhebrew","peezisquare","pefinaldageshhebrew","peharabic","peharmenian","pehebrew","pehfinalarabic","pehinitialarabic","pehiragana","pehmedialarabic","pekatakana","pemiddlehookcyrillic","perafehebrew","percent","percentarabic","percentmonospace","percentsmall","period","periodarmenian","periodcentered","periodhalfwidth","periodinferior","periodmonospace","periodsmall","periodsuperior","perispomenigreekcmb","perpendicular","perthousand","peseta","pfsquare","phabengali","phadeva","phagujarati","phagurmukhi","phi","phi1","phieuphacirclekorean","phieuphaparenkorean","phieuphcirclekorean","phieuphkorean","phieuphparenkorean","philatin","phinthuthai","phisymbolgreek","phook","phophanthai","phophungthai","phosamphaothai","pi","pieupacirclekorean","pieupaparenkorean","pieupcieuckorean","pieupcirclekorean","pieupkiyeokkorean","pieupkorean","pieupparenkorean","pieupsioskiyeokkorean","pieupsioskorean","pieupsiostikeutkorean","pieupthieuthkorean","pieuptikeutkorean","pihiragana","pikatakana","pisymbolgreek","piwrarmenian","plus","plusbelowcmb","pluscircle","plusminus","plusmod","plusmonospace","plussmall","plussuperior","pmonospace","pmsquare","pohiragana","pointingindexdownwhite","pointingindexleftwhite","pointingindexrightwhite","pointingindexupwhite","pokatakana","poplathai","postalmark","postalmarkface","pparen","precedes","prescription","primemod","primereversed","product","projective","prolongedkana","propellor","propersubset","propersuperset","proportion","proportional","psi","psicyrillic","psilipneumatacyrilliccmb","pssquare","puhiragana","pukatakana","pvsquare","pwsquare","qadeva","qadmahebrew","qafarabic","qaffinalarabic","qafinitialarabic","qafmedialarabic","qamats","qamats10","qamats1a","qamats1c","qamats27","qamats29","qamats33","qamatsde","qamatshebrew","qamatsnarrowhebrew","qamatsqatanhebrew","qamatsqatannarrowhebrew","qamatsqatanquarterhebrew","qamatsqatanwidehebrew","qamatsquarterhebrew","qamatswidehebrew","qarneyparahebrew","qbopomofo","qcircle","qhook","qmonospace","qof","qofdagesh","qofdageshhebrew","qofhebrew","qparen","quarternote","qubuts","qubuts18","qubuts25","qubuts31","qubutshebrew","qubutsnarrowhebrew","qubutsquarterhebrew","qubutswidehebrew","question","questionarabic","questionarmenian","questiondown","questiondownsmall","questiongreek","questionmonospace","questionsmall","quotedbl","quotedblbase","quotedblleft","quotedblmonospace","quotedblprime","quotedblprimereversed","quotedblright","quoteleft","quoteleftreversed","quotereversed","quoteright","quoterightn","quotesinglbase","quotesingle","quotesinglemonospace","raarmenian","rabengali","racute","radeva","radical","radicalex","radoverssquare","radoverssquaredsquare","radsquare","rafe","rafehebrew","ragujarati","ragurmukhi","rahiragana","rakatakana","rakatakanahalfwidth","ralowerdiagonalbengali","ramiddlediagonalbengali","ramshorn","ratio","rbopomofo","rcaron","rcedilla","rcircle","rcommaaccent","rdblgrave","rdotaccent","rdotbelow","rdotbelowmacron","referencemark","reflexsubset","reflexsuperset","registered","registersans","registerserif","reharabic","reharmenian","rehfinalarabic","rehiragana","rekatakana","rekatakanahalfwidth","resh","reshdageshhebrew","reshhebrew","reversedtilde","reviahebrew","reviamugrashhebrew","revlogicalnot","rfishhook","rfishhookreversed","rhabengali","rhadeva","rho","rhook","rhookturned","rhookturnedsuperior","rhosymbolgreek","rhotichookmod","rieulacirclekorean","rieulaparenkorean","rieulcirclekorean","rieulhieuhkorean","rieulkiyeokkorean","rieulkiyeoksioskorean","rieulkorean","rieulmieumkorean","rieulpansioskorean","rieulparenkorean","rieulphieuphkorean","rieulpieupkorean","rieulpieupsioskorean","rieulsioskorean","rieulthieuthkorean","rieultikeutkorean","rieulyeorinhieuhkorean","rightangle","righttackbelowcmb","righttriangle","rihiragana","rikatakana","rikatakanahalfwidth","ring","ringbelowcmb","ringcmb","ringhalfleft","ringhalfleftarmenian","ringhalfleftbelowcmb","ringhalfleftcentered","ringhalfright","ringhalfrightbelowcmb","ringhalfrightcentered","rinvertedbreve","rittorusquare","rlinebelow","rlongleg","rlonglegturned","rmonospace","rohiragana","rokatakana","rokatakanahalfwidth","roruathai","rparen","rrabengali","rradeva","rragurmukhi","rreharabic","rrehfinalarabic","rrvocalicbengali","rrvocalicdeva","rrvocalicgujarati","rrvocalicvowelsignbengali","rrvocalicvowelsigndeva","rrvocalicvowelsigngujarati","rsuperior","rtblock","rturned","rturnedsuperior","ruhiragana","rukatakana","rukatakanahalfwidth","rupeemarkbengali","rupeesignbengali","rupiah","ruthai","rvocalicbengali","rvocalicdeva","rvocalicgujarati","rvocalicvowelsignbengali","rvocalicvowelsigndeva","rvocalicvowelsigngujarati","s","sabengali","sacute","sacutedotaccent","sadarabic","sadeva","sadfinalarabic","sadinitialarabic","sadmedialarabic","sagujarati","sagurmukhi","sahiragana","sakatakana","sakatakanahalfwidth","sallallahoualayhewasallamarabic","samekh","samekhdagesh","samekhdageshhebrew","samekhhebrew","saraaathai","saraaethai","saraaimaimalaithai","saraaimaimuanthai","saraamthai","saraathai","saraethai","saraiileftthai","saraiithai","saraileftthai","saraithai","saraothai","saraueeleftthai","saraueethai","saraueleftthai","sarauethai","sarauthai","sarauuthai","sbopomofo","scaron","scarondotaccent","scedilla","schwa","schwacyrillic","schwadieresiscyrillic","schwahook","scircle","scircumflex","scommaaccent","sdotaccent","sdotbelow","sdotbelowdotaccent","seagullbelowcmb","second","secondtonechinese","section","seenarabic","seenfinalarabic","seeninitialarabic","seenmedialarabic","segol","segol13","segol1f","segol2c","segolhebrew","segolnarrowhebrew","segolquarterhebrew","segoltahebrew","segolwidehebrew","seharmenian","sehiragana","sekatakana","sekatakanahalfwidth","semicolon","semicolonarabic","semicolonmonospace","semicolonsmall","semivoicedmarkkana","semivoicedmarkkanahalfwidth","sentisquare","sentosquare","seven","sevenarabic","sevenbengali","sevencircle","sevencircleinversesansserif","sevendeva","seveneighths","sevengujarati","sevengurmukhi","sevenhackarabic","sevenhangzhou","sevenideographicparen","seveninferior","sevenmonospace","sevenoldstyle","sevenparen","sevenperiod","sevenpersian","sevenroman","sevensuperior","seventeencircle","seventeenparen","seventeenperiod","seventhai","sfthyphen","shaarmenian","shabengali","shacyrillic","shaddaarabic","shaddadammaarabic","shaddadammatanarabic","shaddafathaarabic","shaddakasraarabic","shaddakasratanarabic","shade","shadedark","shadelight","shademedium","shadeva","shagujarati","shagurmukhi","shalshelethebrew","shbopomofo","shchacyrillic","sheenarabic","sheenfinalarabic","sheeninitialarabic","sheenmedialarabic","sheicoptic","sheqel","sheqelhebrew","sheva","sheva115","sheva15","sheva22","sheva2e","shevahebrew","shevanarrowhebrew","shevaquarterhebrew","shevawidehebrew","shhacyrillic","shimacoptic","shin","shindagesh","shindageshhebrew","shindageshshindot","shindageshshindothebrew","shindageshsindot","shindageshsindothebrew","shindothebrew","shinhebrew","shinshindot","shinshindothebrew","shinsindot","shinsindothebrew","shook","sigma","sigma1","sigmafinal","sigmalunatesymbolgreek","sihiragana","sikatakana","sikatakanahalfwidth","siluqhebrew","siluqlefthebrew","similar","sindothebrew","siosacirclekorean","siosaparenkorean","sioscieuckorean","sioscirclekorean","sioskiyeokkorean","sioskorean","siosnieunkorean","siosparenkorean","siospieupkorean","siostikeutkorean","six","sixarabic","sixbengali","sixcircle","sixcircleinversesansserif","sixdeva","sixgujarati","sixgurmukhi","sixhackarabic","sixhangzhou","sixideographicparen","sixinferior","sixmonospace","sixoldstyle","sixparen","sixperiod","sixpersian","sixroman","sixsuperior","sixteencircle","sixteencurrencydenominatorbengali","sixteenparen","sixteenperiod","sixthai","slash","slashmonospace","slong","slongdotaccent","smileface","smonospace","sofpasuqhebrew","softhyphen","softsigncyrillic","sohiragana","sokatakana","sokatakanahalfwidth","soliduslongoverlaycmb","solidusshortoverlaycmb","sorusithai","sosalathai","sosothai","sosuathai","space","spacehackarabic","spade","spadesuitblack","spadesuitwhite","sparen","squarebelowcmb","squarecc","squarecm","squarediagonalcrosshatchfill","squarehorizontalfill","squarekg","squarekm","squarekmcapital","squareln","squarelog","squaremg","squaremil","squaremm","squaremsquared","squareorthogonalcrosshatchfill","squareupperlefttolowerrightfill","squareupperrighttolowerleftfill","squareverticalfill","squarewhitewithsmallblack","srsquare","ssabengali","ssadeva","ssagujarati","ssangcieuckorean","ssanghieuhkorean","ssangieungkorean","ssangkiyeokkorean","ssangnieunkorean","ssangpieupkorean","ssangsioskorean","ssangtikeutkorean","ssuperior","sterling","sterlingmonospace","strokelongoverlaycmb","strokeshortoverlaycmb","subset","subsetnotequal","subsetorequal","succeeds","suchthat","suhiragana","sukatakana","sukatakanahalfwidth","sukunarabic","summation","sun","superset","supersetnotequal","supersetorequal","svsquare","syouwaerasquare","tabengali","tackdown","tackleft","tadeva","tagujarati","tagurmukhi","taharabic","tahfinalarabic","tahinitialarabic","tahiragana","tahmedialarabic","taisyouerasquare","takatakana","takatakanahalfwidth","tatweelarabic","tau","tav","tavdages","tavdagesh","tavdageshhebrew","tavhebrew","tbar","tbopomofo","tcaron","tccurl","tcedilla","tcheharabic","tchehfinalarabic","tchehinitialarabic","tchehmedialarabic","tcircle","tcircumflexbelow","tcommaaccent","tdieresis","tdotaccent","tdotbelow","tecyrillic","tedescendercyrillic","teharabic","tehfinalarabic","tehhahinitialarabic","tehhahisolatedarabic","tehinitialarabic","tehiragana","tehjeeminitialarabic","tehjeemisolatedarabic","tehmarbutaarabic","tehmarbutafinalarabic","tehmedialarabic","tehmeeminitialarabic","tehmeemisolatedarabic","tehnoonfinalarabic","tekatakana","tekatakanahalfwidth","telephone","telephoneblack","telishagedolahebrew","telishaqetanahebrew","tencircle","tenideographicparen","tenparen","tenperiod","tenroman","tesh","tet","tetdagesh","tetdageshhebrew","tethebrew","tetsecyrillic","tevirhebrew","tevirlefthebrew","thabengali","thadeva","thagujarati","thagurmukhi","thalarabic","thalfinalarabic","thanthakhatlowleftthai","thanthakhatlowrightthai","thanthakhatthai","thanthakhatupperleftthai","theharabic","thehfinalarabic","thehinitialarabic","thehmedialarabic","thereexists","therefore","theta","theta1","thetasymbolgreek","thieuthacirclekorean","thieuthaparenkorean","thieuthcirclekorean","thieuthkorean","thieuthparenkorean","thirteencircle","thirteenparen","thirteenperiod","thonangmonthothai","thook","thophuthaothai","thorn","thothahanthai","thothanthai","thothongthai","thothungthai","thousandcyrillic","thousandsseparatorarabic","thousandsseparatorpersian","three","threearabic","threebengali","threecircle","threecircleinversesansserif","threedeva","threeeighths","threegujarati","threegurmukhi","threehackarabic","threehangzhou","threeideographicparen","threeinferior","threemonospace","threenumeratorbengali","threeoldstyle","threeparen","threeperiod","threepersian","threequarters","threequartersemdash","threeroman","threesuperior","threethai","thzsquare","tihiragana","tikatakana","tikatakanahalfwidth","tikeutacirclekorean","tikeutaparenkorean","tikeutcirclekorean","tikeutkorean","tikeutparenkorean","tilde","tildebelowcmb","tildecmb","tildecomb","tildedoublecmb","tildeoperator","tildeoverlaycmb","tildeverticalcmb","timescircle","tipehahebrew","tipehalefthebrew","tippigurmukhi","titlocyrilliccmb","tiwnarmenian","tlinebelow","tmonospace","toarmenian","tohiragana","tokatakana","tokatakanahalfwidth","tonebarextrahighmod","tonebarextralowmod","tonebarhighmod","tonebarlowmod","tonebarmidmod","tonefive","tonesix","tonetwo","tonos","tonsquare","topatakthai","tortoiseshellbracketleft","tortoiseshellbracketleftsmall","tortoiseshellbracketleftvertical","tortoiseshellbracketright","tortoiseshellbracketrightsmall","tortoiseshellbracketrightvertical","totaothai","tpalatalhook","tparen","trademark","trademarksans","trademarkserif","tretroflexhook","triagdn","triaglf","triagrt","triagup","ts","tsadi","tsadidagesh","tsadidageshhebrew","tsadihebrew","tsecyrillic","tsere","tsere12","tsere1e","tsere2b","tserehebrew","tserenarrowhebrew","tserequarterhebrew","tserewidehebrew","tshecyrillic","tsuperior","ttabengali","ttadeva","ttagujarati","ttagurmukhi","tteharabic","ttehfinalarabic","ttehinitialarabic","ttehmedialarabic","tthabengali","tthadeva","tthagujarati","tthagurmukhi","tturned","tuhiragana","tukatakana","tukatakanahalfwidth","tusmallhiragana","tusmallkatakana","tusmallkatakanahalfwidth","twelvecircle","twelveparen","twelveperiod","twelveroman","twentycircle","twentyhangzhou","twentyparen","twentyperiod","two","twoarabic","twobengali","twocircle","twocircleinversesansserif","twodeva","twodotenleader","twodotleader","twodotleadervertical","twogujarati","twogurmukhi","twohackarabic","twohangzhou","twoideographicparen","twoinferior","twomonospace","twonumeratorbengali","twooldstyle","twoparen","twoperiod","twopersian","tworoman","twostroke","twosuperior","twothai","twothirds","u","uacute","ubar","ubengali","ubopomofo","ubreve","ucaron","ucircle","ucircumflex","ucircumflexbelow","ucyrillic","udattadeva","udblacute","udblgrave","udeva","udieresis","udieresisacute","udieresisbelow","udieresiscaron","udieresiscyrillic","udieresisgrave","udieresismacron","udotbelow","ugrave","ugujarati","ugurmukhi","uhiragana","uhookabove","uhorn","uhornacute","uhorndotbelow","uhorngrave","uhornhookabove","uhorntilde","uhungarumlaut","uhungarumlautcyrillic","uinvertedbreve","ukatakana","ukatakanahalfwidth","ukcyrillic","ukorean","umacron","umacroncyrillic","umacrondieresis","umatragurmukhi","umonospace","underscore","underscoredbl","underscoremonospace","underscorevertical","underscorewavy","union","universal","uogonek","uparen","upblock","upperdothebrew","upsilon","upsilondieresis","upsilondieresistonos","upsilonlatin","upsilontonos","uptackbelowcmb","uptackmod","uragurmukhi","uring","ushortcyrillic","usmallhiragana","usmallkatakana","usmallkatakanahalfwidth","ustraightcyrillic","ustraightstrokecyrillic","utilde","utildeacute","utildebelow","uubengali","uudeva","uugujarati","uugurmukhi","uumatragurmukhi","uuvowelsignbengali","uuvowelsigndeva","uuvowelsigngujarati","uvowelsignbengali","uvowelsigndeva","uvowelsigngujarati","vadeva","vagujarati","vagurmukhi","vakatakana","vav","vavdagesh","vavdagesh65","vavdageshhebrew","vavhebrew","vavholam","vavholamhebrew","vavvavhebrew","vavyodhebrew","vcircle","vdotbelow","vecyrillic","veharabic","vehfinalarabic","vehinitialarabic","vehmedialarabic","vekatakana","venus","verticalbar","verticallineabovecmb","verticallinebelowcmb","verticallinelowmod","verticallinemod","vewarmenian","vhook","vikatakana","viramabengali","viramadeva","viramagujarati","visargabengali","visargadeva","visargagujarati","vmonospace","voarmenian","voicediterationhiragana","voicediterationkatakana","voicedmarkkana","voicedmarkkanahalfwidth","vokatakana","vparen","vtilde","vturned","vuhiragana","vukatakana","wacute","waekorean","wahiragana","wakatakana","wakatakanahalfwidth","wakorean","wasmallhiragana","wasmallkatakana","wattosquare","wavedash","wavyunderscorevertical","wawarabic","wawfinalarabic","wawhamzaabovearabic","wawhamzaabovefinalarabic","wbsquare","wcircle","wcircumflex","wdieresis","wdotaccent","wdotbelow","wehiragana","weierstrass","wekatakana","wekorean","weokorean","wgrave","whitebullet","whitecircle","whitecircleinverse","whitecornerbracketleft","whitecornerbracketleftvertical","whitecornerbracketright","whitecornerbracketrightvertical","whitediamond","whitediamondcontainingblacksmalldiamond","whitedownpointingsmalltriangle","whitedownpointingtriangle","whiteleftpointingsmalltriangle","whiteleftpointingtriangle","whitelenticularbracketleft","whitelenticularbracketright","whiterightpointingsmalltriangle","whiterightpointingtriangle","whitesmallsquare","whitesmilingface","whitesquare","whitestar","whitetelephone","whitetortoiseshellbracketleft","whitetortoiseshellbracketright","whiteuppointingsmalltriangle","whiteuppointingtriangle","wihiragana","wikatakana","wikorean","wmonospace","wohiragana","wokatakana","wokatakanahalfwidth","won","wonmonospace","wowaenthai","wparen","wring","wsuperior","wturned","wynn","xabovecmb","xbopomofo","xcircle","xdieresis","xdotaccent","xeharmenian","xi","xmonospace","xparen","xsuperior","yaadosquare","yabengali","yacute","yadeva","yaekorean","yagujarati","yagurmukhi","yahiragana","yakatakana","yakatakanahalfwidth","yakorean","yamakkanthai","yasmallhiragana","yasmallkatakana","yasmallkatakanahalfwidth","yatcyrillic","ycircle","ycircumflex","ydieresis","ydotaccent","ydotbelow","yeharabic","yehbarreearabic","yehbarreefinalarabic","yehfinalarabic","yehhamzaabovearabic","yehhamzaabovefinalarabic","yehhamzaaboveinitialarabic","yehhamzaabovemedialarabic","yehinitialarabic","yehmedialarabic","yehmeeminitialarabic","yehmeemisolatedarabic","yehnoonfinalarabic","yehthreedotsbelowarabic","yekorean","yen","yenmonospace","yeokorean","yeorinhieuhkorean","yerahbenyomohebrew","yerahbenyomolefthebrew","yericyrillic","yerudieresiscyrillic","yesieungkorean","yesieungpansioskorean","yesieungsioskorean","yetivhebrew","ygrave","yhook","yhookabove","yiarmenian","yicyrillic","yikorean","yinyang","yiwnarmenian","ymonospace","yod","yoddagesh","yoddageshhebrew","yodhebrew","yodyodhebrew","yodyodpatahhebrew","yohiragana","yoikorean","yokatakana","yokatakanahalfwidth","yokorean","yosmallhiragana","yosmallkatakana","yosmallkatakanahalfwidth","yotgreek","yoyaekorean","yoyakorean","yoyakthai","yoyingthai","yparen","ypogegrammeni","ypogegrammenigreekcmb","yr","yring","ysuperior","ytilde","yturned","yuhiragana","yuikorean","yukatakana","yukatakanahalfwidth","yukorean","yusbigcyrillic","yusbigiotifiedcyrillic","yuslittlecyrillic","yuslittleiotifiedcyrillic","yusmallhiragana","yusmallkatakana","yusmallkatakanahalfwidth","yuyekorean","yuyeokorean","yyabengali","yyadeva","z","zaarmenian","zacute","zadeva","zagurmukhi","zaharabic","zahfinalarabic","zahinitialarabic","zahiragana","zahmedialarabic","zainarabic","zainfinalarabic","zakatakana","zaqefgadolhebrew","zaqefqatanhebrew","zarqahebrew","zayin","zayindagesh","zayindageshhebrew","zayinhebrew","zbopomofo","zcaron","zcircle","zcircumflex","zcurl","zdot","zdotaccent","zdotbelow","zecyrillic","zedescendercyrillic","zedieresiscyrillic","zehiragana","zekatakana","zero","zeroarabic","zerobengali","zerodeva","zerogujarati","zerogurmukhi","zerohackarabic","zeroinferior","zeromonospace","zerooldstyle","zeropersian","zerosuperior","zerothai","zerowidthjoiner","zerowidthnonjoiner","zerowidthspace","zeta","zhbopomofo","zhearmenian","zhebrevecyrillic","zhecyrillic","zhedescendercyrillic","zhedieresiscyrillic","zihiragana","zikatakana","zinorhebrew","zlinebelow","zmonospace","zohiragana","zokatakana","zparen","zretroflexhook","zstroke","zuhiragana","zukatakana","angbracketleftbig","angbracketleftBig","angbracketleftbigg","angbracketleftBigg","angbracketrightBig","angbracketrightbig","angbracketrightBigg","angbracketrightbigg","arrowhookleft","arrowhookright","arrowlefttophalf","arrowleftbothalf","arrownortheast","arrownorthwest","arrowrighttophalf","arrowrightbothalf","arrowsoutheast","arrowsouthwest","backslashbig","backslashBig","backslashBigg","backslashbigg","bardbl","bracehtipdownleft","bracehtipdownright","bracehtipupleft","bracehtipupright","braceleftBig","braceleftbig","braceleftbigg","braceleftBigg","bracerightBig","bracerightbig","bracerightbigg","bracerightBigg","bracketleftbig","bracketleftBig","bracketleftbigg","bracketleftBigg","bracketrightBig","bracketrightbig","bracketrightbigg","bracketrightBigg","ceilingleftbig","ceilingleftBig","ceilingleftBigg","ceilingleftbigg","ceilingrightbig","ceilingrightBig","ceilingrightbigg","ceilingrightBigg","circledotdisplay","circledottext","circlemultiplydisplay","circlemultiplytext","circleplusdisplay","circleplustext","contintegraldisplay","contintegraltext","coproductdisplay","coproducttext","floorleftBig","floorleftbig","floorleftbigg","floorleftBigg","floorrightbig","floorrightBig","floorrightBigg","floorrightbigg","hatwide","hatwider","hatwidest","intercal","integraldisplay","integraltext","intersectiondisplay","intersectiontext","logicalanddisplay","logicalandtext","logicalordisplay","logicalortext","parenleftBig","parenleftbig","parenleftBigg","parenleftbigg","parenrightBig","parenrightbig","parenrightBigg","parenrightbigg","prime","productdisplay","producttext","radicalbig","radicalBig","radicalBigg","radicalbigg","radicalbt","radicaltp","radicalvertex","slashbig","slashBig","slashBigg","slashbigg","summationdisplay","summationtext","tildewide","tildewider","tildewidest","uniondisplay","unionmultidisplay","unionmultitext","unionsqdisplay","unionsqtext","uniontext","vextenddouble","vextendsingle","getDingbatsGlyphsUnicode","a1","a2","a202","a3","a4","a5","a119","a118","a117","a11","a12","a13","a14","a15","a16","a105","a17","a18","a19","a20","a21","a22","a23","a24","a25","a26","a27","a28","a6","a7","a8","a9","a10","a29","a30","a31","a32","a33","a34","a35","a36","a37","a38","a39","a40","a41","a42","a43","a44","a45","a46","a47","a48","a49","a50","a51","a52","a53","a54","a55","a56","a57","a58","a59","a60","a61","a62","a63","a64","a65","a66","a67","a68","a69","a70","a71","a72","a73","a74","a203","a75","a204","a76","a77","a78","a79","a81","a82","a83","a84","a97","a98","a99","a100","a101","a102","a103","a104","a106","a107","a108","a112","a111","a110","a109","a120","a121","a122","a123","a124","a125","a126","a127","a128","a129","a130","a131","a132","a133","a134","a135","a136","a137","a138","a139","a140","a141","a142","a143","a144","a145","a146","a147","a148","a149","a150","a151","a152","a153","a154","a155","a156","a157","a158","a159","a160","a161","a163","a164","a196","a165","a192","a166","a167","a168","a169","a170","a171","a172","a173","a162","a174","a175","a176","a177","a178","a179","a193","a180","a199","a181","a200","a182","a201","a183","a184","a197","a185","a194","a198","a186","a195","a187","a188","a189","a190","a191","a89","a90","a93","a94","a91","a92","a205","a85","a206","a86","a87","a88","a95","a96","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","begin","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","reject","read","then","readChunk","arrayByteLength","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","indexOf","sort","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","next","return","TypeError","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","stringToUTF8String","bytesToString","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","toRoman","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","promises","all","translatedFonts","translated","getPage","_this2","getPageDict","_ref","_ref2","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","actionName","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","first","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","topDict","XRefParseException","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","isNaN","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","EndOfLine","byteAlign","EncodedByteAlign","Columns","rows","Rows","eoblock","EndOfBlock","black","BlackIs1","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","included","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","maj","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","rcon","inv_s","mixCol","mix","decrypt128","s0","s1","s2","s3","encrypt128","cipherKey","t3","t4","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","decrypt256","encrypt256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","PasswordException","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","b2","parseFloat","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","ArialNarrow","ArialBlack","Arial","ArialMT","CourierNew","CourierNewPSMT","Helvetica","SegoeUISymbol","TimesNewRoman","TimesNewRomanPS","TimesNewRomanPSMT","Calibri","CenturyGothic","ComicSansMS","LucidaConsole","NuptialScript","Wingdings","Albertus","Aldus","Alexandria","Algerian","Antiqua","Apex","Arno","Aster","Aurora","Baskerville","Bell","Bembo","Benguiat","Bodoni","Bookman","Calisto","Calvert","Capitals","Cambria","Cartier","Caslon","Catull","Centaur","Chaparral","Cheltenham","Clarendon","Clearface","Cochin","Colonna","Constantia","Corona","Ecotype","Egyptienne","Elephant","Excelsior","Fairfield","Folkard","Footlight","FreeSerif","Garamond","Gentium","Georgia","Gloucester","Granjon","Heather","Hercules","Hiroshige","Imprint","Janson","Joanna","Korinna","Lexicon","Literaturnaya","Lucida","Melior","Memphis","Miller","Minion","Modern","Palatino","Perpetua","Plantin","Playbill","Renault","Requiem","Rockwell","Roman","Sabon","Scala","Seagull","Sistina","Souvenir","STIX","Sylfaen","Times","Trajan","Utopia","Versailles","Wanted","Weiss","Windsor","XITS","Dingbats","ZapfDingbats","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","421","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","instance","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","maybePort","_pdf_manager","_is_node2","__esModule","default","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","now","getOperatorList","renderInteractiveForms","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","catch","MissingPDFException","UnexpectedResponseException","UnknownErrorException","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","getPdfManager","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","initializeFromPort","window","self","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","getPageProp","getInheritedPageProp","valueArray","resources","mediaBox","cropBox","intersect","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","JpegError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","successiveACNextValue","eobrun","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","parameters","LinkAnnotation","TextAnnotation","fieldType","getInheritableProperty","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref2$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","TimeSlotManager","canDecode","image","isDecodable","colorSpace","isSupported","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","inline","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","isInline","createImageData","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref3$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","buildTextContentItem","textChunk","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","bidiResult","bidi","dir","runBidiTransform","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","ri","setRenderingIntent","setFlatness","gs","cm","re","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","BT","ET","Tc","Tw","Tz","TL","Tf","Tr","Ts","Td","TD","Tm","Tj","TJ","d0","setCharWidth","d1","setCharWidthAndBounds","CS","SC","SCN","sc","scn","RG","rg","sh","BI","beginInlineImage","ID","beginImageData","EI","Do","MP","DP","BMC","BDC","EMC","BX","EX","BM","BD","true","fa","fal","fals","false","nul","null","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isOpenTypeFile","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","head","hhea","hmtx","maxp","post","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","potentialHeader","potentialTables","nameEntry","cffFile","isTrueType","loca","fpgm","prep","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","cvt","cvtData","numOfMetrics","numMissing","locaLength","indexToLocFormat","numGlyphsPlusOne","isGlyphLocationsLong","glyphsInfo","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","metricsOverride","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","compiler","namePrototype","builder","tableTag","builtInEncoding","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","actualLength","EEXEC_SIGNATURE","streamStartPos","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","740","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","achar","bchar","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","cssColor","makeCssRgb","background","SMALL_NUMBER","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildFigureFromPatch","mesh","figure","figures","coords","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","tmp4","coordsPacked","xy","colorsPacked","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","Courier","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,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AA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,OACAr/J,IAAA,SAEAq/J,MAAA,OACAr/J,IAAA,SAEAq/J,MAAA,QACAr/J,IAAA,UAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,OACAr/J,IAAA,SAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,OACAr/J,IAAA,SAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,OACAr/J,IAAA,SAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,KACAr/J,IAAA,OAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,KACAr/J,IAAA,QAEAq/J,MAAA,MACAr/J,IAAA,QAEAq/J,MAAA,OACAr/J,IAAA,SAsBAqnM,EAAA3hL,EAAA,SAAAvheACAA,EAAA,caA5K,EAAA+tM,wBAzxDA,SAAA3jM,GACA,OAAAA,GAAA,OAAAA,GAAA,MACA,EACGA,GAAA,OAAAA,GAAA,MACHwjM,IAAAxjM,MACG,MAAAA,EACH,GAEAA,GAkxDApK,EAAAguM,aAZA,SAAAC,GACA,IA/2CAhuM,EACAqU,EA82CA45L,EAAAD,EAAAxrM,OACA,GAAAyrM,GAAA,MAh3CAjuM,EAg3CAguM,EAAA93L,WAAA,MA/2CA7B,EAAAu5L,EAAA,KACA/nC,OAAA7lK,EAAAqU,EAAA7N,KAIAxG,IADAqU,EAAAu5L,EAAA,KACA/nC,OAAA7lK,EAAAqU,EAAA7N,KA22CA,OAAAwnM,EAGA,IADA,IAAAn2E,EAAA,GACAv1H,EAAA2rM,EAAA,EAAgC3rM,GAAA,EAASA,IACzCu1H,GAAAm2E,EAAA1rM,GAEA,OAAAu1H,GAIA93H,EAAAmuM,mBAp4CA,SAAAluM,GACA,QAAAqC,EAAA,EAAAC,EAAAsrM,EAAAprM,OAA4CH,EAAAC,EAAQD,IAAA,CACpD,IAAAgS,EAAAu5L,EAAAvrM,GACA,GAAArC,GAAAqU,EAAAwxJ,OAAA7lK,EAAAqU,EAAA7N,IACA,OAAAnE,EAGA,UA83CAtC,EAAA8tM,wBACA9tM,EAAAouM,mBAnxDA,SAAA1tM,EAAA2tM,GACA,IAAAC,EAAAD,EAAA3tM,GACA,YAAA4tM,EACA,OAAAA,EAEA,IAAA5tM,EACA,SAEA,SAAAA,EAAA,IACA,IACA6tM,EADAC,EAAA9tM,EAAA+B,OAEA,OAAA+rM,GAAA,MAAA9tM,EAAA,UAAAA,EAAA,GACA6tM,EAAA7tM,EAAAslM,OAAA,OACK,MAAAwI,GAAA,GAAAA,GAAA,GAGL,SAFAD,EAAA7tM,EAAAslM,OAAA,GAIA,GAAAuI,MAAAE,gBACAH,EAAAn3B,SAAAo3B,EAAA,MACA,EACA,OAAAD,EAIA,WAAAI,IAAA,SAAA9xL,EAAAhS,EAAA0L,GAAA,aC9DAxW,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA2uM,mBAAA3uM,EAAA4uM,oBAAA5uM,EAAA6uM,mBAAA7uM,EAAA8uM,qBAEA,IAAA5uM,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5I0uM,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAA5sM,EAAA,EAAgBA,EAAA4sM,EAAAzsM,OAAkBH,IAAA,CAAO,IAAA6sM,EAAAD,EAAA5sM,GAA2B6sM,EAAAC,WAAAD,EAAAC,eAAwDD,EAAA1qL,gBAAgC,UAAA0qL,MAAAE,aAAuDvvM,OAAAC,eAAAkvM,EAAAE,EAAAtsM,IAAAssM,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA/uM,UAAAgvM,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEArpM,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BupM,EAAiBvpM,EAAQ,KAIzBwpM,GACAzvM,YACA,SAAAgG,EAAAgP,QAAAtU,KAAA,WAAAsF,EAAA0pM,sBAIAd,EAAA,WACA,SAAAA,EAAAj+B,GACA,IAAAxvK,EAAAwvK,EAAAxvK,KACAwuM,EAAAh/B,EAAA++B,gBACAA,WAAAC,MAZA,SAAAC,EAAAP,GAAiD,KAAAO,aAAAP,GAA0C,UAAAlkC,UAAA,qCAA3F,CAcAzqK,KAAAkuM,GAEAluM,KAAAS,OACAT,KAAAgvM,uBAyCA,OAtCAZ,EAAAF,IACAhsM,IAAA,SACA5C,MAAA,SAAAsE,GACA,OAAAurM,EAAAl9L,OACAxR,KAAAT,KAAAS,KACAuuM,gBAAAhvM,KAAAgvM,gBACAprM,UAIA1B,IAAA,kBACA5C,MAAA,SAAA8vM,GACA,OAAAD,EAAAE,YACA5uM,KAAAT,KAAAS,KACAuuM,gBAAAhvM,KAAAgvM,gBACAI,aAIAltM,IAAA,eACA5C,MAAA,SAAA+S,GACA,OAAA88L,EAAA58L,QACA9R,KAAAT,KAAAS,KACAuuM,gBAAAhvM,KAAAgvM,gBACA38L,UAIAnQ,IAAA,WACA5C,MAAA,SAAAsE,GACA,OAAAurM,EAAArqL,OACArkB,KAAAT,KAAAS,KACAuuM,gBAAAhvM,KAAAgvM,gBACAprM,WAKAsqM,EAlDA,GAqDAiB,GAMAG,eAAA,SAAA5nM,EAAA6nM,EAAAC,EAAArnM,GACA,IAAAxG,EAAAC,EACAE,EAAA,EACA,IAAAH,EAAA,EAAAC,EAAA8F,EAAA5F,OAAmCH,EAAAC,EAAQD,IAC3CG,GAAA4F,EAAA/F,GAEAG,GAAAytM,EACA,IAAAjyL,EAAA,IAAA7b,MAAAK,GACAkH,EAAA,EACAC,EAAA,EACAwmM,EAAA,GAAAvgM,KAAAyH,IAAA,EAAA64L,GAAA,GACAE,EAAAvnM,EAAA1D,UAAA3C,EAAA0tM,EAAA,MACAG,EAAA,EACA,IAAAhuM,EAAA,EAAiBA,EAAAG,EAAYH,IAAA,CAC7B,KAAAqH,EAAAwmM,GACAvmM,IAAA,EACAA,GAAAymM,EAAAC,KACA3mM,GAAA,EAEAA,GAAAwmM,EACAlyL,EAAA3b,IAAAsH,GAAAD,GAAAymM,EACAxmM,IAAA,GAAAD,GAAA,EAEA,OAAAsU,GAEAwH,MAAA,SAAAorJ,GACA,IAAAzvK,EAAAyvK,EAAAzvK,KACAuuM,EAAA9+B,EAAA8+B,gBACAprM,EAAAssK,EAAAtsK,GAEAf,EAAAe,EAAAf,KACAA,IACAA,EAAAe,GAEA,IAEAgsM,GAFA5vM,KAAA6vM,iBAAA,KAAA7vM,KAAA8vM,sBAAA9vM,KAAA+vM,iBAAA/vM,KAAAgwM,qBACAntM,EAAA1C,IAAA,iBAEA,IAAAyvM,EACA,UAAAtqM,EAAAyD,YAAA,4BAEA,OAAA6mM,EAAA9rM,KAAA9D,MACAS,OACAuuM,kBACAprM,KACAf,UAGA0P,OAAA,SAAA09L,GACA,IAAAxvM,EAAAwvM,EAAAxvM,KACAuuM,EAAAiB,EAAAjB,gBACA38L,EAAA49L,EAAA59L,GAGA,OADAA,EAAA,IAEA,KA3DA,EA4DA,OAAArS,KAAAkwM,wBACAzvM,OACAuuM,kBACA38L,OAEA,KAhEA,EAiEA,OAAArS,KAAAmwM,6BACA1vM,OACAuuM,kBACA38L,OAEA,KArEA,EAsEA,OAAArS,KAAAowM,wBACA3vM,OACAuuM,kBACA38L,OAEA,QACA,OAAArS,KAAAqwM,2BACA5vM,OACAuuM,kBACA38L,SAIAJ,MAAA,SAAAq+L,GACA,IAAA7vM,EAAA6vM,EAAA7vM,KACAuuM,EAAAsB,EAAAtB,gBACAprM,EAAA0sM,EAAA1sM,GAEAyO,EAAArS,KAAA8kB,OACArkB,OACAuuM,kBACAprM,OAEA,OAAA5D,KAAAuS,QACA9R,OACAuuM,kBACA38L,QAGAg9L,WAAA,SAAAkB,GACA,IAAA9vM,EAAA8vM,EAAA9vM,KACAuuM,EAAAuB,EAAAvB,gBACAI,EAAAmB,EAAAnB,MAEA,IAAA3tM,MAAAC,QAAA0tM,GACA,OAAApvM,KAAAiS,OACAxR,OACAuuM,kBACAprM,GAAAwrM,IAIA,IADA,IAAAvpL,KACAtZ,EAAA,EAAAsiK,EAAAugC,EAAAttM,OAAwCyK,EAAAsiK,EAAQtiK,IAChDsZ,EAAAtI,KAAAvd,KAAAiS,OACAxR,OACAuuM,kBACAprM,GAAAnD,EAAAU,WAAAiuM,EAAA7iM,OAGA,gBAAAiD,EAAAC,EAAAG,EAAAC,GACA,QAAAlO,EAAA,EAAAC,EAAAikB,EAAA/jB,OAA4CH,EAAAC,EAAQD,IACpDkkB,EAAAlkB,GAAA6N,EAAAC,EAAAG,EAAAC,EAAAlO,KAIAkuM,iBAAA,SAAAW,GACAA,EAAA/vM,KACA+vM,EAAAxB,gBADA,IAEAprM,EAAA4sM,EAAA5sM,GACAf,EAAA2tM,EAAA3tM,KAEA,SAAA4tM,EAAAzmC,GAIA,IAHA,IAAA95J,EAAA85J,EAAAloK,OACAsrL,KACA7pK,EAAA,EACA5hB,EAAA,EAAuBA,EAAAuO,EAAiBvO,GAAA,EACxCyrL,EAAA7pK,IAAAymJ,EAAAroK,GAAAqoK,EAAAroK,EAAA,MACA4hB,EAEA,OAAA6pK,EAEA,IAAAsjB,EAAA7tM,EAAArB,SAAA,UACAmS,EAAA9Q,EAAArB,SAAA,SACA,IAAAkvM,IAAA/8L,EACA,UAAArO,EAAAyD,YAAA,sBAEA,IAAA4nM,EAAAD,EAAA5uM,OAAA,EACAytM,EAAA57L,EAAA7R,OAAA,EACA4uM,EAAAD,EAAAC,GACA/8L,EAAA88L,EAAA98L,GACA,IAAAjM,EAAA7E,EAAA1C,IAAA,QACAqvM,EAAA3sM,EAAA1C,IAAA,iBACA4iM,EAAAlgM,EAAA1C,IAAA,YACA,IAAA4iM,MACAz9L,EAAAkR,MAAA,8CAAAusL,GAEA,IAAA6N,EAAA/tM,EAAArB,SAAA,UACA,IAAAovM,EAAA,CACAA,KACA,QAAAjvM,EAAA,EAAuBA,EAAAgvM,IAAehvM,EACtCivM,EAAArzL,KAAA,GACAqzL,EAAArzL,KAAA7V,EAAA/F,GAAA,GAGAivM,EAAAH,EAAAG,GACA,IAAAv8L,EAAAxR,EAAArB,SAAA,UAOA,OA9KA,EA8KAmvM,EAAAD,EAAAE,EAHAv8L,EAHAA,EAGAo8L,EAAAp8L,GAFAV,EAIA3T,KAAAsvM,eAAA5nM,EAAA6nM,EAAAC,EAAA5rM,GACA8D,EAAA6nM,EAAArgM,KAAAyH,IAAA,EAAA64L,GAAA,EAAA77L,IAEAu8L,uBAAA,SAAAW,GACAA,EAAApwM,KACAowM,EAAA7B,gBADA,IAEA38L,EAAAw+L,EAAAx+L,GAEA,SAAAy+L,EAAAl2L,EAAAm2L,EAAAC,EAAAC,EAAAC,GACA,OAAAD,GAAAC,EAAAD,IAAAD,EAAAD,IAAAn2L,EAAAm2L,GAEA,gBAAAvhM,EAAAC,EAAAG,EAAAC,GACA,IAWAlO,EAAA4K,EAXAwJ,EAAA1D,EAAA,GACAq+L,EAAAr+L,EAAA,GACAu+L,EAAAv+L,EAAA,GACAgC,EAAAhC,EAAA,GACA8+L,EAAA9+L,EAAA,GACA3K,EAAA2K,EAAA,GACA1L,EAAA0L,EAAA,GACAsB,EAAAtB,EAAA,GACA++L,EAAA,GAAAr7L,EACAs7L,EAAA,IAAAC,aAAAF,GACAG,EAAA,IAAAt3B,YAAAm3B,GAEA,IAAA7kM,EAAA,EAAmBA,EAAA6kM,EAAkB7kM,IACrC8kM,EAAA9kM,GAAA,EAEA,IAAArB,EAAAvE,EACAd,EAAA,EACA,IAAAlE,EAAA,EAAmBA,EAAAoU,IAAOpU,EAAA,CAC1B,IAAA6vM,EAAAd,EAAA/uM,GAAA,GACA8vM,EAAAf,EAAA/uM,GAAA,GAEAsa,EAAA60L,EADA5hM,KAAAC,IAAAD,KAAA2H,IAAArH,EAAAC,EAAA9N,GAAA6vM,GAAAC,GACAD,EAAAC,EAAAb,EAAAjvM,GAAA,GAAAivM,EAAAjvM,GAAA,IACA+vM,EAAAhqM,EAAA/F,GAEAgwM,GADA11L,EAAA/M,KAAAC,IAAAD,KAAA2H,IAAAoF,EAAA,GAAAy1L,EAAA,IACAA,EAAA,EAAAxiM,KAAA6C,MAAAkK,KAAA,EACA21L,EAAAD,EAAA,EAAA11L,EACA41L,EAAA51L,EAAA01L,EACAhO,EAAAgO,EAAAzmM,EACA04L,EAAAD,EAAAz4L,EACA,IAAAqB,EAAA,EAAqBA,EAAA6kM,EAAkB7kM,IACvCA,EAAA1G,GACAwrM,EAAA9kM,IAAAslM,EACAN,EAAAhlM,IAAAq3L,IAEAyN,EAAA9kM,IAAAqlM,EACAL,EAAAhlM,IAAAo3L,GAGAz4L,GAAAwmM,EACA7rM,IAAA,EAEA,IAAA0G,EAAA,EAAmBA,EAAA5F,IAAO4F,EAAA,CAC1B,IAAAulM,EAAA,EACA,IAAAnwM,EAAA,EAAqBA,EAAAyvM,EAAkBzvM,IACvCmwM,GAAAX,EAAAI,EAAA5vM,GAAA4K,GAAA8kM,EAAA1vM,GAEAmwM,EAAAhB,EAAAgB,EAAA,IAAAz9L,EAAA9H,GAAA,GAAA8H,EAAA9H,GAAA,IACAqD,EAAAC,EAAAtD,GAAA2C,KAAAC,IAAAD,KAAA2H,IAAAi7L,EAAAn+L,EAAApH,GAAA,IAAAoH,EAAApH,GAAA,OAIAujM,sBAAA,SAAAiC,GACAA,EAAAtxM,KACAsxM,EAAA/C,gBACA+C,EAAAnuM,GAFA,IAGAf,EAAAkvM,EAAAlvM,KAEAmvM,EAAAnvM,EAAArB,SAAA,WACAywM,EAAApvM,EAAArB,SAAA,WACAmF,EAAA9D,EAAA1C,IAAA,KACA,IAAAsB,MAAAC,QAAAswM,KAAAvwM,MAAAC,QAAAuwM,GACA,UAAA3sM,EAAAyD,YAAA,gDAIA,IAFA,IAAAjH,EAAAkwM,EAAAlwM,OACAowM,KACAvwM,EAAA,EAAqBA,EAAAG,IAAYH,EACjCuwM,EAAA30L,KAAA00L,EAAAtwM,GAAAqwM,EAAArwM,IAEA,OA5PA,EA4PAqwM,EAAAE,EAAAvrM,IAEAwpM,4BAAA,SAAAgC,GACAA,EAAA1xM,KACA0xM,EAAAnD,gBADA,IAEA38L,EAAA8/L,EAAA9/L,GAEA2/L,EAAA3/L,EAAA,GACA6/L,EAAA7/L,EAAA,GACA1L,EAAA0L,EAAA,GACAvQ,EAAAowM,EAAApwM,OACA,gBAAA0N,EAAAC,EAAAG,EAAAC,GAEA,IADA,IAAA+K,EAAA,IAAAjU,EAAA6I,EAAAC,GAAAP,KAAAyH,IAAAnH,EAAAC,GAAA9I,GACA4F,EAAA,EAAuBA,EAAAzK,IAAYyK,EACnCqD,EAAAC,EAAAtD,GAAAylM,EAAAzlM,GAAAqO,EAAAs3L,EAAA3lM,KAIAwjM,iBAAA,SAAAqC,GACA,IAAA3xM,EAAA2xM,EAAA3xM,KACAuuM,EAAAoD,EAAApD,gBAEAnsM,GADAuvM,EAAAxuM,GACAwuM,EAAAvvM,MAEA6tM,EAAA7tM,EAAArB,SAAA,UACA,IAAAkvM,EACA,UAAAprM,EAAAyD,YAAA,aAGA,MADA2nM,EAAA5uM,OAAA,EAEA,UAAAwD,EAAAyD,YAAA,mCAIA,IAFA,IAAAspM,EAAAxvM,EAAA1C,IAAA,aACAmyM,KACA3wM,EAAA,EAAAC,EAAAywM,EAAAvwM,OAAyCH,EAAAC,IAAQD,EACjD2wM,EAAA/0L,KAAAvd,KAAA8kB,OACArkB,OACAuuM,kBACAprM,GAAAnD,EAAAU,WAAAkxM,EAAA1wM,OAKA,OAtSA,EAsSA+uM,EAFA7tM,EAAArB,SAAA,UACAqB,EAAArB,SAAA,UACA8wM,IAEAlC,uBAAA,SAAAmC,GAWA,IAVA,IAAA9xM,EAAA8xM,EAAA9xM,KACAuuM,EAAAuD,EAAAvD,gBACA38L,EAAAkgM,EAAAlgM,GAEAq+L,EAAAr+L,EAAA,GACAmgM,EAAAngM,EAAA,GACAu+L,EAAAv+L,EAAA,GACAogM,EAAApgM,EAAA,GACAigM,KACAx9L,EAAA,IAAAD,aAAA,GACAlT,EAAA,EAAAC,EAAA6wM,EAAA3wM,OAAwCH,EAAAC,EAAQD,IAChD2wM,EAAA/0L,KAAAvd,KAAAuS,QACA9R,OACAuuM,kBACA38L,GAAAogM,EAAA9wM,MAGA,gBAAA6N,EAAAC,EAAAG,EAAAC,GAUA,IATA,IAQA5L,EARA,SAAAA,EAAAkL,EAAA0H,GAMA,OALA5S,EAAA4S,EACA5S,EAAA4S,EACW5S,EAAAkL,IACXlL,EAAAkL,GAEAlL,EANA,CAQAuL,EAAAC,GAAAihM,EAAA,GAAAA,EAAA,IACA/uM,EAAA,EAAAC,EAAA4wM,EAAA1wM,OAA2CH,EAAAC,KAC3CqC,EAAAuuM,EAAA7wM,MADmDA,GAKnD,IAAA+wM,EAAAhC,EAAA,GACA/uM,EAAA,IACA+wM,EAAAF,EAAA7wM,EAAA,IAEA,IAAAgxM,EAAAjC,EAAA,GACA/uM,EAAA6wM,EAAA1wM,SACA6wM,EAAAH,EAAA7wM,IAEA,IAAAixM,EAAAhC,EAAA,EAAAjvM,GACAkxM,EAAAjC,EAAA,EAAAjvM,EAAA,GACAmT,EAAA,GAAA49L,IAAAC,EAAAC,KAAA3uM,EAAAyuM,IAAAG,EAAAD,IAAAD,EAAAD,GACAJ,EAAA3wM,GAAAmT,EAAA,EAAAlF,EAAAC,KAGAmgM,oBAAA,SAAA8C,GACAA,EAAAryM,KACAqyM,EAAA9D,gBADA,IAEAprM,EAAAkvM,EAAAlvM,GACAf,EAAAiwM,EAAAjwM,KAEA6tM,EAAA7tM,EAAArB,SAAA,UACAmS,EAAA9Q,EAAArB,SAAA,SACA,IAAAkvM,EACA,UAAAprM,EAAAyD,YAAA,cAEA,IAAA4K,EACA,UAAArO,EAAAyD,YAAA,aAEA,IAAA2T,EAAA,IAAAoyL,EAAAiE,gBAAAnvM,GAGA,OAvWA,EAuWA8sM,EAAA/8L,EAFA,IAAAm7L,EAAAkE,iBAAAt2L,GACAzK,UAGAo+L,0BAAA,SAAA4C,GACAA,EAAAxyM,KAAA,IACAuuM,EAAAiE,EAAAjE,gBACA38L,EAAA4gM,EAAA5gM,GAEAq+L,EAAAr+L,EAAA,GACAsB,EAAAtB,EAAA,GACA5I,EAAA4I,EAAA,GACA,GAAA28L,GAAAD,EAAAzvM,MAAA,CACA,IAAA+kM,OAAA2J,GAAAhK,QAAAv6L,EAAAinM,EAAA/8L,GACA,GAAA0wL,EACA,WAAA6O,SAAA,sCAAA7O,MAGA/+L,EAAAkR,MAAA,iCACA,IAAA28L,EAAAx/L,EAAA7R,QAAA,EACAsxM,EAAA1C,EAAA5uM,QAAA,EACAuxM,EAAA,IAAApF,EAAAxkM,GACA2oK,EAAAjzK,OAAAe,OAAA,MAEAozM,EADA,KAEAx+L,EAAA,IAAAD,aAAAu+L,GACA,gBAAA5jM,EAAAC,EAAAG,EAAAC,GACA,IAAAlO,EAAArC,EACA4C,EAAA,GACAmL,EAAAyH,EACA,IAAAnT,EAAA,EAAmBA,EAAAyxM,EAAezxM,IAClCrC,EAAAkQ,EAAAC,EAAA9N,GACA0L,EAAA1L,GAAArC,EACA4C,GAAA5C,EAAA,IAEA,IAAAi0M,EAAAnhC,EAAAlwK,GACA,YAAAqxM,EAAA,CAIA,IAAArhB,EAAA,IAAAr9K,aAAAs+L,GACA1X,EAAA4X,EAAAG,QAAAnmM,GACAomM,EAAAhY,EAAA35L,OAAAqxM,EACA,IAAAxxM,EAAA,EAAmBA,EAAAwxM,EAAgBxxM,IAAA,CACnCrC,EAAAm8L,EAAAgY,EAAA9xM,GACA,IAAA+xM,EAAA//L,EAAA,EAAAhS,GACArC,EAAAo0M,EACAp0M,EAAAo0M,EAGAp0M,GADAo0M,EAAA//L,EAAA,EAAAhS,EAAA,MAEArC,EAAAo0M,GAGAxhB,EAAAvwL,GAAArC,EAEAg0M,EAAA,IACAA,IACAlhC,EAAAlwK,GAAAgwL,GAEAtiL,EAAAvN,IAAA6vL,EAAAriL,QAvBAD,EAAAvN,IAAAkxM,EAAA1jM,MAyCA8jM,EAAA,WAEA,SAAAA,EAAAC,GACA5zM,KAAAy7L,MAAAmY,EAAAnyM,MAAA7B,UAAAiC,MAAAiC,KAAA8vM,EAAA,MAoDA,OAlDAD,EAAA/zM,WACA2d,KAAA,SAAAje,GACA,GAAAU,KAAAy7L,MAAA35L,QANA,IAOA,UAAAghB,MAAA,uCAEA9iB,KAAAy7L,MAAAl+K,KAAAje,IAEAixK,IAAA,WACA,GAAAvwK,KAAAy7L,MAAA35L,QAAA,EACA,UAAAghB,MAAA,wCAEA,OAAA9iB,KAAAy7L,MAAAlrB,OAEAsjC,KAAA,SAAAltM,GACA,GAAA3G,KAAAy7L,MAAA35L,OAAA6E,GAlBA,IAmBA,UAAAmc,MAAA,uCAGA,IADA,IAAA24K,EAAAz7L,KAAAy7L,MACA95L,EAAA85L,EAAA35L,OAAA6E,EAAA4F,EAAA5F,EAAA,EAA+C4F,GAAA,EAAQA,IAAA5K,IACvD85L,EAAAl+K,KAAAk+K,EAAA95L,KAGA4hB,MAAA,SAAA5c,GACA3G,KAAAud,KAAAvd,KAAAy7L,MAAAz7L,KAAAy7L,MAAA35L,OAAA6E,EAAA,KAEAmtM,KAAA,SAAAntM,EAAAkG,GACA,IAIAlL,EACA4K,EACAtC,EANAwxL,EAAAz7L,KAAAy7L,MACAh6F,EAAAg6F,EAAA35L,OAAA6E,EACAgP,EAAA8lL,EAAA35L,OAAA,EACAoK,EAAAu1F,GAAA50F,EAAAqC,KAAA6C,MAAAlF,EAAAlG,MAIA,IAAAhF,EAAA8/F,EAAAl1F,EAAAoJ,EAAwBhU,EAAA4K,EAAO5K,IAAA4K,IAC/BtC,EAAAwxL,EAAA95L,GACA85L,EAAA95L,GAAA85L,EAAAlvL,GACAkvL,EAAAlvL,GAAAtC,EAEA,IAAAtI,EAAA8/F,EAAAl1F,EAAAL,EAAA,EAA4BvK,EAAA4K,EAAO5K,IAAA4K,IACnCtC,EAAAwxL,EAAA95L,GACA85L,EAAA95L,GAAA85L,EAAAlvL,GACAkvL,EAAAlvL,GAAAtC,EAEA,IAAAtI,EAAAuK,EAAAK,EAAAoJ,EAAwBhU,EAAA4K,EAAO5K,IAAA4K,IAC/BtC,EAAAwxL,EAAA95L,GACA85L,EAAA95L,GAAA85L,EAAAlvL,GACAkvL,EAAAlvL,GAAAtC,IAIA0pM,EAvDA,GAyDA1F,EAAA,WACA,SAAAA,EAAA8F,GACA/zM,KAAA+zM,YAkOA,OAhOA9F,EAAAruM,WACA4zM,QAAA,SAAAI,GAMA,IALA,IAIAI,EAAA77L,EAAA/O,EAJAqyL,EAAA,IAAAkY,EAAAC,GACAK,EAAA,EACAF,EAAA/zM,KAAA+zM,UACAjyM,EAAAiyM,EAAAjyM,OAEAmyM,EAAAnyM,GAEA,oBADAkyM,EAAAD,EAAAE,MAKA,OAAAD,GACA,SACA5qM,EAAAqyL,EAAAlrB,OACAp4J,EAAAsjL,EAAAlrB,SAEA0jC,EAAA7qM,GAEA,MACA,QAEA6qM,EADA97L,EAAAsjL,EAAAlrB,MAEA,MACA,UACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAglM,IAAA/7L,IACA,MACA,UACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,UACAA,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,SACAjrK,EAAAmsK,QAAAt5J,OAAA7S,EAAAmsK,QAAAroK,GACAqyL,EAAAl+K,KAAApF,GAAA/O,GAEAqyL,EAAAl+K,KAAApF,EAAA/O,GAEA,MACA,WACA+O,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAilM,KAAAh8L,IACA,MACA,eACA/O,EAAAqyL,EAAAlrB,OACAp4J,EAAAsjL,EAAAlrB,OACA,EACAkrB,EAAAl+K,KAAApF,GAAA/O,GAEAqyL,EAAAl+K,KAAApF,GAAA/O,GAEA,MACA,cACA+O,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAA01J,KAAAzsJ,IACA,MACA,WACAA,EAAAsjL,EAAAlrB,MACAkrB,EAAAoY,KAAA17L,GACA,MACA,UACAA,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAklM,IAAAj8L,IACA,MACA,UACAA,EAAA,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,GACA,MACA,UACA,MACA,UACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,UACAqyL,EAAAoY,KAAA,GACA,MACA,SACAzqM,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,IAAA/O,GACA,MACA,WACAqyL,EAAAqY,KAAA,KACA,MACA,UACA1qM,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAyH,IAAAwB,EAAA/O,IACA,MACA,YACAqyL,EAAAl+K,SACA,MACA,YACApF,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAA6C,MAAAoG,IACA,MACA,SACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,GAAA/O,GACA,MACA,SACAA,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,WACAA,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,EAAA,GACA,MACA,YACA+O,EAAAsjL,EAAAlrB,MACAkrB,EAAAl4K,MAAApL,GACA,MACA,SACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,GAAA/O,GACA,MACA,SACA+O,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAE,IAAA+I,IACA,MACA,UACAA,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAE,IAAA+I,GAAAjJ,KAAAmlM,MACA,MACA,SACAjrM,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,UACAA,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,UACAA,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,SACAA,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,IAAA/O,GACA,MACA,UACA+O,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,MAAApF,GACA,MACA,UACAA,EAAAsjL,EAAAlrB,SACAjrK,EAAAmsK,QAAAt5J,GACAsjL,EAAAl+K,MAAApF,GAEAsjL,EAAAl+K,MAAApF,GAEA,MACA,SACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,SACAjrK,EAAAmsK,QAAAt5J,OAAA7S,EAAAmsK,QAAAroK,GACAqyL,EAAAl+K,KAAApF,GAAA/O,GAEAqyL,EAAAl+K,KAAApF,EAAA/O,GAEA,MACA,UACAqyL,EAAAlrB,MACA,MACA,WACAnnK,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAqY,KAAA37L,EAAA/O,GACA,MACA,YACA+O,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAoL,MAAAnC,IACA,MACA,UACAA,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAolM,IAAAn8L,IACA,MACA,WACAA,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAArO,KAAAoM,KAAAnD,IACA,MACA,UACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,MACAkrB,EAAAl+K,KAAApF,EAAA/O,GACA,MACA,WACAqyL,EAAAl+K,SACA,MACA,eAEApF,GADAA,EAAAsjL,EAAAlrB,OACA,EAAArhK,KAAA01J,KAAAzsJ,GAAAjJ,KAAA6C,MAAAoG,GACAsjL,EAAAl+K,KAAApF,GACA,MACA,UACA/O,EAAAqyL,EAAAlrB,MACAp4J,EAAAsjL,EAAAlrB,SACAjrK,EAAAmsK,QAAAt5J,OAAA7S,EAAAmsK,QAAAroK,GACAqyL,EAAAl+K,KAAApF,IAAA/O,GAEAqyL,EAAAl+K,KAAApF,EAAA/O,GAEA,MACA,QACA,UAAA9D,EAAAyD,YAAA,oBAAAirM,QAhNAvY,EAAAl+K,KAAAy2L,GAmNA,OAAAvY,UAGAwS,EApOA,GAsOAD,EAAA,WACA,SAAAuG,EAAArwM,GACAlE,KAAAkE,OAKA,SAAAswM,EAAAjxL,EAAApU,EAAA0H,GACA09L,EAAAzwM,KAAA9D,KAAA,QACAA,KAAAujB,QACAvjB,KAAAmP,MACAnP,KAAA6W,MAMA,SAAA49L,EAAAC,GACAH,EAAAzwM,KAAA9D,KAAA,WACAA,KAAA00M,SACA10M,KAAAmP,IAAAulM,EACA10M,KAAA6W,IAAA69L,EAMA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA3lM,EAAA0H,GACA09L,EAAAzwM,KAAA9D,KAAA,UACAA,KAAA40M,KACA50M,KAAA60M,OACA70M,KAAA80M,OACA90M,KAAAmP,MACAnP,KAAA6W,MAMA,SAAAk+L,EAAAhtL,EAAAlR,GACA09L,EAAAzwM,KAAA9D,KAAA,OACAA,KAAA+nB,MACA/nB,KAAAmP,IAAA4Y,EAAA5Y,IACAnP,KAAA6W,MAMA,SAAAm+L,EAAAzxL,EAAApU,EAAA0H,GACA09L,EAAAzwM,KAAA9D,KAAA,OACAA,KAAAujB,QACAvjB,KAAAmP,MACAnP,KAAA6W,MAMA,SAAAo+L,EAAAC,EAAAntL,GACAwsL,EAAAzwM,KAAA9D,KAAA,cACAA,KAAAk1M,WACAl1M,KAAA+nB,MAMA,SAAAotL,IACAn1M,KAAAo1M,SAmCA,SAAAC,EAAAC,EAAAC,GACA,kBAAAA,EAAArxM,MAAA,IAAAqxM,EAAAb,OACAY,EAEA,YAAAA,EAAApxM,MAAA,IAAAoxM,EAAAZ,OACAa,EAEA,YAAAA,EAAArxM,MAAA,YAAAoxM,EAAApxM,KACA,IAAAuwM,EAAAa,EAAAZ,OAAAa,EAAAb,QAEA,IAAAC,EAAA,IAAAW,EAAAC,EAAAD,EAAAnmM,IAAAomM,EAAApmM,IAAAmmM,EAAAz+L,IAAA0+L,EAAA1+L,KAEA,SAAA2+L,EAAAF,EAAAC,GACA,eAAAA,EAAArxM,KAAA,CACA,OAAAqxM,EAAAb,OACA,WAAAD,EAAA,GACO,OAAAc,EAAAb,OACP,OAAAY,EACO,eAAAA,EAAApxM,KACP,WAAAuwM,EAAAa,EAAAZ,OAAAa,EAAAb,QAGA,eAAAY,EAAApxM,KAAA,CACA,OAAAoxM,EAAAZ,OACA,WAAAD,EAAA,GACO,OAAAa,EAAAZ,OACP,OAAAa,EAKA,WAAAZ,EAAA,IAAAW,EAAAC,EAFArmM,KAAAC,IAAAmmM,EAAAnmM,IAAAomM,EAAApmM,IAAAmmM,EAAAnmM,IAAAomM,EAAA1+L,IAAAy+L,EAAAz+L,IAAA0+L,EAAApmM,IAAAmmM,EAAAz+L,IAAA0+L,EAAA1+L,KACA3H,KAAA2H,IAAAy+L,EAAAnmM,IAAAomM,EAAApmM,IAAAmmM,EAAAnmM,IAAAomM,EAAA1+L,IAAAy+L,EAAAz+L,IAAA0+L,EAAApmM,IAAAmmM,EAAAz+L,IAAA0+L,EAAA1+L,MAGA,SAAA4+L,EAAAH,EAAAC,GACA,eAAAA,EAAArxM,KAAA,CACA,OAAAqxM,EAAAb,OACA,OAAAY,EACO,eAAAA,EAAApxM,KACP,WAAAuwM,EAAAa,EAAAZ,OAAAa,EAAAb,QAGA,iBAAAa,EAAArxM,MAAA,MAAAqxM,EAAAX,IAAA,YAAAU,EAAApxM,MAAA,IAAAoxM,EAAAZ,QAAA,YAAAa,EAAAV,KAAA3wM,MAAA,IAAAqxM,EAAAV,KAAAH,OACAa,EAAAT,KAEA,IAAAH,EAAA,IAAAW,EAAAC,EAAAD,EAAAnmM,IAAAomM,EAAA1+L,IAAAy+L,EAAAz+L,IAAA0+L,EAAApmM,KAEA,SAAAumM,EAAAJ,EAAAz+L,GACA,OAAAy+L,EAAAnmM,KAAA0H,EACA,IAAA49L,EAAA59L,GACKy+L,EAAAz+L,OACLy+L,EAEA,IAAAP,EAAAO,EAAAz+L,GAEA,SAAAm3L,KAgKA,OA1TAuG,EAAA30M,UAAA+1M,MAAA,SAAAC,MACAtwM,EAAAgK,aAAA,oBAQAklM,EAAA50M,UAAAT,OAAAe,OAAAq0M,EAAA30M,WACA40M,EAAA50M,UAAA+1M,MAAA,SAAAC,GACAA,EAAAC,cAAA71M,OAQAy0M,EAAA70M,UAAAT,OAAAe,OAAAq0M,EAAA30M,WACA60M,EAAA70M,UAAA+1M,MAAA,SAAAC,GACAA,EAAAE,aAAA91M,OAUA20M,EAAA/0M,UAAAT,OAAAe,OAAAq0M,EAAA30M,WACA+0M,EAAA/0M,UAAA+1M,MAAA,SAAAC,GACAA,EAAAG,qBAAA/1M,OAQA+0M,EAAAn1M,UAAAT,OAAAe,OAAAq0M,EAAA30M,WACAm1M,EAAAn1M,UAAA+1M,MAAA,SAAAC,GACAA,EAAAI,SAAAh2M,OAQAg1M,EAAAp1M,UAAAT,OAAAe,OAAAq0M,EAAA30M,WACAo1M,EAAAp1M,UAAA+1M,MAAA,SAAAC,GACAA,EAAAK,cAAAj2M,OAOAi1M,EAAAr1M,UAAAT,OAAAe,OAAAq0M,EAAA30M,WACAq1M,EAAAr1M,UAAA+1M,MAAA,SAAAC,GACAA,EAAAM,wBAAAl2M,OAKAm1M,EAAAv1M,WACAi2M,cAAA,SAAA9tL,GACA/nB,KAAAo1M,MAAA73L,KAAA,YAAAwK,EAAA5Y,IAAA,cAAA4Y,EAAAlR,IAAA,qBAAAkR,EAAAxE,MAAA,QAEA0yL,cAAA,SAAAf,GACAl1M,KAAAo1M,MAAA73L,KAAA,IAAA23L,EAAA3xL,QAEAuyL,aAAA,SAAAK,GACAn2M,KAAAo1M,MAAA73L,KAAA44L,EAAAzB,SAEAqB,qBAAA,SAAAK,GACAp2M,KAAAo1M,MAAA73L,KAAA,KACA64L,EAAAvB,KAAAc,MAAA31M,MACAA,KAAAo1M,MAAA73L,KAAA,IAAA64L,EAAAxB,GAAA,KACAwB,EAAAtB,KAAAa,MAAA31M,MACAA,KAAAo1M,MAAA73L,KAAA,MAEA24L,wBAAA,SAAAG,GACAr2M,KAAAo1M,MAAA73L,KAAA,QACA84L,EAAAnB,SAAAS,MAAA31M,MACAA,KAAAo1M,MAAA73L,KAAA,OACA84L,EAAAtuL,IAAA4tL,MAAA31M,MACAA,KAAAo1M,MAAA73L,KAAA,MAEAy4L,SAAA,SAAAn/L,GACA7W,KAAAo1M,MAAA73L,KAAA,aACA1G,EAAAkR,IAAA4tL,MAAA31M,MACAA,KAAAo1M,MAAA73L,KAAA,KAAA1G,MAAA,MAEA1T,SAAA,WACA,OAAAnD,KAAAo1M,MAAAnzL,KAAA,MA0DA+rL,EAAApuM,WACAokM,QAAA,SAAAv6L,EAAAinM,EAAA/8L,GACA,IACAhS,EAAAC,EAKA+E,EAAA4F,EACA+oM,EAAAC,EAAAe,EAAAC,EAAAC,EAAAlzL,EAPAm4K,KAEAgb,KACA9F,EAAAD,EAAA5uM,QAAA,EACAytM,EAAA57L,EAAA7R,QAAA,EACA40M,EAAA,EAGA,IAAA/0M,EAAA,EAAiBA,EAAAgvM,EAAehvM,IAChC85L,EAAAl+K,KAAA,IAAAi3L,EAAA7yM,EAAA+uM,EAAA,EAAA/uM,GAAA+uM,EAAA,EAAA/uM,EAAA,KAEA,IAAAA,EAAA,EAAAC,EAAA6H,EAAA3H,OAAmCH,EAAAC,EAAQD,IAE3C,oBADA2hB,EAAA7Z,EAAA9H,IAKA,OAAA2hB,GACA,UACA,GAAAm4K,EAAA35L,OAAA,EACA,YAEAyzM,EAAA9Z,EAAAlrB,MACA+kC,EAAA7Z,EAAAlrB,MACAkrB,EAAAl+K,KAAA83L,EAAAC,EAAAC,IACA,MACA,UACA,GAAA9Z,EAAA35L,OAAA,EACA,YAEA,MACA,UACA,GAAA25L,EAAA35L,OAAA,EACA,YAEAyzM,EAAA9Z,EAAAlrB,MACA+kC,EAAA7Z,EAAAlrB,MACAkrB,EAAAl+K,KAAAi4L,EAAAF,EAAAC,IACA,MACA,UACA,GAAA9Z,EAAA35L,OAAA,EACA,YAEAyzM,EAAA9Z,EAAAlrB,MACA+kC,EAAA7Z,EAAAlrB,MACAkrB,EAAAl+K,KAAAk4L,EAAAH,EAAAC,IACA,MACA,WACA,GAAA9Z,EAAA35L,OAAA,EACA,YAEAw0M,EAAA7a,EAAAlrB,MACAgmC,EAAA9a,EAAAlrB,MACAkrB,EAAAl+K,KAAA+4L,EAAAC,GACA,MACA,UACA,GAAA9a,EAAA35L,OAAA,EACA,YAEA25L,EAAAlrB,MACA,MACA,YACA,GAAAkrB,EAAA35L,OAAA,EACA,YAGA,gBADAwzM,EAAA7Z,EAAAlrB,OACArsK,KACA,YAGA,IADAyC,EAAA2uM,EAAAZ,QACA,IAAAj3L,OAAAC,UAAA/W,IAAA80L,EAAA35L,OAAA6E,EACA,YAGA,gBADA2vM,EAAA7a,IAAA35L,OAAA6E,EAAA,IACAzC,MAAA,QAAAoyM,EAAApyM,KAAA,CACAu3L,EAAAl+K,KAAA+4L,GACA,MAEAE,EAAA,IAAAxB,EAAA0B,IAAAJ,EAAAnnM,IAAAmnM,EAAAz/L,KACA4kL,IAAA35L,OAAA6E,EAAA,GAAA6vM,EACA/a,EAAAl+K,KAAAi5L,GACAC,EAAAl5L,KAAA,IAAA03L,EAAAuB,EAAAF,IACA,MACA,UACA,GAAA7a,EAAA35L,OAAA,EACA,YAEA,oBAAA2H,EAAA9H,EAAA,WAAA8H,EAAA9H,EAAA,IAAA8H,EAAA9H,EAAA,KAAAA,EAAA,UAAA8H,EAAA9H,EAAA,YAAA8H,EAAA9H,EAAA,IAAA8H,EAAA9H,EAAA,KAAA8H,EAAA9H,EAAA,IACA2zM,EAAA7Z,EAAAlrB,MACAkrB,EAAAl+K,KAAAm4L,EAAAJ,EAAA7rM,EAAA9H,EAAA,KACAA,GAAA,EACA,MAGA,gBADA20M,EAAA7a,IAAA35L,OAAA,IACAoC,MAAA,QAAAoyM,EAAApyM,KAAA,CACAu3L,EAAAl+K,KAAA+4L,GACA,MAEAE,EAAA,IAAAxB,EAAA0B,IAAAJ,EAAAnnM,IAAAmnM,EAAAz/L,KACA4kL,IAAA35L,OAAA,GAAA00M,EACA/a,EAAAl+K,KAAAi5L,GACAC,EAAAl5L,KAAA,IAAA03L,EAAAuB,EAAAF,IACA,MACA,WACA,GAAA7a,EAAA35L,OAAA,EACA,YAIA,GAFAyzM,EAAA9Z,EAAAlrB,MACA+kC,EAAA7Z,EAAAlrB,MACA,YAAAglC,EAAArxM,MAAA,YAAAoxM,EAAApxM,KACA,YAIA,GAFAqI,EAAAgpM,EAAAb,QACA/tM,EAAA2uM,EAAAZ,SACA,IAAAj3L,OAAAC,UAAA/W,KAAA8W,OAAAC,UAAAnR,IAAAkvL,EAAA35L,OAAA6E,EACA,YAGA,OADA4F,KAAA5F,QAEA,MAEAlF,MAAA7B,UAAA2d,KAAAo5L,MAAAlb,IAAAj0K,OAAAi0K,EAAA35L,OAAA6E,IAAA4F,IACA,MACA,QACA,iBA9GAkvL,EAAAl+K,KAAA,IAAAk3L,EAAAnxL,IAiHA,GAAAm4K,EAAA35L,SAAAytM,EACA,YAEA,IAAAn3L,KAwBA,OAvBAq+L,EAAAl0M,QAAA,SAAAq0M,GACA,IAAAC,EAAA,IAAA1B,EACAyB,EAAAjB,MAAAkB,GACAz+L,EAAAmF,KAAAs5L,EAAA1zM,cAEAs4L,EAAAl5L,QAAA,SAAAu0M,EAAAn1M,GACA,IAAAk1M,EAAA,IAAA1B,EACA2B,EAAAnB,MAAAkB,GACA,IAAA1nM,EAAAwE,EAAA,EAAAhS,GACAkV,EAAAlD,EAAA,EAAAhS,EAAA,GACAyrL,GAAAypB,EAAA1zM,YACAgM,EAAA2nM,EAAA3nM,MACAi+K,EAAA2pB,QAAA,YAAA5nM,EAAA,MACAi+K,EAAA7vK,KAAA,MAEA1G,EAAAigM,EAAAjgM,MACAu2K,EAAA2pB,QAAA,YAAAlgM,EAAA,MACAu2K,EAAA7vK,KAAA,MAEA6vK,EAAA2pB,QAAA,qBAAAp1M,EAAA,QACAyrL,EAAA7vK,KAAA,KACAnF,EAAAmF,KAAA6vK,EAAAnrK,KAAA,OAEA7J,EAAA6J,KAAA,QAGA+rL,EA9TA,GAgUA3uM,EAAA8uM,cA5mBA,SAAAlqM,GACA,IAAA+yM,EACA,wBAAA/yM,EAAA,YAAA1E,EAAA0E,IACA,SACG,MAAAuB,EAAA1C,QAAAmB,GACH+yM,EAAA/yM,MACG,QAAAuB,EAAAhB,UAAAP,GAGH,SAFA+yM,EAAA/yM,EAAApB,KAIA,OAAAm0M,EAAA10M,IAAA,iBAkmBAjD,EAAA6uM,qBACA7uM,EAAA4uM,sBACA5uM,EAAA2uM,uDCrmCA,IAEAiJ,EAAsB1xM,EAAQ,KAC9BlG,EAAA63M,qBAAAD,EAAAC,uDCHA/3M,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA63M,qBAAA73M,EAAA83M,kBAEA,IAcAz3M,EAijBA03M,EA/jBA73M,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5IqqK,EAA4a,SAAAC,EAAAroK,GAA2B,GAAAF,MAAAC,QAAAsoK,GAA0B,OAAAA,EAAc,GAAAxqK,OAAAC,YAAAN,OAAA6qK,GAA2C,OAAxf,SAAAA,EAAAroK,GAAiC,IAAAsoK,KAAeC,KAAeC,KAAgBC,SAAoB,IAAM,QAAAC,EAAAC,EAAAN,EAAAxqK,OAAAC,cAA0CyqK,GAAAG,EAAAC,EAAAC,QAAAxoJ,QAA4CkoJ,EAAA1sJ,KAAA8sJ,EAAA/qK,QAAqBqC,GAAAsoK,EAAAnoK,SAAAH,GAAlCuoK,OAAyE,MAAAV,GAAcW,KAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAAE,QAAAF,EAAAE,SAA2C,QAAU,GAAAL,EAAA,MAAAC,GAAsB,OAAAH,EAA3X,CAAwfD,EAAAroK,GAAuC,UAAA8oK,UAAA,yDAEjkBnlK,EAAYC,EAAQ,KAEpB8xM,EAAmB9xM,EAAQ,KAI3B+xM,GAIA53M,EANe6F,EAAQ,OAMe7F,EAAA63M,WAAA73M,GAAuC83M,QAAA93M,GAF7E8F,EAAkBD,EAAQ,KAI1B4xM,EAAA,WACA,SAAAA,EAAAp3M,GACAC,KAAAD,OACAC,KAAAy3M,cACAz3M,KAAA03M,eAAApyM,EAAAshK,2BAkBA,OAhBAuwC,EAAAv3M,WACA+3M,eACA,OAAA33M,KAAA03M,YAAA5wC,SAEA8wC,OAAA,WACA53M,KAAA03M,YAAAn2M,WAEAs2M,UAAA,WACA73M,KAAAy3M,eAEAK,oBAAA,WACA,GAAA93M,KAAAy3M,WACA,UAAA30L,MAAA,gCAIAq0L,EAtBA,GAyBAY,EAAA,WACA,SAAAA,EAAA1xC,GACArmK,KAAAg4M,YAAA3xC,EACArmK,KAAAi4M,eAAA,KACAj4M,KAAAk4M,mBAAA,KACAl4M,KAAAm4M,wBAuBA,SAAAC,EAAA/xC,GACA,IAAAW,EAAAhnK,KAEAA,KAAAg4M,YAAA3xC,EACArmK,KAAAi4M,eAAA,KACAj4M,KAAAq4M,qBACAr4M,KAAAs4M,yBACA,IAAAC,EAAAv4M,KAAAg4M,YAAAQ,eAAA,aACAx4M,KAAAy4M,QAAAF,EAAAG,YACA14M,KAAA24M,cAAA34M,KAAAg4M,YAAAY,gBAAA,sBAAAnxC,KAAA,SAAA/iJ,GACAsiJ,EAAAsxC,sBAAA5zL,EAAAyiJ,qBACAH,EAAAqxC,kBAAA3zL,EAAAm0L,iBACA7xC,EAAAixC,eAAAvzL,EAAA+wJ,gBAqCA,SAAAqjC,EAAA3zC,EAAAr/J,EAAAugK,GACArmK,KAAAg4M,YAAA3xC,EACArmK,KAAAonK,WAAA,KACA,IAAAmxC,EAAAv4M,KAAAg4M,YAAAQ,eAAA,kBACArzC,QACAr/J,QAEA9F,KAAAy4M,QAAAF,EAAAG,YA2BA,OAxGAX,EAAAn4M,WACAm5M,cAAA,WAGA,SAFAzzM,EAAA0Y,SAAAhe,KAAAk4M,oBACAl4M,KAAAk4M,mBAAA,IAAAE,EAAAp4M,KAAAg4M,aACAh4M,KAAAk4M,oBAEAhxC,eAAA,SAAA/B,EAAAr/J,GACA,IAAAkzM,EAAA,IAAAF,EAAA3zC,EAAAr/J,EAAA9F,KAAAg4M,aAEA,OADAh4M,KAAAm4M,qBAAA56L,KAAAy7L,GACAA,GAEAtvC,kBAAA,SAAAuvC,GACAj5M,KAAAk4M,oBACAl4M,KAAAk4M,mBAAAgB,OAAAD,GAEAj5M,KAAAm4M,qBAAAt2M,MAAA,GACAU,QAAA,SAAAy2M,GACAA,EAAAE,OAAAD,OAmBAb,EAAAx4M,WACAu5M,mBACA,OAAAn5M,KAAA24M,eAEAljC,oBACA,OAAAz1K,KAAAi4M,gBAEA9wC,2BACA,OAAAnnK,KAAAs4M,uBAEAO,uBACA,OAAA74M,KAAAq4M,mBAEA7wC,KAAA,WACA,OAAAxnK,KAAAy4M,QAAAjxC,OAAAC,KAAA,SAAAwI,GACA,IAAA3wK,EAAA2wK,EAAA3wK,MAGA,OAFA2wK,EAAAluJ,MAIAziB,aACAyiB,UAIAziB,QAAAyH,OACAgb,YAIAm3L,OAAA,SAAAD,GACAj5M,KAAAy4M,QAAAS,OAAAD,KAYAH,EAAAl5M,WACAunK,2BACA,UAEAK,KAAA,WACA,OAAAxnK,KAAAy4M,QAAAjxC,OAAAC,KAAA,SAAAyI,GACA,IAAA5wK,EAAA4wK,EAAA5wK,MAGA,OAFA4wK,EAAAnuJ,MAIAziB,aACAyiB,UAIAziB,QAAAyH,OACAgb,YAIAm3L,OAAA,SAAAD,GACAj5M,KAAAy4M,QAAAS,OAAAD,KAGAlB,EA/GA,GAiHAb,GACAkC,MAAA,SAAAC,EAAAC,GACA,IAAAC,KACAF,EAAAG,GAAA,gBAAA90L,GACA,IAAA60L,EAIA,GADAA,KACA70L,aAAA9e,WAAA,CAIA,IAAA6zM,EAAA,MAAA/0L,EAAA,GACA20L,EAAAK,qBAAAD,EACA,IAAAE,EAAA,IAAAC,eACAC,EAAA,aAAAF,EACA,IACAA,EAAAG,aACO,MAAA79L,GACP49L,KAEAA,EAIAR,EAAA/tL,KAAA,QACAyuL,qBACAN,qBALAJ,EAAA/tL,KAAA,gBAbA+tL,EAAA/tL,KAAA,oBAqBA+tL,EAAAG,GAAA,qBAAA90L,MACApf,EAAA00M,mBAAAt1L,EAAAu1L,aAEAZ,EAAAG,GAAA,yBAAA90L,GACA,OAAAwyL,EAAAgD,sBAAAx1L,EAAA40L,MAGAY,sBAAA,SAAAC,EAAAb,GACA,IAAAxuC,EACA2sC,KACA2C,EAAA,KACAC,KACAC,EAAAH,EAAAG,WAEA,UAAAA,GADA,YACAA,EACA,UAAAx3L,MAAA,oBAAAw3L,EAAA,kDAEA,IAAAC,EAAAJ,EAAAI,MACA7tC,EAAAytC,EAAAztC,WACA8tC,EAAAL,EAAAI,MAAA,UACAlB,EAAA,IAAA/zM,EAAAm1M,eAAAD,EAAAD,EAAAjB,GAEA,SAAAxB,IACA,GAAAL,EACA,UAAA30L,MAAA,yBAGA,SAAA43L,EAAAC,GACAN,EAAA98L,KAAAo9L,GAEA,SAAAC,EAAAD,GACAA,EAAA/C,SACA,IAAAj2M,EAAA04M,EAAAvxC,QAAA6xC,GACAN,EAAA7yL,OAAA7lB,EAAA,GAEA,SAAAk5M,EAAAj+L,GACA,IAAAk+L,KAAAx1M,EAAAshK,2BACAm0C,EAAA,WACAz5M,QAAAquK,KAAA7E,EAAAkwC,UAAA,YAAAlwC,EAAAkwC,UAAA,iBAAAvzC,KAAA,SAAAwoC,GACA,IAAAK,EAAAvmC,EAAAkmC,EAAA,GACAvsL,EAAA4sL,EAAA,GACA2K,EAAA3K,EAAA,GAEAwK,EAAAv5M,SACAmiB,WACAu3L,iBAESC,IAETA,EAAA,SAAAj/L,GACA6+L,EAAAvzC,OAAAtrJ,IAOA,OALA6uJ,EAAAkwC,UAAA,kBAAAvzC,KAAA,WACAqD,EAAAkwC,UAAA,qBAAAvzC,KAAA,WACAqD,EAAAkwC,UAAA,SAAAp+L,IAAA6qJ,KAAAszC,EAAAG,IACSA,IACFA,GACPJ,EAAAh0C,QAsUA,OA1WAuyC,EAAAK,qBAAAS,EAAAT,qBAyMAL,EAAAG,GAAA,mBAAA90L,GACA,OAAAomJ,EAAAgF,QAAAprJ,EAAA2F,WAAAo9I,KAAA,SAAA0zC,GACA,IAAAC,EAAAtwC,EAAAuwC,OAAAF,EAAA,UACAG,EAAAxwC,EAAAuwC,OAAAF,EAAA,OACAI,EAAAzwC,EAAAuwC,OAAAF,EAAA,YACAK,EAAA1wC,EAAAuwC,OAAAF,EAAA,QACA,OAAA75M,QAAAquK,KAAAyrC,EAAAE,EAAAC,EAAAC,IAAA/zC,KAAA,SAAAg0C,GACA,OACAhpB,OAAAgpB,EAAA,GACAn4M,IAAAm4M,EAAA,GACAC,SAAAD,EAAA,GACAE,KAAAF,EAAA,UAKApC,EAAAG,GAAA,wBAAA90L,GACA,IAAAphB,EAAA,IAAAkC,EAAAxC,IAAA0hB,EAAAphB,IAAAL,IAAAyhB,EAAAphB,IAAAJ,KAEA,OADA4nK,EAAA8wC,YAAAC,QACAlrC,aAAArtK,KAEA+1M,EAAAG,GAAA,2BAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,kBAEAzC,EAAAG,GAAA,0BAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,kBAAAp3L,EAAAu2K,OAEAoe,EAAAG,GAAA,yBAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,gBAEAzC,EAAAG,GAAA,uBAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,cAEAzC,EAAAG,GAAA,0BAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,iBAEAzC,EAAAG,GAAA,yBAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,gBAEAzC,EAAAG,GAAA,sBAAA90L,GACA,OAAAomJ,EAAAgxC,cAAA,qBAEAzC,EAAAG,GAAA,uBAAA90L,GACA,OAAApjB,QAAAquK,KAAA7E,EAAAkwC,UAAA,gBAAAlwC,EAAAgxC,cAAA,gBAEAzC,EAAAG,GAAA,mBAAA90L,GAEA,OADAomJ,EAAAixC,sBACAjxC,EAAAjE,iBAAAY,KAAA,SAAAt/J,GACA,OAAAA,EAAAxC,UAGA0zM,EAAAG,GAAA,oBAAA90L,GACA,OAAAomJ,EAAA8wC,YAAAn7M,KAAAmf,QAEAy5L,EAAAG,GAAA,0BAAA90L,GACA,OAAAomJ,EAAAgF,QAAAprJ,EAAA2F,WAAAo9I,KAAA,SAAA0zC,GACA,OAAArwC,EAAAuwC,OAAAF,EAAA,sBAAAz2L,EAAAyF,aAGAkvL,EAAAG,GAAA,6BAAA90L,GACA,IAAA2F,EAAA3F,EAAA2F,UACAygJ,EAAAgF,QAAAzlJ,GAAAo9I,KAAA,SAAA0zC,GACA,IAAAR,EAAA,IAAAxD,EAAA,2BAAA9sL,GACAqwL,EAAAC,GACA,IAAAqB,EAAA3xL,EAAA,EACA3kB,EAAAu2M,KAAAC,MACAf,EAAAgB,iBACA9C,UACAsB,OACAxwL,OAAAzF,EAAAyF,OACAiyL,uBAAA13L,EAAA03L,yBACS30C,KAAA,SAAAl8I,GACTqvL,EAAAD,MACAr1M,EAAAkR,MAAA,QAAAwlM,EAAA,6BAAAC,KAAAC,MAAAx2M,GAAA,WAAA6lB,EAAAb,cACS,SAAAzO,GAET,GADA2+L,EAAAD,IACAA,EAAAlD,WAAA,CAGA4B,EAAA/tL,KAAA,sBAA8C+wL,UAAA/2M,EAAAg3M,qBAAAC,UAC9C,IACAC,EADAC,EAAA,6DAGAD,EADA,iBAAAvgM,GAEA6gK,QAAA7gK,EACAw/K,MAAAghB,GAEW,qBAAAxgM,EAAA,YAAA1c,EAAA0c,KAEX6gK,QAAA7gK,EAAA6gK,SAAA7gK,EAAA9Y,WACAs4L,MAAAx/K,EAAAw/K,OAAAghB,IAIA3/B,QAAA,qCAAA7gK,EAAA,YAAA1c,EAAA0c,IACAw/K,MAAAghB,GAGApD,EAAA/tL,KAAA,aACA0wL,UACAU,MAAAF,EACAryL,OAAAzF,EAAAyF,eAIKnqB,MACLq5M,EAAAG,GAAA,0BAAA90L,EAAAi4L,GACA,IAAAtyL,EAAA3F,EAAA2F,UACAsyL,EAAAC,OAAA,SAAAC,KACAF,EAAAG,SAAA,SAAA7D,KACAnuC,EAAAgF,QAAAzlJ,GAAAo9I,KAAA,SAAA0zC,GACA,IAAAR,EAAA,IAAAxD,EAAA,wBAAA9sL,GACAqwL,EAAAC,GACA,IAAAqB,EAAA3xL,EAAA,EACA3kB,EAAAu2M,KAAAC,MACAf,EAAA4B,oBACA1D,UACAsB,OACAgC,OACAK,oBAAAt4L,EAAAs4L,oBACAC,iBAAAv4L,EAAAu4L,mBACSx1C,KAAA,WACTmzC,EAAAD,MACAr1M,EAAAkR,MAAA,uBAAAwlM,EAAA,YAAAC,KAAAC,MAAAx2M,GAAA,MACAi3M,EAAAO,SACS,SAAAjE,GAET,GADA2B,EAAAD,IACAA,EAAAlD,WAIA,MADAkF,EAAAD,MAAAzD,GACAA,QAIAI,EAAAG,GAAA,mBAAA90L,GACA,OAAAomJ,EAAA2E,YAEA4pC,EAAAG,GAAA,qBAAA90L,GACA+yL,KACA3sC,IACAA,EAAA+sC,YACA/sC,EAAA,MAEAsvC,GACAA,IAEA,IAAA+C,KAKA,OAJA9C,EAAA93M,QAAA,SAAAo4M,GACAwC,EAAA5/L,KAAAo9L,EAAAhD,UACAgD,EAAA9C,cAEAv2M,QAAAquK,IAAAwtC,GAAA11C,KAAA,WACA4xC,EAAA+D,UACA/D,EAAA,SAGAA,EAAAG,GAAA,iBAAA90L,IA7NA,SAAAA,GACA,SAAA24L,EAAAC,GACAxF,IACAuB,EAAA/tL,KAAA,UAAgCiyL,QAAAD,IAEhC,SAAAE,EAAAvhM,GAEA,GADA67L,IACA77L,aAAA3W,EAAAg0L,kBAAA,CACA,IAAAqhB,EAAA,IAAAxD,EAAA,+BAAAl7L,EAAAxS,MACAixM,EAAAC,GACAtB,EAAAT,gBAAA,kBAAA38L,GAAAwrJ,KAAA,SAAA/iJ,GACAk2L,EAAAD,GACA7vC,EAAA2yC,eAAA/4L,EAAAsuJ,UACA0qC,MACWC,MAAA,SAAA/8L,GACXg6L,EAAAD,GACAtB,EAAA/tL,KAAA,oBAAA1K,IACWymJ,KAAA,KAAAprJ,SACFA,aAAA3W,EAAA0wK,oBACTqjC,EAAA/tL,KAAA,aAAArP,GACSA,aAAA3W,EAAAs4M,oBACTvE,EAAA/tL,KAAA,aAAArP,GACSA,aAAA3W,EAAAu4M,4BACTxE,EAAA/tL,KAAA,qBAAArP,GAEAo9L,EAAA/tL,KAAA,mBAAAhmB,EAAAw4M,sBAAA7hM,EAAA6gK,QAAA7gK,EAAA9Y,aAGA,SAAAu6M,IACA5F,IACA+C,MAAApzC,KAAA41C,EAAA,SAAAz8L,GACAk3L,IACAl3L,aAAAtb,EAAA6wK,oBAIArL,EAAAixC,sBACAjxC,EAAAjE,iBAAAY,KAAA,WACAqwC,IACA+C,MAAApzC,KAAA41C,EAAAG,MANAA,EAAA58L,IAQS48L,GAET1F,IA9IA,SAAApzL,EAAAq5L,GACA,IACAjzC,EADAkzC,KAAA14M,EAAAshK,2BAEAh5J,EAAA8W,EAAA9W,OACA,GAAAA,EAAA8W,KAAA,CACA,IACAomJ,EAAA,IAAAusC,EAAA4G,gBAAA1D,EAAA3sM,EAAA8W,KAAA9W,EAAAolK,SAAA+qC,EAAArxC,GACAsxC,EAAAz8M,QAAAupK,GACS,MAAAlqJ,GACTo9L,EAAAz2C,OAAA3mJ,GAEA,OAAAo9L,EAAAl3C,QAEA,IAAAo3C,EACAC,KACA,IACAD,EAAA,IAAAnG,EAAAsB,GACO,MAAAz4L,GAEP,OADAo9L,EAAAz2C,OAAA3mJ,GACAo9L,EAAAl3C,QAEA,IAAAs3C,EAAAF,EAAAnF,gBACAqF,EAAAjF,aAAA1xC,KAAA,WACA,GAAA22C,EAAAvF,iBAAA,CAGA,IAAAzyC,EAAAx4J,EAAAw4J,kBAAAg4C,EAAAj3C,qBACA2D,EAAA,IAAAusC,EAAAgH,kBAAA9D,EAAA2D,GACA73C,WAAAgzC,EACAlzC,IAAAv4J,EAAAu4J,IACA6M,SAAAplK,EAAAolK,SACAlxK,OAAAs8M,EAAA3oC,cACArP,mBACAF,eAAAt4J,EAAAs4J,gBACS63C,EAAArxC,GACT,QAAA/qK,EAAA,EAAuBA,EAAAw8M,EAAAr8M,OAAyBH,IAChDmpK,EAAAwzC,oBAAAH,EAAAx8M,IAEAw8M,KACAH,EAAAz8M,QAAAupK,GACAsvC,EAAA,QACOuD,MAAA,SAAA1E,GACP+E,EAAAz2C,OAAA0xC,GACAmB,EAAA,OAEA,IAAA9yC,EAAA,EAoDA,OAtCA,IAAAhmK,QAAA,SAAAC,EAAAgmK,GA6BA62C,EAAA52C,OAAAC,KA5BA,SAAAC,EAAA3/J,GACA,IAEA,GADA+vM,IACA/vM,EAAAga,KAKA,OAJA+oJ,GAlBA,WACA,IAAAyzC,KAAAj5M,EAAAuiK,eAAAs2C,GACAvwM,EAAA9L,QAAAy8M,EAAAz8M,SAAA8L,EAAA9L,WACAwD,EAAA4O,MAAA,iDAEA,IACA42J,EAAA,IAAAusC,EAAA4G,gBAAA1D,EAAAgE,EAAA3wM,EAAAolK,SAAA+qC,EAAArxC,GACAsxC,EAAAz8M,QAAAupK,GACS,MAAAlqJ,GACTo9L,EAAAz2C,OAAA3mJ,GAEAu9L,KAXA,QAqBA/D,EAAA,MAGA,IAAA11L,EAAA3c,EAAAzI,MACAgoK,MAAAhiK,EAAAqiK,iBAAAjjJ,GACA05L,EAAAj3C,sBACAkyC,EAAA/tL,KAAA,eACAg8I,SACA6B,MAAAj6J,KAAA2H,IAAAywJ,EAAA82C,EAAA3oC,eAAA,KAGA3K,EACAA,EAAAwzC,oBAAA55L,GAEAy5L,EAAA5gM,KAAAmH,GAEA05L,EAAA52C,OAAAC,KAAAC,EAAAH,GACW,MAAAtrJ,GACXsrJ,EAAAtrJ,KAGAsrJ,KAEAo2C,MAAA,SAAA1hM,GACA+hM,EAAAz2C,OAAAtrJ,GACAm+L,EAAA,OAEAA,EAAA,WACA8D,EAAAx0C,kBAAA,UAEAs0C,EAAAl3C,QAsDA03C,CAAA95L,GAPAK,gBAAAL,EAAA+5L,uBACAC,sBAAAh6L,EAAAg6L,cAAA,EAAAh6L,EAAAg6L,aACAC,gBAAAj6L,EAAAi6L,gBACAC,0BAAAl6L,EAAAk6L,0BACAC,aAAAn6L,EAAAm6L,aACA7P,gBAAAtqL,EAAAsqL,kBAEAvnC,KAAA,SAAAq3C,GACA,GAAArH,EAEA,MADAqH,EAAAjH,YACA,IAAA/0L,MAAA,yBAEAgoJ,EAAAg0C,EACAzF,EAAA/tL,KAAA,wBACAw/I,EAAAjE,iBAAAY,KAAA,SAAAt/J,GACAkxM,EAAA/tL,KAAA,cAAsCxpB,OAAAqG,EAAAxC,MAAA8B,iBAE/BggK,KAAAi2C,EAAAF,GA9DP,CA8NArD,GACAA,EAAA,OAEAK,GAEAuE,mBAAA,SAAAzF,GACA,IAAAD,EAAA,IAAA/zM,EAAAm1M,eAAA,gBAAAnB,GACApC,EAAAkC,MAAAC,EAAAC,GACAD,EAAA/tL,KAAA,gBAMA,oBAAA0zL,YAAA1H,EAAAE,YAAA,oBAAAyH,MAFA,mBADA7H,EAGA6H,MAFAC,aAAA,cAAA9H,GAGAF,EAAA6H,mBAAAE,MAEA5/M,EAAA83M,aACA93M,EAAA63M,yDC3kBA/3M,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAg/M,kBAAAh/M,EAAA4+M,uBAEA,IAAA34M,EAAYC,EAAQ,KAEpBolK,EAAsBplK,EAAQ,KAE9B45M,EAAgB55M,EAAQ,KAExB8W,EAAc9W,EAAQ,KAEtB65M,EAAA,WACA,SAAAA,OACA95M,EAAAgK,aAAA,wCA0DA,OAxDA8vM,EAAAx/M,WACA26M,YACA,OAAAv6M,KAAAq/M,QAEArsC,eACA,OAAAhzK,KAAAs/M,WAEA5yC,iBACA,IAAAA,EAAA,KACA,GAAA1sK,KAAAu/M,YAAA,CACA,IAAAxtC,KAAAzsK,EAAA0sK,wBAAAhyK,KAAAu/M,aACAxtC,EACArF,EAAAqF,EAAAE,QAEA3sK,EAAA4O,MAAA,iCAAAlU,KAAAu/M,YAAA,MAGA,SAAAj6M,EAAAgP,QAAAtU,KAAA,aAAA0sK,IAEA7F,eAAA,WACA,UAAAvhK,EAAAk6M,yBAEAxE,UAAA,SAAAyE,EAAAz2L,GACA,OAAAhpB,KAAAq7M,OAAAr7M,KAAA47M,YAAA6D,EAAAz2L,IAEA02L,WAAA,SAAAD,EAAAz2L,GACA,OAAAhpB,KAAAq7M,OAAAr7M,KAAA47M,YAAAn7M,KAAAg/M,EAAAz2L,IAEA8yL,cAAA,SAAA2D,EAAAz2L,GACA,OAAAhpB,KAAAq7M,OAAAr7M,KAAA47M,YAAAC,QAAA4D,EAAAz2L,IAEA8mJ,QAAA,SAAAzlJ,GACA,OAAArqB,KAAA47M,YAAA9rC,QAAAzlJ,IAEAolJ,QAAA,WACA,OAAAzvK,KAAA47M,YAAAnsC,WAEA4rC,OAAA,SAAA37M,EAAA+/M,EAAAz2L,GACA,WAAA1jB,EAAAk6M,yBAEA/2C,aAAA,SAAAtD,EAAAr/J,GACA,WAAAR,EAAAk6M,yBAEAzD,oBAAA,WACA,WAAAz2M,EAAAk6M,yBAEAlB,oBAAA,SAAAv2M,GACA,WAAAzC,EAAAk6M,yBAEA/B,eAAA,SAAAzqC,GACAhzK,KAAAs/M,UAAAtsC,GAEA6kC,UAAA,WACA,WAAAvyM,EAAAk6M,0BAGAJ,EA5DA,GA8DAnB,EAAA,WACA,SAAAA,EAAA1D,EAAA71L,EAAAsuJ,EAAA+qC,EAAArxC,GACA1sK,KAAAq/M,OAAA9E,EACAv6M,KAAAs/M,UAAAtsC,EACAhzK,KAAAu/M,YAAA7yC,EACA1sK,KAAA+9M,mBACA,IAAA51M,EAAA,IAAAkU,EAAAxX,OAAA6f,GACA1kB,KAAA47M,YAAA,IAAAuD,EAAAQ,YAAA3/M,KAAAmI,GACAnI,KAAA2mK,2BAAArhK,EAAAshK,2BACA5mK,KAAA2mK,wBAAAplK,QAAA4G,GA4BA,OA1BA7C,EAAA8C,KAAAivK,QAAA4mC,EAAAmB,GACA/D,OAAA,SAAA37M,EAAA+/M,EAAAz2L,GACA,WAAA1nB,QAAA,SAAAC,EAAAgmK,GACA,IACA,IAAAjoK,EAAAI,EAAA+/M,GAOAl+M,EALA,mBAAAjC,EACAA,EAAAq3M,MAAAj3M,EAAAspB,GAEA1pB,GAGS,MAAA2c,GACTsrJ,EAAAtrJ,OAIAwsJ,aAAA,SAAAtD,EAAAr/J,GACA,OAAAxE,QAAAC,WAEAw6M,oBAAA,aACAl1C,eAAA,WACA,OAAA7mK,KAAA2mK,wBAAAG,SAEA+wC,UAAA,eAEAoG,EArCA,GAuCAI,EAAA,WACA,SAAAA,EAAA9D,EAAAt0C,EAAAj9I,EAAA+0L,EAAArxC,GACA1sK,KAAAq/M,OAAA9E,EACAv6M,KAAAs/M,UAAAt2L,EAAAgqJ,SACAhzK,KAAAu/M,YAAA7yC,EACA1sK,KAAAqmK,WAAAr9I,EAAAq9I,WACArmK,KAAA+9M,mBACA,IAAA1yM,GACAg7J,WAAAr9I,EAAAq9I,WACAF,IAAAn9I,EAAAm9I,IACArkK,OAAAknB,EAAAlnB,OACAskK,iBAAAp9I,EAAAo9I,iBACAF,eAAAl9I,EAAAk9I,gBAEAlmK,KAAA62K,cAAA,IAAAlM,EAAAtG,qBAAA4B,EAAA56J,GACArL,KAAA47M,YAAA,IAAAuD,EAAAQ,YAAA3/M,UAAA62K,cAAArO,aA2CA,OAzCAljK,EAAA8C,KAAAivK,QAAAgnC,EAAAe,GACA/D,OAAA,SAAA37M,EAAA+/M,EAAAz2L,GACA,IAAA8hJ,EAAA9qK,KACA,WAAAsB,QAAA,SAAAC,EAAAgmK,IACA,SAAAq4C,IACA,IACA,IAAAxnM,EACA9Y,EAAAI,EAAA+/M,GAEArnM,EADA,mBAAA9Y,EACAA,EAAAq3M,MAAAj3M,EAAAspB,GAEA1pB,EAEAiC,EAAA6W,GACW,MAAA6D,GACX,KAAAA,aAAA3W,EAAA6X,sBAEA,YADAoqJ,EAAAtrJ,GAGA6uJ,EAAA+L,cAAApO,aAAAxsJ,EAAAkpJ,MAAAlpJ,EAAAnW,KAAA2hK,KAAAm4C,EAAAr4C,IAfA,MAqBAkB,aAAA,SAAAtD,EAAAr/J,GACA,OAAA9F,KAAA62K,cAAApO,aAAAtD,EAAAr/J,IAEAi2M,oBAAA,WACA/7M,KAAA62K,cAAA/O,oBAEAw2C,oBAAA,SAAAv2M,GACA/H,KAAA62K,cAAA3R,eAAwCn9J,WAExC8+J,eAAA,WACA,OAAA7mK,KAAA62K,cAAAhQ,kBAEAgxC,UAAA,WACA73M,KAAA62K,cAAApN,WAGA40C,EA1DA,GA4DAh/M,EAAA4+M,kBACA5+M,EAAAg/M,sDC/KAl/M,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAsgN,YAAAtgN,EAAAwgN,YAEA,IAAA91C,EAA4a,SAAAC,EAAAroK,GAA2B,GAAAF,MAAAC,QAAAsoK,GAA0B,OAAAA,EAAc,GAAAxqK,OAAAC,YAAAN,OAAA6qK,GAA2C,OAAxf,SAAAA,EAAAroK,GAAiC,IAAAsoK,KAAeC,KAAeC,KAAgBC,SAAoB,IAAM,QAAAC,EAAAC,EAAAN,EAAAxqK,OAAAC,cAA0CyqK,GAAAG,EAAAC,EAAAC,QAAAxoJ,QAA4CkoJ,EAAA1sJ,KAAA8sJ,EAAA/qK,QAAqBqC,GAAAsoK,EAAAnoK,SAAAH,GAAlCuoK,OAAyE,MAAAV,GAAcW,KAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAAE,QAAAF,EAAAE,SAA2C,QAAU,GAAAL,EAAA,MAAAC,GAAsB,OAAAH,EAA3X,CAAwfD,EAAAroK,GAAuC,UAAA8oK,UAAA,yDAEjkBq1C,EAAWv6M,EAAQ,KAEnBC,EAAkBD,EAAQ,KAE1BD,EAAYC,EAAQ,KAEpB8W,EAAc9W,EAAQ,KAEtBw6M,EAAkBx6M,EAAQ,KAE1BqlK,EAAcrlK,EAAQ,KAEtBmlK,EAAcnlK,EAAQ,KAEtBy6M,EAAqBz6M,EAAQ,KAE7B06M,EAAiB16M,EAAQ,KAEzB26M,EAAgB36M,EAAQ,KAExBs6M,EAAA,WACA,IACAM,GAAA,aACA,SAAAC,EAAAC,EAAAl2L,GACA,kBAAAA,GAAAk2L,EAAAC,UAAA,UAAAn2L,GAAAk2L,EAAAE,UAEA,SAAAV,EAAA5vC,GACA,IAAAnF,EAAAmF,EAAAnF,WACArqK,EAAAwvK,EAAAxvK,KACA4pB,EAAA4lJ,EAAA5lJ,UACAm2L,EAAAvwC,EAAAuwC,SACAl9M,EAAA2sK,EAAA3sK,IACA4nK,EAAA+E,EAAA/E,UACAC,EAAA8E,EAAA9E,iBACA/4J,EAAA69J,EAAA79J,mBAEApS,KAAA8qK,aACA9qK,KAAAqqB,YACArqB,KAAAwgN,WACAxgN,KAAAS,OACAT,KAAAsD,MACAtD,KAAAkrK,YACAlrK,KAAAmrK,mBACAnrK,KAAAoS,qBACApS,KAAA+9M,iBAAAjzC,EAAAizC,iBACA/9M,KAAAygN,iBAAA,KACA,IAAAC,EAAA,IAAA1gN,KAAAqqB,UAAA,IACAs2L,GAAsBjhN,IAAA,GACtBM,KAAA4gN,WACAC,YAAA,WACA,OAAAH,KAAAC,EAAAjhN,MAoPA,OAhPAmgN,EAAAjgN,WACAkhN,YAAA,SAAA5+M,GACA,OAAAlC,KAAAwgN,SAAArgN,IAAA+B,IAEA6+M,qBAAA,SAAA7+M,EAAAV,GACA,IAAAqB,EAAA7C,KAAAwgN,SACAQ,EAAA,KACA9pC,EAAA,EAGA,IADA11K,QACAqB,GAAA,CACA,IAAAvD,EAAAkC,EAAAqB,EAAArB,SAAAU,GAAAW,EAAA1C,IAAA+B,GAOA,YANA5C,IACA0hN,IACAA,MAEAA,EAAAzjM,KAAAje,MAEA43K,EAVA,IAYA,SADA5xK,EAAA4O,MAAA,yDAAAhS,GACA8+M,IAAA,UAEAn+M,IAAA1C,IAAA,UAEA,GAAA6gN,EAGA,WAAAA,EAAAl/M,WAAA0D,EAAA1C,QAAAk+M,EAAA,IAGAx7M,EAAAjF,KAAAmC,MAAA1C,KAAAS,KAAAugN,GAFAA,EAAA,IAIAlrC,cACA,OAAA91K,KAAA8gN,YAAA,aAEAG,gBACA,SAAA37M,EAAAgP,QAAAtU,KAAA,YAAAA,KAAA+gN,qBAAA,cAAAv7M,EAAAjF,KAAAkC,QAEAy+M,eACA,IAAAA,EAAAlhN,KAAA+gN,qBAAA,eACA,OAAAt/M,MAAAC,QAAAw/M,IAAA,IAAAA,EAAAp/M,UAGAwD,EAAAgP,QAAAtU,KAAA,WAAAkhN,MAFA57M,EAAAgP,QAAAtU,KAAA,WAAAmgN,IAIAgB,cACA,IAAAA,EAAAnhN,KAAA+gN,qBAAA,cACA,OAAAt/M,MAAAC,QAAAy/M,IAAA,IAAAA,EAAAr/M,UAGAwD,EAAAgP,QAAAtU,KAAA,UAAAmhN,MAFA77M,EAAAgP,QAAAtU,KAAA,UAAAA,KAAAkhN,WAIAxF,eACA,IAAAh8M,EAAAM,KAAA8gN,YAAA,YAIA,WAHAx7M,EAAA6d,OAAAzjB,OAAA,KACAA,EAxFA,MA0FA4F,EAAAgP,QAAAtU,KAAA,WAAAN,IAEAi8M,WACA,IAAAuF,EAAAlhN,KAAAkhN,SACAC,EAAAnhN,KAAAmhN,QACA,GAAAD,IAAAC,EACA,SAAA77M,EAAAgP,QAAAtU,KAAA,OAAAkhN,GAEA,IAAApqH,EAAAxxF,EAAA8C,KAAAg5M,UAAAD,EAAAD,GACA,SAAA57M,EAAAgP,QAAAtU,KAAA,OAAA82F,GAAAoqH,IAEAzuB,aACA,IAAAA,EAAAzyL,KAAA+gN,qBAAA,aAQA,OAPAtuB,EAAA,MACAA,EAAA,EACOA,GAAA,IACPA,GAAA,IACOA,EAAA,IACPA,KAAA,iBAEAntL,EAAAgP,QAAAtU,KAAA,SAAAyyL,IAEA4uB,iBAAA,WACA,IACAl5M,EADA2tK,EAAA91K,KAAA81K,QAEA,GAAAr0K,MAAAC,QAAAo0K,GAAA,CACA,IACAn0K,EADAlB,EAAAT,KAAAS,KAEAkG,EAAAmvK,EAAAh0K,OACAgG,KACA,IAAAnG,EAAA,EAAmBA,EAAAgF,IAAOhF,EAC1BmG,EAAAyV,KAAA9c,EAAAU,WAAA20K,EAAAn0K,KAEAwG,EAAA,IAAAkU,EAAAzX,sBAAAkD,QAEAK,KADO3C,EAAAhB,UAAAsxK,GACPA,EAEA,IAAAz5J,EAAArX,WAEA,OAAAmD,GAEAm5M,cAAA,SAAAl/M,GACA,IAAA4kK,EAAAhnK,KAKA,OAHAA,KAAAygN,mBACAzgN,KAAAygN,iBAAAzgN,KAAA8qK,WAAAuwC,OAAAr7M,KAAA,cAEAA,KAAAygN,iBAAAh5C,KAAA,WAEA,OADA,IAAAq4C,EAAAj2C,aAAA7C,EAAAi6C,UAAA7+M,EAAA4kK,EAAAvmK,MACA23K,UAGA+jC,gBAAA,SAAAjsC,GACA,IAAAH,EAAA/vK,KAEAq5M,EAAAnpC,EAAAmpC,QACAsB,EAAAzqC,EAAAyqC,KACAxwL,EAAA+lJ,EAAA/lJ,OACAiyL,EAAAlsC,EAAAksC,uBAEAmF,EAAAvhN,KAAA8qK,WAAAuwC,OAAAr7M,KAAA,oBACAygN,EAAAzgN,KAAAshN,eAAA,gEACAE,EAAA,IAAAvB,EAAAwB,kBACA32C,WAAA9qK,KAAA8qK,WACArqK,KAAAT,KAAAS,KACA44M,UACAhvL,UAAArqB,KAAAqqB,UACAu2L,UAAA5gN,KAAA4gN,UACA11C,UAAAlrK,KAAAkrK,UACAC,iBAAAnrK,KAAAmrK,iBACAgO,QAAAn5K,KAAA+9M,iBACA3rM,mBAAApS,KAAAoS,qBAGAsvM,EADApgN,QAAAquK,KAAA4xC,EAAAd,IACAh5C,KAAA,SAAAwoC,GACA,IACA0R,EADA53C,EAAAkmC,EAAA,GACA,GAEAhlL,EAAA,IAAA+0L,EAAA/6L,aAAAkF,EAAAkvL,EAAAtpC,EAAA1lJ,WAMA,OALAgvL,EAAA/tL,KAAA,mBACAs2L,aAAAJ,EAAAK,cAAA9xC,EAAAkxC,WACA52L,UAAA0lJ,EAAA1lJ,UACAF,WAEAq3L,EAAArF,iBACAh0M,OAAAw5M,EACAhH,OACAsG,UAAAlxC,EAAAkxC,UACA11L,aAAAN,IACSw8I,KAAA,WACT,OAAAx8I,MAGA62L,EAAA9hN,KAAA8qK,WAAAuwC,OAAAr7M,KAAA,eACA,OAAAsB,QAAAquK,KAAA+xC,EAAAI,IAAAr6C,KAAA,SAAA8oC,GACA,IAAAC,EAAAzmC,EAAAwmC,EAAA,GACAwR,EAAAvR,EAAA,GACAwR,EAAAxR,EAAA,GAEA,OAAAwR,EAAAlgN,OAEA,OADAigN,EAAA93L,UACA83L,EAEA,IAAApgN,EACAC,EACAqgN,KACA,IAAAtgN,EAAA,EAAAC,EAAAogN,EAAAlgN,OAA4CH,EAAAC,EAAQD,IACpDy+M,EAAA4B,EAAArgN,GAAAwoB,IACA83L,EAAA1kM,KAAAykM,EAAArgN,GAAAw6M,gBAAAqF,EAAA7G,EAAAyB,IAGA,OAAA96M,QAAAquK,IAAAsyC,GAAAx6C,KAAA,SAAAy6C,GAEA,IADAH,EAAAp3L,MAAArlB,EAAA2gB,IAAAk8L,qBACAxgN,EAAA,EAAAC,EAAAsgN,EAAApgN,OAA0CH,EAAAC,EAAQD,IAClDogN,EAAA/2L,UAAAk3L,EAAAvgN,IAIA,OAFAogN,EAAAp3L,MAAArlB,EAAA2gB,IAAAm8L,mBACAL,EAAA93L,UACA83L,OAIAhF,mBAAA,SAAAlM,GACA,IAAAv4B,EAAAt4K,KAEAq5M,EAAAxI,EAAAwI,QACAsB,EAAA9J,EAAA8J,KACAqC,EAAAnM,EAAAmM,oBACAL,EAAA9L,EAAA8L,KACAM,EAAApM,EAAAoM,iBAEAsE,EAAAvhN,KAAA8qK,WAAAuwC,OAAAr7M,KAAA,oBACAygN,EAAAzgN,KAAAshN,eAAA,+BAEA,OADAhgN,QAAAquK,KAAA4xC,EAAAd,IACAh5C,KAAA,SAAAsqC,GACA,IACA4P,EADA53C,EAAAgoC,EAAA,GACA,GAaA,OAXA,IAAAkO,EAAAwB,kBACA32C,WAAAwN,EAAAxN,WACArqK,KAAA63K,EAAA73K,KACA44M,UACAhvL,UAAAiuJ,EAAAjuJ,UACAu2L,UAAAtoC,EAAAsoC,UACA11C,UAAAoN,EAAApN,UACAC,iBAAAmN,EAAAnN,iBACAgO,QAAAb,EAAAylC,iBACA3rM,mBAAAkmK,EAAAlmK,qBAEAiwM,gBACAl6M,OAAAw5M,EACAhH,OACAsG,UAAA3oC,EAAA2oC,UACAjE,sBACAC,mBACAN,YAKA2F,mBAAA,SAAAn4L,GAGA,IAFA,IAAA63L,EAAAhiN,KAAAgiN,YACAO,KACA5gN,EAAA,EAAAgF,EAAAq7M,EAAAlgN,OAA6CH,EAAAgF,IAAOhF,EACpDwoB,IAAAi2L,EAAA4B,EAAArgN,GAAAwoB,IACAo4L,EAAAhlM,KAAAykM,EAAArgN,GAAA+iB,MAGA,OAAA69L,GAEAP,kBAGA,IAFA,IAAAA,KACAQ,EAAAxiN,KAAA+gN,qBAAA,cACAp/M,EAAA,EAAAgF,EAAA67M,EAAA1gN,OAAgDH,EAAAgF,IAAOhF,EAAA,CACvD,IAAA8gN,EAAAD,EAAA7gN,GACA0+M,EAAAN,EAAA2C,kBAAAxiN,OAAAF,KAAAS,KAAAgiN,EAAAziN,KAAA8qK,WAAA9qK,KAAA4gN,WACAP,GACA2B,EAAAzkM,KAAA8iM,GAGA,SAAA/6M,EAAAgP,QAAAtU,KAAA,cAAAgiN,KAGAnC,EAlRA,GAoRAF,EAAA,WAGA,SAAAA,EAAA70C,EAAA/iJ,GACA,IAAA5f,EACA,MAAA3C,EAAAhB,UAAAujB,GACA5f,EAAA4f,MACK,QAAAziB,EAAAq9M,eAAA56L,GAGL,UAAAjF,MAAA,sCAFA3a,EAAA,IAAAkU,EAAAxX,OAAAkjB,GAIA,GAAA5f,EAAArG,QAAA,EACA,UAAAghB,MAAA,sCAEA9iB,KAAA8qK,aACA9qK,KAAAmI,SACAnI,KAAAS,KAAA,IAAAq/M,EAAAl2C,KAAAzhK,EAAA2iK,GACA,IAAAizC,EAAAjzC,EAAAizC,iBACA/9M,KAAAoS,mBAAA,IAAA8tM,EAAAhS,oBACAztM,KAAAT,KAAAS,KACAuuM,gBAAA+O,EAAA/O,kBAGA,SAAA4T,EAAAz6M,EAAA06M,EAAA93M,EAAA+3M,GACA,IAAAj9M,EAAAsC,EAAAtC,IACAC,EAAAqC,EAAArC,IACAgb,KACAjb,EAAAkF,EAAAjF,IACAiF,EAAAjF,EAAAD,GAEA,QAAAc,EAAA,EAAmBA,EAAAoE,IAAWpE,EAC9Bma,EAAAvD,KAAAgE,OAAAC,aAAArZ,EAAAnC,YAEA,IAAA5C,EAAA0d,EAAAmB,KAAA,IACA9Z,EAAAtC,MACA,IAAA0d,EAAAu/L,EAAA1/M,EAAA2/M,YAAAF,GAAAz/M,EAAA0lK,QAAA+5C,GACA,WAAAt/L,IAGApb,EAAAtC,KAAA0d,MAGA,IAAAy/L,GACA9wC,cACA,SAAA5sK,EAAAgP,QAAAtU,KAAA,WACAijN,MAAA39M,EAAAiQ,SACA2tM,OAAA59M,EAAAiQ,SACA4tM,QAAA79M,EAAAiQ,SACA6tM,SAAA99M,EAAAiQ,SACA8tM,QAAA/9M,EAAAiQ,SACA+tM,SAAAh+M,EAAAiQ,SACAguM,aAAAj+M,EAAAiQ,SACAiuM,QAAAl+M,EAAAiQ,SACAkuM,QAAAj+M,EAAAxB,WAmMA,OA/LA27M,EAAA//M,WACAqS,MAAA,SAAA2K,GACA5c,KAAAo5M,MAAAx8L,GACA,IAAA8mM,EAAA1jN,KAAA67M,QAAA7wC,QAAA7qK,IAAA,cACAqF,EAAAxB,QAAA0/M,KACA1jN,KAAA2jN,iBAAAD,EAAA3jN,MAEA,IAEA,GADAC,KAAA4jN,SAAA5jN,KAAA67M,QAAA7wC,QAAA7qK,IAAA,YACAH,KAAA4jN,SAAA,CACA5jN,KAAA6jN,IAAA7jN,KAAA4jN,SAAAzjN,IAAA,OACA,IAAA2jN,EAAA9jN,KAAA4jN,SAAAzjN,IAAA,UACA2jN,GAAAriN,MAAAC,QAAAoiN,IAAA,IAAAA,EAAAhiN,QAAA9B,KAAA6jN,MACA7jN,KAAA4jN,SAAA,OAGO,MAAAhjM,GACP,GAAAA,aAAAtb,EAAA6X,qBACA,MAAAyD,KAEAtb,EAAAkR,MAAA,uCACAxW,KAAA4jN,SAAA,OAGAG,oBACA,IAAAA,EAAA,KACA,GAAA/jN,KAAAmI,OAAArG,OACA,IACAiiN,EAAAr5C,EAAAvuJ,cAAAjc,OAAAF,KAAAmI,QACS,MAAAqhK,GACT,GAAAA,aAAAlkK,EAAA6X,qBACA,MAAAqsJ,KAEAlkK,EAAAkR,MAAAgzJ,GAGA,SAAAlkK,EAAAgP,QAAAtU,KAAA,gBAAA+jN,IAEAxxC,gBACA,IAAApqK,EAAAnI,KAAAmI,OACAoqK,EAAA,EAEA,GADAvyK,KAAA+jN,cAEA57M,EAAAvB,QACAg8M,EAAAz6M,EAAA,iBACAoqK,EAAApqK,EAAAtC,IAAA,OAEO,CAIP,IAHA,IACAwZ,KACAxZ,EAAAsC,EAAArC,KACAuZ,GAAAxZ,EAAA,IACAA,GAJA,KAIA,YAAA/D,QACA,IACA+D,EAAA,GAEAsC,EAAAtC,MACAwZ,EAAAujM,EAAAz6M,EAAA,YATA,SAWA,GAAAkX,EAAA,CAEA,IAAA3R,EADAvF,EAAAzB,KAAA,GAEA,GACAgH,EAAAvF,EAAAnC,mBACWV,EAAAgI,SAAAI,IAEX,IADA,IAAAtK,EAAA,GACAsK,GAAA,IAAAA,GAAA,IACAtK,GAAAme,OAAAC,aAAA9T,GACAA,EAAAvF,EAAAnC,UAEAusK,EAAAiE,SAAApzK,EAAA,IACAszK,MAAAnE,KACAA,EAAA,IAIA,SAAAjtK,EAAAgP,QAAAtU,KAAA,YAAAuyK,IAEA5uJ,4BACA,IAAAA,EAAA,EACAogM,EAAA/jN,KAAA+jN,cAIA,OAHAA,IACApgM,EAAAogM,EAAApgM,0BAEAre,EAAAgP,QAAAtU,KAAA,wBAAA2jB,IAEAqgM,YAAA,WACA,IAAA77M,EAAAnI,KAAAmI,OAEA,GADAA,EAAAvB,QACAg8M,EAAAz6M,EAAA,eACAA,EAAAtB,YAIA,IAHA,IAEA6G,EADAg2M,EAAA,IAEAh2M,EAAAvF,EAAAnC,WAAA,MACA09M,EAAA5hN,QAJA,KAOA4hN,GAAAniM,OAAAC,aAAA9T,GAEA1N,KAAA2jN,mBACA3jN,KAAA2jN,iBAAAD,EAAAjtC,UAAA,MAKAwtC,eAAA,WACA,IAAA1xC,EAAAvyK,KAAAuyK,UACAvyK,KAAAS,KAAA6xK,aAAAC,IAEA6mC,MAAA,SAAAx8L,GACA,IAAAsnM,EAAAlkN,KAEAA,KAAAS,KAAAwR,MAAA2K,GACA,IAAAmuJ,GACAoF,WAAA,SAAA9lJ,EAAAxnB,EAAAS,EAAA4nK,EAAAC,GACA,WAAA00C,GACA/0C,WAAAo5C,EAAAp5C,WACArqK,KAAAyjN,EAAAzjN,KACA4pB,YACAm2L,SAAA39M,EACAS,MACA4nK,YACAC,mBACA/4J,mBAAA8xM,EAAA9xM,uBAIApS,KAAA67M,QAAA,IAAAiE,EAAAh2C,QAAA9pK,KAAA8qK,WAAA9qK,KAAAS,KAAAsqK,IAEArnJ,eACA,IAAAqgM,EAAA/jN,KAAA+jN,cACA9gN,EAAA8gN,IAAArgM,SAAA1jB,KAAA67M,QAAAn4L,SACA,SAAApe,EAAAgP,QAAAtU,KAAA,WAAAiD,IAEAkhN,mBACA,IAKAC,EALAC,GACAC,iBAAAtkN,KAAA2jN,iBACAY,oBAAAvkN,KAAA4jN,SACAY,eAAAxkN,KAAA6jN,KAGA,IACAO,EAAApkN,KAAAS,KAAAmyK,QAAAzyK,IAAA,QACO,MAAAqpK,GACP,GAAAA,aAAAlkK,EAAA6X,qBACA,MAAAqsJ,KAEAlkK,EAAAkR,MAAA,mDAEA,GAAA4tM,EAAA,CACA,IAAAK,EAAAzB,EAAA9wC,QACA,QAAAhwK,KAAAuiN,EACA,GAAAL,EAAA9hN,IAAAJ,GAAA,CACA,IAAA5C,EAAA8kN,EAAAjkN,IAAA+B,GACAuiN,EAAAviN,GAAA5C,GACA+kN,EAAAniN,GAAA,iBAAA5C,OAAAgG,EAAA2nK,mBAAA3tK,MAEAgG,EAAAkR,MAAA,mCAAAtU,EAAA,MAKA,SAAAoD,EAAAgP,QAAAtU,KAAA,eAAAqkN,IAEApJ,kBACA,IACAtjB,EACA+sB,EAAA,GACAC,EAHA3kN,KAAAS,KAGAmyK,QAAAzyK,IAAA,MACAsB,MAAAC,QAAAijN,MAAA,OAAAr/M,EAAAiQ,UAAAovM,EAAA,KAlOA,qCAkOAA,EAAA,GACAhtB,KAAAryL,EAAA0B,eAAA29M,EAAA,KAEA3kN,KAAAmI,OAAAu9J,aACA1lK,KAAAmI,OAAAu9J,YAAA,EAAAx2J,KAAAC,IAvOA,KAuOAnP,KAAAmI,OAAArC,MAEA6xL,KAAA/sB,EAAA4mB,cAAAxxL,KAAAmI,OAAAxC,MAAAW,SAAA,EAzOA,MAyOA,EAzOA,OA2OA,QAAA3E,EAAA,EAAAgF,EAAAgxL,EAAA71L,OAAsCH,EAAAgF,EAAOhF,IAAA,CAC7C,IAAAijN,EAAAjtB,EAAAh2L,GAAAwB,SAAA,IACAuhN,GAAA,IAAAE,EAAA9iN,OAAA,IAAA8iN,IAEA,SAAAt/M,EAAAgP,QAAAtU,KAAA,cAAA0kN,IAEA50C,QAAA,SAAAzlJ,GACA,OAAArqB,KAAA67M,QAAA/rC,QAAAzlJ,IAEAolJ,QAAA,WACA,OAAAzvK,KAAA67M,QAAApsC,YAGAkwC,EAzPA,GA2PAtgN,EAAAwgN,OACAxgN,EAAAsgN,gDC3iBAxgN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAmhB,sBAEA,IAAAhb,EAAkBD,EAAQ,KAE1Bs/M,EAAat/M,EAAQ,KAErB8W,EAAc9W,EAAQ,KAEtBib,EAAA,WACA,SAAAA,EAAApd,EAAAwF,EAAAyC,GACArL,KAAAoD,MACApD,KAAA6C,KAAAO,EAAAP,QACA2C,EAAA1C,QAAAuI,KACAA,EAAA7F,EAAAjF,KAAAkC,OAEA,IAAAmL,GACA28J,KAAA,WACA,OAAAnnK,EAAA4C,YAGAhG,KAAA8kN,gBAAA,IAAAD,EAAAjsC,gBAAAhrK,GACA+wB,EAAAtzB,EAAAlL,IAAA,KACAm5K,UAAAjuK,EAAAlL,IAAA,aACAq5K,iBAAAnuK,EAAAlL,IAAA,oBACAs5K,QAAApuK,EAAAlL,IAAA,WACAw5K,KAAAtuK,EAAAlL,IAAA,QACA05K,WAAAxuK,EAAAlL,IAAA,cACA45K,SAAA1uK,EAAAlL,IAAA,cAEAkc,EAAAnX,aAAApB,KAAA9D,KAAA4I,GAcA,OAZA4X,EAAA5gB,UAAAT,OAAAe,OAAAmc,EAAAnX,aAAAtF,WACA4gB,EAAA5gB,UAAA0H,UAAA,WACA,MAAAtH,KAAAoH,KAAA,CACA,IAAA8E,EAAAlM,KAAA8kN,gBAAAlqC,eACA,QAAA1uK,EAEA,YADAlM,KAAAoH,QAGApH,KAAAuH,aAAAvH,KAAAmH,aAAA,GACAnH,KAAA+G,OAAA/G,KAAAmH,gBAAA+E,IAGAsU,EAnCA,GAqCAnhB,EAAAmhB,mDChDArhB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAshB,mBAEA,IAAAnb,EAAkBD,EAAQ,KAE1B8W,EAAc9W,EAAQ,KAEtBw/M,EAAYx/M,EAAQ,KAEpBD,EAAYC,EAAQ,KAEpBob,EAAA,WACA,SAAAA,EAAAxY,EAAAS,EAAA/F,EAAAwI,GACArL,KAAAmI,SACAnI,KAAA4I,cACA5I,KAAA6C,OACA7C,KAAAqL,SACAgR,EAAAnX,aAAApB,KAAA9D,KAAA4I,GA0CA,OAxCA+X,EAAA/gB,UAAAT,OAAAe,OAAAmc,EAAAnX,aAAAtF,WACAT,OAAAC,eAAAuhB,EAAA/gB,UAAA,SACAO,IAAA,WACA,SAAAmF,EAAAgP,QAAAtU,KAAA,QAAAA,KAAAmI,OAAA1D,SAAAzE,KAAA4I,eAGAkb,kBAEAnD,EAAA/gB,UAAA2H,aAAA,SAAAC,KACAmZ,EAAA/gB,UAAA0H,UAAA,WACA,IAAAtH,KAAAoH,IAAA,CAGA,IAAA49M,EAAA,IAAAD,EAAAE,WACAjgD,KACA,MAAAx/J,EAAA1C,QAAA9C,KAAAqL,QAAA,CACA,IAAA65M,EAAAllN,KAAAqL,OAAAlL,IAAA,gBACA,MAAAqF,EAAAhB,UAAA0gN,GAAA,CACA,IAAAC,EAAAD,EAAAzgN,WACAugK,EAAAznJ,MACAmH,KAAAygM,EACAz/M,MAAA,EACAI,IAAAq/M,EAAArjN,UAIAkjK,EAAAznJ,MACAmH,KAAA1kB,KAAA2F,MACAD,MAAA,EACAI,IAAA9F,KAAA2F,MAAA7D,SAIA,IAFA,IAAA4iB,EAAAsgM,EAAAI,YAAApgD,GACA8P,EAAApwJ,EAAA5iB,OACAH,EAAA,EAAmBA,EAAAmzK,EAAgBnzK,IACnC+iB,EAAA/iB,IAAA,IAEA3B,KAAA+G,OAAA2d,EACA1kB,KAAAmH,aAAA2tK,EACA90K,KAAAoH,SAEAuZ,EAhDA,GAkDAthB,EAAAshB,gDC/DAxhB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA4lN,kBAEA,IAAA3/M,EAAYC,EAAQ,KAEpBo3K,EAA0Bp3K,EAAQ,KAElCs/M,EAAat/M,EAAQ,KAErB8/M,EAAA,WACA,SAAAA,EAAAxoC,GACA78K,KAAA88K,QAAA,gBAAAD,EAKA,OAHAwoC,EAAAzlN,UAAA,IAAAkjB,MACAuiM,EAAAzlN,UAAAG,KAAA,aACAslN,EAAA1lN,YAAA0lN,EACAA,EAPA,GASAJ,EAAA,WACA,SAAAK,KASA,SAAAC,EAAA7gM,EAAAhf,EAAAI,GACA9F,KAAA0kB,OACA1kB,KAAA0F,QACA1F,KAAA8F,MAYA,SAAA0/M,EAAAC,EAAAC,EAAA98B,GACA,IAAAvM,EAAAopC,EAAAE,YAAAD,GACAE,EAAA,EACA,SAAAn3M,EAAA3M,GAEA,IADA,IAAAmC,EAAA,EACAtC,EAAA,EAAqBA,EAAAG,EAAYH,IAAA,CACjC,IAAAkuL,EAAAjH,EAAAxM,QAAAC,EAAAupC,GACAA,IAAA,IAAAA,GAAA,EAAA/1B,EAAA,KAAA+1B,GAAA,EAAA/1B,GAAA,IACA5rL,KAAA,EAAA4rL,EAEA,OAAA5rL,IAAA,EAEA,IAAAqd,EAAA7S,EAAA,GACAnP,EAAAmP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,GACA,WAAA6S,EAAAhiB,IAAA,GAAAA,EAAA,KAEA,SAAAumN,EAAAJ,EAAA78B,EAAA36K,GAGA,IAFA,IAAAouK,EAAAopC,EAAAE,YAAA,QACAC,EAAA,EACAjkN,EAAA,EAAmBA,EAAAsM,EAAgBtM,IAEnCikN,KAAA,EADAh9B,EAAAxM,QAAAC,EAAAupC,GAGA,OAAA33M,EAAA,GACA23M,GAAA,GAAA33M,GAAA,EAEA,WAAA23M,EAjDAN,EAAA1lN,WACA+lN,YAAA,SAAA1qB,GACA,OAAAA,KAAAj7L,KACAA,KAAAi7L,GAEAj7L,KAAAi7L,GAAA,IAAArM,UAAA,SAQA22B,EAAA3lN,WACAgpL,cACA,IAAAA,EAAA,IAAAjM,EAAAnB,kBAAAx7K,KAAA0kB,KAAA1kB,KAAA0F,MAAA1F,KAAA8F,KACA,SAAAR,EAAAgP,QAAAtU,KAAA,UAAA4oL,IAEA68B,mBACA,IAAArzC,EAAA,IAAAkzC,EACA,SAAAhgN,EAAAgP,QAAAtU,KAAA,eAAAoyK,KA+BA,IAAA0zC,GAAA,ksBACAC,KACAnrM,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,MAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,MAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,MAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,KAEAgwM,IACAC,SACArrM,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEAkwM,YACAtrM,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,MAGAiwM,SACArrM,GAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEAkwM,YACAtrM,EAAA,EACA5E,GAAA,IAEA4E,GAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,IAEA4E,EAAA,EACA5E,EAAA,MAGAmwM,GAAA,oBACAC,GAAA,MAyBA,SAAAC,EAAAC,EAAA/1M,EAAAC,EAAA+1M,EAAAC,EAAA9/M,EAAA2tD,EAAAoyJ,GACA,GAAAH,EAEA,OAAAI,EADA,IAAAC,EAAAF,EAAA/hM,KAAA+hM,EAAA/gN,MAAA+gN,EAAA3gN,KACAyK,EAAAC,MAEA,OAAA+1M,IAAA7/M,IAAA8/M,GAAA,IAAAnyJ,EAAAvyD,QAAA,IAAAuyD,EAAA,GAAAz5C,IAAA,IAAAy5C,EAAA,GAAAr+C,IAAA,IAAAq+C,EAAA,GAAAz5C,IAAA,IAAAy5C,EAAA,GAAAr+C,GAAA,IAAAq+C,EAAA,GAAAz5C,IAAA,IAAAy5C,EAAA,GAAAr+C,IAAA,IAAAq+C,EAAA,GAAAz5C,IAAA,IAAAy5C,EAAA,GAAAr+C,EACA,OA9BA,SAAAzF,EAAAC,EAAAi2M,GACA,IAEAv3B,EACAvtL,EACA4K,EACAq6M,EACAxsC,EACAysC,EACAC,EARAl+B,EAAA69B,EAAA79B,QACAvM,EAAAoqC,EAAAhB,aAAAE,YAAA,MAQAoB,KAEA,IAAAplN,EAAA,EAAeA,EAAA6O,EAAY7O,IAK3B,IAJAy4K,EAAA2sC,EAAAplN,GAAA,IAAAiE,WAAA2K,GACAs2M,EAAAllN,EAAA,EAAAy4K,EAAA2sC,EAAAplN,EAAA,GAEAutL,GADA43B,EAAAnlN,EAAA,EAAAy4K,EAAA2sC,EAAAplN,EAAA,IACA,OAAAmlN,EAAA,OAAAA,EAAA,OAAAD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MACAt6M,EAAA,EAAiBA,EAAAgE,EAAWhE,IAC5B6tK,EAAA7tK,GAAAq6M,EAAAh+B,EAAAxM,QAAAC,EAAA6S,GACAA,GARA,MAQAA,IAAA,GAAA3iL,EAAA,EAAAgE,EAAAu2M,EAAAv6M,EAAA,WAAAA,EAAA,EAAAgE,EAAAs2M,EAAAt6M,EAAA,SAAAq6M,EAGA,OAAAG,EAtBA,CA8BAx2M,EAAAC,EAAAi2M,GAEA,IAAAO,IAAAtgN,EACAugN,EAAAlB,EAAAQ,GAAAtiB,OAAA5vI,GACA4yJ,EAAAl+C,KAAA,SAAA5wJ,EAAA/O,GACA,OAAA+O,EAAAnC,EAAA5M,EAAA4M,GAAAmC,EAAAyC,EAAAxR,EAAAwR,IAEA,IAQA1O,EAAAhB,EARAg8M,EAAAD,EAAAnlN,OACAqlN,EAAA,IAAAv4B,UAAAs4B,GACAE,EAAA,IAAAx4B,UAAAs4B,GACAG,KACAC,EAAA,EACAC,EAAA,EACA9gM,EAAA,EACA+gM,EAAA,EAEA,IAAAt8M,EAAA,EAAeA,EAAAg8M,EAAoBh8M,IACnCi8M,EAAAj8M,GAAA+7M,EAAA/7M,GAAA0P,EACAwsM,EAAAl8M,GAAA+7M,EAAA/7M,GAAA8K,EACAuxM,EAAAr4M,KAAAC,IAAAo4M,EAAAN,EAAA/7M,GAAA0P,GACA6L,EAAAvX,KAAA2H,IAAA4P,EAAAwgM,EAAA/7M,GAAA0P,GACA4sM,EAAAt4M,KAAAC,IAAAq4M,EAAAP,EAAA/7M,GAAA8K,GACA9K,EAAAg8M,EAAA,GAAAD,EAAA/7M,GAAA8K,IAAAixM,EAAA/7M,EAAA,GAAA8K,GAAAixM,EAAA/7M,GAAA0P,IAAAqsM,EAAA/7M,EAAA,GAAA0P,EAAA,EACA0sM,GAAA,GAAAJ,EAAA,EAAAh8M,EAEAm8M,EAAA9pM,KAAArS,GAGA,IAAAu8M,EAAAJ,EAAAvlN,OACA4lN,EAAA,IAAA94B,UAAA64B,GACAE,EAAA,IAAA/4B,UAAA64B,GACAG,EAAA,IAAAv5M,YAAAo5M,GACA,IAAAv7M,EAAA,EAAeA,EAAAu7M,EAA2Bv7M,IAC1ChB,EAAAm8M,EAAAn7M,GACAw7M,EAAAx7M,GAAA+6M,EAAA/7M,GAAA0P,EACA+sM,EAAAz7M,GAAA+6M,EAAA/7M,GAAA8K,EACA4xM,EAAA17M,GAAA,GAAAg7M,EAAA,EAAAh8M,EAiBA,IAfA,IASAqB,EACAyiL,EACA64B,EAEAh4B,EACA7nL,EAdA8/M,GAAAP,EACAQ,GAAAP,EACAQ,EAAAz3M,EAAAkW,EACAwhM,EAAA9B,EAAAI,GACAnsC,EAAA,IAAAx0K,WAAA2K,GACAw2M,KACAn+B,EAAA69B,EAAA79B,QACAvM,EAAAoqC,EAAAhB,aAAAE,YAAA,MACAuC,EAAA,EAIAh5B,EAAA,EAGAvtL,EAAA,EAAmBA,EAAA6O,EAAY7O,IAC/B,GAAA6kN,IAEA0B,GADAt/B,EAAAxM,QAAAC,EAAA4rC,IAGAlB,EAAAxpM,KAAA68J,QAMA,IAFAA,EAAA,IAAAx0K,WAAAw0K,GACA2sC,EAAAxpM,KAAA68J,GACA7tK,EAAA,EAAiBA,EAAAgE,EAAWhE,IAC5B,GAAAy6M,GAAAtgN,EAAA/E,GAAA4K,GACA6tK,EAAA7tK,GAAA,MADA,CAIA,GAAAA,GAAAu7M,GAAAv7M,EAAAy7M,GAAArmN,GAAAomN,EAEA,IADA74B,KAAA,EAAAo4B,EACAp8M,EAAA,EAAqBA,EAAAu8M,EAA2Bv8M,IAChD8jL,EAAArtL,EAAAgmN,EAAAz8M,GACA28M,EAAAt7M,EAAAm7M,EAAAx8M,IACA2kL,EAAAk3B,EAAA/3B,GAAA64B,MAGA34B,GADAW,EAAA+3B,EAAA18M,SAOA,IAFAgkL,EAAA,EACAlnL,EAAAk/M,EAAA,EACAh8M,EAAA,EAAqBA,EAAAg8M,EAAoBh8M,IAAAlD,KACzC6/M,EAAAt7M,EAAA46M,EAAAj8M,KACA,GAAA28M,EAAAt3M,IACAy+K,EAAArtL,EAAAylN,EAAAl8M,KACA,IACA2kL,EAAAk3B,EAAA/3B,GAAA64B,MAEA34B,GAAAW,GAAA7nL,GAMA,IAAA4+M,EAAAh+B,EAAAxM,QAAAC,EAAA6S,GACA9U,EAAA7tK,GAAAq6M,EAGA,OAAAG,EAEA,SAAAoB,EAAA53M,EAAAC,EAAA+1M,EAAA6B,EAAAC,EAAAC,EAAA9B,EAAAnyJ,EAAAoyJ,GACA,IAAA8B,EAAAvC,EAAAO,GAAAN,OACA,IAAAM,IACAgC,IAAAtkB,QAAA5vI,EAAA,MAEA,IAGAnpD,EAHAs9M,EAAAD,EAAAzmN,OACA2mN,EAAA,IAAAlgN,WAAAigN,GACAE,EAAA,IAAAngN,WAAAigN,GAEA,IAAAt9M,EAAA,EAAeA,EAAAs9M,EAA0Bt9M,IACzCu9M,EAAAv9M,GAAAq9M,EAAAr9M,GAAA0P,EACA8tM,EAAAx9M,GAAAq9M,EAAAr9M,GAAA8K,EAEA,IAAA2yM,EAAA3C,EAAAO,GAAAL,UACA,IAAAK,IACAoC,IAAA1kB,QAAA5vI,EAAA,MAEA,IAAAu0J,EAAAD,EAAA7mN,OACA+mN,EAAA,IAAAtgN,WAAAqgN,GACAE,EAAA,IAAAvgN,WAAAqgN,GACA,IAAA19M,EAAA,EAAeA,EAAA09M,EAA6B19M,IAC5C29M,EAAA39M,GAAAy9M,EAAAz9M,GAAA0P,EACAkuM,EAAA59M,GAAAy9M,EAAAz9M,GAAA8K,EASA,IAPA,IAAA+yM,EAAAX,EAAA,GAAAtmN,OACAknN,EAAAZ,EAAAtmN,OACAmmN,EAAA7B,EAAAG,GACAQ,KACAn+B,EAAA69B,EAAA79B,QACAvM,EAAAoqC,EAAAhB,aAAAE,YAAA,MACAuC,EAAA,EACAvmN,EAAA,EAAmBA,EAAA6O,EAAY7O,IAAA,CAC/B,GAAA6kN,IAEA0B,GADAt/B,EAAAxM,QAAAC,EAAA4rC,IAGA,UAAA5C,EAAA,+BAGA,IAAAjrC,EAAA,IAAAx0K,WAAA2K,GACAw2M,EAAAxpM,KAAA68J,GACA,QAAA7tK,EAAA,EAAqBA,EAAAgE,EAAWhE,IAAA,CAChC,IAAAyiL,EAAA64B,EACA34B,EAAA,EACA,IAAAhkL,EAAA,EAAmBA,EAAAs9M,EAA0Bt9M,IAC7C8jL,EAAArtL,EAAA+mN,EAAAx9M,GACA28M,EAAAt7M,EAAAk8M,EAAAv9M,GACA8jL,EAAA,GAAA64B,EAAA,GAAAA,GAAAt3M,EACA2+K,IAAA,EAEAA,KAAA,EAAA63B,EAAA/3B,GAAA64B,GAGA,IAAA38M,EAAA,EAAmBA,EAAA09M,EAA6B19M,IAChD8jL,EAAArtL,EAAAmnN,EAAA59M,GAAAo9M,EACAT,EAAAt7M,EAAAs8M,EAAA39M,GAAAm9M,EACAr5B,EAAA,GAAAA,GAAAg6B,GAAAnB,EAAA,GAAAA,GAAAkB,EACA75B,IAAA,EAEAA,KAAA,EAAAk5B,EAAAp5B,GAAA64B,GAGA,IAAAjB,EAAAh+B,EAAAxM,QAAAC,EAAA6S,GACA9U,EAAA7tK,GAAAq6M,GAGA,OAAAG,EA+GA,SAAAkC,EAAAC,EAAAC,EAAA54M,EAAAC,EAAA44M,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtD,EAAAuD,EAAAC,GACA,GAAAf,GAAAC,EACA,UAAA9D,EAAA,4CAEA,IACA1jN,EAAAy4K,EADA2sC,KAEA,IAAAplN,EAAA,EAAeA,EAAA6O,EAAY7O,IAAA,CAE3B,GADAy4K,EAAA,IAAAx0K,WAAA2K,GACA64M,EACA,QAAA78M,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClC6tK,EAAA7tK,GAAA68M,EAGArC,EAAAxpM,KAAA68J,GAEA,IAAAwO,EAAA69B,EAAA79B,QACA68B,EAAAgB,EAAAhB,aACAyE,EAAAhB,GAAAW,EAAAM,YAAA91M,OAAA41M,IAAAzE,EAAAC,EAAA,OAAA78B,GACAwhC,EAAA,EAEA,IADAzoN,EAAA,EACAA,EAAA0nN,GAAA,CAEAa,GADAhB,EAAAW,EAAAM,YAAA91M,OAAA41M,GAAAzE,EAAAC,EAAA,OAAA78B,GAKA,IADA,IAAAyhC,EADAD,GADAlB,EAAAW,EAAAS,YAAAj2M,OAAA41M,GAAAzE,EAAAC,EAAA,OAAA78B,KAGA,CACA,IAAA2hC,EAAA,EACAjB,EAAA,IACAiB,EAAArB,EAAAe,EAAAx7M,SAAAu7M,GAAAxE,EAAAC,EAAA,OAAA78B,IAEA,IAAA3+K,EAAAq/M,EAAAY,EAAAK,EACAC,EAAAtB,EAAAW,EAAAY,cAAAp2M,OAAA41M,GAAApE,EAAAJ,EAAA78B,EAAA4gC,GACAkB,EAAAvB,IAAAD,EAAAe,EAAA7tC,UAAAopC,EAAAC,EAAA,OAAA78B,IACA+hC,EAAApB,EAAAiB,GACAI,EAAAD,EAAA,GAAA7oN,OACA+oN,EAAAF,EAAA7oN,OACA,GAAA4oN,EAAA,CACA,IAAAI,EAAAtF,EAAAC,EAAA,QAAA78B,GACAmiC,EAAAvF,EAAAC,EAAA,QAAA78B,GAKA+hC,EAAAxC,EAFAyC,GAAAE,EACAD,GAAAE,EACAjB,EAAAa,GAAAG,GAAA,GAJAtF,EAAAC,EAAA,QAAA78B,IAIAmiC,GAAA,GAHAvF,EAAAC,EAAA,QAAA78B,MAGAmhC,EAAAtD,GAEA,IAEAtxB,EAAAb,EAAA02B,EAFAC,EAAAhhN,GAAA,EAAA0/M,EAAA,EAAAkB,EAAA,GACAK,EAAAb,GAAA,EAAAV,EAAAiB,EAAA,KAEA,GAAAnB,EAAA,CACA,IAAAt0B,EAAA,EAAsBA,EAAA01B,EAAmB11B,IAEzC,GADA/a,EAAA2sC,EAAAmE,EAAA/1B,GACA,CAGA61B,EAAAL,EAAAx1B,GACA,IAAAg2B,EAAAj8M,KAAAC,IAAAoB,EAAA06M,EAAAL,GACA,OAAAhB,GACA,OACA,IAAAt1B,EAAA,EAA4BA,EAAA62B,EAAe72B,IAC3Cla,EAAA6wC,EAAA32B,IAAA02B,EAAA12B,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAA62B,EAAe72B,IAC3Cla,EAAA6wC,EAAA32B,IAAA02B,EAAA12B,GAEA,MACA,QACA,UAAA+wB,EAAA,YAAAuE,EAAA,sBAGAS,GAAAQ,EAAA,MACS,CACT,IAAAv2B,EAAA,EAAsBA,EAAAu2B,EAAmBv2B,IAEzC,GADAla,EAAA2sC,EAAAkE,EAAA32B,GAKA,OADA02B,EAAAL,EAAAr2B,GACAs1B,GACA,OACA,IAAAz0B,EAAA,EAA4BA,EAAAy1B,EAAkBz1B,IAC9C/a,EAAA8wC,EAAA/1B,IAAA61B,EAAA71B,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAAy1B,EAAkBz1B,IAC9C/a,EAAA8wC,EAAA/1B,IAAA61B,EAAA71B,GAEA,MACA,QACA,UAAAkwB,EAAA,YAAAuE,EAAA,qBAGAS,GAAAO,EAAA,EAEAjpN,IACA,IAAAypN,EAAAlC,EAAAW,EAAAwB,YAAAh3M,OAAA41M,GAAAzE,EAAAC,EAAA,OAAA78B,GACA,UAAAwiC,EACA,MAEAf,GAAAe,EAAA1B,GAGA,OAAA3C,EA2JA,SAAAuE,EAAA5mM,EAAAhf,GACA,IAAA6lN,KACAA,EAAA7W,UAAApvM,EAAA0lL,YAAAtmK,EAAAhf,GACA,IAAAknK,EAAAloJ,EAAAhf,EAAA,GACA8lN,EAAA,GAAA5+C,EACA,IAAAk5C,EAAA0F,GACA,UAAAnG,EAAA,yBAAAmG,GAEAD,EAAArnN,KAAAsnN,EACAD,EAAAE,SAAA3F,EAAA0F,GACAD,EAAAG,qBAAA,IAAA9+C,GACA,IAAA++C,KAAA,GAAA/+C,GACAg/C,EAAAlnM,EAAAhf,EAAA,GACAmmN,EAAAD,GAAA,IACAE,GAAA,GAAAF,GACApmD,EAAA9/J,EAAA,EACA,OAAAkmN,EAAA,CACAC,EAAA,aAAAvmN,EAAA0lL,YAAAtmK,EAAA8gJ,EAAA,GACAA,GAAA,EACA,IAAA7/J,EAAAkmN,EAAA,KAEA,IADAC,EAAA,GAAApnM,EAAA8gJ,OACA7/J,EAAA,GACAmmN,EAAAvuM,KAAAmH,EAAA8gJ,WAEK,OAAAomD,GAAA,IAAAA,EACL,UAAAvG,EAAA,6BAEAkG,EAAAO,aACA,IAEAnqN,EAAAC,EAFAmqN,EAAAR,EAAA7W,QAAA,MAAA6W,EAAA7W,QAAA,UACAsX,KAEA,IAAArqN,EAAA,EAAeA,EAAAkqN,EAAqBlqN,IAAA,CACpC,IAAA+yM,EAAA,IAAAqX,EAAArnM,EAAA8gJ,GAAA,IAAAumD,KAAAzmN,EAAAulL,YAAAnmK,EAAA8gJ,MAAAlgK,EAAA0lL,YAAAtmK,EAAA8gJ,GACAwmD,EAAAzuM,KAAAm3L,GACAlvC,GAAAumD,EAWA,GATAR,EAAAS,aACAL,GAGAJ,EAAAU,mBAAA3mN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,GAHA+lD,EAAAU,gBAAAvnM,EAAA8gJ,KAKA+lD,EAAAzpN,UAAAwD,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACA,aAAA+lD,EAAAzpN,OAAA,CACA,QAAA0pN,EA4BA,UAAAnG,EAAA,kCA3BA,IAAA6G,EAAAC,EAAAznM,EAAA8gJ,GAEA4mD,KAAA,EADA1nM,EAAA8gJ,EAAA6mD,IAGAC,EAAA,IAAA1mN,WADA,GAUA,IARAwmN,IACAE,EAAA,OACAA,EAAA,QAEAA,EAAA,GAAAJ,EAAA17M,SAAA,OACA87M,EAAA,GAAAJ,EAAA17M,QAAA,OACA87M,EAAA,GAAAJ,EAAA17M,QAAA,MACA87M,EAAA,OAAAJ,EAAA17M,OACA7O,EAAA6jK,EAAA5jK,EAAA8iB,EAAA5iB,OAA4CH,EAAAC,EAAQD,IAAA,CAEpD,IADA,IAAA4K,EAAA,EACAA,EAZA,GAYA+/M,EAAA//M,KAAAmY,EAAA/iB,EAAA4K,IACAA,IAEA,GAfA,IAeAA,EAAA,CACAg/M,EAAAzpN,OAAAH,EAhBA,EAiBA,OAGA,gBAAA4pN,EAAAzpN,OACA,UAAAujN,EAAA,6BAOA,OADAkG,EAAAgB,UAAA/mD,EACA+lD,EAEA,SAAAiB,EAAA1wB,EAAAp3K,EAAAhf,EAAAI,GAGA,IAFA,IAAA2mN,KACAjnD,EAAA9/J,EACA8/J,EAAA1/J,GAAA,CACA,IAAAylN,EAAAD,EAAA5mM,EAAA8gJ,GACAA,EAAA+lD,EAAAgB,UACA,IAAAG,GACA5wB,OAAAyvB,EACA7mM,QAQA,GANAo3K,EAAA6wB,eACAD,EAAAhnN,MAAA8/J,EACAA,GAAA+lD,EAAAzpN,OACA4qN,EAAA5mN,IAAA0/J,GAEAinD,EAAAlvM,KAAAmvM,GACA,KAAAnB,EAAArnN,KACA,MAGA,GAAA43L,EAAA6wB,aACA,QAAAhrN,EAAA,EAAAC,EAAA6qN,EAAA3qN,OAA2CH,EAAAC,EAAQD,IACnD8qN,EAAA9qN,GAAA+D,MAAA8/J,EACAA,GAAAinD,EAAA9qN,GAAAm6L,OAAAh6L,OACA2qN,EAAA9qN,GAAAmE,IAAA0/J,EAGA,OAAAinD,EAEA,SAAAN,EAAAznM,EAAAhf,GACA,OACA6K,SAAAjL,EAAA0lL,YAAAtmK,EAAAhf,GACA8K,UAAAlL,EAAA0lL,YAAAtmK,EAAAhf,EAAA,GACAkV,KAAAtV,EAAA0lL,YAAAtmK,EAAAhf,EAAA,GACAsQ,KAAA1Q,EAAA0lL,YAAAtmK,EAAAhf,EAAA,IACAkkN,oBAAA,EAAAllM,EAAAhf,EAAA,KAGA,IAAA2mN,EAAA,GACA,SAAAO,EAAAF,EAAA9W,GACA,IAIA5sL,EAAAqrC,EAAA1yD,EAAAkrN,EAJA/wB,EAAA4wB,EAAA5wB,OACAp3K,EAAAgoM,EAAAhoM,KACA8gJ,EAAAknD,EAAAhnN,MACAI,EAAA4mN,EAAA5mN,IAEA,OAAAg2L,EAAA53L,MACA,OACA,IAAA4oN,KACAC,KAAAznN,EAAAulL,YAAAnmK,EAAA8gJ,GAYA,GAXAsnD,EAAA5D,WAAA,EAAA6D,GACAD,EAAA3D,cAAA,EAAA4D,GACAD,EAAAE,kBAAAD,GAAA,IACAD,EAAAG,kBAAAF,GAAA,IACAD,EAAAI,mBAAAH,GAAA,IACAD,EAAAK,6BAAAJ,GAAA,IACAD,EAAAM,2BAAA,IAAAL,GACAD,EAAAO,+BAAA,IAAAN,GACAD,EAAA7F,SAAA8F,GAAA,KACAD,EAAAQ,mBAAAP,GAAA,KACAvnD,GAAA,GACAsnD,EAAA5D,QAAA,CAGA,IAFA2D,EAAA,IAAAC,EAAA7F,SAAA,IACA5yJ,KACA1yD,EAAA,EAAqBA,EAAAkrN,EAAclrN,IACnC0yD,EAAA92C,MACA3C,KAAAtV,EAAAioN,UAAA7oM,EAAA8gJ,GACAxvJ,KAAA1Q,EAAAioN,UAAA7oM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEAsnD,EAAAz4J,KAEA,GAAAy4J,EAAA3D,aAAA2D,EAAAQ,mBAAA,CAEA,IADAj5J,KACA1yD,EAAA,EAAqBA,EAAA,EAAOA,IAC5B0yD,EAAA92C,MACA3C,KAAAtV,EAAAioN,UAAA7oM,EAAA8gJ,GACAxvJ,KAAA1Q,EAAAioN,UAAA7oM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEAsnD,EAAA/C,aAAA11J,EAEAy4J,EAAAU,2BAAAloN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAsnD,EAAAW,sBAAAnoN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAA8jM,EAAAhxB,EAAA4Y,OAAA5Y,EAAAkwB,WAAAtnM,EAAA8gJ,EAAA1/J,GACA,MACA,OACA,OACA,IAAA4nN,KACAA,EAAAl3M,KAAA21M,EAAAznM,EAAA8gJ,GACAA,GAAA6mD,EACA,IAAAsB,KAAAroN,EAAAulL,YAAAnmK,EAAA8gJ,GAYA,GAXAA,GAAA,EACAkoD,EAAAxE,WAAA,EAAAyE,GACAD,EAAAvE,cAAA,EAAAwE,GACAD,EAAA1D,aAAA2D,GAAA,IACAD,EAAApE,UAAA,GAAAoE,EAAA1D,aACA0D,EAAA/D,gBAAAgE,GAAA,IACAD,EAAAjE,cAAA,GAAAkE,GACAD,EAAA9D,oBAAA+D,GAAA,IACAD,EAAAtE,kBAAAuE,GAAA,IACAD,EAAAhE,SAAAiE,GAAA,OACAD,EAAAJ,mBAAAK,GAAA,KACAD,EAAAxE,QAAA,CACA,IAAA0E,KAAAtoN,EAAAulL,YAAAnmK,EAAA8gJ,GACAA,GAAA,EACAkoD,EAAAG,UAAA,EAAAD,EACAF,EAAAI,UAAAF,GAAA,IACAF,EAAAK,UAAAH,GAAA,IACAF,EAAAM,oBAAAJ,GAAA,IACAF,EAAAO,oBAAAL,GAAA,IACAF,EAAAQ,oBAAAN,GAAA,KACAF,EAAAS,oBAAAP,GAAA,KACAF,EAAAU,iCAAA,MAAAR,GAEA,GAAAF,EAAAvE,aAAAuE,EAAAJ,mBAAA,CAEA,IADAj5J,KACA1yD,EAAA,EAAqBA,EAAA,EAAOA,IAC5B0yD,EAAA92C,MACA3C,KAAAtV,EAAAioN,UAAA7oM,EAAA8gJ,GACAxvJ,KAAA1Q,EAAAioN,UAAA7oM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEAkoD,EAAA3D,aAAA11J,EAEAq5J,EAAArE,2BAAA/jN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAA0kM,EAAA5xB,EAAAkwB,WAAAtnM,EAAA8gJ,EAAA1/J,GACA,MACA,QACA,IAAAuoN,KACAC,EAAA5pM,EAAA8gJ,KACA6oD,EAAA/H,OAAA,EAAAgI,GACAD,EAAApH,SAAAqH,GAAA,IACAD,EAAAE,aAAA7pM,EAAA8gJ,KACA6oD,EAAAG,cAAA9pM,EAAA8gJ,KACA6oD,EAAAI,mBAAAnpN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAAqlM,EAAAvyB,EAAA4Y,OAAAhwL,EAAA8gJ,EAAA1/J,GACA,MACA,QACA,QACA,IAAA4oN,KACAA,EAAAl4M,KAAA21M,EAAAznM,EAAA8gJ,GACAA,GAAA6mD,EACA,IAAAsC,EAAAjqM,EAAA8gJ,KACAkpD,EAAApI,OAAA,EAAAqI,GACAD,EAAAzH,SAAA0H,GAAA,IACAD,EAAAE,cAAA,EAAAD,GACAD,EAAA9E,oBAAA+E,GAAA,IACAD,EAAAtF,kBAAAuF,GAAA,IACAD,EAAAG,aAAAvpN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAkpD,EAAAI,cAAAxpN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAkpD,EAAAK,YAAA,cAAAzpN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAkpD,EAAAM,YAAA,cAAA1pN,EAAA0lL,YAAAtmK,EAAA8gJ,GACAA,GAAA,EACAkpD,EAAAO,eAAA3pN,EAAAulL,YAAAnmK,EAAA8gJ,GACAA,GAAA,EACAkpD,EAAAQ,eAAA5pN,EAAAulL,YAAAnmK,EAAA8gJ,GACAA,GAAA,EACAx8I,GAAA0lM,EAAA5yB,EAAAkwB,WAAAtnM,EAAA8gJ,EAAA1/J,GACA,MACA,QACA,QACA,IAAAqpN,KACAA,EAAA34M,KAAA21M,EAAAznM,EAAA8gJ,GACAA,GAAA6mD,EACA,IAAA+C,EAAA1qM,EAAA8gJ,KAIA,GAHA2pD,EAAA7I,OAAA,EAAA8I,GACAD,EAAAlI,SAAAmI,GAAA,IACAD,EAAA3I,cAAA,EAAA4I,IACAD,EAAA7I,IAAA,CAGA,IAFAuG,EAAA,IAAAsC,EAAAlI,SAAA,IACA5yJ,KACA1yD,EAAA,EAAqBA,EAAAkrN,EAAclrN,IACnC0yD,EAAA92C,MACA3C,KAAAtV,EAAAioN,UAAA7oM,EAAA8gJ,GACAxvJ,KAAA1Q,EAAAioN,UAAA7oM,EAAA8gJ,EAAA,KAEAA,GAAA,EAEA2pD,EAAA96J,KAEArrC,GAAAmmM,EAAAzqM,EAAA8gJ,EAAA1/J,GACA,MACA,QACA,IAAAupN,GACA9+M,SAAAjL,EAAA0lL,YAAAtmK,EAAA8gJ,GACAh1J,UAAAlL,EAAA0lL,YAAAtmK,EAAA8gJ,EAAA,GACA8pD,eAAAhqN,EAAA0lL,YAAAtmK,EAAA8gJ,EAAA,GACA+pD,eAAAjqN,EAAA0lL,YAAAtmK,EAAA8gJ,EAAA,KAEA,aAAA6pD,EAAA7+M,eACA6+M,EAAA7+M,OAEA,IAAAg/M,EAAA9qM,EAAA8gJ,EAAA,OACAlgK,EAAAulL,YAAAnmK,EAAA8gJ,EAAA,IACA6pD,EAAAI,YAAA,EAAAD,GACAH,EAAAlG,cAAA,EAAAqG,GACAH,EAAAjG,kBAAAoG,GAAA,IACAH,EAAAzF,oBAAA4F,GAAA,IACAH,EAAAK,kBAAA,GAAAF,GACAH,EAAAM,+BAAA,GAAAH,GACAxmM,GAAAqmM,GACA,MACA,QAEA,QAEA,QACA,MACA,QACArmM,GAAA8yK,EAAA4Y,OAAAhwL,EAAA8gJ,EAAA1/J,GACA,MACA,QACA,MACA,QACA,UAAAu/M,EAAA,gBAAAvpB,EAAA2vB,SAAA,IAAA3vB,EAAA53L,KAAA,wBAEA,IAAA0rN,EAAA,KAAA9zB,EAAA2vB,SACAmE,KAAAha,GACAA,EAAAga,GAAAjZ,MAAAf,EAAA5sL,GAGA,SAAA6mM,EAAApD,EAAA7W,GACA,QAAAj0M,EAAA,EAAAC,EAAA6qN,EAAA3qN,OAAyCH,EAAAC,EAAQD,IACjDirN,EAAAH,EAAA9qN,GAAAi0M,GAYA,SAAAka,KA8IA,SAAAC,EAAAC,GACA,IAAAA,EAAAluN,QACA9B,KAAAiwN,SACAjwN,KAAAkwN,SAAA,EACAlwN,KAAAmwN,aAAAH,EAAA,GACAhwN,KAAAowN,YAAA,EACApwN,KAAAqwN,WAAAL,EAAA,GACAhwN,KAAAswN,kBAEAtwN,KAAAiwN,SACAjwN,KAAAkwN,SAAAF,EAAA,GACAhwN,KAAAmwN,aAAAH,EAAA,GACAhwN,KAAAowN,YAAAJ,EAAA,GACAhwN,KAAAqwN,WAAAL,EAAA,GACAhwN,KAAAswN,aAAA,UAAAN,EAAA,IAGA,SAAAO,EAAAC,GACAxwN,KAAAywN,YACAD,GACAxwN,KAAA0wN,UACA1wN,KAAAowN,YAAAI,EAAAJ,YACApwN,KAAAkwN,SAAAM,EAAAN,SACAlwN,KAAAswN,aAAAE,EAAAF,aACAtwN,KAAAiwN,MAAAO,EAAAP,OAEAjwN,KAAA0wN,UA+BA,SAAAC,EAAAC,EAAAC,GACAA,GACA7wN,KAAA8wN,kBAAAF,GAEA5wN,KAAA+wN,SAAA,IAAAR,EAAA,MACA,IAAA5uN,SACAC,EAAAgvN,EAAA9uN,OACA0uN,SACA,IAAA7uN,EAAA,EAAeA,EAAAC,EAAQD,KACvB6uN,EAAAI,EAAAjvN,IACAwuN,aAAA,GACAnwN,KAAA+wN,SAAAC,UAAAR,IAAAL,aAAA,GAjNAL,EAAAlwN,WACAqxN,kBAAA,SAAAz6M,GACAxW,KAAAkxN,gBAAA16M,EACA,IAAA6Q,EAAA7Q,EAAAjG,MAAA,KACAxJ,EAAA,IAAAsmL,kBAAAhmK,EAAA7Q,EAAAhG,QACA,GAAAgG,EAAA4yM,kBACA,QAAAznN,EAAA,EAAAC,EAAAmF,EAAAjF,OAA2CH,EAAAC,EAAQD,IACnDoF,EAAApF,GAAA,IAGA3B,KAAA+G,UAEAoqN,WAAA,SAAAC,EAAArK,GACA,IAQAplN,EAAA4K,EAAA8kN,EAAA9pM,EARA8nM,EAAArvN,KAAAkxN,gBACA3gN,EAAA6gN,EAAA7gN,MACAC,EAAA4gN,EAAA5gN,OACA6W,EAAAgoM,EAAA9+M,MAAA,KACAq5M,EAAAyF,EAAAM,4BAAAyB,EAAAxH,oBAAAyF,EAAAzF,oBACA7iN,EAAA/G,KAAA+G,OACAuqN,EAAA,QAAAF,EAAAx2M,GACA+oL,EAAAytB,EAAAp7M,EAAAqR,GAAA+pM,EAAAx2M,GAAA,GAEA,OAAAgvM,GACA,OACA,IAAAjoN,EAAA,EAAqBA,EAAA6O,EAAY7O,IAAA,CAGjC,IAFA0vN,EAAAC,EACA/pM,EAAAo8K,EACAp3L,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClCw6M,EAAAplN,GAAA4K,KACAxF,EAAAwgB,IAAA8pM,IAEAA,IAAA,KAEAA,EAAA,IACA9pM,KAGAo8K,GAAAt8K,EAEA,MACA,OACA,IAAA1lB,EAAA,EAAqBA,EAAA6O,EAAY7O,IAAA,CAGjC,IAFA0vN,EAAAC,EACA/pM,EAAAo8K,EACAp3L,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClCw6M,EAAAplN,GAAA4K,KACAxF,EAAAwgB,IAAA8pM,IAEAA,IAAA,KAEAA,EAAA,IACA9pM,KAGAo8K,GAAAt8K,EAEA,MACA,QACA,UAAAg+L,EAAA,YAAAuE,EAAA,uBAGA2H,yBAAA,SAAAC,EAAA9sM,EAAAhf,EAAAI,GACA,IAAAsrN,EAAAI,EAAAh7M,KACAiwM,EAAA,IAAAlB,EAAA7gM,EAAAhf,EAAAI,GACAihN,EAAAV,EAAAmL,EAAAlL,IAAA8K,EAAA7gN,MAAA6gN,EAAA5gN,OAAAghN,EAAAvK,SAAAuK,EAAAhL,WAAA,KAAAgL,EAAAn9J,GAAAoyJ,GACAzmN,KAAAmxN,WAAAC,EAAArK,IAEA0K,iCAAA,WACAzxN,KAAAuxN,yBAAA5a,MAAA32M,KAAA6T,YAEA69M,mBAAA,SAAA5E,EAAA6E,EAAAC,EAAAltM,EAAAhf,EAAAI,GACA,IAAA+jN,SACAI,SACA6C,EAAA5D,UACAW,EAqaA,SAAAiD,EAAAd,EAAA6F,GACA,IAAAC,EAAA,EACAC,SACAC,SACA,OAAAlF,EAAAE,mBACA,OACA,OACA+E,EAAAE,EAAAnF,EAAAE,kBAAA,GACA,MACA,OACA+E,EAAAG,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,OAAAyH,EAAAG,mBACA,OACA,OACA+E,EAAAC,EAAAnF,EAAAG,kBAAA,GACA,MACA,OACA+E,EAAAE,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,IAAA8M,SAaA,OAXArF,EAAAI,oBACAiF,EAAAD,EAAAJ,EAAA9F,EAAA6F,GACAC,KAEAK,EAAAF,EAAA,IAQAF,mBACAC,kBACAG,kBACAC,wBATAtF,EAAAK,6BACA+E,EAAAJ,EAAA9F,EAAA6F,GAEAI,EAAA,IAvCA,CAraAnF,EAAA8E,EAAA5xN,KAAA6xN,cACA5H,EAAA,IAAAtD,EAAAjiM,EAAAhf,EAAAI,IAEA,IAAAusN,EAAAryN,KAAAqyN,QACAA,IACAryN,KAAAqyN,cAGA,IADA,IAAA9I,KACA5nN,EAAA,EAAAC,EAAAgwN,EAAA9vN,OAAmDH,EAAAC,EAAQD,IAAA,CAC3D,IAAA2wN,EAAAD,EAAAT,EAAAjwN,IACA2wN,IACA/I,IAAAtlB,OAAAquB,IAGA,IAAA7L,EAAA,IAAAlB,EAAA7gM,EAAAhf,EAAAI,GACAusN,EAAAV,GAhxBA,SAAAzI,EAAAC,EAAAkJ,EAAA5E,EAAAD,EAAA3D,EAAAtD,EAAAlyJ,EAAAy1J,EAAAC,EAAAtD,EAAAwD,GACA,GAAAf,GAAAC,EACA,UAAA9D,EAAA,mDAEA,IAAAkN,KACAC,EAAA,EACAhJ,KAAAlkN,EAAAkiL,MAAA6qC,EAAAvwN,OAAA2rN,GACA7kC,EAAA69B,EAAA79B,QACA68B,EAAAgB,EAAAhB,aACAgN,SACAC,SAMA,IALAxJ,IACAuJ,EAAAR,EAAA,GACAS,KACAlJ,EAAAt6M,KAAA2H,IAAA2yM,EAAA,IAEA+I,EAAAzwN,OAAA2rN,GAAA,CAEA+E,GADAtJ,EAAAW,EAAAkI,iBAAA19M,OAAA41M,GAAAzE,EAAAC,EAAA,OAAA78B,GAKA,IAHA,IAAA+pC,EAAA,EACAC,EAAA,EACAC,EAAA3J,EAAAwJ,EAAA5wN,OAAA,IACA,CACA,IAMAilN,EANA+L,EAAA5J,EAAAW,EAAAmI,gBAAA39M,OAAA41M,GAAAzE,EAAAC,EAAA,OAAA78B,GACA,UAAAkqC,EACA,MAKA,GAFAF,GADAD,GAAAG,EAGA3J,EAAA,CACA,IAAA4J,EAAAvN,EAAAC,EAAA,OAAA78B,GACA,GAAAmqC,EAAA,EACAhM,EAAAkC,EAAAC,EAAAC,EAAAwJ,EAAAH,EAAA,EAAAO,EAAA,EAAAV,EAAApuB,OAAAsuB,GAAA/I,EAAA,QAAAK,EAAAC,EAAAC,EAAAtD,EAAA,EAAAwD,OACW,CACX,IAAAO,EAAA3E,EAAAJ,EAAA78B,EAAA4gC,GACAwJ,EAAAxN,EAAAC,EAAA,QAAA78B,GACAqqC,EAAAzN,EAAAC,EAAA,QAAA78B,GAEAm+B,EAAAoB,EAAAwK,EAAAH,EAAA1I,EADAU,EAAA6H,EAAAvwN,OAAAuwN,EAAA7H,GAAA+H,EAAA/H,EAAA6H,EAAAvwN,QACAkxN,EAAAC,KAAAlJ,EAAAtD,GAEA8L,EAAAh1M,KAAAwpM,QACSmC,EACTwJ,EAAAn1M,KAAAo1M,IAEA5L,EAAAV,KAAAsM,EAAAH,EAAAjM,KAAA,KAAAlyJ,EAAAoyJ,GACA8L,EAAAh1M,KAAAwpM,IAGA,GAAAmC,IAAAC,EAAA,CACA,IAAA+J,EAAArJ,EAAAsI,gBAAA99M,OAAA41M,GACAA,EAAA1wC,YACA,IAAA45C,SACA,OAAAD,EACAC,EAAAC,EAAAnJ,EAAA2I,EAAAJ,OACS,CACT,IAAAa,EAAApJ,EAAAnkN,IACAwtN,EAAArJ,EAAAzkD,SAAA0tD,EACAjJ,EAAAnkN,IAAAwtN,EACAH,EAAAzM,EAAAuD,EAAA2I,EAAAJ,MACAvI,EAAAnkN,IAAAutN,EACApJ,EAAAzkD,SAAA8tD,EAEA,IAAAC,EAAAb,EAAA5wN,OACA,GAAA+wN,IAAAU,EAAA,EACAhB,EAAAh1M,KAAA41M,OACS,CACT,IAAA7oD,SACAt0J,SACAw9M,EAAA,EACAC,SAEA9I,SACA,IAAArgD,EAAAuoD,EAAgCvoD,EAAAipD,EAA6BjpD,IAAA,CAI7D,IAFAmpD,EAAAD,EADAd,EAAApoD,GAEAqgD,KACA30M,EAAA,EAAuBA,EAAAw8M,EAAmBx8M,IAC1C20M,EAAAptM,KAAA41M,EAAAn9M,GAAA1P,SAAAktN,EAAAC,IAEAlB,EAAAh1M,KAAAotM,GACA6I,EAAAC,KASA,IAJA,IAAAC,KACA9mD,KACA+mD,KACAC,EAAAvB,EAAAvwN,OAAA2rN,EACA7gD,EAAA9qK,OAAA8xN,GAAA,CAEA,IADA,IAAAC,EAAA3K,EAAAuJ,EAAAp+M,OAAA41M,GAAAzE,EAAAC,EAAA,OAAA78B,GACAirC,KACAjnD,EAAArvJ,KAAAo2M,GAEAA,KAEA,QAAAhyN,EAAA,EAAAC,GAAAywN,EAAAvwN,OAAwCH,EAAAC,GAAQD,IAChDirK,EAAAjrK,IACA+xN,EAAAn2M,KAAA80M,EAAA1wN,IAGA,QAAA4K,GAAA,EAAmBA,GAAAkhN,EAAwB9rN,IAAA4K,KAC3CqgK,EAAAjrK,IACA+xN,EAAAn2M,KAAAg1M,EAAAhmN,KAGA,OAAAmnN,EA3GA,CAgxBA5G,EAAA5D,QAAA4D,EAAA3D,WAAAI,EAAAuD,EAAAW,mBAAAX,EAAAU,wBAAA3D,EAAAiD,EAAA7F,SAAA6F,EAAAz4J,GAAAy4J,EAAAQ,mBAAAR,EAAA/C,aAAAtD,EAAAwD,IAEA6J,sBAAA,SAAAtC,EAAAI,EAAAltM,EAAAhf,EAAAI,GAMA,IALA,IAAAsrN,EAAAI,EAAAh7M,KACAqzM,SACAI,SACAoI,EAAAryN,KAAAqyN,QACA9I,KACA5nN,EAAA,EAAAC,EAAAgwN,EAAA9vN,OAAmDH,EAAAC,EAAQD,IAAA,CAC3D,IAAA2wN,EAAAD,EAAAT,EAAAjwN,IACA2wN,IACA/I,IAAAtlB,OAAAquB,IAGA,IAAA9I,KAAAlkN,EAAAkiL,MAAA+hC,EAAAznN,QACA0vN,EAAAtI,UACAe,EAAA,IAAAtD,EAAAjiM,EAAAhf,EAAAI,GACA+jN,EAmSA,SAAA6D,EAAA1B,EAAA6F,EAAAkC,EAAA/a,GACA,IAAAzvM,KACA5H,SACAsM,SACA,IAAAtM,EAAA,EAAeA,GAAA,GAASA,IACxBsM,EAAA+qM,EAAAvqM,SAAA,GACAlF,EAAAgU,KAAA,IAAAwyM,GAAApuN,EAAAsM,EAAA,OAEA,IAAA+lN,EAAA,IAAArD,EAAApnN,MAEA,IADAA,EAAAzH,OAAA,EACAH,EAAA,EAAeA,EAAAoyN,GAEf,IADA9lN,EAAA+lN,EAAA3/M,OAAA2kM,KACA,IACA,IAAAib,SACAC,SACA3nN,SACA,OAAA0B,GACA,QACA,OAAAtM,EACA,UAAA0jN,EAAA,wCAEA6O,EAAAlb,EAAAvqM,SAAA,KACAwlN,EAAA1qN,EAAA5H,EAAA,GAAAwuN,aACA,MACA,QACA+D,EAAAlb,EAAAvqM,SAAA,KACAwlN,EAAA,EACA,MACA,QACAC,EAAAlb,EAAAvqM,SAAA,MACAwlN,EAAA,EACA,MACA,QACA,UAAA5O,EAAA,0CAEA,IAAA94M,EAAA,EAAmBA,EAAA2nN,EAAqB3nN,IACxChD,EAAAgU,KAAA,IAAAwyM,GAAApuN,EAAAsyN,EAAA,OACAtyN,SAGA4H,EAAAgU,KAAA,IAAAwyM,GAAApuN,EAAAsM,EAAA,OACAtM,IAGAq3M,EAAAz/B,YACA,IAAAkxC,EAAA,IAAAkG,EAAApnN,MACAuoN,EAAA,EACAxH,SACAe,SACAlB,SACA,OAAAuD,EAAAG,WACA,OACA,OACAvD,EAAA2H,EAAAvE,EAAAG,UAAA,GACA,MACA,OACAvD,EAAA4H,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,OAAAqI,EAAAI,WACA,OACA,OACA,OACAzC,EAAA4G,EAAAvE,EAAAI,UAAA,GACA,MACA,OACAzC,EAAA6G,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,OAAAqI,EAAAK,WACA,OACA,OACA,OACA5D,EAAA8H,EAAAvE,EAAAK,UAAA,IACA,MACA,OACA5D,EAAA+H,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAAzM,EAAA,+BAEA,GAAAqI,EAAAvE,WACA,UAAA9D,EAAA,4CAEA,OACAoF,gBACAH,cACAe,cACAlB,eA/FA,CAnSAqH,EAAAI,EAAA5xN,KAAA6xN,aAAAtI,EAAAznN,OAAAmoN,IAEA,IAAAxD,EAAA,IAAAlB,EAAA7gM,EAAAhf,EAAAI,GACAihN,EAAAkC,EAAAuI,EAAAtI,QAAAsI,EAAArI,WAAAiI,EAAA7gN,MAAA6gN,EAAA5gN,OAAAghN,EAAApI,kBAAAoI,EAAAnI,wBAAAmI,EAAAlI,UAAAC,EAAAC,EAAAgI,EAAA/H,WAAA+H,EAAA9H,SAAA8H,EAAA7H,gBAAA6H,EAAA5H,oBAAAC,EAAA2H,EAAAlE,mBAAAkE,EAAAzH,aAAAtD,EAAA+K,EAAAxH,aAAAC,GACAjqN,KAAAmxN,WAAAC,EAAArK,IAEAoN,8BAAA,WACAn0N,KAAA8zN,sBAAAnd,MAAA32M,KAAA6T,YAEAugN,oBAAA,SAAAtH,EAAA6E,EAAAjtM,EAAAhf,EAAAI,GACA,IAAAuuN,EAAAr0N,KAAAq0N,SACAA,IACAr0N,KAAAq0N,eAEA,IAAA5N,EAAA,IAAAlB,EAAA7gM,EAAAhf,EAAAI,GACAuuN,EAAA1C,GAxlBA,SAAArL,EAAAiI,EAAAC,EAAAC,EAAAxH,EAAAR,GACA,IAAApyJ,KACAiyJ,IACAjyJ,EAAA92C,MACA3C,GAAA2zM,EACAv4M,EAAA,IAEA,IAAAixM,IACA5yJ,EAAA92C,MACA3C,GAAA,EACA5E,GAAA,IAEAq+C,EAAA92C,MACA3C,EAAA,EACA5E,GAAA,IAEAq+C,EAAA92C,MACA3C,GAAA,EACA5E,GAAA,MAYA,IARA,IACAm9M,EAAA9M,EAAAC,GADAmI,EAAA,GAAAF,EACAC,EAAAvH,KAAA,KAAA5yJ,EAAAoyJ,GACA4N,KACA1yN,EAAA,EACA2yN,SACAd,SACAC,SACAz9M,SACArU,GAAA8sN,GAAA,CAIA,IAHA6F,KAEAb,GADAD,EAAAjF,EAAA5sN,GACA4sN,EACAv4M,EAAA,EAAiBA,EAAAw4M,EAAmBx4M,IACpCs+M,EAAA/2M,KAAA41M,EAAAn9M,GAAA1P,SAAAktN,EAAAC,IAEAY,EAAA92M,KAAA+2M,GACA3yN,IAEA,OAAA0yN,EAxCA,CAwlBAvH,EAAAxG,IAAAwG,EAAAyB,aAAAzB,EAAA0B,cAAA1B,EAAA2B,gBAAA3B,EAAA7F,SAAAR,IAEA8N,0BAAA,SAAA/C,EAAAI,EAAAltM,EAAAhf,EAAAI,GACA,IAAAuuN,EAAAr0N,KAAAq0N,SAAAzC,EAAA,IACAR,EAAAI,EAAAh7M,KACAiwM,EAAA,IAAAlB,EAAA7gM,EAAAhf,EAAAI,GACAihN,EApjBA,SAAAT,EAAA+N,EAAApN,EAAAuN,EAAAC,EAAArL,EAAAwF,EAAAhF,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzI,GAEA,GAAAmI,EACA,UAAAvJ,EAAA,yBAEA,OAAAuE,EACA,UAAAvE,EAAA,YAAAuE,EAAA,wCAEA,IAAA8K,KACA/yN,SACA4K,SACA6tK,SACA,IAAAz4K,EAAA,EAAeA,EAAA8yN,EAAkB9yN,IAAA,CAEjC,GADAy4K,EAAA,IAAAx0K,WAAA4uN,GACApL,EACA,IAAA78M,EAAA,EAAmBA,EAAAioN,EAAiBjoN,IACpC6tK,EAAA7tK,GAAA68M,EAGAsL,EAAAn3M,KAAA68J,GAEA,IAAAu6C,EAAAN,EAAAvyN,OACA8yN,EAAAP,EAAA,GACA9F,EAAAqG,EAAA,GAAA9yN,OACA0sN,EAAAoG,EAAA9yN,OACA+yN,KAAAvvN,EAAAkiL,MAAAmtC,GACAtgK,KACAiyJ,IACAjyJ,EAAA92C,MACA3C,EAAAqsM,GAAA,MACAjxM,GAAA,IAEA,IAAAixM,IACA5yJ,EAAA92C,MACA3C,GAAA,EACA5E,GAAA,IAEAq+C,EAAA92C,MACA3C,EAAA,EACA5E,GAAA,IAEAq+C,EAAA92C,MACA3C,GAAA,EACA5E,GAAA,MAIA,IAAA8+M,KACAC,SACAhO,SAIA,IAHAT,IACAyO,EAAA,IAAApO,EAAAF,EAAA/hM,KAAA+hM,EAAA/gN,MAAA+gN,EAAA3gN,MAEAnE,EAAAkzN,EAAA,EAA8BlzN,GAAA,EAAQA,IAEtColN,EADAT,EACAI,EAAAqO,EAAAlG,EAAAC,MAEAzI,KAAAwI,EAAAC,EAAA7H,KAxDA,KAwDA5yJ,EAAAoyJ,GAEAqO,EAAAnzN,GAAAolN,EAEA,IAAAiO,SACAC,SACAplC,SACAqlC,SACAZ,SACA15M,SACA5E,SACAm/M,SACAC,SACA,IAAAJ,EAAA,EAAgBA,EAAAlG,EAAiBkG,IACjC,IAAAC,EAAA,EAAkBA,EAAApG,EAAgBoG,IAAA,CAGlC,IAFAplC,EAAA,EACAqlC,EAAA,EACA3oN,EAAAsoN,EAAA,EAAkCtoN,GAAA,EAAQA,IAE1C2oN,IADArlC,EAAAilC,EAAAvoN,GAAAyoN,GAAAC,GAAAplC,IACAtjL,EAKA,GAHA+nN,EAAAD,EAAAa,GAEAl/M,EAAAg5M,EAAAgG,EAAA/F,EAAAgG,EAAA/F,GAAA,GADAt0M,EAAAm0M,EAAAiG,EAAA9F,EAAA+F,EAAAhG,GAAA,IAEA,GAAAr0M,EAAA2zM,GAAAiG,GAAAx+M,GAAA,GAAAA,EAAAw4M,GAAAiG,EACA,IAAA9yN,EAAA,EAAqBA,EAAA6sN,EAAmB7sN,IAGxC,IAFAyzN,EAAAV,EAAA1+M,EAAArU,GACAwzN,EAAAb,EAAA3yN,GACA4K,EAAA,EAAuBA,EAAAgiN,EAAkBhiN,IACzC6oN,EAAAx6M,EAAArO,IAAA4oN,EAAA5oN,OAGS,CACT,IAAA8oN,SACAC,SACA,IAAA3zN,EAAA,EAAqBA,EAAA6sN,EAAmB7sN,IAExC,MADA2zN,EAAAt/M,EAAArU,GACA,GAAA2zN,GAAAb,GAKA,IAFAW,EAAAV,EAAAY,GACAH,EAAAb,EAAA3yN,GACA4K,EAAA,EAAuBA,EAAAgiN,EAAkBhiN,KACzC8oN,EAAAz6M,EAAArO,IACA,GAAA8oN,EAAAb,IACAY,EAAAC,IAAAF,EAAA5oN,KAOA,OAAAmoN,EA7GA,CAojBAlD,EAAAlL,IAAA+N,EAAA7C,EAAAvK,SAAAmK,EAAA7gN,MAAA6gN,EAAA5gN,OAAAghN,EAAApI,kBAAAoI,EAAA5C,WAAA4C,EAAA5H,oBAAA4H,EAAA3C,UAAA2C,EAAA1C,WAAA0C,EAAAzC,YAAAyC,EAAAxC,YAAAwC,EAAAvC,YAAAuC,EAAAtC,YAAAzI,GACAzmN,KAAAmxN,WAAAC,EAAArK,IAEAwO,kCAAA,WACAv1N,KAAAu0N,0BAAA5d,MAAA32M,KAAA6T,YAEA2hN,SAAA,SAAA7D,EAAAjtM,EAAAhf,EAAAI,GACA,IAAA+rN,EAAA7xN,KAAA6xN,aACAA,IACA7xN,KAAA6xN,mBAEAA,EAAAF,GAgHA,SAAAjtM,EAAAhf,EAAAI,GACA,IAAA8mK,EAAAloJ,EAAAhf,GACA+vN,EAAA,cAAAnwN,EAAA0lL,YAAAtmK,EAAAhf,EAAA,GACAgwN,EAAA,cAAApwN,EAAA0lL,YAAAtmK,EAAAhf,EAAA,GACAszM,EAAA,IAAA2N,EAAAjiM,EAAAhf,EAAA,EAAAI,GACA6vN,EAAA,GAAA/oD,GAAA,KACAgpD,EAAA,GAAAhpD,GAAA,KACAgkD,KACAT,SACAC,SACAyF,EAAAJ,EACA,GACAtF,EAAAnX,EAAAvqM,SAAAknN,GACAvF,EAAApX,EAAAvqM,SAAAmnN,GACAhF,EAAArzM,KAAA,IAAAwyM,GAAA8F,EAAA1F,EAAAC,EAAA,KACAyF,GAAA,GAAAzF,QACKyF,EAAAH,GASL,OARAvF,EAAAnX,EAAAvqM,SAAAknN,GACA/E,EAAArzM,KAAA,IAAAwyM,GAAA0F,EAAA,EAAAtF,EAAA,gBACAA,EAAAnX,EAAAvqM,SAAAknN,GACA/E,EAAArzM,KAAA,IAAAwyM,GAAA2F,EAAAvF,EAAA,QACA,EAAAvjD,IACAujD,EAAAnX,EAAAvqM,SAAAknN,GACA/E,EAAArzM,KAAA,IAAAwyM,GAAAI,EAAA,MAEA,IAAAQ,EAAAC,MAzBA,CAhHAlsM,EAAAhf,EAAAI,KAgCAyqN,EAAA3wN,WACAoxN,UAAA,SAAAR,EAAAxoN,GACA,IAAA6nL,EAAA2gC,EAAAH,YAAAroN,EAAA,EACA,GAAAA,GAAA,EACAhI,KAAAywN,SAAA5gC,GAAA,IAAA0gC,EAAAC,OACO,CACP,IAAAz/C,EAAA/wK,KAAAywN,SAAA5gC,GACA9e,IACA/wK,KAAAywN,SAAA5gC,GAAA9e,EAAA,IAAAw/C,EAAA,OAEAx/C,EAAAigD,UAAAR,EAAAxoN,EAAA,KAGA8tN,WAAA,SAAA9c,GACA,GAAAh5M,KAAA0wN,OAAA,CACA,GAAA1wN,KAAAiwN,MACA,YAEA,IAAA8F,EAAA/c,EAAAvqM,SAAAzO,KAAAowN,aACA,OAAApwN,KAAAkwN,UAAAlwN,KAAAswN,cAAAyF,KAEA,IAAAhlD,EAAA/wK,KAAAywN,SAAAzX,EAAA58B,WACA,IAAArL,EACA,UAAAs0C,EAAA,wBAEA,OAAAt0C,EAAA+kD,WAAA9c,KAkBA2X,EAAA/wN,WACAyU,OAAA,SAAA2kM,GACA,OAAAh5M,KAAA+wN,SAAA+E,WAAA9c,IAEA8X,kBAAA,SAAAF,GACA,IAAAoF,EAAApF,EAAA9uN,OACAm0N,EAAA,EACAt0N,SACA,IAAAA,EAAA,EAAiBA,EAAAq0N,EAAiBr0N,IAClCs0N,EAAA/mN,KAAA2H,IAAAo/M,EAAArF,EAAAjvN,GAAAwuN,cAEA,IAAA+F,EAAA,IAAAj8C,YAAAg8C,EAAA,GACA,IAAAt0N,EAAA,EAAiBA,EAAAq0N,EAAiBr0N,IAClCu0N,EAAAtF,EAAAjvN,GAAAwuN,gBAEA,IAAAgG,EAAA,EACAC,EAAA,EACAC,SACAC,SACA9F,SAEA,IADA0F,EAAA,KACAC,GAAAF,GAAA,CAIA,IAFAI,EADAD,IAAAF,EAAAC,EAAA,MAEAG,EAAA,EACAA,EAAAN,IACAxF,EAAAI,EAAA0F,IACAnG,eAAAgG,IACA3F,EAAAH,WAAAgG,EACAA,KAEAC,IAEAH,OA+BA,IAAAI,KACA,SAAAtE,EAAAvd,GACA,IAAAprM,EAAAitN,EAAA7hB,GACA,GAAAprM,EACA,OAAAA,EAEA,IAAAsnN,SACA,OAAAlc,GACA,OACAkc,IAAA,iDACA,MACA,OACAA,IAAA,yEACA,MACA,OACAA,KAAA,gHACA,MACA,OACAA,IAAA,kEACA,MACA,OACAA,KAAA,wGACA,MACA,OACAA,KAAA,qMACA,MACA,OACAA,KAAA,4MACA,MACA,OACAA,KAAA,0QACA,MACA,OACAA,KAAA,yRACA,MACA,QACAA,KAAA,+QACA,MACA,QACAA,IAAA,4JACA,MACA,QACAA,IAAA,2JACA,MACA,QACAA,IAAA,uJACA,MACA,QACAA,KAAA,mDACA,MACA,QACAA,KAAA,kKACA,MACA,QACA,UAAAvL,EAAA,oBAAA3Q,EAAA,mBAEA,IAAA5yM,EAAA8uN,EAAA9uN,OACAH,SACA,IAAAA,EAAA,EAAeA,EAAAG,EAAYH,IAC3BivN,EAAAjvN,GAAA,IAAAouN,EAAAa,EAAAjvN,IAIA,OAFA2H,EAAA,IAAAqnN,EAAAC,MACA2F,EAAA7hB,GAAAprM,EACAA,EAEA,SAAAq9M,EAAAjiM,EAAAhf,EAAAI,GACA9F,KAAA0kB,OACA1kB,KAAA0F,QACA1F,KAAA8F,MACA9F,KAAAwlK,SAAA9/J,EACA1F,KAAAgI,OAAA,EACAhI,KAAAw2N,YAAA,EAiCA,SAAAtE,EAAA3uM,EAAAyoM,EAAA6F,GACA,IAAAxjD,EAAA,EACA1sK,SACAC,EAAAoqN,EAAAlqN,OACAwH,SACA,IAAA3H,EAAA,EAAeA,EAAAC,EAAQD,IAEvB,GADA2H,EAAAuoN,EAAA7F,EAAArqN,IACA,CACA,GAAA4hB,IAAA8qJ,EACA,OAAA/kK,EAEA+kK,IAGA,UAAAg3C,EAAA,mCAoJA,SAAA+N,EAAApa,EAAAzoM,EAAAC,GACA,IAAAu2M,KACAnsM,SACA5E,SACAokK,SACA,IAAApkK,EAAA,EAAeA,EAAAxF,EAAYwF,IAAA,CAG3B,IAFAokK,EAAA,IAAAx0K,WAAA2K,GACAw2M,EAAAxpM,KAAA68J,GACAx/J,EAAA,EAAiBA,EAAArK,EAAWqK,IAC5Bw/J,EAAAx/J,GAAAo+L,EAAA58B,UAEA48B,EAAAz/B,YAEA,OAAAwtC,EAEA,SAAAL,EAAAr5M,EAAAkD,EAAAC,EAAAimN,GACA,IAAAprN,GACAszB,GAAA,EACA86I,QAAAlpK,EACAopK,KAAAnpK,EACAupK,YACAF,WAAA48C,GAEA7tC,EAAA,IAAAi8B,EAAAjsC,gBAAAvrK,EAAAhC,GACA07M,KACAnsM,SACA5E,SACAokK,SACAo8C,SACAxuN,SACAZ,KACA,IAAA4O,EAAA,EAAeA,EAAAxF,EAAYwF,IAI3B,IAHAokK,EAAA,IAAAx0K,WAAA2K,GACAw2M,EAAAxpM,KAAA68J,GACApyK,GAAA,EACA4S,EAAA,EAAiBA,EAAArK,EAAWqK,IAC5B5S,EAAA,KAEA,KADAwuN,EAAA5tC,EAAAhO,kBAEA47C,EAAA,EACApvN,MAEAY,EAAA,GAEAoyK,EAAAx/J,GAAA47M,GAAAxuN,EAAA,EACAA,IAGA,GAAAyuN,IAAArvN,EAEA,IADA,IACAzF,EAAA,EAAqBA,EADrB,IAEA,IAAAinL,EAAAhO,eAD0Cj5K,KAM1C,OAAAolN,EAEA,SAAA9B,KAMA,OAjQA0B,EAAA/mN,WACAw8K,QAAA,WACA,GAAAp8K,KAAAgI,MAAA,GACA,GAAAhI,KAAAwlK,UAAAxlK,KAAA8F,IACA,UAAAu/M,EAAA,iCAEArlN,KAAAw2N,YAAAx2N,KAAA0kB,KAAA1kB,KAAAwlK,YACAxlK,KAAAgI,MAAA,EAEA,IAAA6nL,EAAA7vL,KAAAw2N,aAAAx2N,KAAAgI,MAAA,EAEA,OADAhI,KAAAgI,QACA6nL,GAEAphL,SAAA,SAAAioN,GACA,IAAAt+M,EAAA,EACAzW,SACA,IAAAA,EAAA+0N,EAAA,EAA2B/0N,GAAA,EAAQA,IACnCyW,GAAApY,KAAAo8K,WAAAz6K,EAEA,OAAAyW,GAEAmhK,UAAA,WACAv5K,KAAAgI,OAAA,GAEAuiK,KAAA,WACA,OAAAvqK,KAAAwlK,UAAAxlK,KAAA8F,KACA,EAEA9F,KAAA0kB,KAAA1kB,KAAAwlK,cAgOAy/C,EAAArlN,WACAwlN,YAAA,SAAApgD,GACA,OAtmBA,SAAAA,GAEA,IADA,IAAA4wC,EAAA,IAAAka,EACAnuN,EAAA,EAAAC,EAAAojK,EAAAljK,OAAuCH,EAAAC,EAAQD,IAAA,CAC/C,IAAAoG,EAAAi9J,EAAArjK,GAEAkuN,EADArD,KAAoCzkN,EAAA2c,KAAA3c,EAAArC,MAAAqC,EAAAjC,KACpC8vM,GAEA,OAAAA,EAAA7uM,OAPA,CAsmBAi+J,KAGAigD,EA3tDA,GA6tDA5lN,EAAA4lN,+CCjvDA9lN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA2kB,iBAEA,IAAAzkB,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5I4F,EAAYC,EAAQ,KAEpBoxN,EAAA,WACA,SAAAA,EAAA95C,GACA78K,KAAA88K,QAAA,eAAAD,EAKA,OAHA85C,EAAA/2N,UAAA,IAAAkjB,MACA6zM,EAAA/2N,UAAAG,KAAA,YACA42N,EAAAh3N,YAAAg3N,EACAA,EAPA,GASA3yM,EAAA,WACA,IAAA4yM,EAAA,IAAAhxN,YAAA,wLACAixN,EAAA,KACAC,EAAA,IACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACA,SAAApzM,IACAhkB,KAAAwkB,gBAAA,KACAxkB,KAAAykB,gBAAA,EAEA,SAAA4yM,EAAAxsN,EAAAm4L,GAMA,IALA,IAEArhM,EACA4K,EAHArB,EAAA,EACAzB,KAGA3H,EAAA,GACAA,EAAA,IAAA+I,EAAA/I,EAAA,IACAA,IAEA2H,EAAA8T,MACAkzM,YACAltM,MAAA,IAEA,IACA5U,EADA9B,EAAApD,EAAA,GAEA,IAAA9H,EAAA,EAAeA,EAAAG,EAAYH,IAAA,CAC3B,IAAA4K,EAAA,EAAiBA,EAAA1B,EAAAlJ,GAAoB4K,IAAA,CAGrC,KAFAM,EAAApD,EAAA8mK,OACAkgD,SAAA5jN,EAAA0W,OAAAy/K,EAAA93L,GACA2B,EAAA0W,MAAA,GACA1W,EAAApD,EAAA8mK,MAIA,IAFA1jK,EAAA0W,QACA9Z,EAAA8T,KAAA1Q,GACApD,EAAA3H,QAAAH,GACA8H,EAAA8T,KAAA5O,GACA8hN,YACAltM,MAAA,IAEA1W,EAAA4jN,SAAA5jN,EAAA0W,OAAA5U,EAAA8hN,SACA5jN,EAAA8B,EAEAzD,IAEAvJ,EAAA,EAAAG,IACA2H,EAAA8T,KAAA5O,GACA8hN,YACAltM,MAAA,IAEA1W,EAAA4jN,SAAA5jN,EAAA0W,OAAA5U,EAAA8hN,SACA5jN,EAAA8B,GAGA,OAAAlF,EAAA,GAAAgnN,SAEA,SAAA6G,EAAAj6C,EAAAjD,EAAAm9C,GACA,YAAAl6C,EAAAm6C,cAAA,GAAAp9C,EAAAm9C,GAEA,SAAAE,EAAA/yM,EAAA6C,EAAAmwM,EAAAx5C,EAAAy5C,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAN,EAAAM,YACAC,EAAAP,EAAAO,YACAC,EAAA3wM,EACA4wM,EAAA,EACAC,EAAA,EACA,SAAAh8C,IACA,GAAAg8C,EAAA,EAEA,OAAAD,KADAC,EACA,EAGA,UADAD,EAAAzzM,EAAA6C,MACA,CACA,IAAA8wM,EAAA3zM,EAAA6C,KACA,GAAA8wM,EACA,UAAA1B,EAAA,sBAAAwB,GAAA,EAAAE,GAAAl1N,SAAA,KAIA,OADAi1N,EAAA,EACAD,IAAA,EAEA,SAAAG,EAAAC,GAEA,IADA,IAAAxnD,EAAAwnD,IACA,CAEA,oBADAxnD,IAAAqL,MAEA,OAAArL,EAEA,wBAAAA,EAAA,YAAAxxK,EAAAwxK,IACA,UAAA4lD,EAAA,6BAIA,SAAA6B,EAAA12N,GAEA,IADA,IAAA6E,EAAA,EACA7E,EAAA,GACA6E,KAAA,EAAAy1K,IACAt6K,IAEA,OAAA6E,EAEA,SAAA8xN,EAAA32N,GACA,OAAAA,EACA,WAAAs6K,IAAA,KAEA,IAAAz1K,EAAA6xN,EAAA12N,GACA,OAAA6E,GAAA,GAAA7E,EAAA,EACA6E,EAEAA,IAAA,GAAA7E,GAAA,EAgCA,IA2BA42N,EA3BAC,EAAA,EA0BAC,EAAA,EAkEA,SAAAC,EAAAx7C,EAAAhpK,EAAAykN,EAAA1+C,EAAAm9C,GACA,IACAwB,EAAAD,EAAAd,EAIA3jN,EAAAgpK,EADAi6C,EAAAj6C,GAJAy7C,EAAAd,EAAA,GAEA36C,EAAAp5K,EAAAm2K,EACA2+C,EAAA17C,EAAAr2J,EAAAuwM,IAIA,SAAAyB,EAAA37C,EAAAhpK,EAAAykN,GAIAzkN,EAAAgpK,EADAi6C,EAAAj6C,EAFAy7C,EAAAz7C,EAAAm6C,cAAA,EACAsB,EAAAz7C,EAAAm6C,gBAIA,IACAn6C,EAAA17K,EAAA4K,EAAArB,EAAAvE,EACAsyN,EAFAC,EAAAh7C,EAAAp8K,OAKAm3N,EAFAhB,EACA,IAAAL,EACA,IAAAE,EAvHA,SAAAz6C,EAAA91J,GACA,IAAAtd,EAAAquN,EAAAj7C,EAAA87C,gBACAjnB,EAAA,IAAAjoM,EAAA,EAAAwuN,EAAAxuN,IAAA8tN,EACA16C,EAAA+7C,UAAA7xM,GAAA81J,EAAAg8C,MAAAnnB,GAEA,SAAA70B,EAAA91J,GACA81J,EAAA+7C,UAAA7xM,IAAA60J,KAAA27C,GAmHA,IAAAD,EAhHA,SAAAz6C,EAAA91J,GACA,GAAAoxM,EAAA,EACAA,SAKA,IAFA,IAAAztN,EAAA0sN,EACA37M,EAAA47M,EACA3sN,GAAA+Q,GAAA,CACA,IAAAq9M,EAAAhB,EAAAj7C,EAAAk8C,gBACApiG,EAAA,GAAAmiG,EACA3jN,EAAA2jN,GAAA,EACA,OAAAniG,EAAA,CASA,IAAAg1B,EAAAyqE,EADA1rN,GAAAyK,GAEA0nK,EAAA+7C,UAAA7xM,EAAA4kI,GAAAssE,EAAAthG,IAAA,GAAA4gG,GACA7sN,QAXA,CACA,GAAAyK,EAAA,IACAgjN,EAAAH,EAAA7iN,IAAA,GAAAA,GAAA,EACA,MAEAzK,GAAA,MAWA,SAAAmyK,EAAA91J,GAMA,IALA,IAGA4vG,EACAmiG,EAJApuN,EAAA0sN,EACA37M,EAAA47M,EACAliN,EAAA,EAGAzK,GAAA+Q,GAAA,CACA,IAAAu9M,EAAAjyM,EAAAqvM,EAAA1rN,GACAoW,EAAA+7J,EAAA+7C,UAAAI,GAAA,OACA,OAAAZ,GACA,OAIA,GADAjjN,GAFA2jN,EAAAhB,EAAAj7C,EAAAk8C,kBAEA,EACA,IAFApiG,EAAA,GAAAmiG,GAGA3jN,EAAA,IACAgjN,EAAAH,EAAA7iN,IAAA,GAAAA,GACAijN,EAAA,IAEAjjN,EAAA,GACAijN,EAAA,OAEa,CACb,OAAAzhG,EACA,UAAAw/F,EAAA,wBAEA+B,EAAAD,EAAAthG,GACAyhG,EAAAjjN,EAAA,IAEA,SACA,OACA,OACA0nK,EAAA+7C,UAAAI,GACAn8C,EAAA+7C,UAAAI,IAAAl4M,GAAA86J,KAAA27C,GAGA,KADApiN,IAEAijN,EAAA,IAAAA,EAAA,KAGA,MACA,OACAv7C,EAAA+7C,UAAAI,GACAn8C,EAAA+7C,UAAAI,IAAAl4M,GAAA86J,KAAA27C,IAEA16C,EAAA+7C,UAAAI,GAAAd,GAAAX,EACAa,EAAA,GAEA,MACA,OACAv7C,EAAA+7C,UAAAI,KACAn8C,EAAA+7C,UAAAI,IAAAl4M,GAAA86J,KAAA27C,IAIA7sN,IAEA,IAAA0tN,GAEA,KADAD,IAEAC,EAAA,IAtHA,SAAAv7C,EAAA91J,GACA,IAAAtd,EAAAquN,EAAAj7C,EAAA87C,gBACAjnB,EAAA,IAAAjoM,EAAA,EAAAwuN,EAAAxuN,GACAozK,EAAA+7C,UAAA7xM,GAAA81J,EAAAg8C,MAAAnnB,EAEA,IADA,IAAAhnM,EAAA,EACAA,EAAA,KACA,IAAAouN,EAAAhB,EAAAj7C,EAAAk8C,gBACApiG,EAAA,GAAAmiG,EACA3jN,EAAA2jN,GAAA,EACA,OAAAniG,EAAA,CAQA,IAAAg1B,EAAAyqE,EADA1rN,GAAAyK,GAEA0nK,EAAA+7C,UAAA7xM,EAAA4kI,GAAAssE,EAAAthG,GACAjsH,QAVA,CACA,GAAAyK,EAAA,GACA,MAEAzK,GAAA,MAuIA,IACAuuN,EACAC,EAMA1yM,EAAA/iB,EARA60N,EAAA,EASA,IALAY,EADA,IAAAR,EACAh7C,EAAA,GAAAs5C,cAAAt5C,EAAA,GAAAy7C,gBAEA3B,EAAAN,EAAAkC,cAGAd,EAAAY,GAAA,CACA,IAAAG,EAAAlC,EAAAzoN,KAAAC,IAAAuqN,EAAAZ,EAAAnB,GAAA+B,EACA,IAAA/3N,EAAA,EAAiBA,EAAAu3N,EAAsBv3N,IACvCu8K,EAAAv8K,GAAA03N,KAAA,EAGA,GADAV,EAAA,EACA,IAAAO,EAEA,IADA77C,EAAAa,EAAA,GACAv3K,EAAA,EAAmBA,EAAAkzN,EAAelzN,IAClCqyN,EAAA37C,EAAA47C,EAAAH,GACAA,SAGA,IAAAnyN,EAAA,EAAmBA,EAAAkzN,EAAelzN,IAAA,CAClC,IAAAhF,EAAA,EAAqBA,EAAAu3N,EAAsBv3N,IAI3C,IAFAqlB,GADAq2J,EAAAa,EAAAv8K,IACAqlB,EACA/iB,EAAAo5K,EAAAp5K,EACAsI,EAAA,EAAuBA,EAAAtI,EAAOsI,IAC9B,IAAArB,EAAA,EAAyBA,EAAA8b,EAAO9b,IAChC2tN,EAAAx7C,EAAA47C,EAAAH,EAAAvsN,EAAArB,GAIA4tN,IAGAV,EAAA,GACAqB,EAAAK,EAAAp1M,EAAA6C,KACAkyM,EAAAM,aACAz0N,EAAA4O,MAAA,qDAAAulN,EAAAM,SACAxyM,EAAAkyM,EAAAlyM,QAEA,IAAAyyM,EAAAP,KAAAO,OACA,IAAAA,MAAA,MACA,UAAArD,EAAA,wBAEA,KAAAqD,GAAA,OAAAA,GAAA,OAGA,MAFAzyM,GAAA,EAUA,OALAkyM,EAAAK,EAAAp1M,EAAA6C,KACAkyM,EAAAM,aACAz0N,EAAA4O,MAAA,sDAAAulN,EAAAM,SACAxyM,EAAAkyM,EAAAlyM,QAEAA,EAAA2wM,EAEA,SAAA+B,EAAA58C,EAAA68C,EAAArtN,GACA,IAEA0jL,EAAAjsL,EAAAC,EAAA41N,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA9wN,EAJA+wN,EAAA39C,EAAA49C,kBACA7B,EAAA/7C,EAAA+7C,UAIA,IAAA4B,EACA,UAAArE,EAAA,wCAEA,QAAAv8C,EAAA,EAAqBA,EAAA,GAAUA,GAAA,EAC/BogD,EAAApB,EAAAc,EAAA9/C,GACAqgD,EAAArB,EAAAc,EAAA9/C,EAAA,GACAsgD,EAAAtB,EAAAc,EAAA9/C,EAAA,GACAugD,EAAAvB,EAAAc,EAAA9/C,EAAA,GACAwgD,EAAAxB,EAAAc,EAAA9/C,EAAA,GACAygD,EAAAzB,EAAAc,EAAA9/C,EAAA,GACA0gD,EAAA1B,EAAAc,EAAA9/C,EAAA,GACA2gD,EAAA3B,EAAAc,EAAA9/C,EAAA,GACAogD,GAAAQ,EAAA5gD,GACA,IAAAqgD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAYAN,GAAAO,EAAA5gD,EAAA,GACAsgD,GAAAM,EAAA5gD,EAAA,GACAugD,GAAAK,EAAA5gD,EAAA,GACAwgD,GAAAI,EAAA5gD,EAAA,GACAygD,GAAAG,EAAA5gD,EAAA,GACA0gD,GAAAE,EAAA5gD,EAAA,GACA2gD,GAAAC,EAAA5gD,EAAA,GAUA91K,GADAisL,GARAA,EAAA4mC,EAAAqD,EAAA,SACAl2N,EAAA6yN,EAAAyD,EAAA,QAOA,MACAt2N,EACA2F,GARA1F,EAAAm2N,GAQAxD,GAPAiD,EAAAW,GAOA7D,EAAA,OACA1yN,IAAA0yN,EAAAkD,EAAAjD,EAAA,OAGAoD,GADAF,GATAA,EAAAhD,GAAAqD,EAAAM,GAAA,SAGAT,EAAAO,GAAA,GAMA,MACAP,EAEAD,GADAE,GAVAA,EAAAnD,GAAAqD,EAAAM,GAAA,SACAV,EAAAM,GAAA,GASA,MACAN,EAEAF,GADA5pC,KALA4pC,EAAAlwN,GAKA,MACAkwN,EAEA51N,GADAD,IAAAC,EAAA,MACAA,EACA0F,EAAAmwN,EAAApD,EAAAuD,EAAAxD,EAAA,SACAqD,IAAArD,EAAAwD,EAAAvD,EAAA,SACAuD,EAAAtwN,EACAA,EAAAowN,EAAAvD,EAAAwD,EAAAzD,EAAA,SACAwD,IAAAxD,EAAAyD,EAAAxD,EAAA,SACAwD,EAAArwN,EACA4C,EAAAutK,GAAAmW,EAAAgqC,EACA1tN,EAAAutK,EAAA,GAAAmW,EAAAgqC,EACA1tN,EAAAutK,EAAA,GAAA91K,EAAAg2N,EACAztN,EAAAutK,EAAA,GAAA91K,EAAAg2N,EACAztN,EAAAutK,EAAA,GAAA71K,EAAA81N,EACAxtN,EAAAutK,EAAA,GAAA71K,EAAA81N,EACAxtN,EAAAutK,EAAA,GAAA+/C,EAAAC,EACAvtN,EAAAutK,EAAA,GAAA+/C,EAAAC,IApDAnwN,EAAAktN,EAAAqD,EAAA,QACA3tN,EAAAutK,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,EACA4C,EAAAutK,EAAA,GAAAnwK,GA8CA,QAAAstN,EAAA,EAAqBA,EAAA,IAASA,EAC9BiD,EAAA3tN,EAAA0qN,GAQA,KAPAkD,EAAA5tN,EAAA0qN,EAAA,KACAmD,EAAA7tN,EAAA0qN,EAAA,MACAoD,EAAA9tN,EAAA0qN,EAAA,MACAqD,EAAA/tN,EAAA0qN,EAAA,MACAsD,EAAAhuN,EAAA0qN,EAAA,MACAuD,EAAAjuN,EAAA0qN,EAAA,MACAwD,EAAAluN,EAAA0qN,EAAA,OAuBAjzN,GADAisL,EAAA,OARAA,EAAA4mC,EAAAqD,EAAA,WACAl2N,EAAA6yN,EAAAyD,EAAA,UAOA,OACAt2N,EACA2F,GARA1F,EAAAm2N,GAQAxD,GAPAiD,EAAAW,GAOA7D,EAAA,SACA1yN,IAAA0yN,EAAAkD,EAAAjD,EAAA,SACAiD,EAAAlwN,EAEAqwN,GADAF,GATAA,EAAAhD,GAAAqD,EAAAM,GAAA,WAGAT,EAAAO,GAMA,MACAP,EAEAD,GADAE,GAVAA,EAAAnD,GAAAqD,EAAAM,GAAA,WACAV,EAAAM,GASA,MACAN,EAKApwN,EAAAmwN,EAAApD,EAAAuD,EAAAxD,EAAA,SACAqD,IAAArD,EAAAwD,EAAAvD,EAAA,SACAuD,EAAAtwN,EACAA,EAAAowN,EAAAvD,EAAAwD,EAAAzD,EAAA,SACAwD,IAAAxD,EAAAyD,EAAAxD,EAAA,SAGAiE,GAXAxqC,IAAA4pC,EAAA,MAWAI,EACAE,GAVAn2N,IAAAC,EAAA,OAOA+1N,EAAArwN,GAIA6wN,EAAAx2N,EAAAg2N,EACAI,GAXAn2N,EAAAD,EAAAC,GAWA81N,EACAQ,EAAAt2N,EAAA81N,EACAM,GAfAR,EAAA5pC,EAAA4pC,GAeAC,EACAQ,EAAAT,EAAAC,EACAI,GARAA,EAAAjqC,EAAAgqC,GAQA,KAAAC,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACAC,IAAA,KAAAA,GAAA,SAAAA,GAAA,EACA3B,EAAAc,EAAA3C,GAAAiD,EACApB,EAAAc,EAAA3C,EAAA,GAAAkD,EACArB,EAAAc,EAAA3C,EAAA,IAAAmD,EACAtB,EAAAc,EAAA3C,EAAA,IAAAoD,EACAvB,EAAAc,EAAA3C,EAAA,IAAAqD,EACAxB,EAAAc,EAAA3C,EAAA,IAAAsD,EACAzB,EAAAc,EAAA3C,EAAA,IAAAuD,EACA1B,EAAAc,EAAA3C,EAAA,IAAAwD,IA7DA9wN,GADAA,EAAAktN,EAAAqD,EAAA,WACA,OAAAvwN,GAAA,SAAAA,EAAA,QACAmvN,EAAAc,EAAA3C,GAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,GAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,IAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,IAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,IAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,IAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,IAAAttN,EACAmvN,EAAAc,EAAA3C,EAAA,IAAAttN,GAwDA,SAAAixN,EAAAxD,EAAAr6C,GAIA,IAHA,IAAAm6C,EAAAn6C,EAAAm6C,cACAmC,EAAAt8C,EAAAs8C,gBACAwB,EAAA,IAAAC,WAAA,IACAC,EAAA,EAA0BA,EAAA1B,EAA4B0B,IACtD,QAAAC,EAAA,EAA4BA,EAAA9D,EAA0B8D,IAEtDrB,EAAA58C,EADAi6C,EAAAj6C,EAAAg+C,EAAAC,GACAH,GAGA,OAAA99C,EAAA+7C,UAEA,SAAAU,EAAAp1M,EAAA62M,EAAA19M,GACA,SAAA29M,EAAA31N,GACA,OAAA6e,EAAA7e,IAAA,EAAA6e,EAAA7e,EAAA,GAEA,IAAA41N,EAAA/2M,EAAA5iB,OAAA,EACA45N,EAAA79M,EAAA09M,EAAA19M,EAAA09M,EACA,GAAAA,GAAAE,EACA,YAEA,IAAAE,EAAAH,EAAAD,GACA,GAAAI,GAAA,OAAAA,GAAA,MACA,OACA5B,QAAA,KACAC,OAAA2B,EACAp0M,OAAAg0M,GAIA,IADA,IAAAK,EAAAJ,EAAAE,KACAE,GAAA,OAAAA,GAAA,SACA,KAAAF,GAAAD,EACA,YAEAG,EAAAJ,EAAAE,GAEA,OACA3B,QAAA4B,EAAAx4N,SAAA,IACA62N,OAAA4B,EACAr0M,OAAAm0M,GA+XA,OA5XA13M,EAAApkB,WACAqS,MAAA,SAAAyS,GACA,SAAAmmK,IACA,IAAAvrL,EAAAolB,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,GAEA,OADAA,GAAA,EACAjoB,EAEA,SAAAu8N,IACA,IAAA/5N,EAAA+oL,IACAixC,EAAAv0M,EAAAzlB,EAAA,EACA23N,EAAAK,EAAAp1M,EAAAo3M,EAAAv0M,GACAkyM,KAAAM,aACAz0N,EAAA4O,MAAA,qDAAAulN,EAAAM,SACA+B,EAAArC,EAAAlyM,QAEA,IAAAjK,EAAAoH,EAAApe,SAAAihB,EAAAu0M,GAEA,OADAv0M,GAAAjK,EAAAxb,OACAwb,EAEA,SAAAy+M,EAAArE,GAGA,IAFA,IAAAM,EAAA9oN,KAAA01J,KAAA8yD,EAAAsE,eAAA,EAAAtE,EAAAuE,MACArC,EAAA1qN,KAAA01J,KAAA8yD,EAAAwE,UAAA,EAAAxE,EAAAyE,MACAx6N,EAAA,EAAuBA,EAAA+1N,EAAAx5C,WAAAp8K,OAA6BH,IAAA,CACpD07K,EAAAq6C,EAAAx5C,WAAAv8K,GACA,IAAA61N,EAAAtoN,KAAA01J,KAAA11J,KAAA01J,KAAA8yD,EAAAsE,eAAA,GAAA3+C,EAAAr2J,EAAA0wM,EAAAuE,MACAtC,EAAAzqN,KAAA01J,KAAA11J,KAAA01J,KAAA8yD,EAAAwE,UAAA,GAAA7+C,EAAAp5K,EAAAyzN,EAAAyE,MACAC,EAAApE,EAAA36C,EAAAr2J,EAEAq1M,EADAzC,EAAAv8C,EAAAp5K,EACA,IAAAm4N,EAAA,GACA/+C,EAAA+7C,UAAA,IAAAgC,WAAAiB,GACAh/C,EAAAm6C,gBACAn6C,EAAAs8C,kBAEAjC,EAAAM,cACAN,EAAAkC,gBAEA,IAGAlC,EAAAC,EAHApwM,EAAA,EACA+0M,EAAA,KACAC,EAAA,KAEAC,KACAC,KACAC,KACAjD,EAAA5uC,IACA,WAAA4uC,EACA,UAAA9C,EAAA,iBAGA,IADA8C,EAAA5uC,IACA,QAAA4uC,GAAA,CACA,IAAA93N,EAAA4K,EAAAk1F,EACA,OAAAg4H,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,IAAAkD,EAAAd,IACA,QAAApC,GACA,KAAAkD,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,KACAL,GACA5Y,SACAllB,MAAAm+B,EAAA,GACAl+B,MAAAk+B,EAAA,IAEAC,aAAAD,EAAA,GACAE,SAAAF,EAAA,MAAAA,EAAA,GACAG,SAAAH,EAAA,OAAAA,EAAA,IACAI,WAAAJ,EAAA,IACAK,YAAAL,EAAA,IACAM,UAAAN,EAAAr2N,SAAA,QAAAq2N,EAAA,IAAAA,EAAA,OAIA,QAAAlD,GACA,KAAAkD,EAAA,UAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,KACAJ,GACA7Y,QAAAiZ,EAAA,MAAAA,EAAA,GACAO,OAAAP,EAAA,MAAAA,EAAA,GACAQ,OAAAR,EAAA,MAAAA,EAAA,IACAS,cAAAT,EAAA,MAIA,MACA,WAIA,IAHA,IACAU,EADAxyC,IACAtjK,EAAA,EAEAA,EAAA81M,GAAA,CACA,IAAAC,EAAA54M,EAAA6C,KACAg2M,EAAA,IAAAlvN,YAAA,IACA,GAAAivN,GAAA,KACA,IAAA/wN,EAAA,EAA2BA,EAAA,GAAQA,IAEnCgxN,EADA3G,EAAArqN,IACAmY,EAAA6C,SAEe,IAAA+1M,GAAA,KAMf,UAAA3G,EAAA,4BALA,IAAApqN,EAAA,EAA2BA,EAAA,GAAQA,IAEnCgxN,EADA3G,EAAArqN,IACAs+K,IAKA2xC,EAAA,GAAAc,GAAAC,EAEA,MACA,WACA,WACA,WACA,GAAA7F,EACA,UAAAf,EAAA,qCAEA9rC,KACA6sC,MACA8F,SAAA,QAAA/D,EACA/B,EAAAO,YAAA,QAAAwB,EACA/B,EAAA1tC,UAAAtlK,EAAA6C,KACAmwM,EAAAwE,UAAArxC,IACA6sC,EAAAsE,eAAAnxC,IACA6sC,EAAAx5C,cACAw5C,EAAA+F,gBACA,IACAC,EADAz5C,EAAAv/J,EAAA6C,KAEA00M,EAAA,EACAE,EAAA,EACA,IAAAx6N,EAAA,EAAuBA,EAAAsiL,EAAqBtiL,IAAA,CAC5C+7N,EAAAh5M,EAAA6C,GACA,IAAAP,EAAAtC,EAAA6C,EAAA,MACAtjB,EAAA,GAAAygB,EAAA6C,EAAA,GACA00M,EAAAj1M,IACAi1M,EAAAj1M,GAEAm1M,EAAAl4N,IACAk4N,EAAAl4N,GAEA,IAAA05N,EAAAj5M,EAAA6C,EAAA,GACAk6E,EAAAi2H,EAAAx5C,WAAA3gK,MACAyJ,IACA/iB,IACA25N,eAAAD,EACA1C,kBAAA,OAEAvD,EAAA+F,aAAAC,GAAAj8H,EAAA,EACAl6E,GAAA,EAEAmwM,EAAAuE,OACAvE,EAAAyE,OACAJ,EAAArE,GACA,MACA,WACA,IAAAmG,EAAAhzC,IACA,IAAAlpL,EAAA,EAAuBA,EAAAk8N,GAAmB,CAC1C,IAAAC,EAAAp5M,EAAA6C,KACA1c,EAAA,IAAAjF,WAAA,IACAm4N,EAAA,EACA,IAAAxxN,EAAA,EAAyBA,EAAA,GAAQA,IAAAgb,IACjCw2M,GAAAlzN,EAAA0B,GAAAmY,EAAA6C,GAEA,IAAAy2M,EAAA,IAAAp4N,WAAAm4N,GACA,IAAAxxN,EAAA,EAAyBA,EAAAwxN,EAAmBxxN,IAAAgb,IAC5Cy2M,EAAAzxN,GAAAmY,EAAA6C,GAEA5lB,GAAA,GAAAo8N,GACAD,GAAA,KAAApB,EAAAD,GAAA,GAAAqB,GAAAzG,EAAAxsN,EAAAmzN,GAEA,MACA,WACAnzC,IACA8sC,EAAA9sC,IACA,MACA,WACAA,IACA,IAEAxN,EAFA4gD,EAAAv5M,EAAA6C,KACA22J,KAEA,IAAAv8K,EAAA,EAAuBA,EAAAs8N,EAAoBt8N,IAAA,CAC3C,IAAAu8N,EAAAxG,EAAA+F,aAAA/4M,EAAA6C,MACA81J,EAAAq6C,EAAAx5C,WAAAggD,GACA,IAAAC,EAAAz5M,EAAA6C,KACA81J,EAAA87C,eAAAuD,EAAAyB,GAAA,GACA9gD,EAAAk8C,eAAAkD,EAAA,GAAA0B,GACAjgD,EAAA3gK,KAAA8/J,GAEA,IAAAu6C,EAAAlzM,EAAA6C,KACAswM,EAAAnzM,EAAA6C,KACA62M,EAAA15M,EAAA6C,KACA6kJ,EAAAqrD,EAAA/yM,EAAA6C,EAAAmwM,EAAAx5C,EAAAy5C,EAAAC,EAAAC,EAAAuG,GAAA,KAAAA,GACA72M,GAAA6kJ,EACA,MACA,WACA,MAAA1nJ,EAAA6C,IACAA,IAEA,MACA,QACA,SAAA7C,EAAA6C,EAAA,IAAA7C,EAAA6C,EAAA,SAAA7C,EAAA6C,EAAA,SACAA,GAAA,EACA,MAEA,UAAAovM,EAAA,kBAAA8C,EAAAt2N,SAAA,KAEAs2N,EAAA5uC,IAOA,IALA7qL,KAAAuQ,MAAAmnN,EAAAsE,eACAh8N,KAAAwQ,OAAAknN,EAAAwE,UACAl8N,KAAAs8N,OACAt8N,KAAAu8N,QACAv8N,KAAAk+K,cACAv8K,EAAA,EAAiBA,EAAA+1N,EAAAx5C,WAAAp8K,OAA6BH,IAAA,CAE9C,IAAAs5N,EAAAuB,GADAn/C,EAAAq6C,EAAAx5C,WAAAv8K,IACAi8N,gBACA3C,IACA59C,EAAA49C,qBAEAj7N,KAAAk+K,WAAA3gK,MACA20K,OAAAgpC,EAAAxD,EAAAr6C,GACAghD,OAAAhhD,EAAAr2J,EAAA0wM,EAAAuE,KACAqC,OAAAjhD,EAAAp5K,EAAAyzN,EAAAyE,KACA3E,cAAAn6C,EAAAm6C,cACAmC,gBAAAt8C,EAAAs8C,kBAGA35N,KAAAu+N,cAAAv+N,KAAAk+K,WAAAp8K,QAEA08N,wBAAA,SAAAjuN,EAAAC,GACA,IAEA6sK,EAAAohD,EAAAC,EAAAC,EACA/jN,EAAA5E,EAAArU,EAAA4K,EAAArB,EACAqY,EAEA2uK,EANAmsC,EAAAr+N,KAAAuQ,QACA+tN,EAAAt+N,KAAAwQ,SAIA+W,EAAA,EAEAg3M,EAAAv+N,KAAAk+K,WAAAp8K,OACAgzK,EAAAvkK,EAAAC,EAAA+tN,EACA75M,EAAA,IAAA2oK,kBAAAvY,GACA8pD,EAAA,IAAA3kD,YAAA1pK,GAEA,IAAA5O,EAAA,EAAiBA,EAAA48N,EAAmB58N,IAAA,CAOpC,IALA88N,GADAphD,EAAAr9K,KAAAk+K,WAAAv8K,IACA08N,SACAK,EAAArhD,EAAAihD,SACA/2M,EAAA5lB,EACAuwL,EAAA7U,EAAA6U,OACAysC,EAAAthD,EAAAm6C,cAAA,KACA58M,EAAA,EAAmBA,EAAArK,EAAWqK,IAC9BrO,EAAA,EAAAqO,EAAA6jN,EACAG,EAAAhkN,IAVA,WAUArO,IAAA,IAAAA,EAEA,IAAAyJ,EAAA,EAAmBA,EAAAxF,EAAYwF,IAG/B,IADAuN,EAAAo7M,GAdA,YAaApyN,EAAA,EAAAyJ,EAAA0oN,KACA,EAAAnyN,IAAA,EACAqO,EAAA,EAAqBA,EAAArK,EAAWqK,IAChC8J,EAAA6C,GAAA2qK,EAAA3uK,EAAAq7M,EAAAhkN,IACA2M,GAAAg3M,EAIA,IAAAl6M,EAAArkB,KAAAwkB,gBACA,GAAAH,EACA,IAAA1iB,EAAA,EAAmBA,EAAAmzK,GACnB,IAAAvoK,EAAA,EAAArB,EAAA,EAA4BqB,EAAAgyN,EAAmBhyN,IAAA5K,IAAAuJ,GAAA,EAC/CwZ,EAAA/iB,IAAA+iB,EAAA/iB,GAAA0iB,EAAAnZ,IAAA,GAAAmZ,EAAAnZ,EAAA,GAIA,OAAAwZ,GAEAm6M,yBAAA,WACA,OAAA7+N,KAAAu8N,QACAv8N,KAAAu8N,MAAAa,cAEA,IAAAp9N,KAAAu+N,cACA,IAAAv+N,KAAAykB,eAKA,IAAAzkB,KAAAykB,gBAMAq6M,iBAAA,SAAAp6M,GAEA,IADA,IAAA3L,EAAAgmN,EAAAC,EACAr9N,EAAA,EAAAG,EAAA4iB,EAAA5iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDoX,EAAA2L,EAAA/iB,GACAo9N,EAAAr6M,EAAA/iB,EAAA,GACAq9N,EAAAt6M,EAAA/iB,EAAA,GACA+iB,EAAA/iB,GAAAoX,EAAA,cAAAimN,EACAt6M,EAAA/iB,EAAA,GAAAoX,EAAA,aAAAgmN,EAAA,KAAAC,EACAt6M,EAAA/iB,EAAA,GAAAoX,EAAA,cAAAgmN,EAEA,OAAAr6M,GAEAu6M,kBAAA,SAAAv6M,GAGA,IAFA,IAAA3L,EAAAgmN,EAAAC,EAAA9zN,EACAqc,EAAA,EACA5lB,EAAA,EAAAG,EAAA4iB,EAAA5iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDoX,EAAA2L,EAAA/iB,GACAo9N,EAAAr6M,EAAA/iB,EAAA,GACAq9N,EAAAt6M,EAAA/iB,EAAA,GACAuJ,EAAAwZ,EAAA/iB,EAAA,GACA+iB,EAAA6C,KAAAw3M,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,mBAAAjmN,EAAA,mBAAA7N,EAAA,kCAAA8zN,IAAA,oBAAAA,EAAA,oBAAAjmN,EAAA,mBAAA7N,EAAA,kBAAA6N,GAAA,oBAAAA,EAAA,mBAAA7N,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACAwZ,EAAA6C,KAAA,iBAAAw3M,GAAA,oBAAAA,EAAA,oBAAAC,EAAA,oBAAAjmN,EAAA,oBAAA7N,EAAA,kBAAA8zN,IAAA,oBAAAA,EAAA,mBAAAjmN,EAAA,oBAAA7N,EAAA,kBAAA6N,GAAA,mBAAAA,EAAA,mBAAA7N,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACAwZ,EAAA6C,KAAAw3M,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,kBAAAjmN,EAAA,mBAAA7N,EAAA,kCAAA8zN,IAAA,oBAAAA,EAAA,oBAAAjmN,EAAA,oBAAA7N,EAAA,kBAAA6N,GAAA,mBAAAA,EAAA,mBAAA7N,EAAA,kBAAAA,IAAA,oBAAAA,EAAA,iBAEA,OAAAwZ,GAEAw6M,mBAAA,SAAAx6M,GAEA,IADA,IAAA3L,EAAAgmN,EAAAC,EACAr9N,EAAA,EAAAG,EAAA4iB,EAAA5iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDoX,EAAA2L,EAAA/iB,GACAo9N,EAAAr6M,EAAA/iB,EAAA,GACAq9N,EAAAt6M,EAAA/iB,EAAA,GACA+iB,EAAA/iB,GAAA,QAAAoX,EAAA,MAAAimN,EACAt6M,EAAA/iB,EAAA,WAAAoX,EAAA,KAAAgmN,EAAA,KAAAC,EACAt6M,EAAA/iB,EAAA,WAAAoX,EAAA,MAAAgmN,EAEA,OAAAr6M,GAEAy6M,kBAAA,SAAAz6M,GAIA,IAHA,IAAAxY,EAAA6J,EAAAC,EAAA9K,EACAqc,EAAA,EAEA5lB,EAAA,EAAAG,EAAA4iB,EAAA5iB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDuK,EAAAwY,EAAA/iB,IAFA,OAGAoU,EAAA2O,EAAA/iB,EAAA,IAHA,OAIAqU,EAAA0O,EAAA/iB,EAAA,IAJA,OAKAuJ,EAAAwZ,EAAA/iB,EAAA,IALA,OAMA+iB,EAAA6C,KAAA,IAAArb,IAAA,kBAAAA,EAAA,kBAAA6J,EAAA,kBAAAC,EAAA,mBAAA9K,EAAA,mBAAA6K,GAAA,mBAAAA,EAAA,mBAAAC,EAAA,mBAAA9K,EAAA,mBAAA8K,IAAA,mBAAAA,EAAA,mBAAA9K,EAAA,kBAAAA,GAAA,kBAAAA,EAAA,oBACAwZ,EAAA6C,KAAA,IAAArb,GAAA,kBAAAA,EAAA,mBAAA6J,EAAA,kBAAAC,EAAA,mBAAA9K,EAAA,kBAAA6K,IAAA,mBAAAA,EAAA,mBAAAC,EAAA,mBAAA9K,EAAA,mBAAA8K,GAAA,kBAAAA,EAAA,gBAAA9K,EAAA,mBAAAA,GAAA,mBAAAA,EAAA,oBACAwZ,EAAA6C,KAAA,IAAArb,GAAA,kBAAAA,EAAA,kBAAA6J,EAAA,kBAAAC,EAAA,mBAAA9K,EAAA,oBAAA6K,GAAA,kBAAAA,EAAA,kBAAAC,EAAA,mBAAA9K,EAAA,oBAAA8K,GAAA,mBAAAA,EAAA,mBAAA9K,EAAA,oBAAAA,GAAA,kBAAAA,EAAA,oBAEA,OAAAwZ,GAEAC,QAAA,SAAApU,EAAAC,EAAA4uN,GACA,GAAAp/N,KAAAu+N,cAAA,EACA,UAAA5H,EAAA,0BAEA,IAAAjyM,EAAA1kB,KAAAw+N,wBAAAjuN,EAAAC,GACA,OAAAxQ,KAAAu+N,eAAAa,EAAA,CAIA,IAHA,IAAAtqD,EAAApwJ,EAAA5iB,OACAu9N,EAAA,IAAAhyC,kBAAA,EAAAvY,GACAvtJ,EAAA,EACA5lB,EAAA,EAAuBA,EAAAmzK,EAAgBnzK,IAAA,CACvC,IAAA29N,EAAA56M,EAAA/iB,GACA09N,EAAA93M,KAAA+3M,EACAD,EAAA93M,KAAA+3M,EACAD,EAAA93M,KAAA+3M,EAEA,OAAAD,EACO,OAAAr/N,KAAAu+N,eAAAv+N,KAAA6+N,2BACP,OAAA7+N,KAAA8+N,iBAAAp6M,GACO,OAAA1kB,KAAAu+N,cAAA,CACP,GAAAv+N,KAAA6+N,2BACA,OAAAO,EACAp/N,KAAAi/N,kBAAAv6M,GAEA1kB,KAAAk/N,mBAAAx6M,GACS,GAAA06M,EACT,OAAAp/N,KAAAm/N,kBAAAz6M,GAGA,OAAAA,IAGAV,EA33BA,GA63BA3kB,EAAA2kB,8CC/4BA7kB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA+gB,iBAEA,IAAA/D,EAAc9W,EAAQ,KAEtBg6N,EAAWh6N,EAAQ,KAEnBD,EAAYC,EAAQ,KAEpB6a,EAAA,WACA,SAAAA,EAAAjY,EAAAS,EAAA/F,EAAAwI,GACArL,KAAAmI,SACAnI,KAAA4I,cACA5I,KAAA6C,OACA7C,KAAAqL,SACAgR,EAAAnX,aAAApB,KAAA9D,KAAA4I,GA+CA,OA7CAwX,EAAAxgB,UAAAT,OAAAe,OAAAmc,EAAAnX,aAAAtF,WACAT,OAAAC,eAAAghB,EAAAxgB,UAAA,SACAO,IAAA,WACA,SAAAmF,EAAAgP,QAAAtU,KAAA,QAAAA,KAAAmI,OAAA1D,SAAAzE,KAAA4I,eAEAkb,kBAEA1D,EAAAxgB,UAAA2H,aAAA,SAAAC,KACA4Y,EAAAxgB,UAAA0H,UAAA,WACA,IAAAtH,KAAAoH,IAAA,CAGA,IAAAo4N,EAAA,IAAAD,EAAA7iD,SACA8iD,EAAAvtN,MAAAjS,KAAA2F,OACA,IAAA4K,EAAAivN,EAAAjvN,MACAC,EAAAgvN,EAAAhvN,OACAyzK,EAAAu7C,EAAAv7C,gBACAw7C,EAAAD,EAAAnhD,MAAAv8K,OACA,OAAA29N,EACAz/N,KAAA+G,OAAAy4N,EAAAnhD,MAAA,GAAAnS,UACK,CAEL,IADA,IAAAxnJ,EAAA,IAAA2oK,kBAAA98K,EAAAC,EAAAyzK,GACA/4K,EAAA,EAAqBA,EAAAu0N,EAAev0N,IAWpC,IAVA,IAAAw0N,EAAAF,EAAAnhD,MAAAnzK,GACAy0N,EAAAD,EAAAnvN,MACAqvN,EAAAF,EAAAlvN,OACAqvN,EAAAH,EAAA9yN,KACAkzN,EAAAJ,EAAAn1C,IACA/6K,EAAAkwN,EAAAxzD,MACA6zD,EAAA,EACAC,GAAAzvN,EAAAuvN,EAAAD,GAAA57C,EACA78J,EAAA7W,EAAA0zK,EACAg8C,EAAAN,EAAA17C,EACA13K,EAAA,EAAuBA,EAAAqzN,EAAgBrzN,IAAA,CACvC,IAAAX,EAAA4D,EAAAlJ,SAAAy5N,IAAAE,GACAv7M,EAAAriB,IAAAuJ,EAAAo0N,GACAD,GAAAE,EACAD,GAAA54M,EAGApnB,KAAA+G,OAAA2d,EAEA1kB,KAAAmH,aAAAnH,KAAA+G,OAAAjF,OACA9B,KAAAoH,SAEAgZ,EArDA,GAuDA/gB,EAAA+gB,8CClEAjhB,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAqjN,kBAAArjN,EAAA6gO,sBAAA7gO,EAAA8gO,kBAEA,IAAAC,EAAA,SAAAjgO,EAAAkgO,EAAAC,EAAAC,GAAqD,OAAAF,MAAAntB,SAAAtzM,WAAkD,IAAA4gO,EAAArhO,OAAAshO,yBAAAJ,EAAAC,GAA8D,YAAAE,EAAA,CAA0B,IAAAr0D,EAAAhtK,OAAAuhO,eAAAL,GAA4C,cAAAl0D,SAAkDhsK,EAAAgsK,EAAAm0D,EAAAC,GAA4C,aAAAC,EAA4B,OAAAA,EAAAlhO,MAA4B,IAAAqhO,EAAAH,EAAArgO,IAAuB,gBAAAwgO,EAAgDA,EAAA78N,KAAAy8N,WAExcnyB,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAA5sM,EAAA,EAAgBA,EAAA4sM,EAAAzsM,OAAkBH,IAAA,CAAO,IAAA6sM,EAAAD,EAAA5sM,GAA2B6sM,EAAAC,WAAAD,EAAAC,eAAwDD,EAAA1qL,gBAAgC,UAAA0qL,MAAAE,aAAuDvvM,OAAAC,eAAAkvM,EAAAE,EAAAtsM,IAAAssM,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA/uM,UAAAgvM,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEArpM,EAAYC,EAAQ,KAEpBu6M,EAAWv6M,EAAQ,KAEnBC,EAAkBD,EAAQ,KAE1BslK,EAAkBtlK,EAAQ,KAE1By6M,EAAqBz6M,EAAQ,KAE7B8W,EAAc9W,EAAQ,KAEtB,SAAAq7N,EAAA3hB,EAAAn7M,GAAiD,IAAAm7M,EAAa,UAAA4hB,eAAA,6DAAyF,OAAA/8N,GAAA,iBAAAA,GAAA,mBAAAA,EAAAm7M,EAAAn7M,EAEvJ,SAAAg9N,EAAAC,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAv2D,UAAA,kEAAAu2D,GAAuGD,EAAAnhO,UAAAT,OAAAe,OAAA8gO,KAAAphO,WAAyED,aAAeL,MAAAyhO,EAAAtyB,cAAAC,YAAA5qL,mBAA6Ek9M,IAAA7hO,OAAA8hO,eAAA9hO,OAAA8hO,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,SAAAG,EAAAjyB,EAAAP,GAAiD,KAAAO,aAAAP,GAA0C,UAAAlkC,UAAA,qCAE3F,IAAAi4C,EAAA,WACA,SAAAA,IACAye,EAAAnhO,KAAA0iN,GA0EA,OAvEAtU,EAAAsU,EAAA,OACAxgN,IAAA,SACA5C,MAAA,SAAAmB,EAAA6C,EAAAwnK,EAAA81C,GACA,IAAA/9M,EAAApC,EAAAU,WAAAmC,GACA,MAAAkC,EAAA1C,QAAAD,GAAA,CAGA,IAAAo4L,KAAAz1L,EAAAzD,OAAAuB,KAAAH,WAAA,SAAAy9M,EAAAC,cACAn1C,EAAA7oK,EAAA1C,IAAA,WACAurK,KAAAlmK,EAAAxB,QAAA0nK,KAAA3rK,KAAA,KACA,IAAAqhO,GACA3gO,OACAoC,OACAS,OAAAkC,EAAAzD,OAAAuB,KAAA,KACAooK,UACAuvB,KACAnwB,cAEA,OAAAY,GACA,WACA,WAAA21D,EAAAD,GACA,WACA,WAAAE,EAAAF,GACA,aACA,IAAAG,EAAAj8N,EAAA8C,KAAAo5N,uBAAA3+N,EAAA,MAEA,OADA0+N,KAAA/7N,EAAAxB,QAAAu9N,KAAAxhO,KAAA,MAEA,SACA,WAAA0hO,EAAAL,GACA,UACA,WAAAM,EAAAN,GACA,SACA,WAAAO,EAAAP,GAGA,SADA97N,EAAA4O,MAAA,oCAAAqtN,EAAA,uCACA,IAAAK,EAAAR,GACA,YACA,WAAAS,EAAAT,GACA,WACA,WAAAU,EAAAV,GACA,aACA,WAAAW,EAAAX,GACA,aACA,WAAAY,EAAAZ,GACA,eACA,WAAAa,EAAAb,GACA,cACA,WAAAc,EAAAd,GACA,gBACA,WAAAe,EAAAf,GACA,gBACA,WAAAgB,EAAAhB,GACA,eACA,WAAAiB,EAAAjB,GACA,gBACA,WAAAkB,EAAAlB,GACA,YACA,WAAAmB,EAAAnB,GACA,qBACA,WAAAoB,EAAApB,GACA,QAMA,OALA11D,KAGApmK,EAAA4O,MAAA,kCAAAw3J,EAAA,0CAFApmK,EAAA4O,MAAA,gDAIA,IAAAisN,EAAAiB,SAKA1e,EA5EA,GA6FAyd,EAAA,WACA,SAAAA,EAAA90N,GACA81N,EAAAnhO,KAAAmgO,GAEA,IAAAt9N,EAAAwI,EAAAxI,KACA7C,KAAAyiO,SAAA5/N,EAAA1C,IAAA,MACAH,KAAA0iO,aAAA7/N,EAAArB,SAAA,SACAxB,KAAA2iO,SAAA9/N,EAAArB,SAAA,MACAxB,KAAA4iO,eAAA//N,GACA7C,KAAA6iO,cAAAhgO,GACA7C,KAAA0kB,MACAo+M,gBAAA9iO,KAAA4sK,MACAm2D,YAAA/iO,KAAA+iO,YACAzqN,MAAAtY,KAAAsY,MACA0qN,gBAAAhjO,KAAAijO,WACAhoC,GAAA5vL,EAAA4vL,GACAioC,KAAAljO,KAAAmjO,UACAz3D,QAAArgK,EAAAqgK,SA4LA,OAxLA0iC,EAAA+xB,IACAj+N,IAAA,WACA5C,MAAA,SAAAstK,EAAAw2D,GACA,SAAAx2D,EAAAw2D,MAGAlhO,IAAA,cACA5C,MAAA,SAAAstK,GACA,OAAA5sK,KAAAqjO,SAAAz2D,EAAAtnK,EAAAg+N,eAAAC,aAAAvjO,KAAAqjO,SAAAz2D,EAAAtnK,EAAAg+N,eAAAE,UAAAxjO,KAAAqjO,SAAAz2D,EAAAtnK,EAAAg+N,eAAAG,WAGAvhO,IAAA,eACA5C,MAAA,SAAAstK,GACA,OAAA5sK,KAAAqjO,SAAAz2D,EAAAtnK,EAAAg+N,eAAAI,SAAA1jO,KAAAqjO,SAAAz2D,EAAAtnK,EAAAg+N,eAAAC,aAAAvjO,KAAAqjO,SAAAz2D,EAAAtnK,EAAAg+N,eAAAE,WAGAthO,IAAA,WACA5C,MAAA,SAAAstK,GACA5sK,KAAA4sK,MAAAnvJ,OAAAC,UAAAkvJ,MAAA,EAAAA,EAAA,KAGA1qK,IAAA,UACA5C,MAAA,SAAA8jO,GACA,OAAApjO,KAAAqjO,SAAArjO,KAAA4sK,MAAAw2D,MAGAlhO,IAAA,eACA5C,MAAA,SAAA6jO,GACA1hO,MAAAC,QAAAyhO,IAAA,IAAAA,EAAArhO,OACA9B,KAAAmjO,UAAA79N,EAAA8C,KAAAu7N,cAAAR,GAEAnjO,KAAAmjO,WAAA,YAIAjhO,IAAA,WACA5C,MAAA,SAAAgZ,GACA,IAAAu0J,EAAA,IAAAjnK,WAAA,GACA,GAAAnE,MAAAC,QAAA4W,GAIA,OAAAA,EAAAxW,QACA,OACA9B,KAAAsY,MAAA,KACA,MACA,OACAuyJ,EAAAx7J,WAAAsD,WAAAC,KAAAjD,WAAA2I,EAAA,EAAAu0J,EAAA,GACA7sK,KAAAsY,MAAAu0J,EACA,MACA,OACAhC,EAAAx7J,WAAAsD,WAAAjD,IAAAC,WAAA2I,EAAA,EAAAu0J,EAAA,GACA7sK,KAAAsY,MAAAu0J,EACA,MACA,OACAhC,EAAAx7J,WAAAsD,WAAAE,KAAAlD,WAAA2I,EAAA,EAAAu0J,EAAA,GACA7sK,KAAAsY,MAAAu0J,EACA,MACA,QACA7sK,KAAAsY,MAAAu0J,OApBA7sK,KAAAsY,MAAAu0J,KAyBA3qK,IAAA,iBACA5C,MAAA,SAAAyjO,GAEA,GADA/iO,KAAA+iO,YAAA,IAAA7C,KACA16N,EAAA1C,QAAAigO,GAGA,GAAAA,EAAAzgO,IAAA,OACA,IAAAO,EAAAkgO,EAAA5iO,IAAA,MACAyjO,EAAA/gO,EAAA1C,IAAA,QACAyjO,OAAAp+N,EAAAxB,QAAA4/N,EAAA,YACA5jO,KAAA+iO,YAAAc,SAAAhhO,EAAA1C,IAAA,MACAH,KAAA+iO,YAAAe,SAAAjhO,EAAA1C,IAAA,MACAH,KAAA+iO,YAAAgB,aAAAlhO,EAAArB,SAAA,YAEO,GAAAuhO,EAAAzgO,IAAA,WACP,IAAAgb,EAAAylN,EAAAvhO,SAAA,UACAC,MAAAC,QAAA4b,MAAAxb,QAAA,IACA9B,KAAA+iO,YAAAiB,0BAAA1mN,EAAA,IACAtd,KAAA+iO,YAAAkB,wBAAA3mN,EAAA,IACAtd,KAAA+iO,YAAAc,SAAAvmN,EAAA,IACA,IAAAA,EAAAxb,QACA9B,KAAA+iO,YAAAgB,aAAAzmN,EAAA,UAIAtd,KAAA+iO,YAAAc,SAAA,MAIA3hO,IAAA,gBACA5C,MAAA,SAAAuD,GACA7C,KAAAijO,WAAA,KACA,IAAAiB,EAAArhO,EAAA1C,IAAA,MACA,MAAAqF,EAAA1C,QAAAohO,GAAA,CAGA,IAAAC,EAAAD,EAAA/jO,IAAA,KACA,MAAAqF,EAAAhB,UAAA2/N,GACAnkO,KAAAijO,WAAAkB,OAGA,MAAA3+N,EAAA1C,QAAAqhO,GAAA,CAGA,IAAAjpN,EAAArY,EAAA1C,IAAA,SACAqF,EAAAxB,QAAAkX,IAAAipN,EAAA7hO,IAAA4Y,EAAAnb,QAGAC,KAAAijO,WAAAkB,EAAAhkO,IAAA+a,EAAAnb,YAGAmC,IAAA,gBACA5C,MAAA,SAAAuD,GACAA,EAAAP,IAAA,OACAtC,KAAA0kB,KAAApM,MAAA,MAEAtY,KAAA0kB,KAAA0/M,SAAAvhO,EAAAP,IAAA,SACAtC,KAAA0kB,KAAAioJ,SAAArnK,EAAA2nK,mBAAApqK,EAAA1C,IAAA,UACAH,KAAA0kB,KAAA2/M,YAAA/+N,EAAA2nK,mBAAApqK,EAAA1C,IAAA,oBAGA+B,IAAA,gBACA5C,MAAA,SAAA8C,GACA,OAAApC,KAAAijO,WAAApgO,KAAAzB,SAAA,aAAAqmK,KAAA,SAAAw5C,GACA,GAAAA,EAIA,OADA,IAAAnB,EAAAj2C,aAAAo3C,EAAA7+M,EAAA6+M,EAAAxgN,MACA23K,OAAA3Q,KAAA,WACA,OAAAw5C,SAKA/+M,IAAA,kBACA5C,MAAA,SAAA+zM,EAAAsH,EAAA2pB,GACA,IAAAt9D,EAAAhnK,KAEA,IAAAA,KAAAijO,WACA,OAAA3hO,QAAAC,QAAA,IAAAy+M,EAAA/6L,cAEA,IAAAP,EAAA1kB,KAAA0kB,KACA6/M,EAAAvkO,KAAAijO,WAAApgO,KACA49M,EAAAzgN,KAAAshN,eAAA,gEACAkjB,EAAAD,EAAA/iO,SAAA,mBACAuR,EAAAwxN,EAAA/iO,SAAA,yBACA6iB,EAzLA,SAAA6+M,EAAAsB,EAAAzxN,GACA,IAAAy/L,EAAAltM,EAAA8C,KAAAq8N,2BAAAD,EAAAzxN,GACAw0M,EAAA/U,EAAA,GACAgV,EAAAhV,EAAA,GACA/rL,EAAA+rL,EAAA,GACAkyB,EAAAlyB,EAAA,GACA,GAAA+U,IAAA9gM,GAAA+gM,IAAAkd,EACA,eAAAxB,EAAA,GAAAA,EAAA,IAEA,IAAAxxN,GAAAwxN,EAAA,GAAAA,EAAA,KAAAz8M,EAAA8gM,GACA51M,GAAAuxN,EAAA,GAAAA,EAAA,KAAAwB,EAAAld,GACA,OAAA91M,EAAA,IAAAC,EAAAuxN,EAAA,GAAA3b,EAAA71M,EAAAwxN,EAAA,GAAA1b,EAAA71M,GAXA,CAyLA+S,EAAAw+M,KAAAsB,EAAAzxN,GACA,OAAA0tM,EAAAh5C,KAAA,SAAAw5C,GACA,IAAAh2L,EAAA,IAAA+0L,EAAA/6L,aAEA,OADAgG,EAAAN,MAAArlB,EAAA2gB,IAAA0+M,iBAAAjgN,EAAAw+M,KAAA7+M,EAAAtR,IACAsgM,EAAA8I,iBACAh0M,OAAA6+J,EAAAi8D,WACAtoB,OACAsG,YACA11L,aAAAN,IACSw8I,KAAA,WAGT,OAFAx8I,EAAAN,MAAArlB,EAAA2gB,IAAA2+M,kBACA59D,EAAAi8D,WAAAr8N,QACAqkB,SAKA/oB,IAAA,WACA/B,IAAA,WACA,WAAAH,KAAA4sK,OAGA5sK,KAAA6kO,YAAA7kO,KAAA4sK,UAGA1qK,IAAA,YACA/B,IAAA,WACA,WAAAH,KAAA4sK,OAGA5sK,KAAA8kO,aAAA9kO,KAAA4sK,WAIAuzD,EA7MA,GAgNAD,EAAA,WACA,SAAAA,IACAiB,EAAAnhO,KAAAkgO,GAEAlgO,KAAAuQ,MAAA,EACAvQ,KAAAguK,MAAA1oK,EAAAy/N,0BAAAC,MACAhlO,KAAAilO,WAAA,GACAjlO,KAAAklO,uBAAA,EACAllO,KAAAmlO,qBAAA,EA6EA,OA1EA/2B,EAAA8xB,IACAh+N,IAAA,WACA5C,MAAA,SAAAiR,GACAkN,OAAAC,UAAAnN,KACAvQ,KAAAuQ,YAIArO,IAAA,WACA5C,MAAA,SAAA0uK,GACA,GAAAA,EAGA,OAAAA,EAAAjuK,MACA,QACAC,KAAAguK,MAAA1oK,EAAAy/N,0BAAAC,MACA,MACA,QACAhlO,KAAAguK,MAAA1oK,EAAAy/N,0BAAAK,OACA,MACA,QACAplO,KAAAguK,MAAA1oK,EAAAy/N,0BAAAM,QACA,MACA,QACArlO,KAAAguK,MAAA1oK,EAAAy/N,0BAAAO,MACA,MACA,QACAtlO,KAAAguK,MAAA1oK,EAAAy/N,0BAAAQ,cAOArjO,IAAA,eACA5C,MAAA,SAAA2lO,GACA,GAAAxjO,MAAAC,QAAAujO,MAAAnjO,OAAA,GAGA,IAFA,IAAA0jO,KACAC,KACA9jO,EAAA,EAAAmI,EAAAm7N,EAAAnjO,OAA+CH,EAAAmI,EAASnI,IAAA,CACxD,IAAAwzE,EAAA8vJ,EAAAtjO,GAEA,MADAwzE,GAAA,GACA,CACAqwJ,KACA,MACWrwJ,EAAA,IACXswJ,MAGAD,IAAAC,EACAzlO,KAAAilO,YAEAjlO,KAAAuQ,MAAA,OAEO00N,IACPjlO,KAAAuQ,MAAA,MAIArO,IAAA,4BACA5C,MAAA,SAAAomO,GACAjoN,OAAAC,UAAAgoN,KACA1lO,KAAAklO,uBAAAQ,MAIAxjO,IAAA,0BACA5C,MAAA,SAAAomO,GACAjoN,OAAAC,UAAAgoN,KACA1lO,KAAAmlO,qBAAAO,OAKAxF,EArFA,GAwFA0B,EAAA,SAAA+D,GAGA,SAAA/D,EAAAv2N,GACA81N,EAAAnhO,KAAA4hO,GAEA,IAAA7xD,EAAA6wD,EAAA5gO,MAAA4hO,EAAAV,WAAA/hO,OAAAuhO,eAAAkB,IAAA99N,KAAA9D,KAAAqL,IAEAxI,EAAAwI,EAAAxI,KACA6hB,EAAAqrJ,EAAArrJ,KACAA,EAAAkhN,eAAAtgO,EAAAugO,eAAAC,OACAphN,EAAAqhN,UAAAh2D,EAAAi2D,oBAAAnjO,GACA6hB,EAAAuhN,WAAA3gO,EAAA8C,KAAAo5N,uBAAA3+N,EAAA,QACA6hB,EAAAwhN,mBAAA5gO,EAAA2nK,mBAAApqK,EAAA1C,IAAA,WACAukB,EAAAyhN,kBAAA7gO,EAAA8C,KAAAo5N,uBAAA3+N,EAAA,UACA,IAAA0+N,EAAAj8N,EAAA8C,KAAAo5N,uBAAA3+N,EAAA,MAWA,OAVA6hB,EAAA68M,aAAA/7N,EAAAxB,QAAAu9N,KAAAxhO,KAAA,KACAgwK,EAAAq2D,eAAA9gO,EAAA8C,KAAAo5N,uBAAA3+N,EAAA,OAAA2C,EAAAjF,KAAAkC,MACAiiB,EAAA2hN,WAAA/gO,EAAA8C,KAAAo5N,uBAAA3+N,EAAA,QACA4a,OAAAC,UAAAgH,EAAA2hN,aAAA3hN,EAAA2hN,WAAA,KACA3hN,EAAA2hN,WAAA,GAEA3hN,EAAA4hN,SAAAv2D,EAAAw2D,aAAAjhO,EAAAkhO,oBAAAC,UACA,QAAA/hN,EAAA68M,WACAxxD,EAAA0yD,SAAAn9N,EAAAg+N,eAAAE,QAEAzzD,EA4CA,OArEA+wD,EAAAc,EAsECzB,GA1CD/xB,EAAAwzB,IACA1/N,IAAA,sBACA5C,MAAA,SAAAuD,GACA,IAAAA,EAAAP,IAAA,OAAAO,EAAAP,IAAA,UAEA,SADAgD,EAAA4O,MAAA,yDACA,GAEA,IAAArR,EAAAP,IAAA,UACA,SAAAgD,EAAA2nK,mBAAApqK,EAAA1C,IAAA,MAEA,IAAA4lO,KACAljO,EAAAP,IAAA,MACAyjO,EAAAhvB,WAAAzxM,EAAA2nK,mBAAApqK,EAAA1C,IAAA,OAGA,IADA,IAAAumO,EAAA7jO,EACA6jO,EAAApkO,IAAA,YACAokO,IAAAvmO,IAAA,aACAqF,EAAA1C,QAAA4jO,KAGAA,EAAApkO,IAAA,MACAyjO,EAAAhvB,WAAAzxM,EAAA2nK,mBAAAy5D,EAAAvmO,IAAA,OAGA,OAAA4lO,EAAA9jN,KAAA,QAGA/f,IAAA,eACA5C,MAAA,SAAA8jO,GACA,SAAApjO,KAAA0kB,KAAA2hN,WAAAjD,MAGAlhO,IAAA,kBACA5C,MAAA,SAAA+zM,EAAAsH,EAAA2pB,GACA,OAAAA,EACAhjO,QAAAC,QAAA,IAAAy+M,EAAA/6L,cAEAm7M,EAAAwB,EAAAhiO,UAAAshO,WAAA/hO,OAAAuhO,eAAAkB,EAAAhiO,WAAA,kBAAAI,MAAA8D,KAAA9D,KAAAqzM,EAAAsH,EAAA2pB,OAIA1C,EAtEA,GAyEAH,EAAA,SAAAkF,GAGA,SAAAlF,EAAAp2N,GACA81N,EAAAnhO,KAAAyhO,GAEA,IAAAnpD,EAAAsoD,EAAA5gO,MAAAyhO,EAAAP,WAAA/hO,OAAAuhO,eAAAe,IAAA39N,KAAA9D,KAAAqL,IAEAitK,EAAA5zJ,KAAAuhN,cAAA3gO,EAAA2nK,mBAAAqL,EAAA5zJ,KAAAuhN,YAAA,IACA,IAAAW,EAAAthO,EAAA8C,KAAAo5N,uBAAAn2N,EAAAxI,KAAA,OACA4a,OAAAC,UAAAkpN,MAAA,GAAAA,EAAA,KACAA,EAAA,MAEAtuD,EAAA5zJ,KAAAmiN,cAAAD,EACA,IAAAE,EAAAxhO,EAAA8C,KAAAo5N,uBAAAn2N,EAAAxI,KAAA,UAOA,QANA4a,OAAAC,UAAAopN,MAAA,KACAA,EAAA,MAEAxuD,EAAA5zJ,KAAAlb,OAAAs9N,EACAxuD,EAAA5zJ,KAAAqiN,UAAAzuD,EAAAiuD,aAAAjhO,EAAAkhO,oBAAAQ,WACA1uD,EAAA5zJ,KAAAuiN,KAAA3uD,EAAAiuD,aAAAjhO,EAAAkhO,oBAAAU,QAAA5uD,EAAAiuD,aAAAjhO,EAAAkhO,oBAAAQ,aAAA1uD,EAAAiuD,aAAAjhO,EAAAkhO,oBAAAW,YAAA7uD,EAAAiuD,aAAAjhO,EAAAkhO,oBAAAY,aAAA,OAAA9uD,EAAA5zJ,KAAAlb,OACA8uK,EAyBA,OA7CAwoD,EAAAW,EA8CCG,GAvBDxzB,EAAAqzB,IACAv/N,IAAA,kBACA5C,MAAA,SAAA+zM,EAAAsH,EAAA2pB,GACA,GAAAA,GAAAtkO,KAAAijO,WACA,OAAA7C,EAAAqB,EAAA7hO,UAAAshO,WAAA/hO,OAAAuhO,eAAAe,EAAA7hO,WAAA,kBAAAI,MAAA8D,KAAA9D,KAAAqzM,EAAAsH,EAAA2pB,GAEA,IAAA/4M,EAAA,IAAAy0L,EAAA/6L,aACA,IAAAjlB,KAAA0kB,KAAAyhN,kBACA,OAAA7kO,QAAAC,QAAAgqB,GAEA,IAAApjB,EAAA,IAAAkU,EAAAxX,UAAAS,EAAA0B,eAAAhH,KAAA0kB,KAAAyhN,oBACA,OAAA9yB,EAAA8I,iBACAh0M,SACAwyM,OACAsG,UAAAjhN,KAAAomO,eACA76M,iBACOk8I,KAAA,WACP,OAAAl8I,QAKAk2M,EA9CA,GAiDAC,EAAA,SAAA2F,GAGA,SAAA3F,EAAAr2N,GACA81N,EAAAnhO,KAAA0hO,GAEA,IAAAxd,EAAA0c,EAAA5gO,MAAA0hO,EAAAR,WAAA/hO,OAAAuhO,eAAAgB,IAAA59N,KAAA9D,KAAAqL,IAcA,OAZA64M,EAAAx/L,KAAA4iN,UAAApjB,EAAAqiB,aAAAjhO,EAAAkhO,oBAAAe,SAAArjB,EAAAqiB,aAAAjhO,EAAAkhO,oBAAAgB,YACAtjB,EAAAx/L,KAAA+iN,YAAAvjB,EAAAqiB,aAAAjhO,EAAAkhO,oBAAAe,SAAArjB,EAAAqiB,aAAAjhO,EAAAkhO,oBAAAgB,YACAtjB,EAAAx/L,KAAAgjN,WAAAxjB,EAAAqiB,aAAAjhO,EAAAkhO,oBAAAgB,YACAtjB,EAAAx/L,KAAA4iN,SACApjB,EAAAyjB,mBACKzjB,EAAAx/L,KAAA+iN,YACLvjB,EAAA0jB,oBAAAv8N,GACK64M,EAAAx/L,KAAAgjN,WACLxjB,EAAA2jB,mBAAAx8N,MAEA/F,EAAA4O,MAAA,oDAEAgwM,EAqDA,OAxEA4c,EAAAY,EAyECE,GAnDDxzB,EAAAszB,IACAx/N,IAAA,mBACA5C,MAAA,cACAkG,EAAAxB,QAAAhE,KAAA0kB,KAAAuhN,cAGAjmO,KAAA0kB,KAAAuhN,WAAAjmO,KAAA0kB,KAAAuhN,WAAAlmO,SAGAmC,IAAA,sBACA5C,MAAA,SAAA+L,GACArL,KAAA0kB,KAAAuhN,WAAAjmO,KAAA0kB,KAAAojN,YAAA,KACA,IAAAC,EAAA18N,EAAAxI,KAAA1C,IAAA,UACA,MAAAqF,EAAA1C,QAAAilO,MAAAzlO,IAAA,MACA,IAAA0lO,EAAAD,EAAA5nO,IAAA,QACAqF,EAAAxB,QAAAgkO,KACAhoO,KAAA0kB,KAAAuhN,WAAA+B,EAAAjoO,MAGA,IAAAmkO,EAAA74N,EAAAxI,KAAA1C,IAAA,MACA,MAAAqF,EAAA1C,QAAAohO,GAAA,CAGA,IAAAC,EAAAD,EAAA/jO,IAAA,KACA,MAAAqF,EAAA1C,QAAAqhO,GAIA,IADA,IAAA/hO,EAAA+hO,EAAAhiO,UACAR,EAAA,EAAAC,EAAAQ,EAAAN,OAAuCH,EAAAC,EAAQD,IAC/C,WAAAS,EAAAT,GAAA,CACA3B,KAAA0kB,KAAAojN,YAAA1lO,EAAAT,GACA,WAKAO,IAAA,qBACA5C,MAAA,SAAA+L,GACAA,EAAAxI,KAAAP,IAAA,KAIAw9M,EAAAh2C,QAAAyC,qBACAC,SAAAnhK,EAAAxI,KACA4pK,UAAAzsK,KAAA0kB,KACAgoJ,WAAArhK,EAAAy/J,WAAA4B,gBANApnK,EAAA4O,MAAA,kEAWAwtN,EAzEA,GA4EAC,EAAA,SAAAsG,GAGA,SAAAtG,EAAAt2N,GACA81N,EAAAnhO,KAAA2hO,GAEA,IAAAuG,EAAAtH,EAAA5gO,MAAA2hO,EAAAT,WAAA/hO,OAAAuhO,eAAAiB,IAAA79N,KAAA9D,KAAAqL,IAEA68N,EAAAxjN,KAAAy0J,WACA,IAAAA,EAAA7zK,EAAA8C,KAAAo5N,uBAAAn2N,EAAAxI,KAAA,OACA,GAAApB,MAAAC,QAAAy3K,GAEA,IADA,IAAA14K,EAAA4K,EAAA5K,KACAkB,EAAA,EAAAC,EAAAu3K,EAAAr3K,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAy9G,EAAA3+G,EAAAU,WAAAg4K,EAAAx3K,IACAwmO,EAAA1mO,MAAAC,QAAA09G,GACA8oH,EAAAxjN,KAAAy0J,QAAAx3K,IACAymO,YAAAD,EAAA1nO,EAAAU,WAAAi+G,EAAA,IAAAA,EACAipH,gBAAA/iO,EAAA2nK,mBAAAk7D,EAAA1nO,EAAAU,WAAAi+G,EAAA,IAAAA,IASA,OALA39G,MAAAC,QAAAwmO,EAAAxjN,KAAAuhN,cACAiC,EAAAxjN,KAAAuhN,YAAAiC,EAAAxjN,KAAAuhN,aAEAiC,EAAAxjN,KAAA4jN,MAAAJ,EAAA3B,aAAAjhO,EAAAkhO,oBAAA+B,OACAL,EAAAxjN,KAAA8jN,YAAAN,EAAA3B,aAAAjhO,EAAAkhO,oBAAAiC,aACAP,EAGA,OA5BApH,EAAAa,EA6BCC,GADDD,EA7BA,GAgCAL,EAAA,SAAAoH,GAGA,SAAApH,EAAAF,GACAD,EAAAnhO,KAAAshO,GAEA,IAEAqH,EAAA/H,EAAA5gO,MAAAshO,EAAAJ,WAAA/hO,OAAAuhO,eAAAY,IAAAx9N,KAAA9D,KAAAohO,IAWA,OATAuH,EAAAjkN,KAAAkhN,eAAAtgO,EAAAugO,eAAA+C,KACAD,EAAAjkN,KAAAs+M,cACA2F,EAAAjkN,KAAA3kB,KAAA,UAEA4oO,EAAAjkN,KAAAw+M,KAAA,GAAAyF,EAAAjkN,KAAAw+M,KAAA,GARA,GASAyF,EAAAjkN,KAAAw+M,KAAA,GAAAyF,EAAAjkN,KAAAw+M,KAAA,GATA,GAUAyF,EAAAjkN,KAAA3kB,KAAAqhO,EAAAv+N,KAAAP,IAAA,QAAA8+N,EAAAv+N,KAAA1C,IAAA,QAAAJ,KAAA,QAEA4oO,EAAAE,cAAAzH,EAAAv+N,MACA8lO,EAGA,OArBA7H,EAAAQ,EAsBCnB,GADDmB,EAtBA,GAyBAD,EAAA,SAAAyH,GAGA,SAAAzH,EAAAh2N,GACA81N,EAAAnhO,KAAAqhO,GAEA,IAAA0H,EAAAnI,EAAA5gO,MAAAqhO,EAAAH,WAAA/hO,OAAAuhO,eAAAW,IAAAv9N,KAAA9D,KAAAqL,IAQA,OANA09N,EAAArkN,KAAAkhN,eAAAtgO,EAAAugO,eAAAmD,KACAlpB,EAAAh2C,QAAAyC,qBACAC,SAAAnhK,EAAAxI,KACA4pK,UAAAs8D,EAAArkN,KACAgoJ,WAAArhK,EAAAy/J,WAAA4B,aAEAq8D,EAGA,OAhBAjI,EAAAO,EAiBClB,GADDkB,EAjBA,GAoBAQ,EAAA,SAAAoH,GAGA,SAAApH,EAAAT,GACAD,EAAAnhO,KAAA6hO,GAEA,IAAAqH,EAAAtI,EAAA5gO,MAAA6hO,EAAAX,WAAA/hO,OAAAuhO,eAAAmB,IAAA/9N,KAAA9D,KAAAohO,IAEA8H,EAAAxkN,KAAAkhN,eAAAtgO,EAAAugO,eAAAsD,MACA,IAAAtmO,EAAAu+N,EAAAv+N,KACAumO,EAAAvmO,EAAA1C,IAAA,UACA,IAAAipO,EAEA,SADA9jO,EAAA4O,MAAA,gEACA0sN,EAAAsI,GAEA,IAAAG,EAAAD,EAAAjpO,IAAA,WAWA,GAVA+oO,EAAAxkN,KAAA4kN,cAAA9jO,EAAAxB,QAAAqlO,KAAAtpO,KAAA,KACAmpO,EAAAxkN,KAAA6kN,SAAA1mO,EAAAZ,OAAA,UAAAkB,WACA+lO,EAAAxkN,KAAAioJ,SAAArnK,EAAA2nK,mBAAAm8D,EAAAjpO,IAAA,UACA+oO,EAAAxkN,KAAA2/M,YAAA/+N,EAAA2nK,mBAAAm8D,EAAAjpO,IAAA,iBACAipO,EAAA9mO,IAAA,MAGA4mO,EAAAvG,SAAAyG,EAAA5nO,SAAA,MACA0nO,EAAAxkN,KAAApM,MAAA4wN,EAAA5wN,OAHA4wN,EAAAxkN,KAAApM,MAAA,MAKA4wN,EAAA5oB,SAAA,CACA,IAAAkpB,EAAAJ,EAAAjpO,IAAA,KACA+oO,EAAArE,YAAA2E,IACAN,EAAAzG,SAAA+G,GAGA,OAAAN,EAGA,OAlCApI,EAAAe,EAmCC1B,GADD0B,EAnCA,GAsCAC,EAAA,SAAA2H,GAGA,SAAA3H,EAAAV,GACAD,EAAAnhO,KAAA8hO,GAEA,IAAA4H,EAAA9I,EAAA5gO,MAAA8hO,EAAAZ,WAAA/hO,OAAAuhO,eAAAoB,IAAAh+N,KAAA9D,KAAAohO,IAEAsI,EAAAhlN,KAAAkhN,eAAAtgO,EAAAugO,eAAA8D,KACA,IAAA9mO,EAAAu+N,EAAAv+N,KAGA,OAFA6mO,EAAAhlN,KAAAklN,gBAAAtkO,EAAA8C,KAAAu7N,cAAA9gO,EAAArB,SAAA,MACAkoO,EAAAb,cAAAhmO,GACA6mO,EAGA,OAdA5I,EAAAgB,EAeC3B,GADD2B,EAfA,GAkBAC,EAAA,SAAA8H,GAGA,SAAA9H,EAAAX,GACAD,EAAAnhO,KAAA+hO,GAEA,IAAA+H,EAAAlJ,EAAA5gO,MAAA+hO,EAAAb,WAAA/hO,OAAAuhO,eAAAqB,IAAAj+N,KAAA9D,KAAAohO,IAIA,OAFA0I,EAAAplN,KAAAkhN,eAAAtgO,EAAAugO,eAAAkE,OACAD,EAAAjB,cAAAzH,EAAAv+N,MACAinO,EAGA,OAZAhJ,EAAAiB,EAaC5B,GADD4B,EAbA,GAgBAC,EAAA,SAAAgI,GAGA,SAAAhI,EAAAZ,GACAD,EAAAnhO,KAAAgiO,GAEA,IAAAiI,EAAArJ,EAAA5gO,MAAAgiO,EAAAd,WAAA/hO,OAAAuhO,eAAAsB,IAAAl+N,KAAA9D,KAAAohO,IAIA,OAFA6I,EAAAvlN,KAAAkhN,eAAAtgO,EAAAugO,eAAAqE,OACAD,EAAApB,cAAAzH,EAAAv+N,MACAonO,EAGA,OAZAnJ,EAAAkB,EAaC7B,GADD6B,EAbA,GAgBAC,EAAA,SAAAkI,GAGA,SAAAlI,EAAAb,GACAD,EAAAnhO,KAAAiiO,GAEA,IAAAmI,EAAAxJ,EAAA5gO,MAAAiiO,EAAAf,WAAA/hO,OAAAuhO,eAAAuB,IAAAn+N,KAAA9D,KAAAohO,IAEAgJ,EAAA1lN,KAAAkhN,eAAAtgO,EAAAugO,eAAAwE,SACA,IAAAxnO,EAAAu+N,EAAAv+N,KACAynO,EAAAznO,EAAArB,SAAA,YACA4oO,EAAA1lN,KAAA6lN,YACA,QAAA5oO,EAAA,EAAAC,EAAA0oO,EAAAxoO,OAA4CH,EAAAC,EAAQD,GAAA,EACpDyoO,EAAA1lN,KAAA6lN,SAAAhtN,MACA3C,EAAA0vN,EAAA3oO,GACAqU,EAAAs0N,EAAA3oO,EAAA,KAIA,OADAyoO,EAAAvB,cAAAhmO,GACAunO,EAGA,OArBAtJ,EAAAmB,EAsBC9B,GADD8B,EAtBA,GAyBAC,EAAA,SAAAsI,GAGA,SAAAtI,EAAAd,GACAD,EAAAnhO,KAAAkiO,GAEA,IAAAuI,EAAA7J,EAAA5gO,MAAAkiO,EAAAhB,WAAA/hO,OAAAuhO,eAAAwB,IAAAp+N,KAAA9D,KAAAohO,IAGA,OADAqJ,EAAA/lN,KAAAkhN,eAAAtgO,EAAAugO,eAAA6E,QACAD,EAGA,OAXA3J,EAAAoB,EAYCD,GADDC,EAZA,GAeAC,EAAA,SAAAwI,GAGA,SAAAxI,EAAAf,GACAD,EAAAnhO,KAAAmiO,GAEA,IAAAyI,EAAAhK,EAAA5gO,MAAAmiO,EAAAjB,WAAA/hO,OAAAuhO,eAAAyB,IAAAr+N,KAAA9D,KAAAohO,IAIA,OAFAwJ,EAAAlmN,KAAAkhN,eAAAtgO,EAAAugO,eAAAgF,UACAD,EAAA/B,cAAAzH,EAAAv+N,MACA+nO,EAGA,OAZA9J,EAAAqB,EAaChC,GADDgC,EAbA,GAgBAC,EAAA,SAAA0I,GAGA,SAAA1I,EAAAhB,GACAD,EAAAnhO,KAAAoiO,GAEA,IAAA2I,EAAAnK,EAAA5gO,MAAAoiO,EAAAlB,WAAA/hO,OAAAuhO,eAAA0B,IAAAt+N,KAAA9D,KAAAohO,IAIA,OAFA2J,EAAArmN,KAAAkhN,eAAAtgO,EAAAugO,eAAAN,UACAwF,EAAAlC,cAAAzH,EAAAv+N,MACAkoO,EAGA,OAZAjK,EAAAsB,EAaCjC,GADDiC,EAbA,GAgBAC,EAAA,SAAA2I,GAGA,SAAA3I,EAAAjB,GACAD,EAAAnhO,KAAAqiO,GAEA,IAAA4I,EAAArK,EAAA5gO,MAAAqiO,EAAAnB,WAAA/hO,OAAAuhO,eAAA2B,IAAAv+N,KAAA9D,KAAAohO,IAIA,OAFA6J,EAAAvmN,KAAAkhN,eAAAtgO,EAAAugO,eAAAqF,SACAD,EAAApC,cAAAzH,EAAAv+N,MACAooO,EAGA,OAZAnK,EAAAuB,EAaClC,GADDkC,EAbA,GAgBAC,EAAA,SAAA6I,GAGA,SAAA7I,EAAAlB,GACAD,EAAAnhO,KAAAsiO,GAEA,IAAA8I,EAAAxK,EAAA5gO,MAAAsiO,EAAApB,WAAA/hO,OAAAuhO,eAAA4B,IAAAx+N,KAAA9D,KAAAohO,IAIA,OAFAgK,EAAA1mN,KAAAkhN,eAAAtgO,EAAAugO,eAAAwF,UACAD,EAAAvC,cAAAzH,EAAAv+N,MACAuoO,EAGA,OAZAtK,EAAAwB,EAaCnC,GADDmC,EAbA,GAgBAC,EAAA,SAAA+I,GAGA,SAAA/I,EAAAnB,GACAD,EAAAnhO,KAAAuiO,GAEA,IAAAgJ,EAAA3K,EAAA5gO,MAAAuiO,EAAArB,WAAA/hO,OAAAuhO,eAAA6B,IAAAz+N,KAAA9D,KAAAohO,IAIA,OAFAmK,EAAA7mN,KAAAkhN,eAAAtgO,EAAAugO,eAAA2F,MACAD,EAAA1C,cAAAzH,EAAAv+N,MACA0oO,EAGA,OAZAzK,EAAAyB,EAaCpC,GADDoC,EAbA,GAgBAC,EAAA,SAAAiJ,GAGA,SAAAjJ,EAAApB,GACAD,EAAAnhO,KAAAwiO,GAEA,IAAAkJ,EAAA9K,EAAA5gO,MAAAwiO,EAAAtB,WAAA/hO,OAAAuhO,eAAA8B,IAAA1+N,KAAA9D,KAAAohO,IAEA1lC,EAAA,IAAAokB,EAAAn2C,SAAAy3D,EAAAv+N,KAAA1C,IAAA,MAAAihO,EAAA3gO,MAIA,OAHAirO,EAAAhnN,KAAAkhN,eAAAtgO,EAAAugO,eAAA8F,eACAD,EAAAhnN,KAAAg3K,OAAAzsB,aACAy8D,EAAA7C,cAAAzH,EAAAv+N,MACA6oO,EAGA,OAdA5K,EAAA0B,EAeCrC,GADDqC,EAfA,GAkBAnjO,EAAA8gO,aACA9gO,EAAA6gO,wBACA7gO,EAAAqjN,sDCv5BAvjN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAoiN,wBAEA,IAAAn8M,EAAYC,EAAQ,KAEpBqmO,EAAYrmO,EAAQ,KAEpB8W,EAAc9W,EAAQ,KAEtBC,EAAkBD,EAAQ,KAE1BsmO,EAAatmO,EAAQ,KAErBw1L,EAAiBx1L,EAAQ,KAEzBumO,EAAevmO,EAAQ,KAEvBwmO,EAAsBxmO,EAAQ,KAE9BymO,EAAezmO,EAAQ,KAEvBmlK,EAAcnlK,EAAQ,KAEtB0mO,EAAY1mO,EAAQ,KAEpBslK,EAAkBtlK,EAAQ,KAE1B2mO,EAAiB3mO,EAAQ,KAEzB4mO,EAAe5mO,EAAQ,KAEvB26M,EAAgB36M,EAAQ,KAExBiX,EAAmBjX,EAAQ,KAE3B6mO,EAAkB7mO,EAAQ,KAE1By6M,EAAqBz6M,EAAQ,KAE7B8mO,EAAa9mO,EAAQ,KAErBk8M,EAAA,WACA,IAAA6qB,GACAvnN,mBACA25L,cAAA,EACAC,mBACAC,0BAAAt5M,EAAAinO,oBAAAC,OACA3tB,gBACA7P,oBAEA,SAAAy9B,EAAAx8D,GACA,IAAAxvK,EAAAwvK,EAAAxvK,KACAwgN,EAAAhxC,EAAAgxC,UACA5H,EAAAppC,EAAAopC,QACAqzB,EAAAz8D,EAAAlrJ,gBACAA,WAAA2nN,KACAt6N,EAAA69J,EAAA79J,mBAEApS,KAAAS,OACAT,KAAAihN,YACAjhN,KAAAq5M,UACAr5M,KAAA+kB,kBACA/kB,KAAAoS,qBAkCA,SAAAqvM,EAAAvxC,GACA,IAAAlJ,EAAAhnK,KAEA8qK,EAAAoF,EAAApF,WACArqK,EAAAyvK,EAAAzvK,KACA44M,EAAAnpC,EAAAmpC,QACAhvL,EAAA6lJ,EAAA7lJ,UACAu2L,EAAA1wC,EAAA0wC,UACA11C,EAAAgF,EAAAhF,UACAC,EAAA+E,EAAA/E,iBACAwhE,EAAAz8D,EAAAiJ,QACAA,WAAAwzD,EAAA,KAAAA,EACAv6N,EAAA89J,EAAA99J,mBAEApS,KAAA8qK,aACA9qK,KAAAS,OACAT,KAAAq5M,UACAr5M,KAAAqqB,YACArqB,KAAA4gN,YACA5gN,KAAAkrK,YACAlrK,KAAAmrK,mBACAnrK,KAAAm5K,WAAAmzD,EACAtsO,KAAAoS,qBACApS,KAAA4sO,iBAAA,SAAA7sO,GACA,IAAA8sO,EAAA7lE,EAAAmE,iBAAAprK,GACA,OAAA8sO,EACAvrO,QAAAC,QAAAsrO,GAEA7lE,EAAAqyC,QAAAT,gBAAA,oBAAgE74M,SAAa0nK,KAAA,SAAA/iJ,GAI7E,OAHAA,EAAAooN,kBAAAxnO,EAAAynO,oBAAAC,OACAhmE,EAAAmE,iBAAAprK,GAAA2kB,GAEAA,KAMA,SAAAuoN,IACAjtO,KAAA4G,QAvEA6lO,EAAA7sO,WACAstO,UAAA,SAAAC,GACA,OAAAA,aAAA3wN,EAAA0D,YAAAusN,EAAAW,YAAAD,EAAAntO,KAAAS,KAAAT,KAAAihN,UAAAjhN,KAAAoS,qBAEAiC,OAAA,SAAA84N,GACA,IACAE,EADAF,EAAAtqO,KACA1C,IAAA,mBAEA4Q,GADAs8N,EAAAxiE,EAAAx7J,WAAA4C,MAAAo7N,EAAArtO,KAAAS,KAAAT,KAAAihN,UAAAjhN,KAAAoS,qBACArB,SAEA,OADA/Q,KAAAq5M,QAAAT,gBAAA,cAAAu0B,EAAAroN,MAAA9kB,KAAA+kB,iBAAAhU,IACA02J,KAAA,SAAAqV,GACA,IAAAp4J,EAAAo4J,EAAAp4J,KACA,WAAArI,EAAAxX,OAAA6f,EAAA,EAAAA,EAAA5iB,OAAAqrO,EAAAtqO,UAIA4pO,EAAAa,YAAA,SAAAH,EAAA1sO,EAAA0R,EAAAC,GACA,IAAAvP,EAAAsqO,EAAAtqO,KACA,GAAAA,EAAAP,IAAA,gBAAAO,EAAAP,IAAA,MACA,SAEA,IAAA4P,EAAA24J,EAAAx7J,WAAA4C,MAAApP,EAAA1C,IAAA,mBAAAM,EAAA0R,EAAAC,GACA,sBAAAF,EAAAnS,MAAA,cAAAmS,EAAAnS,OAAAmS,EAAAkC,gBAAAvR,EAAArB,SAAA,gBAEAirO,EAAAW,YAAA,SAAAD,EAAA1sO,EAAA0R,EAAAC,GACA,IAAAvP,EAAAsqO,EAAAtqO,KACA,GAAAA,EAAAP,IAAA,gBAAAO,EAAAP,IAAA,MACA,SAEA,IAAA4P,EAAA24J,EAAAx7J,WAAA4C,MAAApP,EAAA1C,IAAA,mBAAAM,EAAA0R,EAAAC,GACA,WAAAF,EAAAnB,UAAA,IAAAmB,EAAAnB,WAAAmB,EAAAkC,gBAAAvR,EAAArB,SAAA,gBA2CAyrO,EAAArtO,WACAwL,MAAA,WACA,UAAApL,KAAAutO,QANA,OASAvtO,KAAAutO,QAAA,EACAvtO,KAAAwtO,SAAAvxB,KAAAC,QAEAt1M,MAAA,WACA5G,KAAAwtO,QAAAvxB,KAAAC,MAdA,GAeAl8M,KAAAutO,QAAA,IA6CA,IAAAE,EAAAnsO,QAAAC,UA41DA,OAz1DAkgN,EAAA7hN,WACA8tO,MAAA,WACA,IAAAC,EAAA95N,UAAA/R,OAAA,YAAA+R,UAAA,GAAAA,UAAA,GAAAy4N,EAEAsB,EAAAzuO,OAAAe,OAAAF,MAEA,OADA4tO,EAAAz0D,QAAAw0D,EACAC,GAGA/rB,cAAA,SAAAZ,GACA,OAAAz7M,EAAA1C,QAAAm+M,GACA,SAEA,IAAA70C,EAAAjtK,OAAAe,OAAA,MACA+gN,EAAAtgN,QACAyrK,EAAA60C,EAAAtgN,WAIA,IAFA,IAAAktO,GAAA5sB,GACAxgN,EAAAT,KAAAS,KACAotO,EAAA/rO,QAAA,CACA,IAAAI,EAAAP,EAAAC,EACAmvK,EAAA88D,EAAA7lO,QACA8lO,EAAA/8D,EAAA5wK,IAAA,aACA,MAAAqF,EAAA1C,QAAAgrO,GAAA,CACA,IAAAC,EAAAD,EAAA3rO,UACA,IAAAR,EAAA,EAAAC,EAAAmsO,EAAAjsO,OAAoDH,EAAAC,EAAQD,IAAA,CAC5DO,EAAA6rO,EAAApsO,GACA,IACAqsO,EADAF,EAAA3tO,IAAA+B,GACA/B,IAAA,MACA,MAAAqF,EAAAxB,QAAAgqO,IAAA,WAAAA,EAAAjuO,KACA,UAIA,IAAAkuO,EAAAl9D,EAAA5wK,IAAA,WACA,MAAAqF,EAAA1C,QAAAmrO,GAAA,CAGA,IAAAC,EAAAD,EAAA9rO,UACA,IAAAR,EAAA,EAAAC,EAAAssO,EAAApsO,OAA6CH,EAAAC,EAAQD,IAAA,CACrDO,EAAAgsO,EAAAvsO,GACA,IAAAwsO,EAAAF,EAAAhsO,OAAAC,GACA,MAAAsD,EAAAzD,OAAAosO,GAAA,CACA,GAAA/hE,EAAA+hE,EAAAhrO,YACA,SAEAgrO,EAAA1tO,EAAAuB,MAAAmsO,GAEA,MAAA3oO,EAAAhB,UAAA2pO,GAAA,CAGA,GAAAA,EAAAtrO,KAAAlC,MAAA,CACA,GAAAyrK,EAAA+hE,EAAAtrO,KAAAlC,OACA,SAEAyrK,EAAA+hE,EAAAtrO,KAAAlC,UAEA,IAAAytO,EAAAD,EAAAtrO,KAAA1C,IAAA,iBACAqF,EAAA1C,QAAAsrO,MAAAztO,OAAAyrK,EAAAgiE,EAAAztO,SACAktO,EAAAtwN,KAAA6wN,GACAA,EAAAztO,QACAyrK,EAAAgiE,EAAAztO,eAKA,UAEA0tO,iBAAA,SAAAptB,EAAAqtB,EAAAC,EAAAhjN,EAAAovL,EAAA6zB,GACA,IAAA3rO,EAAAyrO,EAAAzrO,KACAkQ,EAAAlQ,EAAArB,SAAA,UACAgjO,EAAA3hO,EAAArB,SAAA,QACAitO,EAAA5rO,EAAA1C,IAAA,SACA,GAAAsuO,EAAA,CACA,IAAAC,GACA37N,SACAyxN,OACA+J,QACAI,YACAC,aAEAC,EAAAJ,EAAAtuO,IAAA,KACAktO,EAAA,QACA7nO,EAAAxB,QAAA6qO,EAAA,kBACAH,EAAAC,SAAAF,EAAAtuO,IAAA,SACAuuO,EAAAE,SAAAH,EAAAtuO,IAAA,SACAsuO,EAAAnsO,IAAA,QACA+qO,EAAAxiE,EAAAx7J,WAAA4C,MAAAw8N,EAAAtuO,IAAA,MAAAH,KAAAS,KAAAwgN,EAAAjhN,KAAAoS,sBAGAm8N,KAAAO,WACAzB,KAAAxiE,EAAAx7J,WAAAsD,WAAAjD,IACA6+N,EAAAO,SAAAzB,EAAA99N,OAAAg/N,EAAAO,SAAA,IAEAvjN,EAAAZ,MAAArlB,EAAA2gB,IAAA8oN,YAAAL,IAGA,OADAnjN,EAAAZ,MAAArlB,EAAA2gB,IAAA+oN,uBAAAj8N,EAAAyxN,IACAxkO,KAAAm8M,iBACAh0M,OAAAmmO,EACA3zB,OACAsG,UAAAp+M,EAAA1C,IAAA,cAAA8gN,EACA11L,eACAijN,iBACO/mE,KAAA,WACPl8I,EAAAZ,MAAArlB,EAAA2gB,IAAAgpN,wBACAR,GACAljN,EAAAZ,MAAArlB,EAAA2gB,IAAAipN,UAAAR,OAIAS,uBAAA,SAAAluB,EAAAksB,EAAAiC,EAAA7jN,EAAAvM,EAAAnC,GACA,IAAAkzJ,EAAA/vK,KAEA6C,EAAAsqO,EAAAtqO,KACAkkB,EAAAlkB,EAAA1C,IAAA,aACA6mB,EAAAnkB,EAAA1C,IAAA,cACA,GAAA4mB,MAAAzhB,EAAA6d,OAAA4D,IAAAC,MAAA1hB,EAAA6d,OAAA6D,GAAA,CAIA,IAAA03L,EAAA1+M,KAAAm5K,QAAAulC,aACA,QAAAA,GAAA33L,EAAAC,EAAA03L,KACAp5M,EAAA4O,MAAA,4DADA,CAIA,IACAiT,EAAA6B,EACA,GAFAnmB,EAAA1C,IAAA,kBAEA,CACA,IAAAoQ,EAAA1N,EAAA1C,IAAA,aACAqQ,EAAA3N,EAAA1C,IAAA,cACAkvO,EAAA9+N,EAAA,KACA++N,EAAAnC,EAAA1oO,SAAA4qO,EAAA7+N,GACA6D,EAAAxR,EAAArB,SAAA,cAiBA,OAhBA2lB,EAAAklN,EAAAkD,SAAAC,YACAF,WACA/+N,QACAC,SACAi/N,wBAAAtC,aAAA9wN,EAAAnX,aACAwqO,gBAAAr7N,KAAA,QAEAgX,UACArC,GAAA7B,GACAoE,EAAAZ,MAAArlB,EAAA2gB,IAAA4B,sBAAAmB,QACAhK,IACAnC,EAAAmC,IACApb,GAAA0B,EAAA2gB,IAAA4B,sBACAmB,UAKA,IAAA2mN,EAAA9sO,EAAA1C,IAAA,kBACAkxN,EAAAxuN,EAAA1C,IAAA,YAEA,GAAAivO,IAAAO,IAAAte,KAAA8b,aAAA3wN,EAAA0D,aAAA6G,EAAAC,EADA,IAWA,OAFAG,EAPA,IAAAklN,EAAAkD,UACA9uO,KAAAT,KAAAS,KACA0R,IAAA8uM,EACAksB,QACAyC,SAAAR,EACAh9N,mBAAApS,KAAAoS,qBAEAy9N,yBACAtkN,EAAAZ,MAAArlB,EAAA2gB,IAAAE,yBAAAgB,IAGA,IAAAy3L,EAAA5+M,KAAAm5K,QAAAylC,0BACAj+M,EAAA,OAAAX,KAAA4gN,UAAAC,cAGA,GAFAt1L,EAAAV,cAAAlqB,GACAqoB,GAAAroB,EAAAomB,EAAAC,GACA43L,IAAAt5M,EAAAinO,oBAAAS,OAAA2C,IAAAte,GAAA8b,aAAA3wN,EAAA0D,YAAAusN,EAAAa,YAAAH,EAAAntO,KAAAS,KAAAwgN,EAAAjhN,KAAAoS,oBASA,OARAmZ,EAAAZ,MAAArlB,EAAA2gB,IAAA6pN,iBAAA9mN,GACAhpB,KAAAq5M,QAAA/tL,KAAA,OAAA3qB,EAAAX,KAAAqqB,UAAA,aAAA8iN,EAAAroN,MAAA9kB,KAAAm5K,QAAAp0J,wBACA/F,IACAnC,EAAAmC,IACApb,GAAA0B,EAAA2gB,IAAA6pN,iBACA9mN,UAKA,IAAA+mN,EAAA,KACAnxB,IAAAt5M,EAAAinO,oBAAAC,SAAAW,aAAA3wN,EAAA0D,YAAAmxM,aAAA70M,EAAA0D,YAAAyvN,aAAAnzN,EAAA0D,cACA6vN,EAAA,IAAAtD,GACAhsO,KAAAT,KAAAS,KACAwgN,YACA5H,QAAAr5M,KAAAq5M,QACAt0L,gBAAA/kB,KAAAm5K,QAAAp0J,gBACA3S,mBAAApS,KAAAoS,sBAGAi6N,EAAAkD,SAAAS,YACA32B,QAAAr5M,KAAAq5M,QACA54M,KAAAT,KAAAS,KACA0R,IAAA8uM,EACAksB,QACAyC,SAAAR,EACAa,cAAAF,EACA39N,mBAAApS,KAAAoS,qBACOq1J,KAAA,SAAAyoE,GACP,IAAA/oN,EAAA+oN,EAAAL,oBACA9/D,EAAAspC,QAAA/tL,KAAA,OAAA3qB,EAAAovK,EAAA1lJ,UAAA,QAAAlD,MAAAzC,KAAA3d,WACO42M,MAAA,SAAA1E,MACP3zM,EAAA4O,MAAA,2BAAA+kM,GACAlpC,EAAAspC,QAAA/tL,KAAA,OAAA3qB,EAAAovK,EAAA1lJ,UAAA,iBAEAkB,EAAAZ,MAAArlB,EAAA2gB,IAAA6C,kBAAAE,GACAhK,IACAnC,EAAAmC,IACApb,GAAA0B,EAAA2gB,IAAA6C,kBACAE,iBA7FA1jB,EAAA4O,MAAA,kDAiGAi8N,YAAA,SAAA5B,EAAAttB,EAAA11L,EAAAovL,EAAAy1B,GACA,IAAAC,EAAA9B,EAAApuO,IAAA,KACAmwO,GACA5kE,QAAA6iE,EAAApuO,IAAA,KAAAJ,KACA+uO,SAAAP,EAAApuO,IAAA,OAEAowO,EAAAhC,EAAApuO,IAAA,MACA,MAAA+/M,EAAA/R,eAAAoiC,GAAA,CAIA,IAHA,IAAAC,EAAAxwO,KAAAoS,mBAAAlS,OAAAqwO,GACAE,EAAA,IAAA7qO,WAAA,KACAksL,EAAA,IAAAj9K,aAAA,GACAlT,EAAA,EAAuBA,EAAA,IAASA,IAChCmwL,EAAA,GAAAnwL,EAAA,IACA6uO,EAAA1+C,EAAA,EAAAA,EAAA,GACA2+C,EAAA9uO,GAAA,IAAAmwL,EAAA,KAEAw+C,EAAAG,cAEA,OAAAzwO,KAAAquO,iBAAAptB,EAAAovB,EAAAC,EAAA/kN,EAAAovL,EAAAy1B,EAAAtyN,MAAA4vN,UAEAgD,iBAAA,SAAA9sO,EAAAolB,EAAAi4L,EAAA57L,EAAAsrN,EAAAplN,EAAAovL,GACA,IAAAriC,EAAAt4K,KAEA4wO,EAAA,IAAA5wB,EAAA/6L,aACA4rN,GAAAF,EAAAxwO,IAAA,aAAA8gN,GACA6vB,EAAAtrO,EAAAjF,KAAAmC,MAAA1C,KAAAS,KAAAowO,GACA,OAAA7wO,KAAAm8M,iBACAh0M,OAAAkd,EACAs1L,OACAsG,UAAA6vB,EACAvlN,aAAAqlN,IACOnpE,KAAA,WACP,SAAAukE,EAAA+E,qBACAlrN,QAAA+qN,EAAA/qN,QACAC,UAAA8qN,EAAA9qN,WACS6qN,EAAA3nN,KACFy+I,KAAA,SAAAupE,GACPzlN,EAAAR,gBAAA6lN,EAAArmN,cACAgB,EAAAZ,MAAA/mB,EAAAotO,IACO,SAAA/3B,GACP,GAAA3gC,EAAAa,QAAA0lC,aAGA,OAFAvmC,EAAA+gC,QAAA/tL,KAAA,sBAAqD+wL,UAAA/2M,EAAAg3M,qBAAAC,iBACrDj3M,EAAA4O,MAAA,yCAAA+kM,EAAA,MAGA,MAAAA,KAIAg4B,cAAA,SAAAhwB,EAAAiwB,EAAAC,EAAA5lN,EAAAovL,EAAA78L,GACA,IAEAszN,EAFAltB,EAAAlkN,KAOA,OAJAkxO,IAEAE,GADAF,IAAArvO,SACA,GAAA9B,MAEAC,KAAAqxO,SAAAD,EAAAD,EAAAlwB,GAAAx5C,KAAA,SAAAoI,GACA,OAAAA,EAAAyhE,KAAAC,YAGA1hE,EAAA2hE,cAAAttB,EAAAjD,EAAA11L,EAAAovL,GAAAlzC,KAAA,WACA,OAAAoI,IACS8tC,MAAA,SAAA1E,GAET,OADAiL,EAAA7K,QAAA/tL,KAAA,sBAAqD+wL,UAAA/2M,EAAAg3M,qBAAAg1B,OACrD,IAAAG,EAAA,mBAAA5F,EAAA6F,UAAA,0BAAAz4B,GAAAppC,EAAAyhE,QANAzhE,IAQOpI,KAAA,SAAAoI,GAGP,OAFA/xJ,EAAAwzN,KAAAzhE,EAAAyhE,KACAzhE,EAAAvkJ,KAAA44L,EAAA7K,SACAxpC,EAAA8hE,cAGAC,WAAA,SAAAtkC,EAAAxvL,GACA,IAAAoqN,EAAAloO,KAEAsxO,EAAAxzN,EAAAwzN,KACAO,EAAAP,EAAAQ,cAAAxkC,GACAykC,KAAAj0N,EAAAk0N,kBAAA1sO,EAAA2sO,kBAAAC,kBACA,GAAAZ,EAAA5sN,OAAAqtN,GAAA/xO,KAAAm5K,QAAAwlC,iBAAA,YAAA7gM,EAAAq0N,eAAApyO,MAOA,IANA,IAAAqyO,EAAA,SAAAC,GACA,IAAAf,EAAAgB,SAAAC,aAAAF,GAAA,CACA,IAAAG,EAAAlB,EAAAgB,SAAAG,UAAAJ,GACAnK,EAAA7uB,QAAA/tL,KAAA,aAAAgmN,EAAAK,WAAA,SAAAU,EAAA,WAAAG,MAGA7wO,EAAA,EAAAC,EAAAiwO,EAAA/vO,OAA2CH,EAAAC,EAAQD,IAAA,CACnD,IAAA+wO,EAAAb,EAAAlwO,GACAywO,EAAAM,EAAAL,UACA,IAAAM,EAAAD,EAAAC,OACAA,KAAAN,UACAD,EAAAO,EAAAN,UAIA,OAAAR,GAEAe,UAAA,SAAA3xB,EAAA4xB,EAAAtnN,EAAAovL,EAAAy1B,GAuEA,IAtEA,IAAAzH,EAAA3oO,KAEA8yO,KACAC,EAAAF,EAAA1wO,UACA2kK,EAAAxlK,QAAAC,UAEAyxO,EAAA,WACA,IAAA9wO,EAAA6wO,EAAApxO,GACArC,EAAAuzO,EAAA1yO,IAAA+B,GACA,OAAAA,GACA,WACA,MACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA4wO,EAAAv1N,MAAArb,EAAA5C,IACA,MACA,WACAwnK,IAAAW,KAAA,WACA,OAAAkhE,EAAAsI,cAAAhwB,EAAA,KAAA3hN,EAAA,GAAAisB,EAAAovL,EAAAy1B,EAAAtyN,OAAA2pJ,KAAA,SAAAkqE,GACApmN,EAAAV,cAAA8mN,GACAmB,EAAAv1N,MAAArb,GAAAyvO,EAAAryO,EAAA,UAGA,MACA,SACAwzO,EAAAv1N,MAAArb,EArYA,SAAA5C,GACA,OAAAkG,EAAAxB,QAAA1E,GACA,oBAEA,OAAAA,EAAAS,MACA,aACA,iBACA,oBACA,eACA,iBACA,aACA,eACA,cACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,oBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,iBACA,mBACA,gBACA,kBACA,UACA,YACA,iBACA,mBACA,YACA,cACA,iBACA,mBAGA,SADAuF,EAAA4O,MAAA,2BAAA5U,EAAAS,MACA,cAxCA,CAqYAT,KACA,MACA,YACA,MAAAkG,EAAAxB,QAAA1E,EAAA,SACAwzO,EAAAv1N,MAAArb,OACA,SAEAsD,EAAA1C,QAAAxD,IACAwnK,IAAAW,KAAA,WACA,OAAAkhE,EAAAwH,YAAA7wO,EAAA2hN,EAAA11L,EAAAovL,EAAAy1B,KAEA0C,EAAAv1N,MAAArb,SAAA,EAEAoD,EAAA4O,MAAA,0BAEA,MACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,YACA5O,EAAAkR,MAAA,0BAAAtU,GACA,MACA,WACAoD,EAAAkR,MAAA,kCAAAtU,KAKAP,EAAA,EAAAC,EAAAmxO,EAAAjxO,OAA6CH,EAAAC,EAAQD,IACrDqxO,IAEA,OAAAlsE,EAAAW,KAAA,WACAqrE,EAAAhxO,OAAA,GACAypB,EAAAZ,MAAArlB,EAAA2gB,IAAA2sN,WAAAE,OAIAzB,SAAA,SAAAD,EAAAE,EAAArwB,GACA,IAAA8nB,EAAA/oO,KAEA,SAAAizO,IACA,OAAA3xO,QAAAC,QAAA,IAAAkwO,EAAA,mBAAA5F,EAAA6F,UAAA,QAAAN,EAAA,qBAAAE,IAEA,IAAAH,EACA1wO,EAAAT,KAAAS,KACA,GAAA6wO,EAAA,CACA,OAAA9rO,EAAAzD,OAAAuvO,GACA,UAAAxuN,MAAA,4CAEAquN,EAAAG,MACO,CACP,IAAA4B,EAAAjyB,EAAA9gN,IAAA,QACA,IAAA+yO,EAIA,SADA5tO,EAAA4O,MAAA,yBACA++N,IAHA9B,EAAA+B,EAAAjxO,OAAAmvO,GAMA,IAAAD,EAEA,SADA7rO,EAAA4O,MAAA,yBACA++N,IAEA,GAAAjzO,KAAAkrK,UAAA5oK,IAAA6uO,GACA,OAAAnxO,KAAAkrK,UAAA/qK,IAAAgxO,GAGA,GADAG,EAAA7wO,EAAAU,WAAAgwO,OACA3rO,EAAA1C,QAAAwuO,GACA,OAAA2B,IAEA,GAAA3B,EAAAzhE,WACA,OAAAyhE,EAAAzhE,WAEA,IAIAsjE,EAmCAC,EAvCAC,KAAA/tO,EAAAshK,2BACA0sE,EAAAtzO,KAAAuzO,gBAAAjC,GACA9iC,EAAA8kC,EAAA9kC,WACAglC,KAAAhuO,EAAAzD,OAAAovO,GAKA,GAHAqC,IACAL,EAAAhC,EAAAhuO,eAEAqC,EAAA1C,QAAA0rM,GAAA,CACAA,EAAAilC,cACAjlC,EAAAilC,YAAAt0O,OAAAe,OAAA,OAEA,IAAAuzO,EAAAjlC,EAAAilC,YACA97C,EAAA27C,EAAA37C,KACA,GAAA87C,EAAA97C,GAAA,CACA,IAAA+7C,EAAAD,EAAA97C,GAAAh0L,SACA,GAAA6vO,GAAAE,GAAA1zO,KAAAkrK,UAAA5oK,IAAAoxO,GAEA,OADA1zO,KAAAkrK,UAAAxnK,SAAAytO,EAAAuC,GACA1zO,KAAAkrK,UAAA/qK,IAAAgxO,QAGAsC,EAAA97C,IAA+Bw7C,OAAAtH,EAAA8H,KAAAC,aAE/BJ,IACAC,EAAA97C,GAAAh0L,SAAAwtO,GAEAgC,EAAAM,EAAA97C,GAAAw7C,OAEAK,EACAxzO,KAAAkrK,UAAA3nK,IAAA4tO,EAAAkC,EAAAvsE,UAEAqsE,IACAA,EAAAnzO,KAAA4gN,UAAAC,eAEA7gN,KAAAkrK,UAAA3nK,IAAA,MAAA4vO,EAAAE,EAAAvsE,aAEAxhK,EAAA0Y,QAAAm1N,EAAA,iCACA7B,EAAAK,WAAA,KAAA3xO,KAAA8qK,WAAAyvC,MAAA,KAAA44B,EACA7B,EAAAzhE,WAAAwjE,EAAAvsE,QAEA,IACAssE,EAAApzO,KAAA6zO,cAAAP,GACO,MAAAr3N,GACPm3N,EAAA9xO,QAAAimK,OAAAtrJ,GAoBA,OAlBAm3N,EAAA3rE,KAAA,SAAAqsE,YACAA,EAAAC,WACAtzO,EAAAmf,MAAAyyJ,UACAyhE,EAAAC,cAEAV,EAAA9xO,QAAA,IAAAkwO,EAAAH,EAAAK,WAAAmC,EAAAxC,MACO3zB,MAAA,SAAA1E,GACP8vB,EAAA1vB,QAAA/tL,KAAA,sBAAmD+wL,UAAA/2M,EAAAg3M,qBAAAg1B,OACnD,IACA,IAAA9iC,EAAA8kC,EAAA9kC,WACAwlC,EAAAxlC,KAAAruM,IAAA,aACAurK,EAAAsoE,KAAA7zO,IAAA,WACA4zO,KAAAlI,EAAAoI,aAAAX,EAAApvO,KAAAwnK,KAAA3rK,MACAU,EAAAmf,MAAAyyJ,UACA0hE,MACS,MAAAnzN,IACTyyN,EAAA9xO,QAAA,IAAAkwO,EAAAH,EAAAK,WAAA,IAAA9F,EAAA6F,UAAAz4B,aAAAn2L,MAAAm2L,EAAAn8B,QAAAm8B,GAAAq4B,MAEA+B,EAAAvsE,SAEAsrE,UAAA,SAAA7mN,EAAA3nB,EAAAolB,GACA,IAAAkrN,EAAA3oN,EAAAzpB,OAAA,EAIA,GAHAknB,IACAA,MAEAkrN,EAAA,GAAA3oN,EAAA1F,QAAAquN,KAAA5uO,EAAA2gB,IAAAkuN,cACA5oN,EAAAZ,MAAArlB,EAAA2gB,IAAAkuN,gBAAAvwO,GAAAolB,QACO,CACP,IAAAorN,EAAA7oN,EAAAzF,UAAAouN,GACAE,EAAA,GAAA72N,KAAA3Z,GACAnC,MAAA7B,UAAA2d,KAAAo5L,MAAAy9B,EAAA,GAAAprN,KAGAqrN,aAAA,SAAA9oN,EAAA3nB,EAAAolB,EAAA9W,EAAAmiN,EAAApT,EAAAtG,GACA,IACAt1L,EADAivN,EAAAtrN,IAAAlnB,OAAA,GAEA,MAAA0D,EAAAxB,QAAAswO,KAAAjvN,EAAAgvM,EAAAl0N,IAAAm0O,EAAAv0O,OAAA,CACA,IAAA8C,KAAA2C,EAAAhB,UAAA6gB,KAAAxiB,KAAAwiB,EACAkvN,EAAA1xO,EAAA1C,IAAA,eACA,GAjgBA,IAigBAo0O,EAAA,CACA,IAAAj8N,EAAApG,EAAAwC,KAAAxC,EAAAwC,KAAAnF,OAAAyZ,EAAA,QACA,OAAAhpB,KAAA0wO,iBAAA9sO,EAAA0U,EAAA2oM,EAAA57L,EAAAxiB,EAAA0oB,EAAAovL,GACS,GAngBT,IAmgBS45B,EAAA,CACT,IAAAC,EAAA3xO,EAAA1C,IAAA,WACA4S,EAAAlQ,EAAArB,SAAA,UAGA,OAFA6jB,EAAA2mN,EAAAyI,QAAAC,aAAAF,EAAAzhO,EAAA/S,KAAAS,KAAAwgN,EAAAjhN,KAAAq5M,QAAAr5M,KAAAoS,oBACAmZ,EAAAZ,MAAA/mB,EAAAyhB,EAAAP,SACAxjB,QAAAC,UAEA,OAAAD,QAAAimK,OAAA,IAAAzkJ,MAAA,wBAAAyxN,IAGA,OADAhpN,EAAAZ,MAAA/mB,EAAAolB,GACA1nB,QAAAC,WAEA46M,gBAAA,SAAAlM,GACA,IAAAi5B,EAAAlpO,KAEAmI,EAAA8nM,EAAA9nM,OACAwyM,EAAA1K,EAAA0K,KACAsG,EAAAhR,EAAAgR,UACA11L,EAAA0kL,EAAA1kL,aACAopN,EAAA1kC,EAAAu+B,aACAA,WAAAmG,EAAA,KAAAA,EAIA,GAFA1zB,KAAAz7M,EAAAjF,KAAAkC,MACA+rO,KAAA,IAAAoG,GACArpN,EACA,UAAAzI,MAAA,qDAEA,IAAAm8L,EAAAj/M,KACAS,EAAAT,KAAAS,KACAoc,EAAA1d,OAAAe,OAAA,MACA20O,EAAA5zB,EAAA9gN,IAAA,YAAAqF,EAAAjF,KAAAkC,MACA4xN,EAAApT,EAAA9gN,IAAA,YAAAqF,EAAAjF,KAAAkC,MACA2tO,EAAA,IAAA0E,EAAAtG,GACAuG,EAAA,IAAAC,EAAA7sO,EAAA1H,EAAA2vO,GACA6E,EAAA,IAAAhI,EACA,SAAAiI,EAAAC,GACA,QAAAxzO,EAAA,EAAAC,EAAAmzO,EAAAK,iBAA2DzzO,EAAAC,EAAQD,IACnE4pB,EAAAZ,MAAArlB,EAAA2gB,IAAAG,YAGA,WAAA9kB,QAAA,SAAA+zO,EAAA9zO,EAAAgmK,GACA,IAAAgD,EAAA,SAAAzD,GACAA,EAAAW,KAAA,WACA,IACA4tE,EAAA9zO,EAAAgmK,GACa,MAAA3mJ,GACb2mJ,EAAA3mJ,KAEW2mJ,IAEXozC,EAAA7C,sBACAm9B,EAAAruO,QAMA,IALA,IAAA0uO,EAEA3zO,EACAC,EACAsQ,EAHAkkM,OAIAk/B,EAAAL,EAAA7pO,WACAgrM,EAAAptL,KAAA,KACA+rN,EAAAvtE,KAAA4uC,KAFA,CAKA,IAAAptL,EAAAotL,EAAAptL,KACAplB,EAAAwyM,EAAAxyM,GACA,SAAAA,GACA,KAAA0B,EAAA2gB,IAAAsvN,aACA,IAAAx1O,EAAAipB,EAAA,GAAAjpB,KACA,GAAAA,YAAA8c,EAAA9c,GAAA,CACAwrB,EAAAZ,MAAA9N,EAAA9c,GAAA6D,GAAAiZ,EAAA9c,GAAAipB,MACAA,EAAA,KACA,SA0CA,YAxCAuhJ,EAAA,IAAAjpK,QAAA,SAAAk0O,EAAAC,GACA,IAAA11O,EACA,UAAAuF,EAAAyD,YAAA,wCAEA,IAAAulO,EAAAuG,EAAA10O,IAAAJ,GACA,IAAAuuO,EAGA,OAFA/iN,EAAAZ,MAAA/mB,EAAAolB,QACAwsN,IAGA,OAAAhwO,EAAAhB,UAAA8pO,GACA,UAAAhpO,EAAAyD,YAAA,8BAEA,IAAA7E,EAAAoqO,EAAAzrO,KAAA1C,IAAA,WACA,OAAAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,sCAEA,YAAA7E,EAAAnE,KAMA,OALAqwO,EAAAlqN,YACA+4L,EAAAovB,iBAAAptB,EAAAqtB,EAAA,KAAA/iN,EAAAovL,EAAAy1B,EAAAtyN,MAAA4vN,SAAAjmE,KAAA,WACA2oE,EAAAhqN,UACAovN,KACmBC,GAEF,aAAAvxO,EAAAnE,KACjBk/M,EAAAkwB,uBAAAluB,EAAAqtB,KAAA/iN,EAAAxrB,EAAA8c,OACiB,WAAA3Y,EAAAnE,KAGjB,UAAAuF,EAAAyD,YAAA,6BAAA7E,EAAAnE,SAFAuF,EAAAkR,MAAA,8BAIAg/N,MACe73B,MAAA,SAAA1E,GACf,GAAAgG,EAAA9lC,QAAA0lC,aAGA,OAFAI,EAAA5F,QAAA/tL,KAAA,sBAA2D+wL,UAAA/2M,EAAAg3M,qBAAAC,iBAC3Dj3M,EAAA4O,MAAA,wCAAA+kM,EAAA,MAGA,MAAAA,KAGA,KAAA3zM,EAAA2gB,IAAAkD,QACA,IAAAusN,EAAA1sN,EAAA,GAKA,YAJAuhJ,EAAA00C,EAAAgyB,cAAAhwB,EAAAj4L,EAAA,KAAAuC,EAAAovL,EAAAy1B,EAAAtyN,OAAA2pJ,KAAA,SAAAkqE,GACApmN,EAAAV,cAAA8mN,GACApmN,EAAAZ,MAAArlB,EAAA2gB,IAAAkD,SAAAwoN,EAAA+D,OAGA,KAAApwO,EAAA2gB,IAAA0vN,eACA,IAAA32N,EAAAgK,EAAA,GAAAhK,SACA,GAAAA,EAAA,CACA,IAAAF,EAAAjC,EAAAmC,GACA,YAAAF,EAAA,CACAyM,EAAAZ,MAAA7L,EAAAlb,GAAAkb,EAAAkK,MACAA,EAAA,KACA,UAGAi2L,EAAAkwB,uBAAAluB,EAAAj4L,EAAA,MAAAuC,EAAAvM,EAAAnC,GACAmM,EAAA,KACA,SACA,KAAA1jB,EAAA2gB,IAAAoD,SACAL,EAAA,GAAAi2L,EAAA2yB,WAAA5oN,EAAA,GAAAonN,EAAAtyN,OACA,MACA,KAAAxY,EAAA2gB,IAAA2vN,eACA,IAAA5rE,EAAAhhJ,EAAA,GACA6sN,KACAC,EAAA9rE,EAAAloK,OACAgc,EAAAsyN,EAAAtyN,MACA,IAAAnc,EAAA,EAAyBA,EAAAm0O,IAAen0O,EAAA,CACxC,IAAAo0O,EAAA/rE,EAAAroK,MACA2D,EAAAiQ,UAAAwgO,GACAt0O,MAAA7B,UAAA2d,KAAAo5L,MAAAk/B,EAAA52B,EAAA2yB,WAAAmE,EAAAj4N,OACiBxY,EAAA6d,OAAA4yN,IACjBF,EAAAt4N,KAAAw4N,GAGA/sN,EAAA,GAAA6sN,EACAjyO,EAAA0B,EAAA2gB,IAAAoD,SACA,MACA,KAAA/jB,EAAA2gB,IAAA+vN,iBACAzqN,EAAAZ,MAAArlB,EAAA2gB,IAAAgwN,UACAjtN,EAAA,GAAAi2L,EAAA2yB,WAAA5oN,EAAA,GAAAonN,EAAAtyN,OACAla,EAAA0B,EAAA2gB,IAAAoD,SACA,MACA,KAAA/jB,EAAA2gB,IAAAiwN,2BACA3qN,EAAAZ,MAAArlB,EAAA2gB,IAAAgwN,UACA1qN,EAAAZ,MAAArlB,EAAA2gB,IAAAkwN,gBAAAntN,EAAAhhB,UACAujB,EAAAZ,MAAArlB,EAAA2gB,IAAAmwN,gBAAAptN,EAAAhhB,UACAghB,EAAA,GAAAi2L,EAAA2yB,WAAA5oN,EAAA,GAAAonN,EAAAtyN,OACAla,EAAA0B,EAAA2gB,IAAAoD,SACA,MACA,KAAA/jB,EAAA2gB,IAAAowN,qBACAjG,EAAAtyN,MAAAk0N,kBAAAhpN,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAAqwN,kBACAlG,EAAAtyN,MAAAq0N,eAAAtnE,EAAAx7J,WAAA4C,MAAA+W,EAAA,GAAAvoB,EAAAwgN,EAAAhC,EAAA7sM,oBACA,SACA,KAAA9M,EAAA2gB,IAAAswN,oBACAnG,EAAAtyN,MAAA04N,iBAAA3rE,EAAAx7J,WAAA4C,MAAA+W,EAAA,GAAAvoB,EAAAwgN,EAAAhC,EAAA7sM,oBACA,SACA,KAAA9M,EAAA2gB,IAAAwwN,aACAvkO,EAAAk+N,EAAAtyN,MAAAq0N,eACAnpN,EAAA9W,EAAA3C,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAAywN,gBACA,MACA,KAAApxO,EAAA2gB,IAAA0wN,eACAzkO,EAAAk+N,EAAAtyN,MAAA04N,iBACAxtN,EAAA9W,EAAA3C,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAA2wN,kBACA,MACA,KAAAtxO,EAAA2gB,IAAA4wN,YACAzG,EAAAtyN,MAAAq0N,eAAAtnE,EAAAx7J,WAAAsD,WAAAC,KACAoW,EAAA6hJ,EAAAx7J,WAAAsD,WAAAC,KAAArD,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAAywN,gBACA,MACA,KAAApxO,EAAA2gB,IAAA6wN,cACA1G,EAAAtyN,MAAA04N,iBAAA3rE,EAAAx7J,WAAAsD,WAAAC,KACAoW,EAAA6hJ,EAAAx7J,WAAAsD,WAAAC,KAAArD,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAA2wN,kBACA,MACA,KAAAtxO,EAAA2gB,IAAA8wN,iBACA3G,EAAAtyN,MAAAq0N,eAAAtnE,EAAAx7J,WAAAsD,WAAAE,KACAmW,EAAA6hJ,EAAAx7J,WAAAsD,WAAAE,KAAAtD,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAAywN,gBACA,MACA,KAAApxO,EAAA2gB,IAAA+wN,mBACA5G,EAAAtyN,MAAA04N,iBAAA3rE,EAAAx7J,WAAAsD,WAAAE,KACAmW,EAAA6hJ,EAAAx7J,WAAAsD,WAAAE,KAAAtD,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAA2wN,kBACA,MACA,KAAAtxO,EAAA2gB,IAAAywN,gBACAtG,EAAAtyN,MAAAq0N,eAAAtnE,EAAAx7J,WAAAsD,WAAAjD,IACAsZ,EAAA6hJ,EAAAx7J,WAAAsD,WAAAjD,IAAAH,OAAAyZ,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAA2wN,kBACAxG,EAAAtyN,MAAA04N,iBAAA3rE,EAAAx7J,WAAAsD,WAAAjD,IACAsZ,EAAA6hJ,EAAAx7J,WAAAsD,WAAAjD,IAAAH,OAAAyZ,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAAgxN,cAEA,gBADA/kO,EAAAk+N,EAAAtyN,MAAAq0N,gBACApyO,KAEA,YADAwqK,EAAA00C,EAAAo1B,aAAA9oN,EAAAjmB,EAAA2gB,IAAAgxN,cAAAjuN,EAAA9W,EAAAmiN,EAAApT,EAAAtG,IAGA3xL,EAAA9W,EAAA3C,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAAywN,gBACA,MACA,KAAApxO,EAAA2gB,IAAAixN,gBAEA,gBADAhlO,EAAAk+N,EAAAtyN,MAAA04N,kBACAz2O,KAEA,YADAwqK,EAAA00C,EAAAo1B,aAAA9oN,EAAAjmB,EAAA2gB,IAAAixN,gBAAAluN,EAAA9W,EAAAmiN,EAAApT,EAAAtG,IAGA3xL,EAAA9W,EAAA3C,OAAAyZ,EAAA,GACAplB,EAAA0B,EAAA2gB,IAAA2wN,kBACA,MACA,KAAAtxO,EAAA2gB,IAAAkxN,YACA,IAAAC,EAAAn2B,EAAA9gN,IAAA,WACA,IAAAi3O,EACA,UAAA9xO,EAAAyD,YAAA,6BAEA,IAAAyrO,EAAA4C,EAAAj3O,IAAA6oB,EAAA,GAAAjpB,MACA,IAAAy0O,EACA,UAAAlvO,EAAAyD,YAAA,2BAEA,IACAsuO,EADArL,EAAAyI,QAAAC,aAAAF,EAAA,KAAA/zO,EAAAwgN,EAAAhC,EAAA5F,QAAA4F,EAAA7sM,oBACA0S,QACAkE,GAAAquN,GACAzzO,EAAA0B,EAAA2gB,IAAAkxN,YACA,MACA,KAAA7xO,EAAA2gB,IAAA2sN,UACA,IAAA0E,EAAAtuN,EAAA,GACAuuN,EAAAt2B,EAAA9gN,IAAA,aACA,OAAAqF,EAAA1C,QAAAy0O,OAAAj1O,IAAAg1O,EAAAv3O,MACA,MAEA,IAAA8yO,EAAA0E,EAAAp3O,IAAAm3O,EAAAv3O,MAEA,YADAwqK,EAAA00C,EAAA2zB,UAAA3xB,EAAA4xB,EAAAtnN,EAAAovL,EAAAy1B,IAEA,KAAA9qO,EAAA2gB,IAAAuxN,OACA,KAAAlyO,EAAA2gB,IAAAwxN,OACA,KAAAnyO,EAAA2gB,IAAAyxN,QACA,KAAApyO,EAAA2gB,IAAA0xN,SACA,KAAAryO,EAAA2gB,IAAA2xN,SACA,KAAAtyO,EAAA2gB,IAAA4xN,UAGA,KAAAvyO,EAAA2gB,IAAAk9M,UACAlkB,EAAAmzB,UAAA7mN,EAAA3nB,EAAAolB,GACA,SACA,KAAA1jB,EAAA2gB,IAAA6xN,UACA,KAAAxyO,EAAA2gB,IAAA8xN,eACA,KAAAzyO,EAAA2gB,IAAA+xN,mBACA,KAAA1yO,EAAA2gB,IAAAgyN,wBACA,KAAA3yO,EAAA2gB,IAAAiyN,iBACA,KAAA5yO,EAAA2gB,IAAAkyN,YACA,KAAA7yO,EAAA2gB,IAAAmyN,UACA,SACA,QACA,UAAApvN,EAAA,CACA,IAAArnB,EAAA,EAAAC,EAAAonB,EAAAlnB,OAA6CH,EAAAC,KAC7ConB,EAAArnB,aAAA6D,EAAAjF,MADqDoB,KAKrD,GAAAA,EAAAC,EAAA,IACA0D,EAAA4O,MAAA,wCAAAtQ,GACA,WAIA2nB,EAAAZ,MAAA/mB,EAAAolB,GAEAssN,EACA/qE,EAAAkjE,IAGAyH,IACA3zO,OACOo8M,MAAA,SAAA1E,GACP,GAAAiwB,EAAA/vD,QAAA0lC,aAIA,OAHAqqB,EAAA7vB,QAAA/tL,KAAA,sBAAqD+wL,UAAA/2M,EAAAg3M,qBAAAC,aACrDj3M,EAAA4O,MAAA,kDAAAymM,EAAA56M,WACAm1O,IAGA,MAAAj8B,KAGAoJ,eAAA,SAAA/R,GACA,IAAAo5B,EAAA1pO,KAEAmI,EAAAmoM,EAAAnoM,OACAwyM,EAAArK,EAAAqK,KACAsG,EAAA3Q,EAAA2Q,UACAo3B,EAAA/nC,EAAA8/B,aACAA,WAAAiI,EAAA,KAAAA,EACAC,EAAAhoC,EAAA0M,oBACAA,WAAAs7B,KACAC,EAAAjoC,EAAA2M,iBACAA,WAAAs7B,KACA57B,EAAArM,EAAAqM,KACA67B,EAAAloC,EAAAmoC,WACAA,WAAAD,EAAAr5O,OAAAe,OAAA,MAAAs4O,EAEAv3B,KAAAz7M,EAAAjF,KAAAkC,MACA2tO,KAAA,IAAA0E,EAAA,IAAA4D,GACA,IA8BAC,EA9BAC,EAAA,MACAC,GACA3sE,SACA4sE,OAAA35O,OAAAe,OAAA,OAEA64O,GACA5rO,eACA/J,OACAmN,MAAA,EACAC,OAAA,EACAwoO,YACAC,iBAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,aAAAC,IACAC,kBAAAD,IACAE,mBAAA,EACAC,uBACAp1N,UAAA,KACA+sN,SAAA,MAEAsI,EAAA,GACAC,EAAA,IACAC,EAAA,EACA36B,EAAAj/M,KACAS,EAAAT,KAAAS,KACAo0O,EAAA,KACAgF,EAAA16O,OAAAe,OAAA,MACA60O,EAAA,IAAAC,EAAA7sO,EAAA1H,EAAA2vO,GAEA,SAAA0J,IACA,GAAAf,EAAA5rO,YACA,OAAA4rO,EAEA,IAAAzH,EAAAqH,EAAArH,KACAA,EAAAK,cAAA8G,IACAA,EAAAnH,EAAAK,eACAkH,EAAAC,OAAAxH,EAAAK,aACAoI,WAAAzI,EAAA0I,aACA58C,OAAAk0C,EAAAl0C,OACAC,QAAAi0C,EAAAj0C,QACA27C,SAAA1H,EAAA0H,WAGAD,EAAA3H,SAAAE,EAAAK,WACA,IAAAsI,GAAAtB,EAAAjD,SAAAiD,EAAAuB,WAAA,IAAAvB,EAAAjD,SAAA,EAAAiD,EAAAwB,UACA,GAAA7I,EAAAC,aAAAoH,EAAA17C,aAAA33L,EAAA80O,sBAAA,IAAAzB,EAAAjD,SAAA,CACA,IAAA2E,EAAA/I,EAAA9M,KAAA,GAAA8M,EAAA9M,KAAA,GACA6V,EAAA,IACAA,GAAA1B,EAAA17C,WAAA,GACAg9C,EAAA,IAAAI,GAGA,IAAAC,EAAAh1O,EAAA8C,KAAAic,UAAAs0N,EAAA4B,IAAAj1O,EAAA8C,KAAAic,UAAAs0N,EAAA6B,WAAAP,IACAlB,EAAA10N,UAAAi2N,EACAhJ,EAAA0H,UAKAD,EAAAxoO,MAAArB,KAAAoM,KAAAg/N,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvB,EAAAvoO,OAAA,EACAuoO,EAAAC,cANAD,EAAAxoO,MAAA,EACAwoO,EAAAvoO,OAAAtB,KAAAoM,KAAAg/N,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvB,EAAAC,aAMA,IAAA7gO,EAAAwgO,EAAA8B,eAAA,GACArxO,EAAAuvO,EAAA8B,eAAA,GACAC,EAAAxrO,KAAAoM,KAAAnD,IAAA/O,KACA+O,EAAAwgO,EAAA4B,IAAA,GACAnxO,EAAAuvO,EAAA4B,IAAA,GACA,IAAAI,EAAAzrO,KAAAoM,KAAAnD,IAAA/O,KACA2vO,EAAAI,iBAAAwB,EAAAD,EACA3B,EAAAE,iBAAA,EACAF,EAAAG,kBAAA,EACA,IAAAE,EAAA9H,EAAA8H,WAAA,IAAAT,EAAAjD,SAeA,OAdA0D,GACAL,EAAAK,aACAL,EAAAM,aAAAD,EAAAM,EACAX,EAAAQ,kBAAAH,EAAAO,EACAZ,EAAAS,kBAAAJ,EAAAQ,EACAb,EAAAU,qBAAAnI,EAAAsJ,cAEA7B,EAAAK,WAAA,EACAL,EAAAM,aAAAC,IACAP,EAAAQ,kBAAAD,IACAP,EAAAS,kBAAA,EACAT,EAAAU,wBAEAV,EAAA5rO,eACA4rO,EAuBA,SAAA9H,EAAAG,EAAAD,GACA,OAAAlyB,EAAAoyB,SAAAD,EAAAD,EAAAlwB,GAAAx5C,KAAA,SAAAoI,GACA8oE,EAAArH,KAAAzhE,EAAAyhE,KACAqH,EAAA17C,WAAAptB,EAAAyhE,KAAAr0C,YAAA33L,EAAA80O,uBAGA,SAAAS,EAAAvtC,GAMA,IALA,IAAAgkC,EAAAqH,EAAArH,KACAwJ,EAAAhB,IACAvpO,EAAA,EACAC,EAAA,EACAqhO,EAAAP,EAAAQ,cAAAxkC,GACA3rM,EAAA,EAAuBA,EAAAkwO,EAAA/vO,OAAmBH,IAAA,CAC1C,IACAo5O,EADArI,EAAAb,EAAAlwO,GAGAo5O,EADAzJ,EAAA0H,UAAAtG,EAAAsI,QACAtI,EAAAsI,QAAA,GAEAtI,EAAAniO,MAEA,IAAA0qO,EAAAvI,EAAA/kC,QACAutC,KAAApP,EAAA3+B,kCACA+tC,EAAAD,KACAA,EAAAC,EAAAD,IAEAA,KAAAnP,EAAAz+B,cAAA4tC,GACA,IAAAE,EAAAxC,EAAAwC,YACA,GAAAzI,EAAAplO,QAAA,CACA,IAAA8tO,EAAAzC,EAAAyC,YACAD,GAAAC,EACAA,EAAA,GACAC,EAAAD,EAAAN,EAAA13O,KAGA,IAAAk4O,EAAA,EACAC,EAAA,EACAjK,EAAA0H,SAOAxoO,GADA+qO,EADAR,EAAApC,EAAA17C,WAAA,GACA07C,EAAAjD,SAAAyF,EAHA5qO,GADA+qO,GADAP,EAAApC,EAAA17C,WAAA,GACA07C,EAAAjD,SAAAyF,GAAAxC,EAAAuB,WAOAvB,EAAA6C,oBAAAF,EAAAC,GACAT,EAAA13O,IAAAma,KAAA09N,GASA,OAPA3J,EAAA0H,UAIA8B,EAAA5B,kBAAA1oO,EACAsqO,EAAAtqO,QAAAtB,KAAAglM,IAAA1jM,KAJAsqO,EAAA7B,iBAAA1oO,EACAuqO,EAAAvqO,UAKAuqO,EAEA,SAAAO,EAAA9qO,EAAAuQ,GACA,KAAAvQ,EAAAwoO,EAAAM,cAGA,GAAA9oO,EAAAwoO,EAAAQ,kBACAz4N,EAAAvD,KAAA,UAIA,IADA,IAAAk+N,EAAAvsO,KAAAoL,MAAA/J,EAAAwoO,EAAAK,YACAqC,KAAA,GACA36N,EAAAvD,KAAA,KAGA,SAAAm+N,IACA3C,EAAA5rO,cAGA4rO,EAAAxoO,OAAAwoO,EAAAI,iBACAJ,EAAAvoO,QAAAuoO,EAAAI,iBACAN,EAAA3sE,MAAA3uJ,KAxFA,SAAAu9N,GACA,IAAA13O,EAAA03O,EAAA13O,IAAA6e,KAAA,IACA05N,KAAA1P,EAAA2P,MAAAx4O,GAAA,EAAA03O,EAAA9B,UACA,OACA51O,IAAA45M,EAbA,SAAA55M,GAIA,IAHA,IAEAqG,EAFA9H,EAAA,EACAC,EAAAwB,EAAAtB,OAEAH,EAAAC,IAAA6H,EAAArG,EAAAoS,WAAA7T,KAAA,IAAA8H,GAAA,KACA9H,IAEA,OAAAA,EAAAC,EAAAwB,EAAAu0K,QAAAihE,EAAA,KAAAx1O,EAPA,CAaAu4O,EAAAv4O,KAAAu4O,EAAAv4O,IACAy4O,IAAAF,EAAAE,IACAtrO,MAAAuqO,EAAAvqO,MACAC,OAAAsqO,EAAAtqO,OACA6T,UAAAy2N,EAAAz2N,UACA+sN,SAAA0J,EAAA1J,UA+EA0K,CAAA/C,IACAA,EAAA5rO,eACA4rO,EAAA31O,IAAAtB,OAAA,GAEA,SAAAi6O,IACA,IAAAj6O,EAAA+2O,EAAA3sE,MAAApqK,OACAA,EAAA,IACA66M,EAAAq/B,QAAAnD,EAAA/2O,GACA+2O,EAAA3sE,SACA2sE,EAAAC,OAAA35O,OAAAe,OAAA,OAGA,IAAA+0O,EAAA,IAAAhI,EACA,WAAA3rO,QAAA,SAAA+zO,EAAA9zO,EAAAgmK,GACA,IAAAgD,EAAA,SAAAzD,GACAi1E,IACAz6O,QAAAquK,KAAA7I,EAAA61C,EAAAs/B,QAAAx0E,KAAA,WACA,IACA4tE,EAAA9zO,EAAAgmK,GACa,MAAA3mJ,GACb2mJ,EAAA3mJ,KAEW2mJ,IAEXozC,EAAA7C,sBACAm9B,EAAAruO,QAIA,IAHA,IAAA0uO,EACAl/B,KACAptL,OACAssN,EAAAL,EAAA7pO,WACA4d,EAAAlnB,OAAA,EACAs0M,EAAAptL,OACA+rN,EAAAvtE,KAAA4uC,KAHA,CAMAuiC,EAAAvI,EAAAtyN,MACA,IAEAo+N,EAFAt4O,EAAAwyM,EAAAxyM,GAGA,OAFAolB,EAAAotL,EAAAptL,KAEA,EAAAplB,GACA,KAAA0B,EAAA2gB,IAAAkD,QACA,IAAAgzN,EAAAnzN,EAAA,GAAAjpB,KACAq8O,EAAApzN,EAAA,GACA,GAAA2vN,EAAArH,MAAA6K,IAAAxD,EAAAvH,UAAAgL,IAAAzD,EAAAjD,SACA,MAMA,OAJAgG,IACA/C,EAAAvH,SAAA+K,EACAxD,EAAAjD,SAAA0G,OACA7xE,EAAA0mE,EAAAkL,EAAA,OAEA,KAAA72O,EAAA2gB,IAAAo2N,YACAX,IACA/C,EAAAwB,SAAAnxN,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAAq2N,UACAZ,IACA/C,EAAAuB,WAAAlxN,EAAA,OACA,MACA,KAAA1jB,EAAA2gB,IAAAs2N,WACAb,IACA/C,EAAA6D,QAAAxzN,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAAw2N,SACA,IAAAC,IAAA/D,EAAArH,MAAA,KAAAqH,EAAArH,KAAA0H,SAAAhwN,EAAA,GAAAA,EAAA,IAEA,GADAkzN,EAAAlzN,EAAA,GAAAA,EAAA,GACAi0L,GAAAy/B,GAAA3D,EAAA5rO,aAAA+uO,EAAA,GAAAA,GAAAnD,EAAAS,kBAAA,CACAb,EAAAgE,wBAAA3zN,EAAA,GAAAA,EAAA,IACA+vN,EAAAxoO,OAAAyY,EAAA,GAAA+vN,EAAAE,iBACAF,EAAAvoO,QAAAwY,EAAA,GAAA+vN,EAAAG,kBAEAmC,EADAryN,EAAA,GAAA+vN,EAAAE,kBAAAjwN,EAAA,GAAA+vN,EAAAG,mBACAH,EAAA31O,KACA,MAEAs4O,IACA/C,EAAAgE,wBAAA3zN,EAAA,GAAAA,EAAA,IACA2vN,EAAA6B,WAAA7B,EAAA8B,eAAA54O,QACA,MACA,KAAAyD,EAAA2gB,IAAA22N,mBACAlB,IACA/C,EAAA6D,SAAAxzN,EAAA,GACA2vN,EAAAgE,wBAAA3zN,EAAA,GAAAA,EAAA,IACA2vN,EAAA6B,WAAA7B,EAAA8B,eAAA54O,QACA,MACA,KAAAyD,EAAA2gB,IAAAgwN,SACAyF,IACA/C,EAAAkE,iBACA,MACA,KAAAv3O,EAAA2gB,IAAAmD,cAEA,GADA8yN,EAAAvD,EAAAmE,0BAAA9zN,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAi0L,GAAA,OAAAi/B,GAAAnD,EAAA5rO,aAAA+uO,EAAA58O,MAAA,GAAA48O,EAAA58O,OAAAy5O,EAAAS,kBAAA,CACAb,EAAAgE,wBAAAT,EAAA3rO,MAAA2rO,EAAA1rO,QACAuoO,EAAAxoO,OAAA2rO,EAAA3rO,MAAAwoO,EAAAE,iBACAF,EAAAvoO,QAAA0rO,EAAA1rO,OAAAuoO,EAAAG,kBAEAmC,EADAa,EAAA3rO,MAAAwoO,EAAAE,kBAAAiD,EAAA1rO,OAAAuoO,EAAAG,mBACAH,EAAA31O,KACA,MAEAs4O,IACA/C,EAAAvvN,cAAAJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA2vN,EAAAoE,kBAAA/zN,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,KAAA1jB,EAAA2gB,IAAAmwN,eACAuC,EAAAwC,YAAAnyN,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAAkwN,eACAwC,EAAAyC,YAAApyN,EAAA,GACA,MACA,KAAA1jB,EAAA2gB,IAAAiD,UACAwyN,IACA/C,EAAA6B,WAAAl1O,EAAA03O,gBAAAn7O,QACA82O,EAAA8B,eAAAn1O,EAAA03O,gBAAAn7O,QACA,MACA,KAAAyD,EAAA2gB,IAAA2vN,eAGA,IAFA,IACAruN,EADA2kJ,EAAAljJ,EAAA,GAEAzc,EAAA,EAAAsiK,EAAA3C,EAAApqK,OAAgDyK,EAAAsiK,EAAQtiK,IACxD,oBAAA2/J,EAAA3/J,GACAsuO,EAAA3uE,EAAA3/J,SACiB,MAAAjH,EAAA6d,OAAA+oJ,EAAA3/J,IAAA,CACjButO,IACAoC,EAAAhwE,EAAA3/J,GAAAosO,EAAAjD,SAAA,IACA,IAAAuH,KACAtE,EAAArH,KAAA0H,UACAzxN,EAAA20N,EACAvD,EAAA6C,oBAAA,EAAAj0N,IACA01N,EAAAlE,EAAAU,qBAAAyC,EAAAnD,EAAAS,qBAEAT,EAAAvoO,QAAA+W,KAIAA,GADA20N,MACAvD,EAAAuB,WACAvB,EAAA6C,oBAAAj0N,EAAA,IACA01N,EAAAlE,EAAAU,qBAAAyC,EAAAnD,EAAAS,qBAEAT,EAAAxoO,OAAAgX,IAGA01N,EACAvB,IACmBQ,EAAA,GACnBb,EAAAa,EAAAnD,EAAA31O,KAIA,MACA,KAAAkC,EAAA2gB,IAAAoD,SACAwxN,EAAA7xN,EAAA,IACA,MACA,KAAA1jB,EAAA2gB,IAAA+vN,iBACA0F,IACA/C,EAAAkE,iBACAhC,EAAA7xN,EAAA,IACA,MACA,KAAA1jB,EAAA2gB,IAAAiwN,2BACAwF,IACA/C,EAAAyC,YAAApyN,EAAA,GACA2vN,EAAAwC,YAAAnyN,EAAA,GACA2vN,EAAAkE,iBACAhC,EAAA7xN,EAAA,IACA,MACA,KAAA1jB,EAAA2gB,IAAAsvN,aACAmG,IACA7G,IACAA,EAAA5zB,EAAA9gN,IAAA,YAAAqF,EAAAjF,KAAAkC,OAEA,IAAA1C,EAAAipB,EAAA,GAAAjpB,KACA,GAAAA,YAAA85O,EAAA95O,GACA,MAqEA,YAnEAwqK,EAAA,IAAAjpK,QAAA,SAAAk0O,EAAAC,GACA,IAAA11O,EACA,UAAAuF,EAAAyD,YAAA,wCAEA,IAAAulO,EAAAuG,EAAA10O,IAAAJ,GACA,GAAAuuO,EAAA,CAIA,OAAA9oO,EAAAhB,UAAA8pO,GACA,UAAAhpO,EAAAyD,YAAA,8BAEA,IAAA7E,EAAAoqO,EAAAzrO,KAAA1C,IAAA,WACA,OAAAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,sCAEA,YAAA7E,EAAAnE,KAGA,OAFA85O,EAAA95O,WACAy1O,IAGA,IAAA0H,EAAA9M,EAAAtyN,MAAA4vN,QACAyP,EAAA,IAAArI,EAAAoI,GACAnqO,EAAAu7N,EAAAzrO,KAAArB,SAAA,UACAC,MAAAC,QAAAqR,IAAA,IAAAA,EAAAjR,QACAq7O,EAAA94N,UAAAtR,GAEAgpO,IACA,IAAAqB,GACAC,kBACArB,QAAA,SAAAj0O,EAAAL,GACA1H,KAAAq9O,kBACA1gC,EAAAq/B,QAAAj0O,EAAAL,IAGAm1M,kBACA,OAAAF,EAAAE,aAEAo/B,YACA,OAAAt/B,EAAAs/B,QAGAh9B,EAAAoD,gBACAl6M,OAAAmmO,EACA3zB,OACAsG,UAAAqtB,EAAAzrO,KAAA1C,IAAA,cAAA8gN,EACAmvB,aAAA+M,EACAngC,sBACAC,mBACAN,KAAAygC,EACA3E,eACiBhxE,KAAA,WACjB21E,EAAAC,iBACAxD,EAAA95O,OAEAy1O,KACiBC,QAlDjBD,MAmDe73B,MAAA,SAAA1E,GACf,KAAAA,aAAA3zM,EAAAg4O,gBAAA,CAGA,IAAAr+B,EAAA9lC,QAAA0lC,aAIA,MAAA5F,KAHA3zM,EAAA4O,MAAA,uCAAA+kM,EAAA,UAMA,KAAA3zM,EAAA2gB,IAAA2sN,UACA8I,IACA,IAAApE,EAAAtuN,EAAA,GACAuuN,EAAAt2B,EAAA9gN,IAAA,aACA,OAAAqF,EAAA1C,QAAAy0O,QAAA/xO,EAAAxB,QAAAszO,GACA,MAEA,IAAAzE,EAAA0E,EAAAp3O,IAAAm3O,EAAAv3O,MACA,OAAAyF,EAAA1C,QAAA+vO,GACA,MAEA,IAAA0K,EAAA1K,EAAA1yO,IAAA,QACA,GAAAo9O,EAIA,OAHA5E,EAAAvH,SAAA,KACAuH,EAAAjD,SAAA6H,EAAA,QACAhzE,EAAA0mE,EAAA,KAAAsM,EAAA,KAKA,GAAA1E,EAAA3sE,MAAApqK,QAAA66M,EAAAE,YAAA,CACAy4B,KACA,OAGAA,EACA/qE,EAAAkjE,IAGAiO,IACAK,IACAx6O,OACOo8M,MAAA,SAAA1E,GACP,KAAAA,aAAA3zM,EAAAg4O,gBAAA,CAGA,GAAA5T,EAAAvwD,QAAA0lC,aAIA,SAHAv5M,EAAA4O,MAAA,iDAAAymM,EAAA56M,MACA27O,SACAK,IAGA,MAAA9iC,MAIAukC,sBAAA,SAAA36O,EAAA46O,EAAA9hD,GACA,IAAAmuC,EAAA9pO,KAEAS,EAAAT,KAAAS,KACAi9O,EAAA76O,EAAA1C,IAAA,cAAAs9O,EAAAt9O,IAAA,aACAw9O,EAAAD,EAAA19O,KAAA49O,cAAAF,GAAAp8O,QAAAC,gBACA,GAAAo6L,EAAAkiD,UAAA,CACA,IAAAC,EAAAj7O,EAAA1C,IAAA,oBACAqF,EAAA1C,QAAAg7O,KACAniD,EAAAmiD,eACAC,SAAAD,EAAA39O,IAAA,YACA69O,SAAAF,EAAA39O,IAAA,YACA89O,WAAAH,EAAA39O,IAAA,gBAGA,IAAA+9O,EAAAr7O,EAAA1C,IAAA,kBACAqF,EAAAhB,UAAA05O,KACAviD,EAAAuiD,YAAAl+O,KAAAm+O,gBAAAD,IAGA,IAEA9kE,EAFAglE,KACAC,EAAA,KAEA,GAAAx7O,EAAAP,IAAA,aAEA,GADA82K,EAAAv2K,EAAA1C,IAAA,eACAqF,EAAA1C,QAAAs2K,IAGA,GAFAilE,EAAAjlE,EAAAj5K,IAAA,gBACAk+O,KAAA74O,EAAAxB,QAAAq6O,KAAAt+O,KAAA,KACAq5K,EAAA92K,IAAA,eAGA,IAFA,IAAAg8O,EAAAllE,EAAAj5K,IAAA,eACAojB,EAAA,EACAhX,EAAA,EAAAsiK,EAAAyvE,EAAAx8O,OAAqDyK,EAAAsiK,EAAQtiK,IAAA,CAC7D,IAAAmY,EAAAjkB,EAAAU,WAAAm9O,EAAA/xO,IACA,MAAAjH,EAAA6d,OAAAuB,GACAnB,EAAAmB,MACe,QAAAlf,EAAAxB,QAAA0gB,GAGf,UAAApf,EAAAyD,YAAA,yCAAA2b,GAFA05N,EAAA76N,KAAAmB,EAAA3kB,WAMS,QAAAyF,EAAAxB,QAAAo1K,GAGT,UAAA9zK,EAAAyD,YAAA,qCAFAs1O,EAAAjlE,EAAAr5K,KAIA,qBAAAs+O,GAAA,sBAAAA,GAAA,oBAAAA,IACAA,EAAA,MAGA,GAAAA,EACA1iD,EAAA4iD,mBAAAxjD,EAAAj/K,aAAAuiO,GAAAx8O,YACO,CACP,IAAA28O,KAAA7iD,EAAA/uB,MAAAi/D,EAAA4S,UAAAC,UACAC,KAAAhjD,EAAA/uB,MAAAi/D,EAAA4S,UAAAG,aACAxlE,EAAA2hB,EAAAr/K,iBACA,aAAAigL,EAAAz3L,MAAAy6O,IACAvlE,EAAA2hB,EAAAp/K,iBAEA6iO,IACAplE,EAAA2hB,EAAAt/K,iBACAkgL,EAAAD,OACA,UAAAlmB,KAAAmmB,EAAA57L,MACAq5K,EAAA2hB,EAAAn/K,kBACa,YAAA45J,KAAAmmB,EAAA57L,QACbq5K,EAAA2hB,EAAAl/K,wBAIA8/K,EAAA4iD,gBAAAnlE,EAMA,OAJAuiB,EAAAyiD,cACAziD,EAAA0iD,mBACA1iD,EAAAkjD,cAAAR,GAAAD,EAAAt8O,OAAA,EACA65L,EAAA94L,OACA86O,EAAAl2E,KAAA,SAAAi2E,GAEA,OADA/hD,EAAA+hD,YACA5T,EAAAgV,eAAAnjD,KACOl0B,KAAA,SAAAi2E,GAEP,OADA/hD,EAAA+hD,YACA/hD,KAGAojD,0BAAA,SAAApjD,MACAr2L,EAAA0Y,SAAA29K,EAAAkiD,UAAA,0BACA,IAAAH,KACAsB,SACAC,SACA7lE,EAAAuiB,EAAA4iD,gBAAA18O,QACAw8O,EAAA1iD,EAAA0iD,iBACAD,EAAAziD,EAAAyiD,YACA,IAAAY,KAAAZ,EAEA,aADAa,EAAAb,EAAAY,MAIA5lE,EAAA4lE,GAAAC,GAEA,IAAAvxC,KAAAw+B,EAAAzgN,oBACA,IAAAuzN,KAAA5lE,EAEA,SADA6lE,EAAA7lE,EAAA4lE,IAGS,YAAAtxC,EAAAuxC,GAqCTvB,EAAAsB,GAAAz9N,OAAAC,aAAAksL,EAAAuxC,QArCS,CACT,IAAAx1O,EAAA,EACA,OAAAw1O,EAAA,IACA,QACA,IAAAA,EAAAn9O,SACA2H,EAAA+sK,SAAAyoE,EAAA55C,OAAA,QAEA,MACA,QACA,IAAA45C,EAAAn9O,SACA2H,EAAA+sK,SAAAyoE,EAAA55C,OAAA,QAEA,MACA,QACA,QACA45C,EAAAn9O,QAAA,IACA2H,GAAAw1O,EAAA55C,OAAA,IAEA,MACA,QACA,IAAAsI,KAAAm+B,EAAAr+B,oBAAAwxC,EAAAvxC,IACA,IAAAC,IACAlkM,EAAAkkM,GAGA,GAAAlkM,EAAA,CACA,GAAA40O,GAAA50O,KAAAu1O,EAAA,CACA,IAAAn9C,KAAA9G,EAAAj/K,aAAAuiO,GACA,GAAAx8C,IAAAo9C,EAAAp9C,EAAAm9C,IAAA,CACAtB,EAAAsB,GAAAz9N,OAAAC,aAAAksL,EAAAuxC,IACA,UAGAvB,EAAAsB,GAAAz9N,OAAAC,aAAA/X,IAMA,WAAAoiO,EAAAqT,aAAAxB,IAEAoB,eAAA,SAAAnjD,GAEA,GADAA,EAAAwjD,0BAAAxjD,EAAA+hD,WAAA/hD,EAAA+hD,UAAA57O,OAAA,EACA65L,EAAAwjD,wBAIA,OAHAxjD,EAAAkiD,WAAAliD,EAAAkjD,cACAljD,EAAAyjD,kBAAAp/O,KAAA++O,0BAAApjD,IAEAr6L,QAAAC,QAAAo6L,EAAA+hD,WAEA,IAAA/hD,EAAAkiD,UACA,OAAAv8O,QAAAC,QAAAvB,KAAA++O,0BAAApjD,IAEA,GAAAA,EAAAkiD,YAAAliD,EAAA0jD,KAAAC,eAAA3jD,EAAA0jD,gBAAAzT,EAAA2T,eAAA,UAAA5jD,EAAAmiD,cAAAC,WAAA,QAAApiD,EAAAmiD,cAAAE,UAAA,SAAAriD,EAAAmiD,cAAAE,UAAA,WAAAriD,EAAAmiD,cAAAE,UAAA,WAAAriD,EAAAmiD,cAAAE,WAAA,CACA,IAAAD,EAAApiD,EAAAmiD,cAAAC,SACAC,EAAAriD,EAAAmiD,cAAAE,SACAwB,EAAAh6O,EAAA1F,KAAAK,IAAA49O,EAAA,IAAAC,EAAA,SACA,OAAApS,EAAA6T,YAAAv/O,QACAk5K,SAAAomE,EACA5S,iBAAA5sO,KAAA4sO,iBACA8S,QAAA,OACSj4E,KAAA,SAAAk4E,GACT,IACAjC,KAUA,OAXA/hD,EAAA0jD,KAEA98O,QAAA,SAAAy8O,EAAA99C,GACA,GAAAA,EAAA,MACA,UAAA57L,EAAAyD,YAAA,6BAEA,IAAA62O,EAAAD,EAAAtsO,OAAA6tL,GACA0+C,IACAlC,EAAAsB,GAAAz9N,OAAAC,cAAAo+N,EAAApqO,WAAA,OAAAoqO,EAAApqO,WAAA,OAGA,IAAAq2N,EAAAqT,aAAAxB,KAGA,OAAAp8O,QAAAC,QAAA,IAAAsqO,EAAAgU,qBAAAlkD,EAAAmkD,UAAAnkD,EAAAokD,YAGAnC,cAAA,SAAAF,GACA,IAAAsC,EAAAtC,EACA,SAAAl4O,EAAAxB,QAAAg8O,GACApU,EAAA6T,YAAAv/O,QACAk5K,SAAA4mE,EACApT,iBAAA5sO,KAAA4sO,iBACA8S,QAAA,OACSj4E,KAAA,SAAAw4E,GACT,OAAAA,aAAArU,EAAA2T,aACA,IAAA1T,EAAAgU,qBAAA,SAEA,IAAAhU,EAAAqT,aAAAe,EAAAC,eAEO16O,EAAAhB,UAAAw7O,GACPpU,EAAA6T,YAAAv/O,QACAk5K,SAAA4mE,EACApT,iBAAA5sO,KAAA4sO,iBACA8S,QAAA,OACSj4E,KAAA,SAAAw4E,GACT,GAAAA,aAAArU,EAAA2T,aACA,WAAA1T,EAAAgU,qBAAA,SAEA,IAAAn5N,EAAA,IAAAjlB,MAAAw+O,EAAAn+O,QAeA,OAdAm+O,EAAA19O,QAAA,SAAA49O,EAAAvrE,GAEA,IADA,IAAAxxK,KACA8H,EAAA,EAA2BA,EAAA0pK,EAAA9yK,OAAkBoJ,GAAA,GAC7C,IAAAkG,EAAAwjK,EAAAp/J,WAAAtK,IAAA,EAAA0pK,EAAAp/J,WAAAtK,EAAA,GACA,iBAAAkG,GAAA,CAIAlG,GAAA,EACA,IAAAoG,EAAAsjK,EAAAp/J,WAAAtK,IAAA,EAAA0pK,EAAAp/J,WAAAtK,EAAA,GACA9H,EAAAma,OAAA,KAAAnM,IAAA,UAAAE,GAAA,YALAlO,EAAAma,KAAAnM,GAOAsV,EAAAy5N,GAAA5+N,OAAAC,aAAAm1L,MAAAp1L,OAAAne,KAEA,IAAAyoO,EAAAqT,aAAAx4N,KAGAplB,QAAAC,QAAA,OAEA48O,gBAAA,SAAAiC,GAGA,IAFA,IAAAC,EAAAD,EAAA37O,WACA2T,KACA7L,EAAA,EAAAsiK,EAAAwxE,EAAAv+O,OAA6CyK,EAAAsiK,EAAQtiK,IAAA,CACrD,IAAA+zO,EAAAD,EAAA9zO,MAAA,EAAA8zO,EAAA9zO,GACA,IAAA+zO,IAIAloO,EADA7L,GAAA,GACA+zO,GAEA,OAAAloO,GAEAmoO,cAAA,SAAA19O,EAAA2rM,EAAA7S,GACA,IAIA6kD,EACA7+O,EAAAC,EAAA2K,EAAAsiK,EAAAnpK,EAAA+D,EAAA60L,EALA79L,EAAAT,KAAAS,KACAggP,KACAhgD,EAAA,EACAigD,KAGA,GAAA/kD,EAAAkiD,UAAA,CAGA,GAFAp9C,EAAA59L,EAAAP,IAAA,MAAAO,EAAA1C,IAAA,UACAm+L,EAAAz7L,EAAA1C,IAAA,KAEA,IAAAwB,EAAA,EAAAC,EAAA08L,EAAAx8L,OAAyCH,EAAAC,EAAQD,IAGjD,GAFA+D,EAAAjF,EAAAU,WAAAm9L,EAAA38L,MACA8H,EAAAhJ,EAAAU,WAAAm9L,EAAA38L,IACAF,MAAAC,QAAA+H,GACA,IAAA8C,EAAA,EAAAsiK,EAAAplK,EAAA3H,OAA2CyK,EAAAsiK,EAAQtiK,IACnDk0O,EAAA/6O,KAAAjF,EAAAU,WAAAsI,EAAA8C,QAEa,CACb,IAAAgE,EAAA9P,EAAAU,WAAAm9L,IAAA38L,IACA,IAAA4K,EAAA7G,EAA6B6G,GAAA9C,EAAW8C,IACxCk0O,EAAAl0O,GAAAgE,EAKA,GAAAorL,EAAAq9C,SAAA,CACA,IAAA2H,EAAA99O,EAAArB,SAAA,mBAGA,GAFAg/O,GAAAG,EAAA,MAAAlgD,EAAAkgD,EAAA,IACAA,EAAA99O,EAAA1C,IAAA,MAEA,IAAAwB,EAAA,EAAAC,EAAA++O,EAAA7+O,OAA6CH,EAAAC,EAAQD,IAGrD,GAFA+D,EAAAjF,EAAAU,WAAAw/O,EAAAh/O,MACA8H,EAAAhJ,EAAAU,WAAAw/O,EAAAh/O,IACAF,MAAAC,QAAA+H,GACA,IAAA8C,EAAA,EAAAsiK,EAAAplK,EAAA3H,OAA6CyK,EAAAsiK,EAAQtiK,IACrDm0O,EAAAh7O,MAAAjF,EAAAU,WAAAsI,EAAA8C,MAAA9L,EAAAU,WAAAsI,EAAA8C,MAAA9L,EAAAU,WAAAsI,EAAA8C,SAEe,CACf,IAAAyuO,GAAAv6O,EAAAU,WAAAw/O,IAAAh/O,IAAAlB,EAAAU,WAAAw/O,IAAAh/O,IAAAlB,EAAAU,WAAAw/O,IAAAh/O,KACA,IAAA4K,EAAA7G,EAA+B6G,GAAA9C,EAAW8C,IAC1Cm0O,EAAAn0O,GAAAyuO,QAMO,CACP,IAAA8E,EAAAnkD,EAAAmkD,UAEA,GADAxhD,EAAAz7L,EAAA1C,IAAA,UACA,CAEA,IADAoM,EAAAuzO,EACAn+O,EAAA,EAAAC,EAAA08L,EAAAx8L,OAAyCH,EAAAC,EAAQD,IACjD8+O,EAAAl0O,KAAA9L,EAAAU,WAAAm9L,EAAA38L,IAEA8+L,EAAA3B,WAAA0P,EAAAruM,IAAA,wBACS,CACT,IAAAygP,EAAA/9O,EAAA1C,IAAA,YACA,MAAAqF,EAAAxB,QAAA48O,GAAA,CACA,IAAAC,EAAA7gP,KAAA8gP,mBAAAF,EAAA7gP,MACA0gP,EAAAzgP,KAAA+gP,qBAAAF,EAAAviD,OAAA3C,GACA8E,EAAAogD,EAAApgD,eAIA,IAAAm6C,KACAoG,EAAAvgD,EACA,QAAAiyC,KAAA+N,EAAA,CACA,IAAA1F,EAAA0F,EAAA/N,GACA,GAAAqI,EAGA,GAAAiG,GAIA,GAAAA,IAAAjG,EAAA,CACAH,KACA,YALAoG,EAAAjG,EAQAH,IACAj/C,EAAA/uB,OAAAi/D,EAAA4S,UAAAwC,YAEAtlD,EAAA8E,eACA9E,EAAA2C,OAAAmiD,EACA9kD,EAAA6kD,kBACA7kD,EAAAglD,SAAAD,GAEAQ,YAAA,SAAAN,GACA,IAAAO,EAAAP,EAAAtvE,MAAA,QACA,OAAA6vE,OAAApV,EAAAtlC,mBAAA,IAAA06C,EAAAC,OAAA,YAEAN,mBAAA,SAAA/gP,GACA,IAAA0gM,EAAA,EACAnC,KACA+iD,KAEAC,KADAvV,EAAAplC,iBACA5mM,MACAwhP,KAAApV,EAAAqV,cACAF,KAAAC,IAEAD,EADAthP,KAAAkhP,YAAAnhP,GACA,cAEA,aAGA,IAAA0hP,EAAAF,EAAAD,GAOA,SANAh8O,EAAA6d,OAAAs+N,IACAhhD,EAAAghD,EACAJ,MAEA/iD,EAAAmjD,KAGAhhD,eACA4gD,YACA/iD,WAGAyiD,qBAAA,SAAAW,EAAA/lD,GAIA,IAHA,IAAA2C,EAAAn/L,OAAAe,OAAA,MACAk+O,EAAAziD,EAAAyiD,YACAhlE,EAAAuiB,EAAA4iD,gBACA4B,EAAA,EAA4BA,EAAA,IAAgBA,IAC5CA,KAAA/B,GAAAsD,EAAAtD,EAAA+B,IACA7hD,EAAA6hD,GAAAuB,EAAAtD,EAAA+B,IAGAA,KAAA/mE,GAAAsoE,EAAAtoE,EAAA+mE,MACA7hD,EAAA6hD,GAAAuB,EAAAtoE,EAAA+mE,KAIA,OAAA7hD,GAEAi1C,gBAAA,SAAA1wO,GACA,IAAA46O,EAAA56O,EACAqB,EAAArB,EAAA1C,IAAA,WACA,OAAAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,wBAEA,IACA44O,EADA9D,KAEA,aAAA35O,EAAAnE,KAAA,CACA,IAAA6hP,EAAA/+O,EAAA1C,IAAA,mBACA,IAAAyhP,EACA,UAAAt8O,EAAAyD,YAAA,sCAIA,GADA7E,GADArB,EAAApB,MAAAC,QAAAkgP,GAAA5hP,KAAAS,KAAAU,WAAAygP,EAAA,IAAAA,GACAzhP,IAAA,eACAqF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,wBAEA80O,KAEA,IAAArvC,EAAA3rM,EAAA1C,IAAA,kBACA,GAAAquM,EAAA,CACA,IAAA7W,EAAA,IAAAy0C,EAAAyV,eACAzoE,EAAAqkE,EAAAx7O,OAAA,YACA,MAAAuD,EAAAxB,QAAAo1K,GACAue,EAAAmqD,OAAA1oE,EAAAr5K,WACS,MAAAyF,EAAAzD,OAAAq3K,GACTue,EAAAmqD,OAAA1oE,EAAAj2K,iBACS,MAAAqC,EAAA1C,QAAAs2K,GAET,IADA,IAAAh3K,EAAAg3K,EAAAj3K,UACAR,EAAA,EAAAC,EAAAQ,EAAAN,OAA2CH,EAAAC,EAAQD,IAAA,CACnD,IAAAgyK,EAAAyF,EAAAn3K,OAAAG,EAAAT,IACA,MAAA6D,EAAAxB,QAAA2vK,GACAgkB,EAAAmqD,OAAAnuE,EAAA5zK,WACa,MAAAyF,EAAAzD,OAAA4xK,GACbgkB,EAAAmqD,OAAAnuE,EAAAxwK,iBACa,GAAA1B,MAAAC,QAAAiyK,GAAA,CAGb,IAFA,IAAAouE,EAAApuE,EAAA7xK,OACAkgP,EAAA,IAAAvgP,MAAAsgP,GACAx1O,EAAA,EAA6BA,EAAAw1O,EAAgBx1O,IAAA,CAC7C,IAAA01O,EAAAtuE,EAAApnK,MACA/G,EAAAxB,QAAAi+O,GACAD,EAAAz1O,GAAA01O,EAAAliP,SACiBuF,EAAA6d,OAAA8+N,OAAAz8O,EAAAzD,OAAAkgP,MACjBD,EAAAz1O,GAAA01O,EAAA9+O,YAGAw0L,EAAAmqD,OAAAE,EAAA//N,SAIA,IAAAy7N,EAAA76O,EAAA1C,IAAA,cAAAs9O,EAAAt9O,IAAA,aACA,MAAAqF,EAAAhB,UAAAk5O,GAAA,CACA,IAAAv1O,EAAAu1O,EAAAt6O,KAAAs6O,EACAiE,EAAAx5O,EAAApB,OAAA,IAAAnB,WAAAuC,EAAApB,cAAA,EAAAoB,EAAAhB,cAAA,IAAAvB,WAAAuC,EAAAxC,MAAAoB,OAAAoB,EAAAzC,MAAAyC,EAAArC,IAAAqC,EAAAzC,OACAiyL,EAAAmqD,OAAAH,UACSn8O,EAAAxB,QAAA05O,IACT/lD,EAAAmqD,OAAApE,EAAA39O,MAEA,IAAAu+L,EAAAz7L,EAAA1C,IAAA,WAAAs9O,EAAAt9O,IAAA,UACAm+L,IACAqjD,EAAA,IAAA/7O,WAAA,IAAAq0K,YAAAqkB,GAAAv3L,QACA4wL,EAAAmqD,OAAAH,IAGA,OACAnzC,aACA3rM,OACA46O,WACAI,YACA35O,OAAAnE,KACA43L,SAAAuqD,YAAA,KAGArO,cAAA,SAAAP,GACA,IAQA33C,EARAsuC,EAAAjqO,KAEAy9O,EAAAnK,EAAAmK,SACA56O,EAAAywO,EAAAzwO,KACAg7O,EAAAvK,EAAAuK,UACArvC,EAAA8kC,EAAA9kC,WACAtqM,EAAAovO,EAAApvO,KACAi+O,EAAAtE,EAAA,UAEA,IAAArvC,EAAA,CACA,aAAAtqM,EAIS,CACT,IAAA08O,EAAA/9O,EAAA1C,IAAA,YACA,OAAAqF,EAAAxB,QAAA48O,GACA,UAAAt7O,EAAAyD,YAAA,8BAEA63O,IAAA7gP,KAAA43K,QAAA,aACA,IAAAkpE,EAAA7gP,KAAA8gP,mBAAAF,GACAO,EAAAP,EAAAtvE,MAAA,QACA1E,GAAA5sK,KAAAkhP,YAAAC,GAAAtV,EAAA4S,UAAA2D,MAAA,IAAAvB,EAAAQ,UAAAxV,EAAA4S,UAAAwC,WAAA,OAAAlV,EAAAvlC,mBAAA26C,GAAAtV,EAAA4S,UAAAC,SAAA7S,EAAA4S,UAAAG,aAUA,OATAjjD,GACAz3L,OACAnE,KAAA6gP,EACAtiD,OAAAuiD,EAAAviD,OACAmC,aAAAogD,EAAApgD,aACA7zB,QACAkzE,UAAA,EACAC,SAAAoC,GAEAniP,KAAAw9O,sBAAA36O,IAAA84L,GAAAl0B,KAAA,SAAAk0B,GAEA,OADAA,EAAA2C,OAAA2rC,EAAA8W,qBAAAF,EAAAviD,OAAA3C,GACA,IAAAkwC,EAAA8H,KAAAiN,EAAA,KAAAjlD,MAvBA6S,EAAA,IAAAhpM,EAAAjF,KAAA,OACA8B,IAAA,WAAAmD,EAAA1F,KAAAK,IAAA+D,IACAsqM,EAAAnsM,IAAA,WAAAQ,EAAArB,SAAA,aAyBA,IAAAs+O,EAAAj9O,EAAA1C,IAAA,gBACA4/O,EAAAl9O,EAAA1C,IAAA,aAAAgiP,EACA/Q,EAAA5iC,EAAAruM,IAAA,YACAkiP,EAAAx/O,EAAA1C,IAAA,YAOA,MANAmF,EAAAiQ,UAAA67N,KACAA,EAAA5rO,EAAA1F,KAAAK,IAAAixO,OAEA9rO,EAAAiQ,UAAA8sO,KACAA,EAAA78O,EAAA1F,KAAAK,IAAAkiP,IAEA,UAAAn+O,EAAA,CACA,IAAAo+O,EAAAlR,KAAArxO,KACAwiP,EAAAF,KAAAtiP,KACAuiP,IAAAC,OACAj9O,EAAAkR,MAAA,sCAAA8rO,EAAA,qDAAAC,EAAA,KACAD,GAAAC,GAAA,IAAAA,EAAAz5E,QAAAw5E,KACAlR,EAAAiR,IAKA,GADAjR,KAAAiR,MACA78O,EAAAxB,QAAAotO,GACA,UAAA9rO,EAAAyD,YAAA,qBAEA,IAoCAy5O,EApCAC,EAAAj0C,EAAAruM,IAAA,oCACA,GAAAsiP,GACAA,EAAA5/O,KAAA,CACA,IAAA6oK,EAAA+2E,EAAA5/O,KAAA1C,IAAA,WACAurK,IACAA,IAAA3rK,MAEA,IAAA2iP,EAAAD,EAAA5/O,KAAA1C,IAAA,WACAwiP,EAAAF,EAAA5/O,KAAA1C,IAAA,WACAyiP,EAAAH,EAAA5/O,KAAA1C,IAAA,WA4BA,GAzBAw7L,GACAz3L,OACAnE,KAAAqxO,EAAArxO,KACA2rK,UACAgwB,KAAA+mD,EACAC,UACAC,UACAC,UACAjR,WAAA8L,EAAA9L,WACAkM,YACAgF,UAAAhF,EACAiF,cACA7lD,WAAAp6L,EAAArB,SAAA,eAAA8D,EAAA80O,qBACA0F,aAAA,EACAC,YAAAoC,EACA3d,KAAAh2B,EAAAhtM,SAAA,YACA47L,OAAAoR,EAAAruM,IAAA,UACAk9L,QAAAmR,EAAAruM,IAAA,WACA4iP,QAAAv0C,EAAAruM,IAAA,WACA6iP,UAAAx0C,EAAAruM,IAAA,aACAysK,MAAA4hC,EAAAruM,IAAA,SACA8iP,YAAAz0C,EAAAruM,IAAA,eACAoxO,gBAGAsM,EAAA,CACA,IAAAqF,EAAAzF,EAAAt9O,IAAA,eACAqF,EAAAxB,QAAAk/O,KACAvnD,EAAAunD,cAAAnjP,MAEAyiP,EAAA5W,EAAA6T,YAAAv/O,QACAk5K,SAAA8pE,EACAtW,iBAAA5sO,KAAA4sO,iBACA8S,QAAA,OACSj4E,KAAA,SAAA43E,GACT1jD,EAAA0jD,OACA1jD,EAAAq9C,SAAAr9C,EAAA0jD,KAAArG,gBAGAwJ,EAAAlhP,QAAAC,gBAEA,OAAAihP,EAAA/6E,KAAA,WACA,OAAAwiE,EAAAuT,sBAAA36O,EAAA46O,EAAA9hD,KACOl0B,KAAA,SAAAk0B,GAKP,OAJAsuC,EAAAsW,cAAA19O,EAAA2rM,EAAA7S,GACA,UAAAz3L,IACAy3L,EAAA41C,gBAEA,IAAA1F,EAAA8H,KAAAvC,EAAArxO,KAAA0iP,EAAA9mD,OAIA8lB,EAn/DA,GAq/DAgwB,EAAA,WACA,SAAAA,EAAAE,EAAAL,EAAAzuO,GACA7C,KAAA2xO,aACA3xO,KAAAsxO,OACAtxO,KAAA6C,OACA7C,KAAAmjP,YAAA,KACAnjP,KAAAojP,QA0DA,OAxDA3R,EAAA7xO,WACA0rB,KAAA,SAAA+tL,GACA,IAAAr5M,KAAAojP,KAAA,CAGA,IAAAC,EAAArjP,KAAAsxO,KAAAgS,aACAjqC,EAAA/tL,KAAA,aAAAtrB,KAAA2xO,WAAA,OAAA0R,IACArjP,KAAAojP,UAEA5R,cAAA,SAAAn+B,EAAA4N,EAAAsiC,EAAA5oC,GACA,IAAA36M,KAAAsxO,KAAAC,YACA,UAAAzuN,MAAA,yBAEA,GAAA9iB,KAAAmjP,YACA,OAAAnjP,KAAAmjP,YAEA,IAAAK,EAAArkP,OAAAe,OAAAmzM,EAAAl6B,SACAqqE,EAAA3kC,gBA8BA,IA7BA,IAAA4kC,EAAApwC,EAAAq6B,MAAA8V,GACA1P,EAAA9zO,KAAAsxO,KACAoS,EAAApiP,QAAAC,UACAoiP,EAAA3jP,KAAA6C,KAAA1C,IAAA,aACAyjP,EAAA5jP,KAAA6C,KAAA1C,IAAA,cAAA8gN,EACA4iC,EAAAF,EAAAxhP,UACA2hP,EAAA3kP,OAAAe,OAAA,MAEA6jP,EAAA,WACA,IAAA7hP,EAAA2hP,EAAAliP,GACA+hP,IAAAj8E,KAAA,WACA,IAAAu8E,EAAAL,EAAAxjP,IAAA+B,GACAqpB,EAAA,IAAAy0L,EAAA/6L,aACA,OAAAw+N,EAAAtnC,iBACAh0M,OAAA67O,EACArpC,OACAsG,UAAA2iC,EACAr4N,iBACWk8I,KAAA,WACXq8E,EAAA5hP,GAAAqpB,EAAAzG,QACAy+N,EAAAx4N,gBAAAQ,EAAAhB,gBACWozL,MAAA,SAAA1E,MACX3zM,EAAA4O,MAAA,wBAAAhS,EAAA,uBACA,IAAAqpB,EAAA,IAAAy0L,EAAA/6L,aACA6+N,EAAA5hP,GAAAqpB,EAAAzG,aAKAnjB,EAAA,EAAAgF,EAAAk9O,EAAA/hP,OAA8CH,EAAAgF,IAAOhF,EACrDoiP,IAKA,OAHA/jP,KAAAmjP,YAAAO,EAAAj8E,KAAA,WACAqsE,EAAAgQ,yBAEA9jP,KAAAmjP,cAGA1R,EAhEA,GAkEAqD,EAAA,WACA,SAAAA,EAAAtG,GACAxuO,KAAA8d,MAAA0wN,EACAxuO,KAAAikP,cAkBA,OAhBAnP,EAAAl1O,WACAsmB,KAAA,WACA,IAAAg+N,EAAAlkP,KAAA8d,MACA9d,KAAAikP,WAAA1mO,KAAAvd,KAAA8d,OACA9d,KAAA8d,MAAAomO,EAAAxW,SAEAtnN,QAAA,WACA,IAAAw/L,EAAA5lN,KAAAikP,WAAA1zE,MACAq1C,IACA5lN,KAAA8d,MAAA8nM,IAGAvhM,UAAA,SAAA2E,GACAhpB,KAAA8d,MAAAy8N,IAAAj1O,EAAA8C,KAAAic,UAAArkB,KAAA8d,MAAAy8N,IAAAvxN,KAGA8rN,EArBA,GAuBA4D,EAAA,WACA,SAAAA,IACA14O,KAAAu6O,IAAA,IAAA1lO,aAAAvP,EAAA03O,iBACAh9O,KAAAoxO,SAAA,KACApxO,KAAA01O,SAAA,EACA11O,KAAAsxO,KAAA,KACAtxO,KAAAi9L,WAAA33L,EAAA80O,qBACAp6O,KAAAw6O,WAAAl1O,EAAA03O,gBAAAn7O,QACA7B,KAAAy6O,eAAAn1O,EAAA03O,gBAAAn7O,QACA7B,KAAAm7O,YAAA,EACAn7O,KAAAo7O,YAAA,EACAp7O,KAAAw8O,QAAA,EACAx8O,KAAAk6O,WAAA,EACAl6O,KAAAm6O,SAAA,EA6EA,OA3EAzB,EAAA94O,WACAwpB,cAAA,SAAAjR,EAAA/O,EAAA8C,EAAAu7D,EAAAxrD,EAAAy+D,GACA,IAAA3kE,EAAA/V,KAAAw6O,WACAzkO,EAAA,GAAAoC,EACApC,EAAA,GAAA3M,EACA2M,EAAA,GAAA7J,EACA6J,EAAA,GAAA0xD,EACA1xD,EAAA,GAAAkG,EACAlG,EAAA,GAAA2kE,GAEAqiK,kBAAA,SAAA5kO,EAAA/O,EAAA8C,EAAAu7D,EAAAxrD,EAAAy+D,GACA,IAAA3kE,EAAA/V,KAAAy6O,eACA1kO,EAAA,GAAAoC,EACApC,EAAA,GAAA3M,EACA2M,EAAA,GAAA7J,EACA6J,EAAA,GAAA0xD,EACA1xD,EAAA,GAAAkG,EACAlG,EAAA,GAAA2kE,GAEA8gK,oBAAA,SAAA5gO,EAAA5E,GACA,IAAAD,EAAA/V,KAAAw6O,WACAzkO,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,IAEA4mO,wBAAA,SAAA/hO,EAAA5E,GACA,IAAAD,EAAA/V,KAAAy6O,eACA1kO,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA6E,EAAA7E,EAAA,GAAAC,EAAAD,EAAA,IAEA+mO,0BAAA,SAAA3kO,EAAA/O,EAAA8C,EAAAu7D,EAAAxrD,EAAAy+D,GACA,IAAA42J,EAAAtxO,KAAAsxO,KACA,IAAAA,EACA,YAEA,IAAAv7N,EAAA/V,KAAAy6O,eACA,GAAAtiO,IAAApC,EAAA,IAAA3M,IAAA2M,EAAA,IAAA7J,IAAA6J,EAAA,IAAA0xD,IAAA1xD,EAAA,GACA,YAEA,IAAAouO,EAAAloO,EAAAlG,EAAA,GACAquO,EAAA1pK,EAAA3kE,EAAA,GACA,GAAAu7N,EAAA0H,UAAA,IAAAmL,IAAA7S,EAAA0H,UAAA,IAAAoL,EACA,YAEA,IAAA9I,EACAC,EACA8I,EAAAlsO,EAAAsvD,EAAAr+D,EAAA8C,EAQA,OAPAolO,EAAA0H,UACAsC,GAAA8I,EAAAl4O,EAAAm4O,EACA9I,EAAA6I,EAAAjsO,EAAAksO,IAEA/I,EAAA6I,EAAA18K,EAAA48K,EACA9I,GAAA4I,EAAA/6O,EAAAi7O,IAGA9zO,MAAA+qO,EACA9qO,OAAA+qO,EACAj8O,MAAAgyO,EAAA0H,SAAAuC,EAAAD,IAGAgJ,iBAAA,SAAA/J,GACA,IAAAN,GAAAj6O,KAAA01O,SAAA11O,KAAAk6O,WAAA,IAAAl6O,KAAA01O,SAAA,EAAA11O,KAAAm6O,UACA,OAAA70O,EAAA8C,KAAAic,UAAAk2N,EAAAj1O,EAAA8C,KAAAic,UAAArkB,KAAAw6O,WAAAP,KAEA4C,eAAA,WACA78O,KAAA28O,wBAAA,GAAA38O,KAAAw8O,SACAx8O,KAAAw6O,WAAAx6O,KAAAy6O,eAAA54O,SAEA6rO,MAAA,WACA,IAAAA,EAAAvuO,OAAAe,OAAAF,MAIA,OAHA0tO,EAAA8M,WAAAx6O,KAAAw6O,WAAA34O,QACA6rO,EAAA+M,eAAAz6O,KAAAy6O,eAAA54O,QACA6rO,EAAAzwC,WAAAj9L,KAAAi9L,WAAAp7L,QACA6rO,IAGAgL,EA1FA,GA4FA9D,EAAA,WACA,SAAAA,IACA50O,KAAAu6O,IAAA,IAAA1lO,aAAAvP,EAAA03O,iBACAh9O,KAAAsxO,KAAA,KACAtxO,KAAAgyO,kBAAA1sO,EAAA2sO,kBAAAsS,KACAvkP,KAAAmyO,eAAAtnE,EAAAx7J,WAAAsD,WAAAC,KACA5S,KAAAw2O,iBAAA3rE,EAAAx7J,WAAAsD,WAAAC,KAOA,OALAgiO,EAAAh1O,WACA8tO,MAAA,WACA,OAAAvuO,OAAAe,OAAAF,QAGA40O,EAbA,GAeAI,EAAA,WACA,IAAAwP,KAAAl/O,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA8c,GACAk0K,GAAA31L,EAAA2gB,IAAAw+N,aACAC,QAAA,EACAC,iBAEA16O,EAAAk0B,GACA88J,GAAA31L,EAAA2gB,IAAA2+N,WACAF,QAAA,EACAC,iBAEA16O,EAAAsC,GACA0uL,GAAA31L,EAAA2gB,IAAA4+N,YACAH,QAAA,EACAC,iBAEA16O,EAAAmR,GACA6/K,GAAA31L,EAAA2gB,IAAA6+N,cACAJ,QAAA,EACAC,iBAEA16O,EAAAw9D,GACAwzH,GAAA31L,EAAA2gB,IAAA8+N,QACAL,QAAA,EACAC,iBAEA16O,EAAA+6O,IACA/pD,GAAA31L,EAAA2gB,IAAAg/N,mBACAP,QAAA,EACAC,iBAEA16O,EAAAtI,GACAs5L,GAAA31L,EAAA2gB,IAAAi/N,YACAR,QAAA,EACAC,iBAEA16O,EAAAk7O,IACAlqD,GAAA31L,EAAA2gB,IAAA2sN,UACA8R,QAAA,EACAC,iBAEA16O,EAAA0E,GACAssL,GAAA31L,EAAA2gB,IAAAC,KACAw+N,QAAA,EACAC,iBAEA16O,EAAA4+B,GACAoyJ,GAAA31L,EAAA2gB,IAAAG,QACAs+N,QAAA,EACAC,iBAEA16O,EAAAm7O,IACAnqD,GAAA31L,EAAA2gB,IAAA5B,UACAqgO,QAAA,EACAC,iBAEA16O,EAAA8L,GACAklL,GAAA31L,EAAA2gB,IAAAuxN,OACAkN,QAAA,EACAC,iBAEA16O,EAAAw3F,GACAw5F,GAAA31L,EAAA2gB,IAAAwxN,OACAiN,QAAA,EACAC,iBAEA16O,EAAAiC,GACA+uL,GAAA31L,EAAA2gB,IAAAyxN,QACAgN,QAAA,EACAC,iBAEA16O,EAAAhG,GACAg3L,GAAA31L,EAAA2gB,IAAA0xN,SACA+M,QAAA,EACAC,iBAEA16O,EAAA+L,GACAilL,GAAA31L,EAAA2gB,IAAA2xN,SACA8M,QAAA,EACAC,iBAEA16O,EAAA+c,GACAi0K,GAAA31L,EAAA2gB,IAAA4xN,UACA6M,QAAA,EACAC,iBAEA16O,EAAAo7O,IACApqD,GAAA31L,EAAA2gB,IAAAk9M,UACAuhB,QAAA,EACAC,iBAEA16O,EAAAqgC,GACA2wJ,GAAA31L,EAAA2gB,IAAAq/N,OACAZ,QAAA,EACAC,iBAEA16O,EAAAktH,GACA8jE,GAAA31L,EAAA2gB,IAAAs/N,YACAb,QAAA,EACAC,iBAEA16O,EAAAywE,GACAugH,GAAA31L,EAAA2gB,IAAAu/N,KACAd,QAAA,EACAC,iBAEA16O,EAAAstB,GACA0jK,GAAA31L,EAAA2gB,IAAAu/N,KACAd,QAAA,EACAC,iBAEA16O,EAAA,OACAgxL,GAAA31L,EAAA2gB,IAAAw/N,OACAf,QAAA,EACAC,iBAEA16O,EAAAwO,GACAwiL,GAAA31L,EAAA2gB,IAAAy/N,WACAhB,QAAA,EACAC,iBAEA16O,EAAA,OACAgxL,GAAA31L,EAAA2gB,IAAA0/N,aACAjB,QAAA,EACAC,iBAEA16O,EAAAb,GACA6xL,GAAA31L,EAAA2gB,IAAA2/N,gBACAlB,QAAA,EACAC,iBAEA16O,EAAA,OACAgxL,GAAA31L,EAAA2gB,IAAA4/N,kBACAnB,QAAA,EACAC,iBAEA16O,EAAAtD,GACAs0L,GAAA31L,EAAA2gB,IAAA6/N,QACApB,QAAA,EACAC,iBAEA16O,EAAA8qC,GACAkmJ,GAAA31L,EAAA2gB,IAAA8/N,KACArB,QAAA,EACAC,iBAEA16O,EAAA,OACAgxL,GAAA31L,EAAA2gB,IAAA+/N,OACAtB,QAAA,EACAC,iBAEA16O,EAAAg8O,IACAhrD,GAAA31L,EAAA2gB,IAAAiD,UACAw7N,QAAA,EACAC,iBAEA16O,EAAAi8O,IACAjrD,GAAA31L,EAAA2gB,IAAAqD,QACAo7N,QAAA,EACAC,iBAEA16O,EAAAk8O,IACAlrD,GAAA31L,EAAA2gB,IAAAmwN,eACAsO,QAAA,EACAC,iBAEA16O,EAAAm8O,IACAnrD,GAAA31L,EAAA2gB,IAAAkwN,eACAuO,QAAA,EACAC,iBAEA16O,EAAAo8O,IACAprD,GAAA31L,EAAA2gB,IAAAq2N,UACAoI,QAAA,EACAC,iBAEA16O,EAAAq8O,IACArrD,GAAA31L,EAAA2gB,IAAAs2N,WACAmI,QAAA,EACAC,iBAEA16O,EAAAs8O,IACAtrD,GAAA31L,EAAA2gB,IAAAkD,QACAu7N,QAAA,EACAC,iBAEA16O,EAAAu8O,IACAvrD,GAAA31L,EAAA2gB,IAAAowN,qBACAqO,QAAA,EACAC,iBAEA16O,EAAAw8O,IACAxrD,GAAA31L,EAAA2gB,IAAAo2N,YACAqI,QAAA,EACAC,iBAEA16O,EAAAy8O,IACAzrD,GAAA31L,EAAA2gB,IAAAw2N,SACAiI,QAAA,EACAC,iBAEA16O,EAAA08O,IACA1rD,GAAA31L,EAAA2gB,IAAA22N,mBACA8H,QAAA,EACAC,iBAEA16O,EAAA28O,IACA3rD,GAAA31L,EAAA2gB,IAAAmD,cACAs7N,QAAA,EACAC,iBAEA16O,EAAA,OACAgxL,GAAA31L,EAAA2gB,IAAAgwN,SACAyO,QAAA,EACAC,iBAEA16O,EAAA48O,IACA5rD,GAAA31L,EAAA2gB,IAAAoD,SACAq7N,QAAA,EACAC,iBAEA16O,EAAA68O,IACA7rD,GAAA31L,EAAA2gB,IAAA2vN,eACA8O,QAAA,EACAC,iBAEA16O,EAAA,MACAgxL,GAAA31L,EAAA2gB,IAAA+vN,iBACA0O,QAAA,EACAC,iBAEA16O,EAAA,MACAgxL,GAAA31L,EAAA2gB,IAAAiwN,2BACAwO,QAAA,EACAC,iBAEA16O,EAAA88O,IACA9rD,GAAA31L,EAAA2gB,IAAA+gO,aACAtC,QAAA,EACAC,iBAEA16O,EAAAg9O,IACAhsD,GAAA31L,EAAA2gB,IAAAihO,sBACAxC,QAAA,EACAC,iBAEA16O,EAAAk9O,IACAlsD,GAAA31L,EAAA2gB,IAAAswN,oBACAmO,QAAA,EACAC,iBAEA16O,EAAAiI,IACA+oL,GAAA31L,EAAA2gB,IAAAqwN,kBACAoO,QAAA,EACAC,iBAEA16O,EAAAm9O,IACAnsD,GAAA31L,EAAA2gB,IAAA0wN,eACA+N,QAAA,EACAC,iBAEA16O,EAAAo9O,KACApsD,GAAA31L,EAAA2gB,IAAAixN,gBACAwN,QAAA,GACAC,iBAEA16O,EAAAq9O,IACArsD,GAAA31L,EAAA2gB,IAAAwwN,aACAiO,QAAA,EACAC,iBAEA16O,EAAAs9O,KACAtsD,GAAA31L,EAAA2gB,IAAAgxN,cACAyN,QAAA,GACAC,iBAEA16O,EAAAsM,GACA0kL,GAAA31L,EAAA2gB,IAAA6wN,cACA4N,QAAA,EACAC,iBAEA16O,EAAA2L,GACAqlL,GAAA31L,EAAA2gB,IAAA4wN,YACA6N,QAAA,EACAC,iBAEA16O,EAAAu9O,IACAvsD,GAAA31L,EAAA2gB,IAAA2wN,kBACA8N,QAAA,EACAC,iBAEA16O,EAAAw9O,IACAxsD,GAAA31L,EAAA2gB,IAAAywN,gBACAgO,QAAA,EACAC,iBAEA16O,EAAA00B,GACAs8J,GAAA31L,EAAA2gB,IAAA+wN,mBACA0N,QAAA,EACAC,iBAEA16O,EAAAiB,GACA+vL,GAAA31L,EAAA2gB,IAAA8wN,iBACA2N,QAAA,EACAC,iBAEA16O,EAAAy9O,IACAzsD,GAAA31L,EAAA2gB,IAAAkxN,YACAuN,QAAA,EACAC,iBAEA16O,EAAA09O,IACA1sD,GAAA31L,EAAA2gB,IAAA2hO,iBACAlD,QAAA,EACAC,iBAEA16O,EAAA49O,IACA5sD,GAAA31L,EAAA2gB,IAAA6hO,eACApD,QAAA,EACAC,iBAEA16O,EAAA89O,IACA9sD,GAAA31L,EAAA2gB,IAAA0vN,eACA+O,QAAA,EACAC,iBAEA16O,EAAA+9O,IACA/sD,GAAA31L,EAAA2gB,IAAAsvN,aACAmP,QAAA,EACAC,iBAEA16O,EAAAg+O,IACAhtD,GAAA31L,EAAA2gB,IAAA6xN,UACA4M,QAAA,EACAC,iBAEA16O,EAAAi+O,IACAjtD,GAAA31L,EAAA2gB,IAAA8xN,eACA2M,QAAA,EACAC,iBAEA16O,EAAAk+O,KACAltD,GAAA31L,EAAA2gB,IAAA+xN,mBACA0M,QAAA,EACAC,iBAEA16O,EAAAm+O,KACAntD,GAAA31L,EAAA2gB,IAAAgyN,wBACAyM,QAAA,EACAC,iBAEA16O,EAAAo+O,KACAptD,GAAA31L,EAAA2gB,IAAAiyN,iBACAwM,QAAA,EACAC,iBAEA16O,EAAAq+O,IACArtD,GAAA31L,EAAA2gB,IAAAkyN,YACAuM,QAAA,EACAC,iBAEA16O,EAAAs+O,IACAttD,GAAA31L,EAAA2gB,IAAAmyN,UACAsM,QAAA,EACAC,iBAEA16O,EAAAu+O,GAAA,KACAv+O,EAAAw+O,GAAA,KACAx+O,EAAAy+O,KAAA,KACAz+O,EAAA0+O,GAAA,KACA1+O,EAAA2+O,IAAA,KACA3+O,EAAA4+O,KAAA,KACA5+O,EAAA6+O,MAAA,KACA7+O,EAAAwtG,GAAA,KACAxtG,EAAA8+O,IAAA,KACA9+O,EAAA++O,KAAA,OAEA,SAAAhU,EAAA7sO,EAAA1H,EAAA2vO,GACApwO,KAAAipP,MAAAzE,IACAxkP,KAAA+iB,OAAA,IAAA2nJ,EAAAxuJ,OAAA,IAAAwuJ,EAAAtuJ,MAAAjU,EAAAnI,KAAAipP,UAAAxoP,GACAT,KAAAowO,eACApwO,KAAAkpP,oBA8EA,OA5EAlU,EAAAp1O,WACAw1O,uBACA,OAAAp1O,KAAAowO,aAAA6T,WAAAniP,QAEA0lK,KAAA,SAAA4uC,GAEA,IADA,IAAAptL,EAAAotL,EAAAptL,OACA,CACA,IAAAtpB,EAAAM,KAAA+iB,OAAA/F,SACA,MAAAxX,EAAApB,OAAA1E,GAAA,CACA,IAAAW,EAAAX,EAAAW,IACA8oP,EAAAnpP,KAAAipP,MAAA5oP,GACA,IAAA8oP,EAAA,IACA7jP,EAAA4O,MAAA,oBAAA7T,EAAA,KACA,SAEA,IAAAuD,EAAAulP,EAAAluD,GACAypD,EAAAyE,EAAAzE,QACA0E,EAAA,OAAApgO,IAAAlnB,OAAA,EACA,GAAAqnP,EAAAxE,aAsBWyE,EAAA1E,MACXp/O,EAAAkR,MAAA,WAAA5S,EAAA,iBAAA8gP,EAAA,wBAAA0E,EAAA,cAvBA,CACA,GAAAA,IAAA1E,EAAA,CAEA,IADA,IAAAwE,EAAAlpP,KAAAkpP,iBACAE,EAAA1E,GACAwE,EAAA3rO,KAAAyL,EAAAhhB,SACAohP,IAEA,KAAAA,EAAA1E,GAAA,IAAAwE,EAAApnP,QACA,OAAAknB,IACAA,MAEAA,EAAA+tL,QAAAmyC,EAAA34E,OACA64E,IAGA,GAAAA,EAAA1E,EAAA,IACAp/O,EAAA4O,MAAA,oBAAAtQ,EAAA,cAAA8gP,EAAA,uBAAA0E,EAAA,UACA,OAAApgO,IACAA,EAAAlnB,OAAA,GAEA,UAQA,OAHA9B,KAAAqpP,kBAAAzlP,EAAAolB,GACAotL,EAAAxyM,KACAwyM,EAAAptL,UAGA,MAAAxjB,EAAArB,OAAAzE,GACA,SAEA,UAAAA,IACA,OAAAspB,IACAA,MAEAA,EAAAzL,KAAA7d,GACAspB,EAAAlnB,OAAA,IACA,UAAAwD,EAAAyD,YAAA,wBAKAsgP,kBAAA,SAAAzlP,EAAAolB,GACA,SAAAplB,GACA,KAAA0B,EAAA2gB,IAAAC,KACAlmB,KAAAowO,aAAAlqN,OACA,MACA,KAAA5gB,EAAA2gB,IAAAG,QACApmB,KAAAowO,aAAAhqN,UACA,MACA,KAAA9gB,EAAA2gB,IAAA5B,UACArkB,KAAAowO,aAAA/rN,UAAA2E,MAKAgsN,EA5cA,GA8cA31O,EAAAoiN,qDClrFAtiN,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAogP,YAAApgP,EAAAkgP,aAAAlgP,EAAAiqP,YAEA,IAAAhkP,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BmlK,EAAcnlK,EAAQ,KAEtB8W,EAAc9W,EAAQ,KAEtBgkP,GAAA,+xEACAD,EAAA,WACA,SAAAA,EAAAhK,GACAt/O,KAAAwpP,8BACAxpP,KAAAypP,mBAAA,EACAzpP,KAAAU,QACAV,KAAAD,KAAA,GACAC,KAAAg5O,YACAh5O,KAAA0/O,QAAA,KACA1/O,KAAAs/O,cAyGA,OAvGAgK,EAAA1pP,WACA8pP,kBAAA,SAAA/iP,EAAAmsL,EAAAD,GACA7yL,KAAAwpP,gBAAA7iP,EAAA,GAAA4W,KAAAu1K,EAAAD,GACA7yL,KAAAypP,sBAEAE,YAAA,SAAA72D,EAAAD,EAAA+2D,GACA,KAAA92D,GAAAD,GACA7yL,KAAAU,KAAAoyL,KAAA82D,KAGAC,WAAA,SAAA/2D,EAAAD,EAAA+2D,GAEA,IADA,IAAAE,EAAAF,EAAA9nP,OAAA,EACAgxL,GAAAD,GACA7yL,KAAAU,KAAAoyL,KAAA82D,EACAA,IAAAvkD,OAAA,EAAAykD,GAAAvoO,OAAAC,aAAAooO,EAAAp0O,WAAAs0O,GAAA,IAGAC,kBAAA,SAAAj3D,EAAAD,EAAAv1K,GAGA,IAFA,IAAA3b,EAAA,EACAC,EAAA0b,EAAAxb,OACAgxL,GAAAD,GAAAlxL,EAAAC,GACA5B,KAAAU,KAAAoyL,GAAAx1K,EAAA3b,OACAmxL,GAGAk3D,OAAA,SAAAx6O,EAAAy6O,GACAjqP,KAAAU,KAAA8O,GAAAy6O,GAEA52O,OAAA,SAAA5J,GACA,OAAAzJ,KAAAU,KAAA+I,IAEAygP,SAAA,SAAAzgP,GACA,gBAAAzJ,KAAAU,KAAA+I,IAEAlH,QAAA,SAAAC,GACA,IAAAkkB,EAAA1mB,KAAAU,KACAoB,EAAA4kB,EAAA5kB,OACA,GAAAA,GAAA,MACA,QAAAH,EAAA,EAAuBA,EAAAG,EAAYH,aACnC+kB,EAAA/kB,IACAa,EAAAb,EAAA+kB,EAAA/kB,SAIA,QAAA2oK,KAAA5jJ,EACAlkB,EAAA8nK,EAAA5jJ,EAAA4jJ,KAIA6/E,WAAA,SAAA7qP,GACA,IAAAonB,EAAA1mB,KAAAU,KACA,GAAAgmB,EAAA5kB,QAAA,MACA,OAAA4kB,EAAAoiJ,QAAAxpK,GAEA,QAAA6gP,KAAAz5N,EACA,GAAAA,EAAAy5N,KAAA7gP,EACA,SAAA6gP,EAGA,UAEAD,OAAA,WACA,OAAAlgP,KAAAU,MAEA0pP,aAAA,SAAAhnP,EAAAmkB,EAAA6lK,GAIA,IAHA,IAAAlhL,EAAA,EACAs9O,EAAAxpP,KAAAwpP,gBACAa,EAAArqP,KAAAwpP,gBAAA1nP,OACA6E,EAAA,EAAqBA,EAAA0jP,EAAwB1jP,IAAA,CAC7CuF,MAAA,EAAA9I,EAAAoS,WAAA+R,EAAA5gB,MAAA,EAEA,IADA,IAAA2jP,EAAAd,EAAA7iP,GACAuE,EAAA,EAAAsB,EAAA89O,EAAAxoP,OAAmDoJ,EAAAsB,GAAQ,CAC3D,IAAAsmL,EAAAw3D,EAAAp/O,KACA2nL,EAAAy3D,EAAAp/O,KACA,GAAAgB,GAAA4mL,GAAA5mL,GAAA2mL,EAGA,OAFAzF,EAAA4xD,SAAA9yO,OACAkhL,EAAAtrL,OAAA6E,EAAA,IAKAymL,EAAA4xD,SAAA,EACA5xD,EAAAtrL,OAAA,GAGAA,aACA,OAAA9B,KAAAU,KAAAoB,QAEAyoP,qBACA,kBAAAvqP,KAAAD,MAAA,eAAAC,KAAAD,KACA,SAEA,WAAAC,KAAAU,KAAAoB,OACA,SAEA,QAAAH,EAAA,EAAqBA,EAAA,MAAaA,IAClC,GAAA3B,KAAAU,KAAAiB,OACA,SAGA,WAGA2nP,EAjHA,GAmHA/J,EAAA,WACA,SAAAA,EAAAvG,EAAAryO,GACA2iP,EAAAxlP,KAAA9D,MACAA,KAAAg5O,WACAh5O,KAAA0pP,kBAAA/iP,EAAA,SA+CA,OA7CArB,EAAA8C,KAAAivK,QAAAkoE,EAAA+J,MACA/J,EAAA3/O,WACA8pP,kBAAAJ,EAAA1pP,UAAA8pP,kBACAC,YAAA,SAAA72D,EAAAD,EAAA+2D,MACAtkP,EAAAgK,aAAA,gCAEAu6O,WAAA,SAAA/2D,EAAAD,EAAA+2D,MACAtkP,EAAAgK,aAAA,+BAEAy6O,kBAAA,SAAAj3D,EAAAD,EAAAv1K,MACAhY,EAAAgK,aAAA,sCAEA06O,OAAA,SAAAx6O,EAAAy6O,MACA3kP,EAAAgK,aAAA,8BAEA+D,OAAA,SAAA5J,GACA,OAAAgU,OAAAC,UAAAjU,OAAA,MAAAA,UAEAygP,SAAA,SAAAzgP,GACA,OAAAgU,OAAAC,UAAAjU,OAAA,OAEAlH,QAAA,SAAAC,GACA,QAAAb,EAAA,EAAqBA,GAAA,MAAaA,IAClCa,EAAAb,MAGAwoP,WAAA,SAAA7qP,GACA,OAAAme,OAAAC,UAAApe,OAAA,MAAAA,GAAA,GAEA4gP,OAAA,WAEA,IADA,IAAAx5N,EAAA,IAAAjlB,MAAA,OACAE,EAAA,EAAqBA,GAAA,MAAaA,IAClC+kB,EAAA/kB,KAEA,OAAA+kB,GAGA0jO,aAAAd,EAAA1pP,UAAAwqP,aACAtoP,aACA,cAEAyoP,wBACAjlP,EAAAgK,aAAA,uCAGAiwO,EAnDA,GAqDAiL,EAAA,WACA,SAAAC,EAAAtyO,EAAAzQ,GAEA,IADA,IAAAf,EAAA,EACAhF,EAAA,EAAmBA,GAAA+F,EAAW/F,IAC9BgF,KAAA,EAAAwR,EAAAxW,GAEA,OAAAgF,IAAA,EAEA,SAAA+jP,EAAAvyO,EAAAzQ,GACA,WAAAA,EACA6Z,OAAAC,aAAArJ,EAAA,GAAAA,EAAA,IAEA,IAAAzQ,EACA6Z,OAAAC,aAAArJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAoJ,OAAAC,aAAAm1L,MAAA,KAAAx+L,EAAA7R,SAAA,EAAAoB,EAAA,IAEA,SAAAijP,EAAAxyO,EAAA/O,EAAA1B,GAEA,IADA,IAAAwE,EAAA,EACAvK,EAAA+F,EAAsB/F,GAAA,EAAQA,IAC9BuK,GAAAiM,EAAAxW,GAAAyH,EAAAzH,GACAwW,EAAAxW,GAAA,IAAAuK,EACAA,IAAA,EAGA,SAAA0+O,EAAAzyO,EAAAzQ,GAEA,IADA,IAAAwE,EAAA,EACAvK,EAAA+F,EAAsB/F,GAAA,GAAAuK,EAAA,EAAiBvK,IACvCuK,GAAAiM,EAAAxW,GACAwW,EAAAxW,GAAA,IAAAuK,EACAA,IAAA,EAGA,IAAA2+O,EAAA,GACAC,EAAA,GACA,SAAAC,EAAArmO,GACA1kB,KAAA+G,OAAA2d,EACA1kB,KAAA6F,IAAA,EACA7F,KAAA8F,IAAA4e,EAAA5iB,OACA9B,KAAA8U,OAAA,IAAAlP,WAAAklP,GA2NA,SAAAN,KAEA,OA3NAO,EAAAnrP,WACAorP,SAAA,WACA,OAAAhrP,KAAA6F,KAAA7F,KAAA8F,KACA,EAEA9F,KAAA+G,OAAA/G,KAAA6F,QAEAolP,WAAA,WACA,IACAv6E,EADA/pK,EAAA,EAEA,GACA,IAAAyC,EAAApJ,KAAAgrP,WACA,GAAA5hP,EAAA,EACA,UAAA9D,EAAAyD,YAAA,2BAEA2nK,IAAA,IAAAtnK,GACAzC,KAAA,MAAAyC,SACOsnK,GACP,OAAA/pK,GAEAukP,WAAA,WACA,IAAAvkP,EAAA3G,KAAAirP,aACA,SAAAtkP,QAAA,GAAAA,IAAA,GAEAwkP,QAAA,SAAAloP,EAAAyE,GACAzE,EAAAZ,IAAArC,KAAA+G,OAAAT,SAAAtG,KAAA6F,IAAA7F,KAAA6F,IAAA6B,EAAA,IACA1H,KAAA6F,KAAA6B,EAAA,GAEA0jP,cAAA,SAAAnoP,EAAAyE,GACA,IAAAgpK,EACA+qB,EAAAz7L,KAAA8U,OACAu2O,EAAA,EACA,GACA,IAAAjiP,EAAApJ,KAAAgrP,WACA,GAAA5hP,EAAA,EACA,UAAA9D,EAAAyD,YAAA,2BAEA2nK,IAAA,IAAAtnK,GACAqyL,EAAA4vD,KAAA,IAAAjiP,SACOsnK,GAIP,IAHA,IAAA/uK,EAAA+F,EACAX,EAAA,EACAk/K,EAAA,EACAtkL,GAAA,IACA,KAAAskL,EAAA,GAAAwV,EAAA35L,OAAA,GACAiF,EAAA00L,IAAA4vD,IAAAplE,EAAAl/K,EACAk/K,GAAA,EAEAhjL,EAAAtB,GAAA,IAAAoF,EACApF,IACAoF,IAAA,EACAk/K,GAAA,IAGAqlE,cAAA,SAAAroP,EAAAyE,GACA1H,KAAAorP,cAAAnoP,EAAAyE,GAGA,IAFA,IAAA4Z,EAAA,EAAAre,EAAAyE,GAAA,MACAwE,EAAA,EACAvK,EAAA,EAAqBA,GAAA+F,EAAW/F,IAChCuK,GAAA,EAAAA,IAAA,EAAAjJ,EAAAtB,GACAsB,EAAAtB,GAAAuK,GAAA,EAAAoV,GAGAiqO,WAAA,WAGA,IAFA,IAAAzhP,EAAA9J,KAAAirP,aACA9zH,EAAA,GACAx1H,EAAA,EAAqBA,EAAAmI,EAASnI,IAC9Bw1H,GAAA51G,OAAAC,aAAAxhB,KAAAirP,cAEA,OAAA9zH,IAqJAqzH,EAAA5qP,WAAgC4rP,QAlJhC,SAAA9mO,EAAA26N,EAAA5uD,GACA,WAAAnvL,QAAA,SAAAC,EAAAgmK,GACA,IAAAp/J,EAAA,IAAA4iP,EAAArmO,GACAo3K,EAAA3zL,EAAA6iP,WACA3L,EAAArG,YAAA,EAAAl9C,GASA,IARA,IAMAryL,EACAL,EAPAs2O,EAAA,KACAh6O,EAAA,IAAAE,WAAAilP,GACA/kP,EAAA,IAAAF,WAAAilP,GACAtlD,EAAA,IAAA3/L,WAAAilP,GACA1K,EAAA,IAAAv6O,WAAAilP,GACA/4D,EAAA,IAAAlsL,WAAAilP,IAGAzhP,EAAAjB,EAAA6iP,aAAA,IACA,IAAA9mP,EAAAkF,GAAA,EACA,OAAAlF,EAAA,CAWA,IAAAunP,KAAA,GAAAriP,GACAsiP,EAAA,GAAAtiP,EACA,GAAAsiP,EAAA,EAAAb,EACA,UAAA/nO,MAAA,wCAEA,IAEAnhB,EADAgqP,EAAAxjP,EAAA8iP,aAEA,OAAA/mP,GACA,OAKA,IAJAiE,EAAAgjP,QAAAzlP,EAAAgmP,GACAvjP,EAAAijP,cAAAtlP,EAAA4lP,GACAf,EAAA7kP,EAAAJ,EAAAgmP,GACArM,EAAAqK,kBAAAgC,EAAA,EAAAjB,EAAA/kP,EAAAgmP,GAAAjB,EAAA3kP,EAAA4lP,IACA/pP,EAAA,EAAuBA,EAAAgqP,EAAmBhqP,IAC1CipP,EAAA9kP,EAAA4lP,GACAvjP,EAAAijP,cAAA1lP,EAAAgmP,GACAf,EAAAjlP,EAAAI,EAAA4lP,GACAvjP,EAAAijP,cAAAtlP,EAAA4lP,GACAf,EAAA7kP,EAAAJ,EAAAgmP,GACArM,EAAAqK,kBAAAgC,EAAA,EAAAjB,EAAA/kP,EAAAgmP,GAAAjB,EAAA3kP,EAAA4lP,IAEA,MACA,OAKA,IAJAvjP,EAAAgjP,QAAAzlP,EAAAgmP,GACAvjP,EAAAijP,cAAAtlP,EAAA4lP,GACAf,EAAA7kP,EAAAJ,EAAAgmP,GACAvjP,EAAA8iP,aACAtpP,EAAA,EAAuBA,EAAAgqP,EAAmBhqP,IAC1CipP,EAAA9kP,EAAA4lP,GACAvjP,EAAAijP,cAAA1lP,EAAAgmP,GACAf,EAAAjlP,EAAAI,EAAA4lP,GACAvjP,EAAAijP,cAAAtlP,EAAA4lP,GACAf,EAAA7kP,EAAAJ,EAAAgmP,GACAvjP,EAAA8iP,aAEA,MACA,OAIA,IAHA9iP,EAAAgjP,QAAA5lD,EAAAmmD,GACAjiP,EAAAtB,EAAA8iP,aACA5L,EAAA2K,OAAAS,EAAAllD,EAAAmmD,GAAAjiP,GACA9H,EAAA,EAAuBA,EAAAgqP,EAAmBhqP,IAC1CipP,EAAArlD,EAAAmmD,GACAD,IACAtjP,EAAAijP,cAAAt5D,EAAA45D,GACAf,EAAAplD,EAAAzT,EAAA45D,IAEAjiP,EAAAtB,EAAA+iP,cAAAzhP,EAAA,GACA41O,EAAA2K,OAAAS,EAAAllD,EAAAmmD,GAAAjiP,GAEA,MACA,OAMA,IALAtB,EAAAgjP,QAAAzlP,EAAAgmP,GACAvjP,EAAAijP,cAAAtlP,EAAA4lP,GACAf,EAAA7kP,EAAAJ,EAAAgmP,GACAjiP,EAAAtB,EAAA8iP,aACA5L,EAAAsK,YAAAc,EAAA/kP,EAAAgmP,GAAAjB,EAAA3kP,EAAA4lP,GAAAjiP,GACA9H,EAAA,EAAuBA,EAAAgqP,EAAmBhqP,IAC1CipP,EAAA9kP,EAAA4lP,GACAD,EAIA/lP,EAAArD,IAAAyD,IAHAqC,EAAAijP,cAAA1lP,EAAAgmP,GACAf,EAAAjlP,EAAAI,EAAA4lP,IAIAvjP,EAAAijP,cAAAtlP,EAAA4lP,GACAf,EAAA7kP,EAAAJ,EAAAgmP,GACAjiP,EAAAtB,EAAA8iP,aACA5L,EAAAsK,YAAAc,EAAA/kP,EAAAgmP,GAAAjB,EAAA3kP,EAAA4lP,GAAAjiP,GAEA,MACA,OAIA,IAHAtB,EAAAgjP,QAAA5lD,EAnEA,GAoEAp9L,EAAAgjP,QAAAhL,EAAAuL,GACArM,EAAA2K,OAAAS,EAAAllD,EArEA,GAqEAmlD,EAAAvK,EAAAuL,IACA/pP,EAAA,EAAuBA,EAAAgqP,EAAmBhqP,IAC1CipP,EAAArlD,EAvEA,GAwEAkmD,IACAtjP,EAAAijP,cAAAt5D,EAzEA,GA0EA64D,EAAAplD,EAAAzT,EA1EA,IA4EA84D,EAAAzK,EAAAuL,GACAvjP,EAAAmjP,cAAAx5D,EAAA45D,GACAf,EAAAxK,EAAAruD,EAAA45D,GACArM,EAAA2K,OAAAS,EAAAllD,EA/EA,GA+EAmlD,EAAAvK,EAAAuL,IAEA,MACA,OAMA,IALAvjP,EAAAgjP,QAAAzlP,EAnFA,GAoFAyC,EAAAijP,cAAAtlP,EApFA,GAqFA6kP,EAAA7kP,EAAAJ,EArFA,GAsFAyC,EAAAgjP,QAAAhL,EAAAuL,GACArM,EAAAwK,WAAAY,EAAA/kP,EAvFA,GAuFA+kP,EAAA3kP,EAvFA,GAuFA4kP,EAAAvK,EAAAuL,IACA/pP,EAAA,EAAuBA,EAAAgqP,EAAmBhqP,IAC1CipP,EAAA9kP,EAzFA,GA0FA2lP,EAIA/lP,EAAArD,IAAAyD,IAHAqC,EAAAijP,cAAA1lP,EA3FA,GA4FAilP,EAAAjlP,EAAAI,EA5FA,IAgGAqC,EAAAijP,cAAAtlP,EAhGA,GAiGA6kP,EAAA7kP,EAAAJ,EAjGA,GAkGAyC,EAAAgjP,QAAAhL,EAAAuL,GACArM,EAAAwK,WAAAY,EAAA/kP,EAnGA,GAmGA+kP,EAAA3kP,EAnGA,GAmGA4kP,EAAAvK,EAAAuL,IAEA,MACA,QAEA,YADAnkF,EAAA,IAAAzkJ,MAAA,oCAAA5e,UAtHA,UAAAkF,GACA,OACAjB,EAAAojP,aACA,MACA,OACA7L,EAAAv3O,EAAAojP,cAsHAhqP,EADAm+O,EACAjvD,EAAAivD,GAGAL,OAKAmL,EApQA,GAsQA/K,EAAA,WACA,SAAAmM,EAAAxoP,GAEA,IADA,IAAA+U,EAAA,EACAxW,EAAA,EAAmBA,EAAAyB,EAAAtB,OAAgBH,IACnCwW,KAAA,EAAA/U,EAAAoS,WAAA7T,GAEA,OAAAwW,IAAA,EAEA,SAAA0zO,EAAAnsP,GACA,OAAA4F,EAAAiQ,UAAA7V,GACA,UAAA4F,EAAAyD,YAAA,oCAGA,SAAA+iP,EAAApsP,GACA,IAAA+d,OAAAC,UAAAhe,GACA,UAAA4F,EAAAyD,YAAA,iCAGA,SAAAgjP,EAAA1M,EAAA3iO,GACA,QACA,IAAAhd,EAAAgd,EAAAM,SACA,MAAAxX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,aACA,OAEAmsP,EAAAnsP,GACA,IAAA8P,EAAAo8O,EAAAlsP,GAEAmsP,EADAnsP,EAAAgd,EAAAM,UAEA,IAAAitO,EAAAvqP,EACA2/O,EAAA2K,OAAAx6O,EAAAy6O,IAGA,SAAA+B,EAAA3M,EAAA3iO,GACA,QACA,IAAAhd,EAAAgd,EAAAM,SACA,MAAAxX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,cACA,OAEAmsP,EAAAnsP,GACA,IAAAozL,EAAA84D,EAAAlsP,GAEAmsP,EADAnsP,EAAAgd,EAAAM,UAEA,IAAA61K,EAAA+4D,EAAAlsP,GAEA,GADAA,EAAAgd,EAAAM,SACAS,OAAAC,UAAAhe,OAAA4F,EAAAiQ,UAAA7V,GAAA,CACA,IAAAkqP,EAAAnsO,OAAAC,UAAAhe,GAAA6hB,OAAAC,aAAA9hB,KACA2/O,EAAAwK,WAAA/2D,EAAAD,EAAA+2D,OACO,QAAApkP,EAAApB,OAAA1E,EAAA,KASP,MARAA,EAAAgd,EAAAM,SAEA,IADA,IAAAM,SACA9X,EAAApB,OAAA1E,EAAA,UAAA8F,EAAArB,OAAAzE,IACA4d,EAAAC,KAAA7d,GACAA,EAAAgd,EAAAM,SAEAqiO,EAAA0K,kBAAAj3D,EAAAD,EAAAv1K,IAKA,UAAAhY,EAAAyD,YAAA,qBAEA,SAAAkjP,EAAA5M,EAAA3iO,GACA,QACA,IAAAhd,EAAAgd,EAAAM,SACA,MAAAxX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,cACA,OAEAmsP,EAAAnsP,GACA,IAAA8P,EAAAo8O,EAAAlsP,GAEAosP,EADApsP,EAAAgd,EAAAM,UAEA,IAAAitO,EAAAvqP,EACA2/O,EAAA2K,OAAAx6O,EAAAy6O,IAGA,SAAAiC,EAAA7M,EAAA3iO,GACA,QACA,IAAAhd,EAAAgd,EAAAM,SACA,MAAAxX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,eACA,OAEAmsP,EAAAnsP,GACA,IAAAozL,EAAA84D,EAAAlsP,GAEAmsP,EADAnsP,EAAAgd,EAAAM,UAEA,IAAA61K,EAAA+4D,EAAAlsP,GAEAosP,EADApsP,EAAAgd,EAAAM,UAEA,IAAA4sO,EAAAlqP,EACA2/O,EAAAsK,YAAA72D,EAAAD,EAAA+2D,IAGA,SAAAuC,EAAA9M,EAAA3iO,GACA,QACA,IAAAhd,EAAAgd,EAAAM,SACA,MAAAxX,EAAArB,OAAAzE,GACA,MAEA,MAAA8F,EAAApB,OAAA1E,EAAA,qBACA,OAEA,OAAA4F,EAAAiQ,UAAA7V,GACA,MAEA,IAAAozL,EAAA84D,EAAAlsP,GAEA,GADAA,EAAAgd,EAAAM,aACA1X,EAAAiQ,UAAA7V,GACA,MAEA,IAAAmzL,EAAA+4D,EAAAlsP,GACA2/O,EAAAqK,kBAAAhqP,EAAAoC,OAAAgxL,EAAAD,GAEA,UAAAvtL,EAAAyD,YAAA,4BAEA,SAAAqjP,EAAA/M,EAAA3iO,GACA,IAAAhd,EAAAgd,EAAAM,SACAS,OAAAC,UAAAhe,KACA2/O,EAAArG,WAAAt5O,GAGA,SAAA2sP,EAAAhN,EAAA3iO,GACA,IAAAhd,EAAAgd,EAAAM,YACAxX,EAAAxB,QAAAtE,OAAA4F,EAAAiQ,UAAA7V,EAAAK,QACAs/O,EAAAt/O,KAAAL,EAAAK,MAGA,SAAAusP,EAAAjN,EAAA3iO,EAAAkwN,EAAA8S,GACA,IAAA6M,EACAC,EACAC,EAAA,OACA,IACA,IAAA/sP,EAAAgd,EAAAM,SACA,MAAAxX,EAAArB,OAAAzE,GACA,MACS,MAAA8F,EAAAxB,QAAAtE,GACT,UAAAA,EAAAK,KACAqsP,EAAA/M,EAAA3iO,GACW,aAAAhd,EAAAK,MACXssP,EAAAhN,EAAA3iO,GAEA6vO,EAAA7sP,OACS,MAAA8F,EAAApB,OAAA1E,GACT,OAAAA,EAAAW,KACA,cACA,MAAAosP,EACA,iBACAjnP,EAAAxB,QAAAuoP,KACAC,EAAAD,EAAAxsP,MAEA,MACA,0BACAosP,EAAA9M,EAAA3iO,GACA,MACA,kBACAqvO,EAAA1M,EAAA3iO,GACA,MACA,mBACAuvO,EAAA5M,EAAA3iO,GACA,MACA,mBACAsvO,EAAA3M,EAAA3iO,GACA,MACA,oBACAwvO,EAAA7M,EAAA3iO,IAIO,MAAAkE,GACP,GAAAA,aAAAtb,EAAA6X,qBACA,MAAAyD,KAEAtb,EAAA4O,MAAA,sBAAA0M,GACA,SAMA,OAHA8+N,GAAA8M,IACA9M,EAAA8M,GAEA9M,EACAgN,EAAArN,EAAAzS,EAAA8S,GAEAp+O,QAAAC,QAAA89O,GAEA,SAAAqN,EAAArN,EAAAzS,EAAA8S,GACA,OAAAiN,EAAAjN,EAAA9S,GAAAnlE,KAAA,SAAAmlF,GAEA,GADAvN,EAAAK,QAAAkN,EACA,IAAAvN,EAAAoK,mBAAA,CAEA,IADA,IAAAoD,EAAAxN,EAAAK,QAAA8J,gBACA7nP,EAAA,EAAuBA,EAAAkrP,EAAA/qP,OAA+BH,IACtD09O,EAAAmK,gBAAA7nP,GAAAkrP,EAAAlrP,GAAAE,QAEAw9O,EAAAoK,mBAAApK,EAAAK,QAAA+J,mBAOA,OALApK,EAAAK,QAAAn9O,QAAA,SAAAL,EAAA5C,GACA+/O,EAAA6K,SAAAhoP,IACAm9O,EAAA2K,OAAA9nP,EAAAm9O,EAAAK,QAAArsO,OAAAnR,MAGAm9O,IAGA,SAAAsN,EAAA5sP,EAAA6sO,GACA,qBAAA7sO,EACAuB,QAAAC,QAAA,IAAAg+O,KAAA,IACK,eAAAx/O,EACLuB,QAAAC,QAAA,IAAAg+O,KAAA,KAEA,IAAAgK,EAAAzgF,QAAA/oK,GACAuB,QAAAimK,OAAA,IAAAzkJ,MAAA,sBAAA/iB,IAEA6sO,EAGAA,EAAA7sO,GAAA0nK,KAAA,SAAA/iJ,GACA,IAAAooO,EAAApoO,EAAAooO,SACAhgB,EAAApoN,EAAAooN,gBACAuS,EAAA,IAAAiK,MACA,GAAAxc,IAAAxnO,EAAAynO,oBAAAggB,OACA,WAAAvC,GAAAgB,QAAAsB,EAAAzN,EAAA,SAAAK,GACA,OAAAgN,EAAArN,EAAAzS,EAAA8S,KAGA,GAAA5S,IAAAxnO,EAAAynO,oBAAAC,KAAA,CACA,IAAAtwN,EAAA,IAAAguJ,EAAAtuJ,MAAA,IAAAC,EAAAxX,OAAAioP,IACA,OAAAR,EAAAjN,EAAA3iO,EAAAkwN,EAAA,MAEA,OAAAtrO,QAAAimK,OAAA,IAAAzkJ,MAAA,sEAfAxhB,QAAAimK,OAAA,IAAAzkJ,MAAA,+CAkBA,OACA5iB,OAAA,SAAAmL,GACA,IAAA+tK,EAAA/tK,EAAA+tK,SACAwzD,EAAAvhO,EAAAuhO,iBACA8S,EAAAr0O,EAAAq0O,QACA,SAAAl6O,EAAAxB,QAAAo1K,GACAuzE,EAAAvzE,EAAAr5K,KAAA6sO,MACOpnO,EAAAhB,UAAA40K,GAGPkzE,EAFA,IAAAhD,EACA,IAAA5+E,EAAAtuJ,MAAAg9J,GACAwzD,EAAA8S,GAAAj4E,KAAA,SAAAulF,GACA,OAAAA,EAAAzC,eACAoC,EAAAK,EAAAjtP,KAAA6sO,GAEAogB,IAGA1rP,QAAAimK,OAAA,IAAAzkJ,MAAA,yBAlQA,GAsQAzjB,EAAAiqP,OACAjqP,EAAAkgP,eACAlgP,EAAAogP,gDCpsBAtgP,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA40O,YAAA50O,EAAA4tP,sBAAA5tP,EAAAwgP,qBAAAxgP,EAAA6/O,aAAA7/O,EAAAo/O,UAAAp/O,EAAAs0O,KAAAt0O,EAAAqyO,UAAAryO,EAAA6tP,uBAAA7tP,EAAA8tP,yBAAA9tP,EAAA+tP,6BAEA,IAAA9nP,EAAYC,EAAQ,KAEpB8nP,EAAkB9nP,EAAQ,KAE1B2mO,EAAiB3mO,EAAQ,KAEzBw1L,EAAiBx1L,EAAQ,KAEzBwmO,EAAsBxmO,EAAQ,KAE9BumO,EAAevmO,EAAQ,KAEvB+nP,EAAqB/nP,EAAQ,KAE7B8W,EAAc9W,EAAQ,KAEtBgoP,EAAoBhoP,EAAQ,KAE5B4nP,EAAA,MACAD,EAAA,MACAM,KACAC,EAAA,IACAL,KACA3O,GACAwC,WAAA,EACAmB,MAAA,EACA1D,SAAA,EACAgP,OAAA,EACA9O,YAAA,GACA+O,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,GAAA,+zEACA,SAAAC,EAAAryD,GACA,GAAAA,EAAAsB,YAGAtB,EAAAsB,WAAA,KAAA33L,EAAA80O,qBAAA,IAGA,IAAArlO,EAAA,KAAA4mL,EAAAsB,WAAA,GACAwjD,EAAA9kD,EAAA2C,OACA,QAAAo0C,KAAA+N,EACAA,EAAA/N,IAAA39N,EAEA4mL,EAAA8E,cAAA1rL,GA0BA,SAAAk/N,EAAA/vO,EAAAwnK,GACA,OAAAxnK,GACA,YACA,iBAAAwnK,EAAApmK,EAAA2oP,SAAAC,OAAA5oP,EAAA2oP,SAAAE,MACA,mBACA,wBAAAziF,EAAApmK,EAAA2oP,SAAAG,cAAA9oP,EAAA2oP,SAAAI,aACA,eACA,OAAA/oP,EAAA2oP,SAAAK,SACA,eACA,OAAAhpP,EAAA2oP,SAAAM,SACA,mBACA,OAAAjpP,EAAA2oP,SAAAO,aACA,cACA,OAAAlpP,EAAA2oP,SAAAQ,QACA,YACA,OAAAnpP,EAAA2oP,SAAAS,MACA,QACA,OAAAppP,EAAA2oP,SAAAU,SAGA,SAAAC,EAAA7uP,EAAA2tM,GACA,YAAAA,EAAA3tM,GACA,OAAAA,EAEA,IAAA4tM,KAAAm+B,EAAAr+B,oBAAA1tM,EAAA2tM,GACA,QAAAC,EACA,QAAAzrM,KAAAwrM,EACA,GAAAA,EAAAxrM,KAAAyrM,EACA,OAAAzrM,EAKA,SADAoD,EAAAkR,MAAA,gDAAAzW,GACAA,EAEA,IAAA8uP,EAAA,WACA,SAAAA,EAAAxc,EAAA1kC,EAAAglC,EAAApiO,EAAAyqO,EAAA8T,EAAAxhP,EAAAyhP,GACA/uP,KAAAqyO,WACAryO,KAAA2tM,UACA3tM,KAAA2yO,SACA3yO,KAAAuQ,QACAvQ,KAAAg7O,UACAh7O,KAAA8uP,iBACA9uP,KAAAsN,UACAtN,KAAA+uP,WAKA,OAHAF,EAAAjvP,UAAAovP,gBAAA,SAAA3c,EAAA1kC,EAAAglC,EAAApiO,EAAAyqO,EAAA8T,EAAAxhP,EAAAyhP,GACA,OAAA/uP,KAAAqyO,cAAAryO,KAAA2tM,aAAA3tM,KAAA2yO,YAAA3yO,KAAAuQ,WAAAvQ,KAAAg7O,aAAAh7O,KAAA8uP,oBAAA9uP,KAAAsN,aAAAtN,KAAA+uP,cAEAF,EAdA,GAgBA3P,EAAA,WACA,SAAAA,IACA,IAAAe,EAAApsO,UAAA/R,OAAA,YAAA+R,UAAA,GAAAA,UAAA,MAEA7T,KAAAU,KAAAu/O,EAmCA,OAjCAf,EAAAt/O,WACAkC,aACA,OAAA9B,KAAAU,KAAAoB,QAEAS,QAAA,SAAAC,GACA,QAAA29O,KAAAngP,KAAAU,KACA8B,EAAA29O,EAAAngP,KAAAU,KAAAy/O,GAAA3qO,WAAA,KAGAlT,IAAA,SAAAX,GACA,gBAAA3B,KAAAU,KAAAiB,IAEAxB,IAAA,SAAAwB,GACA,OAAA3B,KAAAU,KAAAiB,IAEAwoP,WAAA,SAAA7qP,GACA,IAAAonB,EAAA1mB,KAAAU,KACA,GAAAgmB,EAAA5kB,QAAA,MACA,OAAA4kB,EAAAoiJ,QAAAxpK,GAEA,QAAA6gP,KAAAz5N,EACA,GAAAA,EAAAy5N,KAAA7gP,EACA,SAAA6gP,EAGA,UAEA8O,MAAA,SAAAvoO,GACA,QAAAy5N,KAAAz5N,EACA1mB,KAAAU,KAAAy/O,GAAAz5N,EAAAy5N,KAIAjB,EAvCA,GAyCAW,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACA//O,KAAA8/O,YACA9/O,KAAA+/O,WA2BA,OAzBAF,EAAAjgP,WACAkC,aACA,OAAA9B,KAAA+/O,SAAA,EAAA//O,KAAA8/O,WAEAv9O,QAAA,SAAAC,GACA,QAAAb,EAAA3B,KAAA8/O,UAAAl+O,EAAA5B,KAAA+/O,SAAsDp+O,GAAAC,EAASD,IAC/Da,EAAAb,MAGAW,IAAA,SAAAX,GACA,OAAA3B,KAAA8/O,WAAAn+O,MAAA3B,KAAA+/O,UAEA5/O,IAAA,SAAAwB,GACA,GAAA3B,KAAA8/O,WAAAn+O,MAAA3B,KAAA+/O,SACA,OAAAx+N,OAAAC,aAAA7f,IAIAwoP,WAAA,SAAAlmP,GACA,OAAAwZ,OAAAC,UAAAzZ,OAAAjE,KAAA8/O,WAAA77O,GAAAjE,KAAA+/O,SAAA97O,GAAA,GAEAgrP,MAAA,SAAAvoO,MACAphB,EAAAgK,aAAA,6BAGAuwO,EA9BA,GAgCAqP,EAAA,WACA,SAAAC,EAAAv/O,EAAA2X,EAAAtkB,GACA2M,EAAA2X,GAAAtkB,GAAA,MACA2M,EAAA2X,EAAA,OAAAtkB,EAEA,SAAAmsP,EAAAx/O,EAAA2X,EAAAtkB,GACA2M,EAAA2X,GAAAtkB,GAAA,OACA2M,EAAA2X,EAAA,GAAAtkB,GAAA,OACA2M,EAAA2X,EAAA,GAAAtkB,GAAA,MACA2M,EAAA2X,EAAA,OAAAtkB,EAEA,SAAAosP,EAAAz/O,EAAA2X,EAAA7C,GACA,IAAA/iB,EAAAC,EACA,GAAA8iB,aAAA9e,WACAgK,EAAAvN,IAAAqiB,EAAA6C,QACK,oBAAA7C,EACL,IAAA/iB,EAAA,EAAAC,EAAA8iB,EAAA5iB,OAAmCH,EAAAC,EAAQD,IAC3CiO,EAAA2X,KAAA,IAAA7C,EAAAlP,WAAA7T,QAGA,IAAAA,EAAA,EAAAC,EAAA8iB,EAAA5iB,OAAmCH,EAAAC,EAAQD,IAC3CiO,EAAA2X,KAAA,IAAA7C,EAAA/iB,GAIA,SAAAutP,EAAAI,GACAtvP,KAAAsvP,OACAtvP,KAAAyiM,OAAAtjM,OAAAe,OAAA,MA6EA,OA3EAgvP,EAAAK,gBAAA,SAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,EACAloE,EAAA,GACAkoE,EAAAF,GAAAE,GACAA,IAAA,EACAloE,IAEA,IAAAmoE,EAAAD,EAAAD,EACA,OACA97O,MAAAg8O,EACAh8E,MAAA6T,EACAooE,WAAAH,EAAAD,EAAAG,IAKAT,EAAAtvP,WACAiwP,QAAA,WACA,IAAAP,EAAAtvP,KAAAsvP,KACA7sD,EAAAziM,KAAAyiM,OACAqtD,EAAA3wP,OAAAiD,KAAAqgM,GACAqtD,EAAA/mF,OACA,IACApnK,EAAA4K,EAAAsiK,EAAAvlK,EAAAymP,EADAC,EAAAF,EAAAhuP,OAEAylB,EAVA,GACA,GASAyoO,EACAC,GAAA1oO,GACA,IAAA5lB,EAAA,EAAiBA,EAAAquP,EAAeruP,IAGhC4lB,KAFAje,EAAAm5L,EAAAqtD,EAAAnuP,KACAG,OAAA,UAEAmuP,EAAA1yO,KAAAgK,GAEA,IAAAm0K,EAAA,IAAA91L,WAAA2hB,GACA,IAAA5lB,EAAA,EAAiBA,EAAAquP,EAAeruP,IAChC2H,EAAAm5L,EAAAqtD,EAAAnuP,IACA0tP,EAAA3zD,EAAAu0D,EAAAtuP,GAAA2H,GAEA,SAAAgmP,IACAA,KAAAhqP,EAAA4qP,UAAA,QAEAx0D,EAAA,OAAA4zD,EAAA95O,WAAA,GACAkmL,EAAA,OAAA4zD,EAAA95O,WAAA,GACAkmL,EAAA,OAAA4zD,EAAA95O,WAAA,GACAkmL,EAAA,OAAA4zD,EAAA95O,WAAA,GACA25O,EAAAzzD,EAAA,EAAAs0D,GACA,IAAAG,EAAAjB,EAAAK,gBAAAS,EAAA,IAKA,IAJAb,EAAAzzD,EAAA,EAAAy0D,EAAAx8O,OACAw7O,EAAAzzD,EAAA,EAAAy0D,EAAAx8E,OACAw7E,EAAAzzD,EAAA,GAAAy0D,EAAAP,YACAroO,EAnCA,GAoCA5lB,EAAA,EAAiBA,EAAAquP,EAAeruP,IAAA,CAChCouP,EAAAD,EAAAnuP,GACA+5L,EAAAn0K,GAAA,IAAAwoO,EAAAv6O,WAAA,GACAkmL,EAAAn0K,EAAA,OAAAwoO,EAAAv6O,WAAA,GACAkmL,EAAAn0K,EAAA,OAAAwoO,EAAAv6O,WAAA,GACAkmL,EAAAn0K,EAAA,OAAAwoO,EAAAv6O,WAAA,GACA,IAAA46O,EAAA,EACA,IAAA7jP,EAAA0jP,EAAAtuP,GAAAktK,EAAAohF,EAAAtuP,EAAA,GAA2D4K,EAAAsiK,EAAQtiK,GAAA,EAEnE6jP,OADA9qP,EAAA0lL,YAAA0Q,EAAAnvL,KACA,EAEA6iP,EAAA1zD,EAAAn0K,EAAA,EAAA6oO,GACAhB,EAAA1zD,EAAAn0K,EAAA,EAAA0oO,EAAAtuP,IACAytP,EAAA1zD,EAAAn0K,EAAA,GAAAk7K,EAAAstD,GAAAjuP,QACAylB,GAjDA,GAmDA,OAAAm0K,GAEA20D,SAAA,SAAAC,EAAA5rO,GACA,GAAA4rO,KAAAtwP,KAAAyiM,OACA,UAAA3/K,MAAA,SAAAwtO,EAAA,mBAEAtwP,KAAAyiM,OAAA6tD,GAAA5rO,IAGAwqO,EAxGA,GA0GAjC,EAAA,IAAA1kP,YAAA,6KACAorO,EAAA,WACA,SAAAA,EAAA5zO,EAAA27L,EAAAC,GACA,IAAAwkD,EACAngP,KAAAD,OACAC,KAAA2xO,WAAAh2C,EAAAg2C,WACA3xO,KAAAuxO,YAAA51C,EAAA41C,YACAvxO,KAAAuwP,SACAvwP,KAAAwwP,eACAxwP,KAAAywP,WAAAtxP,OAAAe,OAAA,MACAF,KAAAkhP,eAAAvlD,EAAA/uB,MAAA6xE,EAAA2D,OACApiP,KAAAw+O,kBAAA7iD,EAAA/uB,MAAA6xE,EAAAC,UACA1+O,KAAA46O,eAAAj/C,EAAA/uB,MAAA6xE,EAAAwC,YACA,IAAA/8O,EAAAy3L,EAAAz3L,KACAwnK,EAAAiwB,EAAAjwB,QAkBA,GAjBA1rK,KAAAkE,OACAlE,KAAA0rK,UACA1rK,KAAAg6O,aAAAh6O,KAAA46O,YAAA,YAAA56O,KAAAkhP,YAAA,qBACAlhP,KAAAo+O,YAAAziD,EAAAyiD,YACAp+O,KAAAs+L,OAAA3C,EAAA2C,OACAt+L,KAAAygM,aAAA9E,EAAA8E,aACAzgM,KAAA69O,UAAAliD,EAAAkiD,UACA79O,KAAA6iP,UAAAlnD,EAAAknD,UACA7iP,KAAAq/O,KAAA1jD,EAAA0jD,KACAr/O,KAAAo9L,OAAAzB,EAAAyB,OAAAqwD,EACAztP,KAAAq9L,QAAA1B,EAAA0B,QAAAowD,EACAztP,KAAAi9L,WAAAtB,EAAAsB,WACAj9L,KAAAwkO,KAAA7oC,EAAA6oC,KACAxkO,KAAAu+O,gBAAA5iD,EAAA4iD,gBACAv+O,KAAA09O,UAAA/hD,EAAA+hD,UACA19O,KAAAo/O,kBAAAzjD,EAAAyjD,mBAAA,IAAAF,EACAl/O,KAAA0wP,cACA,UAAA/0D,EAAAz3L,KAAA,CAaA,GANAlE,KAAAkjP,YAAAvnD,EAAAunD,YACAljP,KAAAg5O,SAAAr9C,EAAAq9C,SACAh5O,KAAAg5O,WACAh5O,KAAA2gP,SAAAhlD,EAAAglD,SACA3gP,KAAAwgP,gBAAA7kD,EAAA6kD,kBAEA9kD,KAAA31L,QAKA,OAJA21L,MACAp2L,EAAA4O,MAAA,0BAAAnU,EAAA,MAAAC,KAAA2xO,WAAA,UAEA3xO,KAAA2wP,uBAGA,WAAAjlF,IACA,UAAAxnK,GAAA,YAAAA,EA+FA,SAAAw3L,GACA,IAAAI,EAAAJ,EAAAj1L,UAAA,GACA,kBAAAnB,EAAA0lL,YAAA8Q,EAAA,GAFA,CA9FAJ,GACAhwB,EAAA,WAEAxnK,EAAA,QAEO0sP,EAAAl1D,KACPhwB,EAAA,aAGA,kBAAAA,GAAA,iBAAAxnK,IACAA,EAAA,gBAEA,iBAAAA,IAIAwnK,EA0FA,SAAAgwB,GACA,IAAAI,EAAAJ,EAAAj1L,UAAA,GACA,YAAAq1L,EAAA,SAAAA,EAAA,IAGA,MAAAA,EAAA,QAAAA,EAAA,GALA,CA7FAJ,GACA,eACOk1D,EAAAl1D,GACP,WAEA,iBAGA,aAAAhwB,GAAA,aAAAxnK,IACAA,EAAA,YAEA,IACA,IAAAwgB,EACA,OAAAxgB,GACA,iBACAoB,EAAAkR,MAAA,iBAAAzW,EAAA,6BACA,YACA,mBACAC,KAAA6wP,SAAA,gBACA,IAAAh1D,EAAA,WAAAnwB,GAAA,kBAAAA,EAAA,IAAAolF,EAAAp1D,EAAAC,GAAA,IAAAo1D,EAAAhxP,EAAA27L,EAAAC,GACAqyD,EAAAryD,GACAj3K,EAAA1kB,KAAAgxP,QAAAjxP,EAAA87L,EAAAF,GACA,MACA,eACA,eACA,mBACA37L,KAAA6wP,SAAA,gBACAnsO,EAAA1kB,KAAAixP,eAAAlxP,EAAA27L,EAAAC,GACA37L,KAAAkxP,aACAlD,EAAAryD,GACAz3L,EAAA,YAEA,MACA,QACA,UAAAoB,EAAAyD,YAAA,QAAA7E,EAAA,sBAEK,MAAA+X,GACL,KAAAA,aAAA3W,EAAAyD,aACA,MAAAkT,EAIA,SAFA3W,EAAA4O,MAAA+H,QACAjc,KAAA2wP,uBAGA3wP,KAAA0kB,OACA1kB,KAAA+zO,SAAAE,EAAA/vO,EAAAwnK,GACA1rK,KAAAi9L,WAAAtB,EAAAsB,WACAj9L,KAAAs+L,OAAA3C,EAAA2C,OACAt+L,KAAAygM,aAAA9E,EAAA8E,aACAzgM,KAAA09O,UAAA/hD,EAAA+hD,UACA19O,KAAAo5K,SAAAuiB,EAAAkG,aACA7hM,KAAAmxP,QAAAx1D,EAAAw1D,QACAnxP,KAAAoxP,eAvFA,CACA,IAAAjR,EAAA,EAAwBA,EAAA,IAAgBA,IACxCngP,KAAA0wP,WAAAvQ,GAAAngP,KAAAo+O,YAAA+B,IAAAxkD,EAAA4iD,gBAAA4B,GAEAngP,KAAA+zO,SAAAzuO,EAAA2oP,SAAAoD,OAqFA,IACAxJ,EAKA,SAAAyJ,EAAAprP,EAAAC,GACA,OAAAD,GAAA,GAAAC,EAMA,SAAAorP,EAAArrP,EAAAC,GACA,IAAA7G,GAAA4G,GAAA,GAAAC,EACA,aAAA7G,IAAA,MAAAA,EAKA,SAAAkyP,EAAAlyP,GACA,OAAAiiB,OAAAC,aAAAliB,GAAA,UAAAA,GAEA,SAAAmyP,EAAAnyP,GAEA,OADAA,IAAA,YAAAA,GAAA,aAAAA,EACAiiB,OAAAC,aAAAliB,GAAA,UAAAA,GAUA,SAAAsxP,EAAAl1D,GACA,IAAAI,EAAAJ,EAAAj1L,UAAA,GACA,kBAAAnB,EAAAsmK,eAAAkwB,GAYA,SAAA41D,EAAAt4E,EAAAs0B,EAAA0wC,GAGA,IAFA,IACAzwC,EADA+iD,KAEA/uP,EAAA,EAAAC,EAAAw3K,EAAAt3K,OAAyCH,EAAAC,EAAQD,KAEjD,KADAgsM,KAAAm+B,EAAAr+B,oBAAAr0B,EAAAz3K,GAAA+rM,MAEAgjD,EAAA/uP,GAAAgsM,GAGA,QAAAwyC,KAAA/B,GAEA,KADAzwC,KAAAm+B,EAAAr+B,oBAAA2wC,EAAA+B,GAAAzyC,MAEAgjD,GAAAvQ,GAAAxyC,GAGA,OAAA+iD,EAEA,SAAAiB,EAAAloP,GAGA,IAFA,IAAA9H,EAAA,EACA4K,EAAA0gP,EAAAnrP,OAAA,EACAH,EAAA4K,GAAA,CACA,IAAAL,EAAAvK,EAAA4K,EAAA,KACA9C,EAAAwjP,EAAA/gP,GACAK,EAAAL,EAAA,EAEAvK,EAAAuK,EAGA,UAAAvK,GAEA,SAAAiwP,EAAAC,EAAAl2D,EAAAm2D,GACA,IAAApU,EAAA/hD,EAAA+hD,UACAqU,KAAAp2D,EAAA/uB,MAAA6xE,EAAAC,UACAsT,EAAAr2D,EAAA+hD,qBAAAmC,EACAoS,EAAA9yP,OAAAe,OAAA,MACAwwP,KACAwB,KACAC,EAAAhF,EACA,QAAAiF,KAAAP,EAAA,CAEA,IAAAQ,EAAAR,EADAO,GAAA,GAEA,IAAAN,EAAAO,GAAA,CAGA,IAAAC,EAAAF,EACAG,KACA,IAAAP,GAAAtU,EAAAp7O,IAAA8vP,GAAA,CACAG,KACA,IAAA5kD,EAAA+vC,EAAAv9O,IAAAmyP,GACA,IAAA3kD,EAAA7rM,SACAwwP,EAAA3kD,EAAAn4L,WAAA,IAGA,YAAA08O,EAAAI,IAAAX,EAAAW,IAAAP,IAAAQ,EACA,GACA,GAAAJ,EAAAjF,EAAA,IACA5nP,EAAA4O,MAAA,8CACA,MAEAo+O,EAAAH,IACA3E,GAAA,QAAA8E,IAEAH,EAAA,GADAG,EAAA,mBACA,IAESJ,EAAAI,IAETL,EAAAK,GAAAD,EACA3B,EAAA0B,GAAAE,EACAJ,EAAAI,OAEA,OACA5B,aACAmB,kBAAAI,EACAE,6BA0CA,SAAAK,EAAA3gB,EAAA4gB,GACA,IAGA9wP,EAAAC,EAAA2K,EAAAsiK,EAHAhG,EAxCA,SAAAgpE,EAAA4gB,GACA,IAAAlpP,KACA,QAAA42O,KAAAtO,EACAA,EAAAsO,IAAAsS,GAGAlpP,EAAAgU,MACA+0O,aAAA,EAAAnS,EACAkS,QAAAxgB,EAAAsO,KAGA,IAAA52O,EAAAzH,QACAyH,EAAAgU,MACA+0O,aAAA,EACAD,QAAA,IAGA9oP,EAAAw/J,KAAA,SAAA5wJ,EAAA/O,GACA,OAAA+O,EAAAm6O,aAAAlpP,EAAAkpP,eAIA,IAFA,IAAAzpF,KACA/mK,EAAAyH,EAAAzH,OACA6E,EAAA,EAAmBA,EAAA7E,GAAY,CAC/B,IAAA4D,EAAA6D,EAAA5C,GAAA2rP,aACAI,GAAAnpP,EAAA5C,GAAA0rP,WACA1rP,EAEA,IADA,IAAAb,EAAAJ,EACAiB,EAAA7E,GAAAgE,EAAA,IAAAyD,EAAA5C,GAAA2rP,eACAI,EAAAn1O,KAAAhU,EAAA5C,GAAA0rP,WAEA1rP,EACA,SAFAb,KAMA+iK,EAAAtrJ,MAAA7X,EAAAI,EAAA4sP,IAEA,OAAA7pF,EArCA,CAwCAgpE,EAAA4gB,GACAzC,EAAAnnF,IAAA/mK,OAAA,gBACAm+O,EAAA,OAAAuR,EAAAxB,GAAA,YAAA1qP,EAAA4qP,UAAA,IAAAF,GAEA,IAAAruP,EAAAknK,EAAA/mK,OAAA,EAA+BH,GAAA,KAC/BknK,EAAAlnK,GAAA,aADuCA,GAKvC,IAAAgxP,EAAAhxP,EAAA,EACAknK,EAAAlnK,GAAA,kBAAAknK,EAAAlnK,GAAA,KACAknK,EAAAlnK,GAAA,UAEA,IASAgS,EAAAjO,EAAAI,EAAAyD,EATAqpP,EAAA/pF,EAAAlnK,GAAA,aACAkxP,EAAAF,EAAAC,EACAzC,EAAAjB,EAAAK,gBAAAsD,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAnzD,EAAA,EAEA,IAAAp+L,EAAA,EAAAC,EAAA+wP,EAA+BhxP,EAAAC,EAAQD,IAAA,CAEvC+D,GADAiO,EAAAk1J,EAAAlnK,IACA,GACAmE,EAAA6N,EAAA,GACAm/O,GAAAtB,EAAA9rP,GACAqtP,GAAAvB,EAAA1rP,GAEA,IAAAqtP,KACA,IAAA5mP,EAAA,EAAAsiK,GAFAtlK,EAAAoK,EAAA,IAEA7R,OAAoCyK,EAAAsiK,IAAQtiK,EAC5C,GAAAhD,EAAAgD,KAAAhD,EAAAgD,EAAA,MACA4mP,KACA,MAGA,GAAAA,EAUAH,GAAAxB,EADAjoP,EAAA,GACA7D,EAAA,OACAutP,GAAAzB,EAAA,OAXA,CACA,IAAAjqO,EAAA,GAAAsrO,EAAAlxP,GAAA,EAAAo+L,EAIA,IAHAA,GAAAj6L,EAAAJ,EAAA,EACAstP,GAAAxB,EAAA,GACAyB,GAAAzB,EAAAjqO,GACAhb,EAAA,EAAAsiK,EAAAtlK,EAAAzH,OAAsCyK,EAAAsiK,IAAQtiK,EAC9C2mP,GAAA1B,EAAAjoP,EAAAgD,KAQAqmP,EAAA,IACAG,GAAA,KACAD,GAAA,KACAE,GAAA,MACAC,GAAA,QAEA,IAAAG,EAAA,OAAA5B,EAAA,EAAAqB,GAAArB,EAAArB,EAAAx8O,OAAA69O,EAAArB,EAAAx8E,OAAA69E,EAAArB,EAAAP,YAAAmD,EAAA,OAAAD,EAAAE,EAAAC,EAAAC,EACAG,EAAA,GACAC,EAAA,GACA,GAAAtD,EAAA,GAGA,IAFA/P,GAAA,aAAA36O,EAAA4qP,UAAA,IAAAF,EAAA,EAAAoD,EAAAtxP,QACAuxP,EAAA,GACA1xP,EAAA,EAAAC,EAAAinK,EAAA/mK,OAAqCH,EAAAC,EAAQD,IAAA,CAE7C+D,GADAiO,EAAAk1J,EAAAlnK,IACA,GAEA,IAAA8H,GADAF,EAAAoK,EAAA,IACA,GACA,IAAApH,EAAA,EAAAsiK,EAAAtlK,EAAAzH,OAAsCyK,EAAAsiK,IAAQtiK,EAC9ChD,EAAAgD,KAAAhD,EAAAgD,EAAA,OACAzG,EAAA6N,EAAA,GAAApH,EAAA,EACA8mP,MAAA/tP,EAAA4qP,UAAAxqP,MAAAJ,EAAA4qP,UAAApqP,MAAAR,EAAA4qP,UAAAzmP,GACA/D,EAAAI,EAAA,EACA2D,EAAAF,EAAAgD,IAGA8mP,MAAA/tP,EAAA4qP,UAAAxqP,MAAAJ,EAAA4qP,UAAAv8O,EAAA,OAAArO,EAAA4qP,UAAAzmP,GAEA6pP,EAAA,cAAAhuP,EAAA4qP,UAAAmD,EAAAvxP,OAAA,kBAAAwD,EAAA4qP,UAAAmD,EAAAvxP,OAAA,IAEA,OAAAm+O,EAAA,MAAAuR,EAAA4B,EAAAtxP,OAAA,GAAAsxP,EAAAE,EAAAD,EAuBA,SAAAE,EAAA53D,EAAA63D,EAAAC,GACAA,MACAC,WAAA,EACAC,KAAA,EACAC,KAAA,EACAx2D,OAAA,EACAC,QAAA,GAEA,IAAAw2D,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,EACA,GAAAV,EACA,QAAA/pP,KAAA+pP,EAAA,EAEAS,GADAxqP,GAAA,KACAwqP,KACAA,EAAAxqP,GAEAyqP,EAAAzqP,IACAyqP,EAAAzqP,GAEA,IAAA+7J,KAAAsmE,EAAAt+B,oBAAA/jM,GACA,GAAA+7J,EAAA,GACAquF,GAAA,GAAAruF,OACS,GAAAA,EAAA,GACTsuF,GAAA,GAAAtuF,EAAA,QACS,GAAAA,EAAA,GACTuuF,GAAA,GAAAvuF,EAAA,OACS,MAAAA,EAAA,KAGT,UAAAlgK,EAAAyD,YAAA,6DAFAirP,GAAA,GAAAxuF,EAAA,SAMAyuF,EAAA,EACAC,EAAA,IAEA,IAAA1vB,EAAA7oC,EAAA6oC,OAAA,SACAkvB,EAAAD,EAAAC,YAAA,GAAA/3D,EAAAsB,YAAA33L,EAAA80O,sBAAA,GACArlO,EAAA4mL,EAAA2B,aAAA,EAAAo2D,EAAAjG,EACA0G,EAAAV,EAAAr2D,QAAAluL,KAAAoL,MAAAvF,GAAA4mL,EAAAyB,QAAAonC,EAAA,KACA4vB,EAAAX,EAAAp2D,SAAAnuL,KAAAoL,MAAAvF,GAAA4mL,EAAA0B,SAAAmnC,EAAA,KACA4vB,EAAA,GAAAz4D,EAAA0B,QAAA,GAAAmnC,EAAA,OACA4vB,MAEA,IAAAC,EAAAZ,EAAAE,MAAAQ,EACAG,GAAAb,EAAAG,OAAAQ,EACA,4DAAA7yO,OAAAC,aAAAm6K,EAAAmnD,WAAA,uBAAAx9O,EAAA4qP,UAAA2D,MAAAvuP,EAAA4qP,UAAA4D,MAAAxuP,EAAA4qP,UAAA6D,MAAAzuP,EAAA4qP,UAAA8D,GAAA,OAAAxC,EAAA71D,EAAAsnD,YAAA,KAAAuO,EAAAyC,GAAAt4D,EAAAmkD,WAAA0R,EAAA0C,GAAAv4D,EAAAokD,UAAAyR,EAAA2C,GAAA3C,EAAA4C,GAAA,MAAA5C,EAAA6C,GAAA7C,EAAA8C,GAAA,mBAAA9C,EAAA71D,EAAAonD,SAAAyO,EAAA71D,EAAAqnD,WAAAwO,EAAA,GAAAA,EAAAyC,GAAAt4D,EAAAmkD,WAAA,MAEA,SAAAyU,EAAA54D,GACA,IAAA9sI,EAAA3/C,KAAA6C,MAAA4pL,EAAAsnD,YAAA/zO,KAAAyH,IAAA,OACA,mBAAArR,EAAA4qP,UAAArhM,GAAA,cAAAvpD,EAAA4qP,UAAAv0D,EAAAmnD,YAAA,mCAEA,SAAA0R,EAAAz0P,EAAA00P,GACAA,IACAA,WAEA,IAEA9yP,EAAAC,EAAA2K,EAAAsiK,EAAAzrK,EAFAo5L,GAAAi4D,EAAA,0BAAAA,EAAA,OAAA10P,EAAA00P,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,OAAA10P,EAAA00P,EAAA,sBAAAA,EAAA,UAAAA,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBACAC,KAEA,IAAA/yP,EAAA,EAAAC,EAAA46L,EAAA16L,OAAoCH,EAAAC,EAAQD,IAAA,CAE5C,IAAAgzP,KACA,IAAApoP,EAAA,EAAAsiK,GAFAzrK,EAAAqxP,EAAA,GAAA9yP,IAAA66L,EAAA76L,IAEAG,OAAkCyK,EAAAsiK,EAAQtiK,IAC1CooP,EAAAp3O,KAAAi0O,EAAApuP,EAAAoS,WAAAjJ,KAEAmoP,EAAAn3O,KAAAo3O,EAAA1yO,KAAA,KAEA,IAAAwrJ,GAAA+uB,EAAAk4D,GACAE,GAAA,aACAC,GAAA,cACAC,GAAA,cACAC,EAAAv4D,EAAA16L,OAAA8yP,EAAA9yP,OACAkzP,EAAA,OAAAxD,EAAAuD,GAAAvD,EAAA,GAAAuD,EAAA,GACAE,EAAA,EACA,IAAAtzP,EAAA,EAAAC,EAAAgzP,EAAA9yP,OAAsCH,EAAAC,EAAQD,IAAA,CAC9C,IAAAuzP,EAAAznF,EAAA9rK,GACA,IAAA4K,EAAA,EAAAsiK,EAAAqmF,EAAApzP,OAAmCyK,EAAAsiK,EAAQtiK,IAC3CnJ,EAAA8xP,EAAA3oP,GAEAyoP,GADAJ,EAAAjzP,GAAAkzP,EAAAlzP,GAAAmzP,EAAAnzP,GAAA6vP,EAAAjlP,GAAAilP,EAAApuP,EAAAtB,QAAA0vP,EAAAyD,GAEAA,GAAA7xP,EAAAtB,OAIA,OADAkzP,GAAAx4D,EAAAv6K,KAAA,IAAAyyO,EAAAzyO,KAAA,KAq1CA,OAxrDA0xN,EAAAC,WACAiU,EAAA,EACA,WACA,OAAAtmO,OAAAsmO,OAmWAlU,EAAA/zO,WACAG,KAAA,KACAuxO,KAAA,KACAuf,SAAA,KACAz3E,SAAA,KACAk5D,eACA,IAAAA,EAAAgb,EAAA6H,oBAAAj1P,OAAAF,KAAAotP,GACA,SAAA9nP,EAAAgP,QAAAtU,KAAA,WAAAsyO,IAEAgR,WAAA,WACA,IAAA5+N,KACA,QAAA/iB,KAAA3B,KACAA,KAAAo1P,eAAAzzP,KACA+iB,EAAA/iB,GAAA3B,KAAA2B,IAGA,OAAA+iB,GAEAisO,qBAAA,WACA,IAGAxQ,EAAAxyC,EAHA3mC,EAAAhnK,KAEAA,KAAAwwP,eAEA,IAAAzwP,EAAAC,KAAAD,KACAmE,EAAAlE,KAAAkE,KACAwnK,EAAA1rK,KAAA0rK,QACA0lE,EAAArxO,EAAA43K,QAAA,aACA09E,KAAAtpB,EAAAplC,iBACA2uD,KAAAvpB,EAAArlC,oBACA6uD,IAAAF,EAAAjkB,OAAAkkB,EAAAlkB,KAAAikB,EAAAC,EAAAlkB,KAMA,GALAA,EAAAikB,EAAAjkB,IAAAkkB,EAAAlkB,MACApxO,KAAAktK,MAAA,IAAAkkE,EAAAgQ,OAAA,UACAphP,KAAAmtK,QAAA,IAAAikE,EAAAgQ,OAAA,mBAAAhQ,EAAAgQ,OAAA,YACAphP,KAAA85K,OAAA,IAAA/5K,EAAAqhP,OAAA,UACAphP,KAAAw1P,UAAAr2P,OAAAiD,KAAApC,KAAAs+L,QAAAx8L,OAAA,EACAyzP,GAAA,iBAAArxP,GAAA,IAAAlE,KAAAkjP,YAAAp6E,QAAA,cACA,IAAA2sF,KAAA1pB,EAAAxlC,+BACA7/K,KACA,IAAAy5N,KAAAsV,EACA/uO,GAAAy5N,GAAAsV,EAAAtV,GAEA,mBAAA3qE,KAAAz1K,GAAA,CACA,IAAA21P,KAAA3pB,EAAAzlC,wCACA,IAAA65C,KAAAuV,EACAhvO,GAAAy5N,GAAAuV,EAAAvV,QAES,cAAA3qE,KAAAz1K,GAAA,CACT,IAAA41P,KAAA5pB,EAAA1lC,qCACA,IAAA85C,KAAAwV,EACAjvO,GAAAy5N,GAAAwV,EAAAxV,GAGAngP,KAAA09O,qBAAAmC,GAEA7/O,KAAA09O,UAAAn7O,QAAA,SAAA49O,EAAAyV,GACAlvO,GAAAy5N,GAAAyV,IAGA51P,KAAA0wP,WAAAhqO,EACA1mB,KAAA09O,UAAA,IAAAwB,EAAAx4N,QACO,aAAA8uJ,KAAA47D,GACPpxO,KAAA0wP,WAAAgB,EAAA32D,EAAAn/K,qBAAAswN,EAAAzgN,oBAAAzrB,KAAAo+O,kBACO,eAAA5oE,KAAA47D,GACP,aAAA57D,KAAAz1K,OACAuF,EAAA4O,MAAA,8DAEAlU,KAAA0wP,WAAAgB,EAAA32D,EAAAl/K,wBAAAqwN,EAAAv0E,4BAAA33J,KAAAo+O,kBACO,GAAAmX,EACPv1P,KAAA0wP,WAAAgB,EAAA1xP,KAAAu+O,mBAAArS,EAAAzgN,oBAAAzrB,KAAAo+O,iBACO,CACP,IAAA1wC,KAAAw+B,EAAAzgN,oBACAzrB,KAAA09O,UAAAn7O,QAAA,SAAA49O,EAAAyV,GACA,IAAA5uF,EAAA62E,UAAA,CACA,IAAAoB,EAAAj4E,EAAAo3E,YAAA+B,IAAAn5E,EAAAu3E,gBAAA4B,IAEA,KADAxyC,KAAAm+B,EAAAr+B,oBAAAwxC,EAAAvxC,MAEAkoD,EAAAjoD,GAGA3mC,EAAA0pF,WAAAvQ,GAAAyV,IAGA51P,KAAA2xO,WAAAP,EAAA9/D,MAAA,QACAtxK,KAAAoxP,WACApxP,KAAA+zO,SAAAE,EAAA/vO,EAAAwnK,IAEAulF,eAAA,SAAAlxP,EAAAuxO,EAAA31C,GACA,IAAAk6D,GAAA,mGACA,SAAAC,EAAAp6D,EAAAs0D,GACA,IAAAvtD,EAAAtjM,OAAAe,OAAA,MACAuiM,EAAA,aACAA,EAAAw9C,KAAA,KACAx9C,EAAAszD,KAAA,KACAtzD,EAAAuzD,KAAA,KACAvzD,EAAAwzD,KAAA,KACAxzD,EAAAyzD,KAAA,KACAzzD,EAAA1iM,KAAA,KACA0iM,EAAA0zD,KAAA,KACA,QAAAx0P,EAAA,EAAuBA,EAAAquP,EAAeruP,IAAA,CACtC,IAAA2H,EAAA8sP,EAAA9kB,GACAukB,EAAA/sF,QAAAx/J,EAAAgnP,KAAA,GAGA,IAAAhnP,EAAAxH,SAGA2gM,EAAAn5L,EAAAgnP,KAAAhnP,GAEA,OAAAm5L,EAEA,SAAA2zD,EAAA16D,GACA,IAAA40D,KAAAhrP,EAAAsmK,eAAA8vB,EAAAj3L,SAAA,IACA2rP,EAAA10D,EAAAt1L,aAAA,EACAmhB,EAAAm0K,EAAAt1L,aAAA,EACAtE,EAAA45L,EAAAt1L,aAAA,EACAiwP,EAAA36D,EAAA71L,IACA61L,EAAA71L,IAAA61L,EAAAh2L,MAAAg2L,EAAAh2L,MAAA,EACAg2L,EAAAh1L,KAAA6gB,GACA,IAAA7C,EAAAg3K,EAAAj3L,SAAA3C,GAMA,OALA45L,EAAA71L,IAAAwwP,EACA,SAAA/F,IACA5rO,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,MACAA,EAAA,UAGA4rO,MACAF,WACAtuP,SACAylB,SACA7C,QAGA,SAAA4xO,EAAAC,GACA,OACA7yC,WAAAp+M,EAAAsmK,eAAA2qF,EAAA9xP,SAAA,IACAurP,UAAAuG,EAAAtwP,YACA0pP,YAAA4G,EAAAtwP,YACAuwP,cAAAD,EAAAtwP,YACA2pP,WAAA2G,EAAAtwP,aAsPA,SAAAwwP,EAAA7oP,EAAA8oP,EAAAC,EAAA/mP,EAAAgnP,EAAAC,GACA,IAAAC,GACAh1P,OAAA,EACAi1P,mBAAA,GAEA,GAAAJ,EAAAD,GAAA,GACA,OAAAI,EAEA,IAruBAnxP,EAAA4d,EAAAjkB,EAquBA03P,EAAAppP,EAAAtH,SAAAowP,EAAAC,GACAM,EAAA1F,EAAAyF,EAAA,GAAAA,EAAA,IACA,GAAAC,EAAA,EAKA,OA5uBA33P,EAwuBA23P,GAAA,GAxuBAtxP,EAyuBAqxP,GAxuBA,GADAzzO,EAyuBA,IAxuBAjkB,EACAqG,EAAA4d,GAAAjkB,IAAA,EAwuBAsQ,EAAAvN,IAAA20P,EAAAJ,GACAE,EAAAh1P,OAAAk1P,EAAAl1P,OACAg1P,EAEA,IAAAn1P,EACA4K,EAAA,GACA2qP,EAAA,EACA,IAAAv1P,EAAA,EAAmBA,EAAAs1P,EAAmBt1P,IAEtCu1P,EAAA,GADAF,EAAAzqP,IAAA,EAAAyqP,EAAAzqP,EAAA,IAEAA,GAAA,EAEA,IAAA4qP,EAAA5qP,EACA6qP,EAAAJ,EAAAzqP,IAAA,EAAAyqP,EAAAzqP,EAAA,GACAuqP,EAAAC,mBAAAK,EAEA,IAAAC,EADA9qP,GAAA,EAAA6qP,EAEAE,EAAA,EACA,IAAA31P,EAAA,EAAmBA,EAAAu1P,EAAgBv1P,IAAA,CACnC,IAAAyhO,EAAA4zB,EAAAzqP,KACA,IAAA62N,IACA4zB,EAAAzqP,EAAA,MAAA62N,GAEA,IAAAm0B,GAAA,EAAAn0B,EAAA,KAAAA,EAAA,QAAAA,EAAA,KAAAA,EAAA,KAEA,GADAk0B,GAAAC,EACA,EAAAn0B,EAAA,CACA,IAAAo0B,EAAAR,EAAAzqP,KACA5K,GAAA61P,EACAF,GAAAE,EAAAD,GAGA,OAAAD,EACA,OAAAR,EAEA,IAAAW,EAAAlrP,EAAA+qP,EACA,OAAAG,EAAAT,EAAAl1P,OACAg1P,GAEAD,GAAAO,EAAA,GACAxnP,EAAAvN,IAAA20P,EAAA1wP,SAAA,EAAA6wP,GAAAP,GACAhnP,EAAAvN,KAAA,KAAAu0P,EAAAO,GACAvnP,EAAAvN,IAAA20P,EAAA1wP,SAAA+wP,EAAAI,GAAAb,EAAAO,EAAA,GACAM,GAAAL,EACAJ,EAAAl1P,OAAA21P,EAAA,IACAA,IAAA,MAEAX,EAAAh1P,OAAA21P,EACAX,GAEAE,EAAAl1P,OAAA21P,EAAA,GACAA,IAAA,KACA7nP,EAAAvN,IAAA20P,EAAA1wP,SAAA,EAAAmxP,GAAAb,GACAE,EAAAh1P,OAAA21P,EACAX,IAEAlnP,EAAAvN,IAAA20P,EAAAJ,GACAE,EAAAh1P,OAAAk1P,EAAAl1P,OACAg1P,GAkLA,SAAAY,EAAA1C,GACA,IAAAtvP,GAAA4rO,EAAA5rO,MAAA4rO,EAAA5rO,MAAA,GAAAsvP,EAAAztO,OACA+pN,EAAAzrO,IAAAH,EACA,IAAA+nK,UACA3rK,EAAAkzP,EAAAlzP,OACAgE,EAAAJ,EAAA5D,EAGA,OAFAwvO,EAAArrO,aAEAnE,EADA,EAEA,OAAA2rK,EAEA,IAIA9rK,EAAAC,EAJA+1P,EAAArmB,EAAArrO,YACA2xP,EAAAtmB,EAAArrO,YACA4xP,KAGA,IAAAl2P,EAAA,EAAmBA,EAAAg2P,GAAArmB,EAAAzrO,IAFnB,IAEmBC,EAAwDnE,IAAA,CAC3E,IAAAgU,GACAmiP,SAAAxmB,EAAArrO,YACAmzK,SAAAk4D,EAAArrO,YACA8xP,SAAAzmB,EAAArrO,YACAlG,KAAAuxO,EAAArrO,YACAnE,OAAAwvO,EAAArrO,YACAshB,OAAA+pN,EAAArrO,cAEA,IAAA0P,EAAAmiP,UAAA,IAAAniP,EAAAyjK,UAAA,IAAAzjK,EAAAoiP,UAAA,IAAApiP,EAAAmiP,UAAA,IAAAniP,EAAAyjK,UAAA,OAAAzjK,EAAAoiP,WACAF,EAAAt6O,KAAA5H,GAGA,IAAAhU,EAAA,EAAAC,EAAAi2P,EAAA/1P,OAAwCH,EAAAC,EAAQD,IAAA,CAChD,IAAAq2P,EAAAH,EAAAl2P,GACA,KAAAq2P,EAAAl2P,QAAA,IAGA,IAAA+D,EAAAH,EAAAkyP,EAAAI,EAAAzwO,OACA,KAAA1hB,EAAAmyP,EAAAl2P,OAAAgE,GAAA,CAGAwrO,EAAAzrO,MACA,IAAAm2L,EAAAg8D,EAAAj4P,KACA,GAAAi4P,EAAA5+E,SAAA,CAEA,IADA,IAAAh2K,EAAA,GACAmJ,EAAA,EAAAsiK,EAAAmpF,EAAAl2P,OAA+CyK,EAAAsiK,EAAQtiK,GAAA,EACvDnJ,GAAAme,OAAAC,aAAA8vN,EAAArrO,aAEAwnK,EAAA,GAAAuuB,GAAA54L,OAEAqqK,EAAA,GAAAuuB,MAAA12L,EAAAsmK,eAAA0lE,EAAA7sO,SAAAuzP,EAAAl2P,WAGA,OAAA2rK,EAEA,IAAAwqF,GAAA,6YACA,SAAAC,EAAA5uP,EAAA6uP,GAiBA,IAhBA,IAEA5rP,EACA5F,EACAyC,EACAgvP,EACAprP,EANA0X,EAAApb,EAAAob,KACA/iB,EAAA,EAMA02P,EAAA,EACAC,EAAA,EACA78D,KACA88D,KACAC,KACAC,EAAAN,EAAAM,4BACAC,KACAC,EAAA,EACAC,EAAA,EACAh3P,EAAA8iB,EAAA5iB,OAAkCH,EAAAC,GAAQ,CAC1C,IAAAgzM,EAAAlwL,EAAA/iB,KACA,QAAAizM,EAEA,GADAjuM,EAAA+d,EAAA/iB,KACA+2P,GAAAE,EACAj3P,GAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCkvL,EAAAl+K,KAAAmH,EAAA/iB,WAGW,QAAAizM,EAEX,GADAjuM,EAAA+d,EAAA/iB,KACA+2P,GAAAE,EACAj3P,GAAA,EAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCnD,EAAAsb,EAAA/iB,KACA85L,EAAAl+K,KAAAnU,GAAA,EAAAsb,EAAA/iB,WAGW,aAAAizM,GAEX,GADAjuM,EAAAiuM,EAAA,MACA8jD,GAAAE,EACAj3P,GAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCkvL,EAAAl+K,KAAAmH,EAAA/iB,WAGW,aAAAizM,GAEX,GADAjuM,EAAAiuM,EAAA,MACA8jD,GAAAE,EACAj3P,GAAA,EAAAgF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCnD,EAAAsb,EAAA/iB,KACA85L,EAAAl+K,KAAAnU,GAAA,EAAAsb,EAAA/iB,WAGW,QAAAizM,GAAA6jD,EAuBA,QAAA7jD,GAAA6jD,GAYA,QAAA7jD,EACX,GAAA8jD,EACAA,KACAL,EAAA12P,MACa,CAEb,KADAqL,EAAAurP,EAAAhoF,OAIA,SAFAjrK,EAAA4O,MAAA,2BACAikP,EAAAtB,eAGAuB,EAAAI,EAAAjoF,MACA7rJ,EAAA1X,EAAA0X,KACA/iB,EAAAqL,EAAArL,EACAw2P,EAAAU,qBAAAT,GAAA38D,EAAA35L,OAAAkL,EAAA8rP,cAEW,SAAAlkD,GACX8jD,GAAAE,QACAtzP,EAAA4O,MAAA,gCACAukP,MAEAC,KACAJ,EAAA32P,OACW,QAAAizM,IACX+jD,OACW,QAAA/jD,EACXgkD,EAAAD,OACW,QAAA/jD,EACXgkD,IAAAD,IACAC,EAAA,KAEAD,OACW,QAAA/jD,IACX8jD,IAAAE,EAAA,CACA,IAAArxO,EAAAk0K,IAAA35L,OAAA,GACAylB,EAAA,IACA5lB,GAAA4lB,EAAA,SA/CAmxO,GAAAE,QACAtzP,EAAA4O,MAAA,gCACAukP,MAEAC,KACAJ,EAAA32P,EACAy2P,EAAA38D,EAAAlrB,MACA4nF,EAAAY,iBAAAX,IACA1zO,OACA/iB,UAhCA,IAAA+2P,IAAAE,EAGA,GAFAR,EAAA38D,IAAA35L,OAAA,GACAq2P,EAAAa,cAAAZ,MACAA,KAAAD,EAAAU,qBACAp9D,EAAA35L,QAAAq2P,EAAAU,qBAAAT,QACe,GAAAA,KAAAD,EAAAY,kBAAAP,EAAA1vF,QAAAsvF,GAAA,GAQf,GAPAG,EAAAh7O,MACAmH,OACA/iB,IACAm3P,SAAAr9D,EAAA35L,OAAA,IAEA02P,EAAAj7O,KAAA66O,KACAprP,EAAAmrP,EAAAY,iBAAAX,IAIA,SAFA9yP,EAAA4O,MAAA,uCACAikP,EAAAtB,eAGAnyO,EAAA1X,EAAA0X,KACA/iB,EAAAqL,EAAArL,EAuDA,IAAA+2P,IAAAE,EAAA,CACA,IAAAr9D,EAAAqZ,GAAA,IAAAqjD,EAAArjD,MAAA,KAAAA,GAAA,OAAAA,GAAA,SAOA,IANAA,GAAA,KAAAA,GAAA,MACAjuM,EAAA80L,EAAAlrB,MACAmG,MAAA/vK,KACA40L,EAAA,GAAA50L,IAGA40L,EAAA,GAAAE,EAAA35L,OAAA,GACA25L,EAAAlrB,MACAgrB,IAEA,KAAAA,EAAA,GACAE,EAAAl+K,KAAAwhL,KACAxD,KAIA48D,EAAAM,8BACA,IAAA3iF,GAAApxJ,GACA/iB,EAAA+iB,EAAA5iB,QACAg0K,EAAAv4J,KAAA,IAAA3X,WAAAjE,EAAA+iB,EAAA5iB,SAEAw2P,EAAAD,OACA/yP,EAAA4O,MAAA,6CACA4hK,EAAAv4J,KAAA,IAAA3X,YAAA,UA0BA,SAAA0D,EAAAwsK,GACA,GAAAA,EAAAh0K,OAAA,GACA,IACAyK,EAAAsiK,EADA5mK,EAAA,EAEA,IAAAsE,EAAA,EAAAsiK,EAAAiH,EAAAh0K,OAA0CyK,EAAAsiK,EAAQtiK,IAClDtE,GAAA6tK,EAAAvpK,GAAAzK,OAEAmG,IAAA,KACA,IAAAmQ,EAAA,IAAAxS,WAAAqC,GACApC,EAAA,EACA,IAAA0G,EAAA,EAAAsiK,EAAAiH,EAAAh0K,OAA0CyK,EAAAsiK,EAAQtiK,IAClD6L,EAAA/V,IAAAyzK,EAAAvpK,GAAA1G,GACAA,GAAAiwK,EAAAvpK,GAAAzK,OAEAwH,EAAAob,KAAAtM,EACA9O,EAAAxH,OAAAmG,GAfA,CAxBAqB,EAAAwsK,GAmEA,IAAAgmB,SACA2G,SACA,GAxtCA,SAAA/G,GACA,IAAAI,EAAAJ,EAAAj1L,UAAA,GACA,kBAAAnB,EAAAsmK,eAAAkwB,GAFA,CAqtCAw1C,EAAA,IAAAj1N,EAAAxX,OAAA,IAAAe,WAAA0rO,EAAA7sO,cAGA,CACA,IAAAw0P,EAzuBA,SAAAC,EAAA9nB,GAKA,IAJA,IAAA+nB,EA7BA,SAAAD,GACA,IAAAE,KAAA9zP,EAAAsmK,eAAAstF,EAAAz0P,SAAA,OACAa,EAAA0Y,QAAA,SAAAo7O,EAAA,uCAKA,IAJA,IAAAC,EAAAH,EAAAjzP,YACAqzP,EAAAJ,EAAAjzP,YACAszP,EAAAL,EAAA9yP,aAAA,EACAozP,KACA73P,EAAA,EAAuBA,EAAA43P,EAAc53P,IACrC63P,EAAAj8O,KAAA27O,EAAA9yP,aAAA,GAEA,IAAA01L,GACAs9D,SACAC,eACAC,eACAC,WACAC,eAEA,OAAAH,GACA,OACA,OAAAv9D,EACA,OAIA,OAHAA,EAAA29D,QAAAP,EAAA9yP,aAAA,EACA01L,EAAA49D,WAAAR,EAAA9yP,aAAA,EACA01L,EAAA69D,WAAAT,EAAA9yP,aAAA,EACA01L,EAEA,UAAAx2L,EAAAyD,YAAA,6CAAAswP,EAAA,KA1BA,CA6BAH,GACAK,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,YAEA73P,EAAA,EAAuBA,EAAA43P,EAAc53P,IAAA,CACrCu3P,EAAArzP,KAAAqzP,EAAAxzP,OAAA,GAAA8zP,EAAA73P,GACA,IAAAi4P,EAAAtD,EAAA4C,GACAW,EAAA/D,EAAAoD,EAAAU,EAAA5J,WACA,IAAA6J,EAAA95P,KACA,UAAAuF,EAAAyD,YAAA,yDAGA,IADA,IAAAisP,EAAA0C,EAAAmC,EAAA95P,MACAwM,EAAA,EAAAsiK,EAAAmmF,EAAAlzP,OAAgDyK,EAAAsiK,EAAQtiK,IACxD,QAAArB,EAAA,EAAAsB,EAAAwoP,EAAAzoP,GAAAzK,OAAqDoJ,EAAAsB,EAAQtB,IAAA,CAC7D,IAAA4uP,EAAA9E,EAAAzoP,GAAArB,GACA,GAAA4uP,KAAAniF,QAAA,YAAAy5D,EACA,OACAt1C,OAAA89D,EACAn3D,OAAAo3D,IAMA,UAAAv0P,EAAAyD,YAAA,yCAAAqoO,EAAA,WAzBA,CAyuBAE,EAAAtxO,KAAAD,MACA+7L,EAAAm9D,EAAAn9D,OACA2G,EAAAw2D,EAAAx2D,YAGAA,EAAAqzD,EAAAxkB,GADAx1C,EAAAw6D,EAAAhlB,IACA0e,WAEA,IAAAn0D,SACAk+D,SACAC,GAAAv3D,EAAA,QACA,GAAAu3D,EAaO,CACP,IAAAv3D,EAAAw3D,KACA,UAAA30P,EAAAyD,YAAA,sCAEA05L,EAAAu0D,QAAA,EACA1xP,EAAA4O,MAAA,4DACAuuL,EAAAu0D,MACA1G,IAAA,OACA5rO,KAAA,IAAA9e,WAAA,KAGA5F,KAAAkxP,kBAxBA,CACA,eAAAp1D,EAAA4nB,SAAA/nB,EAAAkiD,WAAAliD,EAAAuiD,cAAAz7C,EAAAszD,MAAAtzD,EAAAuzD,MAAAvzD,EAAAyzD,MAAAzzD,EAAA0zD,MAIA,OAHA4D,EAAA,IAAA19O,EAAAxX,OAAA49L,EAAA,QAAA/9K,MACAm3K,EAAA,IAAAi1D,EAAAiJ,EAAAp+D,GACAqyD,EAAAryD,GACA37L,KAAAgxP,QAAAjxP,EAAA87L,EAAAF,UAEA8G,EAAAu0D,YACAv0D,EAAAw3D,YACAx3D,EAAAy3D,YACAz3D,EAAA03D,YACA13D,EAAA,QACAziM,KAAAkxP,cAcA,IAAAzuD,EAAAyzD,KACA,UAAA5wP,EAAAyD,YAAA,sCAEAuoO,EAAAzrO,KAAAyrO,EAAA5rO,OAAA,GAAA+8L,EAAAyzD,KAAA3uO,OACA,IAAAm8L,EAAA4tB,EAAAlrO,WACAqsP,EAAAnhB,EAAArrO,YACAm0P,EAAA,EACAC,EAAA,EACA32C,GAAA,OAAAjhB,EAAAyzD,KAAAp0P,QAAA,KACAwvO,EAAAzrO,KAAA,EACAyrO,EAAArrO,YACA,IACAw8L,EAAAyzD,KAAAxxO,KAAA,MACA+9K,EAAAyzD,KAAAxxO,KAAA,OAEA4sN,EAAAzrO,KAAA,EACAu0P,EAAA9oB,EAAArrO,YACAqrO,EAAAzrO,KAAA,EACAw0P,EAAA/oB,EAAArrO,aAEA,IAAAq0P,KACA,iBAAA3+D,EAAAz3L,MAAAy3L,EAAA+hD,WAAA/hD,EAAA+hD,UAAAv9O,IAAA,UACAm6P,KACA7H,IACAhwD,EAAAyzD,KAAAxxO,KAAA,GAAA+tO,GAAA,EACAhwD,EAAAyzD,KAAAxxO,KAAA,OAAA+tO,GAEA,IAAAoE,EA3FA,SAAAqD,EAAAC,EAAAI,EAAAH,GACA,IAAAjC,GACAY,oBACAC,iBACAH,wBACAJ,+BACA5B,eAWA,GATAqD,GACAhC,EAAAgC,EAAA/B,GAEAgC,GACAjC,EAAAiC,EAAAhC,GAEA+B,GAtDA,SAAA/B,EAAAiC,GACA,IAAAjC,EAAAM,4BAAA,CAGA,GAAAN,EAAAY,iBAAAj3P,OAAAs4P,EAGA,SAFA90P,EAAA4O,MAAA,iDACAikP,EAAAtB,eAGA,QAAAtqP,EAAA,EAAAsiK,EAAAspF,EAAAa,cAAAl3P,OAA4DyK,EAAAsiK,EAAQtiK,IAAA,CACpE,GAAAA,EAAA6tP,EAGA,SAFA90P,EAAA4O,MAAA,4BAAA3H,QACA4rP,EAAAtB,eAGA,GAAAsB,EAAAa,cAAAzsP,KAAA4rP,EAAAY,iBAAAxsP,GAGA,SAFAjH,EAAA4O,MAAA,2BAAA3H,QACA4rP,EAAAtB,iBAjBA,CAuDAsB,EAAAiC,GAEAG,GAAA,EAAAA,EAAAz4P,OAAA,CACA,IAAA04P,EAAA,IAAA50P,WAAA20P,EAAAz4P,OAAA,GACA04P,EAAAn4P,IAAAk4P,EAAA71O,MACA61O,EAAA71O,KAAA81O,EAEA,OAAArC,EAAAtB,WAtBA,CA2FAp0D,EAAAy3D,KAAAz3D,EAAA03D,KAAA13D,EAAA,QAAA23D,GAOA,GANAvD,WACAp0D,EAAAy3D,YACAz3D,EAAA03D,YACA13D,EAAA,SA7mBA,SAAA6uC,EAAAx1C,EAAA+kD,EAAA4R,GACA,GAAA32D,EAAA,CAMAw1C,EAAAzrO,KAAAyrO,EAAA5rO,MAAA4rO,EAAA5rO,MAAA,GAAAo2L,EAAAv0K,OACA+pN,EAAAzrO,KAAAi2L,EAAAh6L,OAAA,EACA,IAAA24P,EAAAnpB,EAAArrO,YACAw0P,EAAAhI,OACAntP,EAAAkR,MAAA,qBAAAikP,EAAA,+CAAAhI,EAAA,KACAgI,EAAAhI,EACA32D,EAAAp3K,KAAA,WAAA+1O,IAAA,EACA3+D,EAAAp3K,KAAA,QAAA+1O,GAEA,IACAC,EADAjI,EAAAgI,GACA5Z,EAAA/+O,OAAA,EAAA24P,GAAA,GACA,GAAAC,EAAA,GACA,IAAAxoF,EAAA,IAAAtsK,WAAAi7O,EAAA/+O,OAAA,EAAA44P,GACAxoF,EAAA7vK,IAAAw+O,EAAAn8N,MACAm8N,EAAAn8N,KAAAwtJ,QAnBA2uE,IACAA,EAAAn8N,KAAA,MAHA,CA+mBA4sN,EAAA7uC,EAAAuzD,KAAAvzD,EAAAwzD,KAAAxD,IACAhwD,EAAAszD,KACA,UAAAzwP,EAAAyD,YAAA,uCAjhBA,SAAAgtP,EAAAtD,EAAAkI,GACA,IAAAj2O,EAAAqxO,EAAArxO,KACAg/L,GAAAh/L,EAAA,IA9xBA,KA8xBAA,EAAA,IA9xBA,KA8xBAA,EAAA,IA9xBA,GA8xBAA,EAAA,GACAg/L,GAAA,WACAp+M,EAAAkR,MAAA,oDAAAktM,GACAh/L,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEA,IAAAk2O,EAAAtJ,EAAA5sO,EAAA,IAAAA,EAAA,KACA,GAAAk2O,EAAA,GAAAA,EAAA,MACAt1P,EAAAkR,MAAA,6DAAAokP,GACA,IAAAC,EAAApI,EAAA,EACA,GAAAkI,IAAAE,GAAA,EACAn2O,EAAA,MACAA,EAAA,UACW,IAAAi2O,IAAAE,GAAA,EAIX,UAAAv1P,EAAAyD,YAAA,mCAAA6xP,GAHAl2O,EAAA,MACAA,EAAA,QAnBA,CAmhBA+9K,EAAAszD,KAAAtD,EAAAuH,EAAAv3D,EAAAw3D,KAAAn4P,OAAA,GACA,IAAAgwP,EAAA3yP,OAAAe,OAAA,MACA,GAAA85P,EAAA,CACA,IAAAc,EAAAxJ,EAAA7uD,EAAAszD,KAAArxO,KAAA,IAAA+9K,EAAAszD,KAAArxO,KAAA,KACAq2O,EA9fA,SAAAd,EAAAjD,EAAAvE,EAAAqI,EAAAjE,EAAAyD,EAAAD,GACA,IAAAW,EAAAC,EAAAC,EA6fAJ,GA3fAE,EAAA,EACAC,EAAA,SAAAv2O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,IAEA2zO,EAAA,SAAAx2O,EAAA6C,EAAAjoB,GACAolB,EAAA6C,GAAAjoB,IAAA,OACAolB,EAAA6C,EAAA,GAAAjoB,GAAA,OACAolB,EAAA6C,EAAA,GAAAjoB,GAAA,MACAolB,EAAA6C,EAAA,OAAAjoB,KAGA07P,EAAA,EACAC,EAAA,SAAAv2O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,OAEA2zO,EAAA,SAAAx2O,EAAA6C,EAAAjoB,GACAolB,EAAA6C,GAAAjoB,GAAA,MACAolB,EAAA6C,EAAA,GAAAjoB,GAAA,QAGA,IAAA67P,EAAAlB,EAAAv1O,KACA02O,EAAAJ,GAAA,EAAAvI,GACA0I,EAAAr5P,SAAAs5P,KACAD,EAAA,IAAAv1P,WAAAw1P,IACA/4P,IAAA43P,EAAAv1O,KAAApe,SAAA,EAAA80P,IACAnB,EAAAv1O,KAAAy2O,GAEA,IAOAx5P,EAAA4K,EAPA8uP,EAAArE,EAAAtyO,KACA42O,EAAAD,EAAAv5P,OACAy5P,EAAA,IAAA31P,WAAA01P,GACApjC,EAAA+iC,EAAAE,EAAA,GACAK,EAAA,EACA1J,EAAA3yP,OAAAe,OAAA,MACAg7P,EAAAC,EAAA,EAAAK,GAEA,IAAAC,EAAAnB,EAAA7H,EAAA,EAAAA,EACA,IAAA9wP,EAAA,EAAA4K,EAAAyuP,EAAiCr5P,EAAA85P,EAAe95P,IAAA4K,GAAAyuP,EAAA,CAChD,IAAAl/B,EAAAm/B,EAAAE,EAAA5uP,GACA,IAAAuvN,IACAA,EAAA5D,GAEA4D,EAAAw/B,MAAA,QAAAx/B,IACAA,EAAAw/B,GAEAx/B,EAAAw/B,IACApjC,EAAA4D,GAEA,IAAAg7B,EAAAL,EAAA4E,EAAAnjC,EAAA4D,EAAAy/B,EAAAC,EAAA3E,GACA5uP,EAAA6uP,EAAAh1P,OACA,IAAAmG,IACA6pP,EAAAnwP,OAEAm1P,EAAAC,mBAAAsD,IACAA,EAAAvD,EAAAC,oBAGAmE,EAAAC,EAAA5uP,EADAivP,GAAAvzP,GAEAiwN,EAAA4D,EAEA,OAAA0/B,EAAA,CACA,IAAAE,EAAA,IAAA91P,YAAA,mCACA,IAAAjE,EAAA,EAAA4K,EAAAyuP,EAAmCr5P,EAAA8wP,EAAe9wP,IAAA4K,GAAAyuP,EAClDE,EAAAC,EAAA5uP,EAAAmvP,EAAA55P,QAEAk1P,EAAAtyO,KAAAg3O,OACS,GAAApB,EAAA,CACT,IAAAqB,EAAAV,EAAAE,EAAAH,GACAO,EAAAz5P,OAAA65P,EAAAH,EACAxE,EAAAtyO,KAAA62O,EAAAj1P,SAAA,EAAAq1P,EAAAH,IAEAxE,EAAAtyO,KAAA,IAAA9e,WAAA+1P,EAAAH,GACAxE,EAAAtyO,KAAAriB,IAAAk5P,EAAAj1P,SAAA,EAAAk1P,KAEAxE,EAAAtyO,KAAAriB,IAAAk5P,EAAAj1P,SAAA,EAAAq1P,GAAAH,GACAN,EAAAjB,EAAAv1O,KAAAy2O,EAAAr5P,OAAAk5P,EAAAQ,EAAAG,QAEA3E,EAAAtyO,KAAA62O,EAAAj1P,SAAA,EAAAk1P,GAEA,OACA1J,gBACAuI,yBAnFA,CA8fA53D,EAAAw3D,KAAAx3D,EAAAu0D,KAAAvE,EAAAqI,EAAAjE,EAAAyD,EAAAD,GACAvI,EAAAiJ,EAAAjJ,cACApuC,GAAA,OAAAjhB,EAAAyzD,KAAAp0P,QAAA,KACA2gM,EAAAyzD,KAAAxxO,KAAA,IAAAq2O,EAAAV,uBAAA,EACA53D,EAAAyzD,KAAAxxO,KAAA,QAAAq2O,EAAAV,uBAGA,IAAA53D,EAAAuzD,KACA,UAAA1wP,EAAAyD,YAAA,sCAEA,IAAA05L,EAAAuzD,KAAAtxO,KAAA,SAAA+9K,EAAAuzD,KAAAtxO,KAAA,MACA+9K,EAAAuzD,KAAAtxO,KAAA,QACA+9K,EAAAuzD,KAAAtxO,KAAA,SAEA,IAAAk3O,GACAlI,WAAApC,EAAA7uD,EAAAszD,KAAArxO,KAAA,IAAA+9K,EAAAszD,KAAArxO,KAAA,KACAivO,KAAArC,EAAA7uD,EAAAszD,KAAArxO,KAAA,IAAA+9K,EAAAszD,KAAArxO,KAAA,KACAkvO,KAAArC,EAAA9uD,EAAAszD,KAAArxO,KAAA,IAAA+9K,EAAAszD,KAAArxO,KAAA,KACA04K,OAAAk0D,EAAA7uD,EAAAuzD,KAAAtxO,KAAA,GAAA+9K,EAAAuzD,KAAAtxO,KAAA,IACA24K,QAAAk0D,EAAA9uD,EAAAuzD,KAAAtxO,KAAA,GAAA+9K,EAAAuzD,KAAAtxO,KAAA,KAEA1kB,KAAAo9L,OAAAw+D,EAAAx+D,OAAAw+D,EAAAlI,WACA1zP,KAAAq9L,QAAAu+D,EAAAv+D,QAAAu+D,EAAAlI,WACAjxD,EAAA0zD,OA/bA,SAAAA,EAAAx6D,EAAAkgE,GACA,IAAAn2P,GAAA4rO,EAAA5rO,MAAA4rO,EAAA5rO,MAAA,GAAAywP,EAAA5uO,OACA+pN,EAAAzrO,IAAAH,EACA,IAIAo2P,EAHAh2P,EAAAJ,EADAywP,EAAAr0P,OAEA4hN,EAAA4tB,EAAAlrO,WACAkrO,EAAA7sO,SAAA,IAEA,IACA9C,EADAw+L,KAEA,OAAAujB,GACA,WACAo4C,EAAA/N,EACA,MACA,YACA,IAAA0E,EAAAnhB,EAAArrO,YACA,GAAAwsP,IAAAoJ,EAAA,CACA17D,KACA,MAEA,IAAA47D,KACA,IAAAp6P,EAAA,EAAuBA,EAAA8wP,IAAe9wP,EAAA,CACtC,IAAA4hB,EAAA+tN,EAAArrO,YACA,GAAAsd,GAAA,OACA48K,KACA,MAEA47D,EAAAx+O,KAAAgG,GAEA,IAAA48K,EACA,MAIA,IAFA,IAAA67D,KACAl7O,KACAwwN,EAAAzrO,IAAAC,GAAA,CACA,IAAAm2P,EAAA3qB,EAAAtrO,UAEA,IADA8a,EAAAhf,OAAAm6P,EACAt6P,EAAA,EAAyBA,EAAAs6P,IAAkBt6P,EAC3Cmf,EAAAnf,GAAA4f,OAAAC,aAAA8vN,EAAAtrO,WAEAg2P,EAAAz+O,KAAAuD,EAAAmB,KAAA,KAGA,IADA65O,KACAn6P,EAAA,EAAuBA,EAAA8wP,IAAe9wP,EAAA,CACtC,IAAA4K,EAAAwvP,EAAAp6P,GACA4K,EAAA,IACAuvP,EAAAv+O,KAAAwwO,EAAAxhP,IAGAuvP,EAAAv+O,KAAAy+O,EAAAzvP,EAAA,MAEA,MACA,YACA,MACA,WACAjH,EAAA4O,MAAA,0CAAAwvM,GACAvjB,KACAxE,EAAA4iD,kBACAud,EAAAngE,EAAA4iD,iBAKA,OADA5iD,EAAAmgE,aACA37D,EA/DA,CAgcAsC,EAAA0zD,KAAAx6D,EAAA82D,KAEAhwD,EAAA0zD,KAAA,OAGA,IACAhW,EADA0R,KAEA,SAAAqK,EAAA7J,GACA,OAAAP,EAAAO,GAEA,GAAA12D,EAAAkiD,UAAA,CACA,IAAAK,EAAAviD,EAAAuiD,gBACAie,EAAA,IAAAje,EAAAp8O,OACA65L,EAAA0jD,KAAA98O,QAAA,SAAA49O,EAAAj/C,GACA,GAAAA,EAAA,MACA,UAAA57L,EAAAyD,YAAA,6BAEA,IAAAspP,GAAA,EACA8J,EACA9J,EAAAnxD,WACWg9C,EAAAh9C,KACXmxD,EAAAnU,EAAAh9C,IAEAmxD,GAAA,GAAAA,EAAAI,GAAAyJ,EAAA7J,KACAR,EAAA1R,GAAAkS,MAGAiI,IAAA6B,GAAAtK,EAAA,KACAA,EAAA,GAAAY,EAAA,OAEO,CACP,IAAA2J,EAl1BA,SAAAnc,EAAA3O,EAAAkN,EAAAK,GACA,IAAAoB,EAEA,SADA36O,EAAA4O,MAAA,6BAEAmoP,YAAA,EACAC,YAAA,EACAC,YACAC,iBAGA,IAAA9vC,EACAhnN,GAAA4rO,EAAA5rO,MAAA4rO,EAAA5rO,MAAA,GAAAu6O,EAAA14N,OACA+pN,EAAAzrO,IAAAH,EACA4rO,EAAArrO,YAIA,IAHA,IACAw2P,EADAzM,EAAA1e,EAAArrO,YAEAy2P,KACA/6P,EAAA,EAAuBA,EAAAquP,EAAeruP,IAAA,CACtC,IAAA06P,EAAA/qB,EAAArrO,YACAq2P,EAAAhrB,EAAArrO,YACAshB,EAAA+pN,EAAAlrO,aAAA,EACAu2P,KACA,KAAAF,KAAAJ,gBAAAI,EAAAH,kBAGA,IAAAD,GAAA,IAAAC,EACAK,KACW,IAAAN,GAAA,IAAAC,EACXK,KACW,IAAAN,GAAA,IAAAC,IAAAzd,GAAA4d,EAKAje,GAAA,IAAA6d,GAAA,IAAAC,IACXK,KACAD,OANAC,KACAne,IACAke,OAMAC,IACAF,GACAJ,aACAC,aACA/0O,WAGAm1O,GACA,MAMA,GAHAD,IACAnrB,EAAAzrO,IAAAH,EAAA+2P,EAAAl1O,SAEAk1O,IAAA,IAAAnrB,EAAA/qO,WAEA,SADAjB,EAAA4O,MAAA,2CAEAmoP,YAAA,EACAC,YAAA,EACAC,YACAC,iBAGA,IAAA96D,EAAA4vC,EAAArrO,YACAqrO,EAAArrO,YACAqrO,EAAArrO,YACA,IAEAsG,EAAA8lP,EAFAmK,KACAD,KAEA,OAAA76D,EAAA,CACA,IAAAn1L,EAAA,EAAqBA,EAAA,IAASA,IAAA,CAC9B,IAAAgX,EAAA+tN,EAAAtrO,UACAud,GAGAg5O,EAAAh/O,MACA4iO,SAAA5zO,EACA8lP,QAAA9uO,IAGAi5O,UACS,OAAA96D,EAAA,CACT,IAAAmxD,EAAAvhB,EAAArrO,aAAA,EACAqrO,EAAA7sO,SAAA,GACA,IAAAm4P,EACAnwC,KACA,IAAAmwC,EAAA,EAA4BA,EAAA/J,EAAqB+J,IACjDnwC,EAAAlvM,MAA2BzX,IAAAwrO,EAAArrO,cAG3B,IADAqrO,EAAArrO,YACA22P,EAAA,EAA4BA,EAAA/J,EAAqB+J,IACjDnwC,EAAAmwC,GAAAl3P,MAAA4rO,EAAArrO,YAEA,IAAA22P,EAAA,EAA4BA,EAAA/J,EAAqB+J,IACjDnwC,EAAAmwC,GAAArwL,MAAA+kK,EAAArrO,YAEA,IAAA42P,EAAA,EACA,IAAAD,EAAA,EAA4BA,EAAA/J,EAAqB+J,IAAA,CACjDlwC,EAAAD,EAAAmwC,GACA,IAAAE,EAAAxrB,EAAArrO,YACA,GAAA62P,EAAA,CAIA,IAAAC,GAAAD,GAAA,IAAAjK,EAAA+J,GACAlwC,EAAAqwC,cACAF,EAAA3tP,KAAA2H,IAAAgmP,EAAAE,EAAArwC,EAAA5mN,IAAA4mN,EAAAhnN,MAAA,QALAgnN,EAAAqwC,aAAA,EAOA,IAAA79D,KACA,IAAA3yL,EAAA,EAAqBA,EAAAswP,EAAkBtwP,IACvC2yL,EAAA3hL,KAAA+zN,EAAArrO,aAEA,IAAA22P,EAAA,EAA4BA,EAAA/J,EAAqB+J,IAAA,CAEjDl3P,GADAgnN,EAAAD,EAAAmwC,IACAl3P,MACA,IAAAI,EAAA4mN,EAAA5mN,IACAymE,EAAAmgJ,EAAAngJ,MAEA,IADAwwL,EAAArwC,EAAAqwC,YACAxwP,EAAA7G,EAA2B6G,GAAAzG,EAAUyG,IACrC,QAAAA,IAIA8lP,GADAA,EAAA0K,EAAA,EAAAxwP,EAAA2yL,EAAA69D,EAAAxwP,EAAA7G,IACA6mE,EAAA,MACAgwL,EAAAh/O,MACA4iO,SAAA5zO,EACA8lP,kBAIS,QAAA3wD,EAaT,SADAp8L,EAAA4O,MAAA,sCAAAwtL,IAEA26D,YAAA,EACAC,YAAA,EACAC,YACAC,iBAhBA,IAAApmC,EAAAkb,EAAArrO,YACAwtK,EAAA69D,EAAArrO,YACA,IAAAsG,EAAA,EAAqBA,EAAAknK,EAAgBlnK,IAAA,CACrC8lP,EAAA/gB,EAAArrO,YACA,IAAAk6O,EAAA/pB,EAAA7pN,EACAgwP,EAAAh/O,MACA4iO,WACAkS,aAeA,IAHAkK,EAAAxzF,KAAA,SAAA5wJ,EAAA/O,GACA,OAAA+O,EAAAgoO,SAAA/2O,EAAA+2O,WAEAx+O,EAAA,EAAmBA,EAAA46P,EAAAz6P,OAAqBH,IACxC46P,EAAA56P,EAAA,GAAAw+O,WAAAoc,EAAA56P,GAAAw+O,WACAoc,EAAA/0O,OAAA7lB,EAAA,GACAA,KAGA,OACA06P,WAAAI,EAAAJ,WACAC,WAAAG,EAAAH,WACAC,WACAC,gBAjKA,CAk1BA/5D,EAAAw9C,KAAA3O,EAAAtxO,KAAAw+O,eAAA7iD,EAAAkjD,aACAme,EAAAZ,EAAAC,WACAY,EAAAb,EAAAE,WACAY,EAAAd,EAAAG,SACAY,GAAAD,EAAAp7P,OACA,GAAA65L,EAAAkjD,cAAA,IAAAme,GAAA,IAAAC,GAAA,IAAAD,GAAA,IAAAC,KAAA,IAAAD,IAAA,IAAAC,MAAAliE,EAAAj/K,aAAA6/K,EAAA0iD,kBAAA,CACA,IAAAx8C,MACA,qBAAAlG,EAAA0iD,kBAAA,oBAAA1iD,EAAA0iD,mBACAx8C,MAAA9G,EAAAj/K,aAAA6/K,EAAA0iD,mBAEA,IAAA3wC,MAAAw+B,EAAAzgN,oBACA,IAAA00N,EAAA,EAA4BA,EAAA,IAAgBA,IAAA,CAC5C,IAAAlB,GAAAme,GAQA,GANAne,GADAj/O,KAAAo+O,aAAA+B,KAAAngP,KAAAo+O,YACAp+O,KAAAo+O,YAAA+B,GACaA,KAAAt+C,IAAA,KAAAA,GAAAs+C,GACbt+C,GAAAs+C,GAEAplD,EAAAr/K,iBAAAykO,GAEA,CAIA,IAAAkd,GADAD,GAAAxO,EAAA3P,GAAAvxC,IAEA,IAAAsvD,GAAA,IAAAC,EACAI,GAAA3vD,GAAA0vD,IACa,IAAAJ,GAAA,IAAAC,IACbI,GAAAtiE,EAAAt/K,iBAAAqtJ,QAAAs0F,KAGA,IADA,IAAA/9O,MACA1d,GAAA,EAA2BA,GAAAw7P,KAAwBx7P,GACnD,GAAAu7P,EAAAv7P,IAAAw+O,WAAAkd,GAAA,CAGAxL,EAAA1R,GAAA+c,EAAAv7P,IAAA0wP,QACAhzO,MACA,MAEA,IAAAA,IAAAs8K,EAAAmgE,WAAA,CACA,IAAAzJ,GAAA12D,EAAAmgE,WAAAhzF,QAAAm2E,KACA,IAAAoT,IAAA+K,KAAAne,KACAoT,GAAA12D,EAAAmgE,WAAAhzF,QAAAs0F,KAEA/K,GAAA,GAAA6J,EAAA7J,MACAR,EAAA1R,GAAAkS,YAIS,OAAA2K,GAAA,IAAAC,EACT,QAAA3yF,GAAA,EAA0BA,GAAA6yF,KAAyB7yF,GACnDunF,EAAAqL,EAAA5yF,IAAA61E,UAAA+c,EAAA5yF,IAAA+nF,aAGA,QAAA35E,GAAA,EAA2BA,GAAAykF,KAA0BzkF,GACrDynE,EAAA+c,EAAAxkF,IAAAynE,SACA,IAAA6c,GAAA7c,GAAA,OAAAA,GAAA,QACAA,GAAA,KAEA0R,EAAA1R,GAAA+c,EAAAxkF,IAAA25E,QAIA,IAAAR,EAAA/vP,SACA+vP,EAAA,MAEA,IAAAyL,GAAA1L,EAAAC,EAAAl2D,EAAAm2D,GAkBA,GAjBA9xP,KAAA0wP,WAAA4M,GAAA5M,WACAjuD,EAAAw9C,MACAqQ,IAAA,OACA5rO,KAAA8tO,EAAA8K,GAAAzL,kBAAAY,IAEAhwD,EAAA,SA7sCA,SAAA86D,GACA,IAAAp1P,EAAA,IAAAkU,EAAAxX,OAAA04P,EAAA74O,MACAg/L,EAAAv7M,EAAAlC,YACAkC,EAAA1D,SAAA,IACA,IAAA+4P,EAAAr1P,EAAAlC,YACA,QAAAy9M,EAAA,OAAA85C,GAGAr1P,EAAAlC,YACAkC,EAAAlC,cAIAkC,EAAA1D,SAAA,GAEA,IADA0D,EAAAlC,cAIAs3P,EAAA74O,KAAA,GAAA64O,EAAA74O,KAAA,KACA,KAnBA,CA6sCA+9K,EAAA,WACAA,EAAA,SACA6tD,IAAA,OACA5rO,KAAA6uO,EAAA53D,EAAA2hE,GAAAzL,kBAAA+J,KAGAn5D,EAAA0zD,OACA1zD,EAAA0zD,MACA7F,IAAA,OACA5rO,KAAA6vO,EAAA54D,MAGAq+D,EACA,IACAD,EAAA,IAAA19O,EAAAxX,OAAA49L,EAAA,QAAA/9K,MAEAm3K,EADA,IAAAwxD,EAAAzyD,UAAAm/D,EAAAp+D,EAAAyxD,GACAn7O,QACA,IAAAwrP,GAAA,IAAApQ,EAAAjzD,YAAAyB,GACA4G,EAAA,QAAA/9K,KAAA+4O,GAAAz5D,UACS,MAAA/nL,MACT3W,EAAA4O,MAAA,0BAAAynL,EAAAg2C,YAGA,GAAAlvC,EAAA1iM,KAKO,CACP,IAAA29P,GAAAhG,EAAAj1D,EAAA1iM,MACA0iM,EAAA1iM,KAAA2kB,KAAA8vO,EAAAz0P,EAAA29P,SANAj7D,EAAA1iM,MACAuwP,IAAA,OACA5rO,KAAA8vO,EAAAx0P,KAAAD,OAMA,IAAA49P,GAAA,IAAAzO,EAAApzD,EAAA4nB,SACA,QAAAk6C,MAAAn7D,EACAk7D,GAAAtN,SAAAuN,GAAAn7D,EAAAm7D,IAAAl5O,MAEA,OAAAi5O,GAAA9N,WAEAmB,QAAA,SAAA5f,EAAAE,EAAA31C,GACAA,EAAAmnD,cACAnnD,EAAAkiE,iBAn2DA,SAAAliE,EAAAkiE,GACA,IAAAliE,EAAAwjD,2BAGAxjD,EAAAkjD,aAGAgf,IAAAliE,EAAA4iD,iBAGA5iD,EAAA+hD,qBAAAmC,GAAA,CAGA,IAAAnC,KACAhwC,KAAAw+B,EAAAzgN,oBACA,QAAA00N,KAAA0d,EAAA,CACA,IAAA5e,EAAA4e,EAAA1d,GACAxyC,KAAAm+B,EAAAr+B,oBAAAwxC,EAAAvxC,IACA,IAAAC,IACA+vC,EAAAyC,GAAA5+N,OAAAC,aAAAmsL,IAGAhS,EAAA+hD,UAAAuR,MAAAvR,IAtBA,CAo2DA/hD,IAAAkiE,iBAEA,IAAAC,EAAAxsB,EAAAysB,gBAAApiE,GACA2hE,EAAA1L,EAAAkM,EAAAniE,EAAAx8L,OAAAe,OAAA,OACAF,KAAA0wP,WAAA4M,EAAA5M,WACA,IAAA+B,EAAAnhB,EAAAmhB,UACA,SAAAuL,EAAAnM,EAAAQ,GACA,IAAA4L,EAAA,KACA,QAAA9d,KAAA0R,EACAQ,IAAAR,EAAA1R,KACA8d,IACAA,MAEAA,EAAA1gP,KAAA,EAAA4iO,IAGA,OAAA8d,EAEA,SAAAC,EAAArM,EAAAQ,GACA,QAAAlS,KAAA0R,EACA,GAAAQ,IAAAR,EAAA1R,GACA,SAAAA,EAIA,OADAmd,EAAAzL,kBAAAyL,EAAAnL,2BAAAE,EACAiL,EAAAnL,4BAEA,IAAA9zD,EAAAizC,EAAAjzC,MACA,GAAA+uD,GAAA/uD,KAAAv8L,OAAA,CACA,IAAAiR,EAAA4oL,EAAAsB,YAAA33L,EAAA80O,qBACAl9C,EAAAo0C,EAAA6sB,aACAhN,EAAAhyP,OAAAe,OAAA,MACA,QAAAmyP,KAAAh0D,EAAA,CAEA,IAAAyB,EAAAzB,EADAg0D,GAAA,GAEA+L,EAAArjE,EAAAr/K,iBAAAokL,EAAA,IACAu+D,EAAAtjE,EAAAr/K,iBAAAokL,EAAA,IACAw+D,EAAAphE,EAAAp0B,QAAAs1F,GACAG,EAAArhE,EAAAp0B,QAAAu1F,GACA,KAAAC,EAAA,GAAAC,EAAA,IAGA,IAAAC,GACA5jP,EAAAklL,EAAA,GAAA/sL,EAAA,GAAA+sL,EAAA,GAAA/sL,EAAA,GAAAA,EAAA,GACAiD,EAAA8pL,EAAA,GAAA/sL,EAAA,GAAA+sL,EAAA,GAAA/sL,EAAA,GAAAA,EAAA,IAEAkrP,EAAAD,EAAAF,EAAAzL,GACA,GAAA4L,EAGA,QAAAt8P,EAAA,EAAAC,EAAAq8P,EAAAn8P,OAAgDH,EAAAC,EAAQD,IAAA,CACxD,IAAAw+O,EAAA8d,EAAAt8P,GACAkwP,EAAAyL,EAAAzL,kBACA4M,EAAAP,EAAArM,EAAAyM,GACAI,EAAAR,EAAArM,EAAA0M,GACApN,EAAAhR,IACAse,mBACAC,qBACAF,kBAIA7iE,EAAAw1D,UAEA,IAAAuC,EAAA,GAAA/3D,EAAAsB,YAAA33L,EAAA80O,sBAAA,GACAujB,EAAA,IAAAzO,EAAA,QAyBA,OAxBAyO,EAAAtN,SAAA,OAAA/e,EAAA5sN,MACAi5O,EAAAtN,SAAA,OAAAkD,EAAA53D,EAAA2hE,EAAAzL,oBACA8L,EAAAtN,SAAA,OAAAmC,EAAA8K,EAAAzL,kBAAAY,IACAkL,EAAAtN,SAAA,wCAAAoB,EAAAiC,GAAA,iCAAAjC,EAAA91D,EAAA0B,SAAA,KAAAo0D,EAAA91D,EAAAyB,QAAAo0D,EAAA71D,EAAAsnD,YAAA,wBACA0a,EAAAtN,SAAA,iBAAAoB,EAAA91D,EAAAyB,QAAAq0D,EAAA91D,EAAA0B,SAAA,qBAAAo0D,EAAA91D,EAAAqnD,WAAAyO,EAAAviP,KAAAyvP,IAAAhjE,EAAAsnD,aAAAtnD,EAAAonD,SAAA,2BAAAyO,EAAAiB,IACAkL,EAAAtN,SAAA,kBAIA,IAHA,IAAAmD,EAAAliB,EAAAkiB,YACAoL,EAAAttB,EAAAz1C,IAAAy1C,EAAAz1C,IAAAyC,OAAA,KACA23D,EAAA,WACAt0P,EAAA,EAAAC,EAAA6wP,EAAuC9wP,EAAAC,EAAQD,IAAA,CAC/C,IAAA4O,EAAA,EACA,GAAAijP,EAAA,CACA,IAAAtzD,EAAAszD,EAAA7xP,EAAA,GACA4O,EAAA,UAAA2vL,IAAA3vL,MAAA,OACWquP,IACXruP,EAAArB,KAAA01J,KAAAg6F,EAAAj9P,IAAA,IAEAs0P,GAAAzE,EAAAjhP,GAAAihP,EAAA,GAEA,OAAAyE,EAdA,IAgBA0H,EAAAtN,SAAA,iBAAAmB,EAAAiB,IACAkL,EAAAtN,SAAA,OAAAmE,EAAApjB,IACAusB,EAAAtN,SAAA,OAAAkE,EAAA54D,IACAgiE,EAAA9N,WAEAzW,iBACA,oBAAAp5O,KACA,OAAAA,KAAA6+P,aAIA,IAFA,IACAtuP,EADAuuP,GAAA,+BAEAn9P,EAAA,EAAAC,EAAAk9P,EAAAh9P,OAA4DH,EAAAC,EAAQD,IAAA,CACpE,IAAAs9O,EAAA6f,EAAAn9P,GACA,GAAAs9O,KAAAj/O,KAAAs+L,OAAA,CACA/tL,EAAAvQ,KAAAs+L,OAAA2gD,GACA,MAEA,IACAhE,KADA/O,EAAAzgN,oBACAwzN,GACAD,EAAA,EAaA,GAZAh/O,KAAA69O,WACA79O,KAAAq/O,KAAA6K,SAAAjP,KACA+D,EAAAh/O,KAAAq/O,KAAAhsO,OAAA4nO,KAGA+D,GAAAh/O,KAAA09O,YACAsB,EAAAh/O,KAAA09O,UAAAyM,WAAAlP,IAEA+D,GAAA,IACAA,EAAA/D,GAEA1qO,EAAAvQ,KAAAs+L,OAAA0gD,GAEA,MAKA,OAFAzuO,KAAAvQ,KAAAygM,aACAzgM,KAAA6+P,aAAAtuP,EACAA,GAEAwuP,YAAA,SAAA/f,EAAA1xO,GACA,IAAAglP,EAAA/hP,EAAAu+O,EACAkQ,EAAAhgB,EACAh/O,KAAAq/O,MAAAr/O,KAAAq/O,KAAA6K,SAAAlL,KACAggB,EAAAh/P,KAAAq/O,KAAAhsO,OAAA2rO,IAEAzuO,EAAAvQ,KAAAs+L,OAAA0gE,GACAzuP,KAAAjL,EAAA6d,OAAA5S,KAAAvQ,KAAAygM,aACA,IAAAu6C,EAAAh7O,KAAA2gP,UAAA3gP,KAAA2gP,SAAAqe,GACArxD,EAAA3tM,KAAA09O,UAAAv9O,IAAA6+O,IAAAh/O,KAAAo/O,kBAAAj/O,IAAA6+O,MACA,iBAAArxC,IACAA,EAAApsL,OAAAC,aAAAmsL,IAEA,IAAAohD,EAAA/P,KAAAh/O,KAAA0wP,WACA4B,EAAAtyP,KAAA0wP,WAAA1R,MACAh/O,KAAAwwP,cACA8B,KAAAxmB,EAAA1+B,yBAAAklD,IAEAtyP,KAAAuxO,cACAud,EAAAwD,GAEA,IAAA3f,EAAA,KACA,GAAA3yO,KAAAmxP,SAAAnxP,KAAAmxP,QAAAnS,GAAA,CACA+P,KACA,IAAAjvD,EAAA9/L,KAAAmxP,QAAAnS,GACAsT,EAAAxyD,EAAA2+D,iBACA9rB,GACAN,SAAA9wN,OAAAC,aAAAs+K,EAAA4+D,oBACAn3O,OAAAu4K,EAAA0+D,cAGA,IAAAnsB,EAAA9wN,OAAAC,aAAA8wO,GACA5f,EAAA1yO,KAAAywP,WAAAzR,GAKA,OAJAtM,KAAAsc,gBAAA3c,EAAA1kC,EAAAglC,EAAApiO,EAAAyqO,EAAA8T,EAAAxhP,EAAAyhP,KACArc,EAAA,IAAAmc,EAAAxc,EAAA1kC,EAAAglC,EAAApiO,EAAAyqO,EAAA8T,EAAAxhP,EAAAyhP,GACA/uP,KAAAywP,WAAAzR,GAAAtM,GAEAA,GAEAZ,cAAA,SAAAxkC,GACA,IACAukC,EAAAa,EAAAsM,EADAigB,EAAAj/P,KAAAi/P,WAEA,GAAAA,IACAptB,EAAAotB,EAAA3xD,IAEA,OAAAukC,EAGAotB,IACAA,EAAAj/P,KAAAi/P,WAAA9/P,OAAAe,OAAA,OAEA2xO,KACA,IAEAjwO,EAFAs9P,EAAA5xD,EACA3rM,EAAA,EAEA,GAAA3B,KAAAq/O,KAEA,IADA,IAAAnzO,EAAA/M,OAAAe,OAAA,MACAyB,EAAA2rM,EAAAxrM,QAAA,CACA9B,KAAAq/O,KAAA+K,aAAA98C,EAAA3rM,EAAAuK,GACA8yO,EAAA9yO,EAAA8yO,SACA,IAAAl9O,EAAAoK,EAAApK,OACAH,GAAAG,EACA,IAAAwL,EAAA,IAAAxL,GAAA,KAAAwrM,EAAA93L,WAAA7T,EAAA,GACA+wO,EAAA1yO,KAAA++P,YAAA/f,EAAA1xO,GACAukO,EAAAt0N,KAAAm1N,QAGA,IAAA/wO,EAAA,EAAAC,EAAA0rM,EAAAxrM,OAAsCH,EAAAC,IAAQD,EAC9Cq9O,EAAA1xC,EAAA93L,WAAA7T,GACA+wO,EAAA1yO,KAAA++P,YAAA/f,EAAA,KAAAA,GACAnN,EAAAt0N,KAAAm1N,GAGA,OAAAusB,EAAAC,GAAArtB,IAGA8B,EAhzDA,GAkzDAjC,EAAA,WACA,SAAAA,EAAAh1B,GACA18M,KAAA08M,QACA18M,KAAA2xO,WAAA,eACA3xO,KAAAoxP,WAUA,OARA1f,EAAA9xO,WACAkyO,cAAA,WACA,UAEAwR,WAAA,WACA,OAAc5mC,MAAA18M,KAAA08M,SAGdg1B,EAdA,GAgBA,SAAAytB,EAAAxjE,EAAAkiE,EAAA/B,GACA,IACAzJ,EAAAlS,EAAAt+C,EADAgwD,EAAA1yP,OAAAe,OAAA,MAEAs+O,KAAA7iD,EAAA/uB,MAAA6xE,EAAAC,UACA,GAAA/iD,EAAA0iD,iBAEA,IADAx8C,KAAA9G,EAAAj/K,aAAA6/K,EAAA0iD,kBACA8B,EAAA,EAAsBA,EAAAt+C,EAAA//L,OAAgCq+O,IACtDkS,EAAAyJ,EAAAhzF,QAAA+4B,EAAAs+C,IAEA0R,EAAA1R,GADAkS,GAAA,EACAA,EAEA,OAGG,GAAA7T,EACH,IAAA2B,KAAA0d,EACAhM,EAAA1R,GAAA0d,EAAA1d,QAIA,IADAt+C,EAAA9G,EAAAr/K,iBACAykO,EAAA,EAAsBA,EAAAt+C,EAAA//L,OAAgCq+O,IACtDkS,EAAAyJ,EAAAhzF,QAAA+4B,EAAAs+C,IAEA0R,EAAA1R,GADAkS,GAAA,EACAA,EAEA,EAIA,IACA3kD,EADA0wC,EAAAziD,EAAAyiD,YAEA,GAAAA,EACA,IAAA+B,KAAA/B,EAAA,CACA,IAAAa,EAAAb,EAAA+B,GAEA,SADAkS,EAAAyJ,EAAAhzF,QAAAm2E,IACA,CACAvxC,IACAA,KAAAw+B,EAAAzgN,qBAEA,IAAA2xO,EAAAxO,EAAA3P,EAAAvxC,GACA0vD,IAAAne,IACAoT,EAAAyJ,EAAAhzF,QAAAs0F,IAIAvL,EAAA1R,GADAkS,GAAA,EACAA,EAEA,EAIA,OAAAR,EAEA,IAAAd,EAAA,WACA,SAAAqO,EAAAC,EAAAC,EAAAC,GAOA,IANA,IAIAhzP,EAJAizP,EAAAH,EAAAv9P,OACA29P,EAAAH,EAAAx9P,OACAyd,EAAAigP,EAAAC,EACA99P,EAAA49P,EAEAlgP,KACA1d,EAAA4d,GAAA,CAEA,IADAhT,EAAA,EACAA,EAAAkzP,GAAAJ,EAAA19P,EAAA4K,KAAA+yP,EAAA/yP,IACAA,IAEA,GAAAA,GAAAkzP,EAAA,CAEA,IADA99P,GAAA4K,EACA5K,EAAA69P,MAAAl6P,EAAAgI,SAAA+xP,EAAA19P,KACAA,IAEA0d,KACA,MAEA1d,IAEA,OACA0d,QACAvd,OAAAH,GA4DA,SAAAovP,EAAAhxP,EAAA27L,EAAAC,GACA,IACA+jE,EAAA/jE,EAAA+mD,QAEAid,GADAhkE,EAAAgnD,QACAjnD,EAAAj1L,UAHA,IAIAm5P,EAAA,MAAAD,EAAA,QAAAA,EAAA,GACAC,IACAlkE,EAAAh1L,KANA,GAOAg5P,EAAAC,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAE,EAnEA,SAAA13P,EAAA23P,GACA,IAEAC,EAAAC,EAAAlmM,EAqBAmmM,EAvBAC,GAAA,oBACAC,EAAAh4P,EAAAtC,IAEA,IAEAm6P,GADAD,EAAA53P,EAAA1D,SAAAq7P,IACAh+P,OACK,MAAA8e,GACL,GAAAA,aAAAtb,EAAA6X,qBACA,MAAAyD,EAGA,GAAAo/O,IAAAF,IACAhmM,EAAAslM,EAAAW,EAAAG,EAAAJ,EAAA,EAAAI,EAAAp+P,SACAud,OAAAy6C,EAAAh4D,SAAAg+P,EACA,OACA33P,OAAA,IAAAkU,EAAAxX,OAAAk7P,GACAj+P,OAAAg+P,GAQA,OAJAx6P,EAAA4O,MAAA,kEACA/L,EAAAtC,IAAAs6P,EAMA,KADArmM,EAAAslM,EADAj3P,EAAA1B,UAHA,MAIAy5P,EAAA,IACAp+P,QAIA,GADAqG,EAAAtC,KAAAi0D,EAAAh4D,OACAg4D,EAAAz6C,MAAA,CACA4gP,EAAA93P,EAAAtC,IAAAs6P,EACA,MAIA,OADAh4P,EAAAtC,IAAAs6P,EACAF,GAEA93P,OAAA,IAAAkU,EAAAxX,OAAAsD,EAAA1D,SAAAw7P,IACAn+P,OAAAm+P,OAGA36P,EAAA4O,MAAA,uEAEA/L,OAAA,IAAAkU,EAAAxX,OAAAsD,EAAA1D,SAAAq7P,IACAh+P,OAAAg+P,IA/CA,CAmEApkE,EAAAgkE,GACA,IAAAnS,EAAA6S,YAAAP,EAAA13P,UAAAilP,GACAiT,kBAAA1kE,GACAikE,KACAD,EAAAjkE,EAAAj3L,SAbA,IAcA,GAAAk7P,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAvBAW,EAuBAC,GAvBAD,EAuBA5kE,EAvBAj3L,YAEA0D,OAAA,IAAAkU,EAAAxX,OAAAy7P,GACAx+P,OAAAw+P,EAAAx+P,SAsBA4iB,EADA,IAAA6oO,EAAA6S,YAAAG,EAAAp4P,UAAAilP,GACAoT,qBACA,QAAAhqP,KAAAkO,EAAAi3K,WACAA,EAAAnlL,GAAAkO,EAAAi3K,WAAAnlL,GAEA,IAAAg9O,EAAA9uO,EAAA8uO,YACAiN,EAAAzgQ,KAAA0gQ,oBAAAlN,GACAztD,EAAA/lM,KAAA2gQ,cAAAj8O,EAAAqhL,OACA/lM,KAAAwzP,cACAxzP,KAAA0kB,KAAA1kB,KAAA4gQ,KAAA7gQ,EAAA0gQ,EAAAzgQ,KAAAwzP,YAAAztD,EAAApK,GACA37L,KAAAq+L,MAAAr+L,KAAA6gQ,SAAAn8O,EAAA8uO,aAgJA,OA9IAzC,EAAAnxP,WACA6yP,gBACA,OAAAzyP,KAAAwzP,YAAA1xP,OAAA,GAEAq8P,WAAA,WAGA,IAFA,IAAAjhE,GAAA,WACAs2D,EAAAxzP,KAAAwzP,YACAnB,EAAA,EAA2BA,EAAAmB,EAAA1xP,OAA8BuwP,IACzDn1D,EAAA3/K,KAAAi2O,EAAAnB,GAAApT,WAEA,OAAA/hD,GAEA6gE,gBAAA,SAAApiE,GACA,IAEA02D,EAFAmB,EAAAxzP,KAAAwzP,YACAsI,GAAA,WAEA,IAAAzJ,EAAA,EAAuBA,EAAAmB,EAAA1xP,OAA8BuwP,IACrDyJ,EAAAv+O,KAAAi2O,EAAAnB,GAAApT,WAEA,IAAA7lE,EAAAuiB,EAAAkiE,gBACA,GAAAzkF,EAAA,CACA,IAAAykF,EAAA1+P,OAAAe,OAAA,MACA,QAAAigP,KAAA/mE,GACAi5E,EAAAyJ,EAAAhzF,QAAAsQ,EAAA+mE,MACA,IACA0d,EAAA1d,GAAAkS,GAIA,OAAA8M,EAAAxjE,EAAAkiE,EAAA/B,IAEA+E,SAAA,SAAArN,GACA,IAAA7xP,EAAAC,EACAuvP,KACA,IAAAxvP,EAAA,EAAAC,EAAA4xP,EAAA1xP,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAu+L,EAAAszD,EAAA7xP,GACAu+L,EAAAJ,OACAqxD,EAAAxvP,EAAA,GAAAu+L,EAAAJ,MAGA,OAAAqxD,GAEAuP,oBAAA,SAAAI,GAEA,IADA,IAAAL,KACA9+P,EAAA,EAAAC,EAAAk/P,EAAAh/P,OAAmDH,EAAAC,EAAQD,IAC3D8+P,EAAAljP,KAAAujP,EAAAn/P,GAAAu+L,YAEA,OAAAugE,GAEAE,cAAA,SAAAI,GACA,IAAAhhE,EACAhwL,EAAAgxP,EAAAj/P,OAEAi+L,EADAhwL,EAAA,KACA,IACOA,EAAA,MACP,KAEA,MAEA,IACApO,EADAq/P,KAEA,IAAAr/P,EAAA,EAAiBA,EAAAo+L,EAAUp+L,IAC3Bq/P,EAAAzjP,MAAA,KAEA,IAAA5b,EAAA,EAAiBA,EAAAoO,EAAWpO,IAC5Bq/P,EAAAzjP,KAAAwjP,EAAAp/P,IAEA,OAAAq/P,GAEAJ,KAAA,SAAA7gQ,EAAA8xO,EAAA2hB,EAAAztD,EAAApK,GACA,IAAAE,EAAA,IAAAwxD,EAAA1yD,IACAkB,EAAAC,OAAA,IAAAuxD,EAAA3yD,UAAA,SACAmB,EAAApuB,OAAA1tK,GACA,IAAAm2K,EAAA,IAAAm3E,EAAA/yD,WACApkB,EAAAgtB,UAAA,eACAhtB,EAAAgtB,UAAA,cACAhtB,EAAAgtB,UAAA,gBACAhtB,EAAAgtB,UAAA,kBACAhtB,EAAAgtB,UAAA,cACAhtB,EAAAgtB,UAAA,iBACAhtB,EAAAgtB,UAAA,aAAAvH,EAAAsB,YACA/mB,EAAAgtB,UAAA,WAAAvH,EAAA6oC,MACAtuD,EAAAgtB,UAAA,gBACAhtB,EAAAgtB,UAAA,oBACAhtB,EAAAgtB,UAAA,gBACArH,EAAA3lB,UACA,IAAAsmB,EAAA,IAAA6wD,EAAA5yD,WACA+B,EAAAhJ,IAAA,gBACAgJ,EAAAhJ,IAAA,uBACAgJ,EAAAhJ,IAAAzzL,GACAy8L,EAAAhJ,IAAAzzL,GACAy8L,EAAAhJ,IAAA,UACAqI,EAAAW,UACAX,EAAAO,gBAAA,IAAAixD,EAAA7yD,SACA,IAEA74L,EAAAC,EAFAmO,EAAA8hO,EAAA/vO,OACAm/P,GAAA,GAEA,IAAAt/P,EAAA,EAAiBA,EAAAoO,EAAWpO,IAAA,CAC5B,IAAA4hB,EAAA8pO,EAAAxyD,mBAAA/xB,QAAA0qF,EAAA7xP,GAAAs9O,YACA,IAAA17N,IACAA,EAAA,GAEA09O,EAAA1jP,KAAAgG,GAAA,UAAAA,GAEAs4K,EAAAqB,QAAA,IAAAmwD,EAAA9yD,cAAA,KAAA0mE,GACA,IAAAC,EAAA,IAAA7T,EAAA7yD,SAEA,IADA0mE,EAAA1tE,KAAA,SACA7xL,EAAA,EAAiBA,EAAAoO,EAAWpO,IAAA,CAC5B,IAAA+wO,EAAAb,EAAAlwO,GACA,IAAA+wO,EAAA5wO,OAIAo/P,EAAA1tE,IAAAk/C,GAHAwuB,EAAA1tE,KAAA,SAKAqI,EAAAoC,YAAAijE,EACA,IAAA/iE,EAAA,IAAAkvD,EAAAhzD,eACA8D,EAAA+E,UAAA,cACA,IAAA4gB,GAAA,qLACA,IAAAniN,EAAA,EAAAC,EAAAkiN,EAAAhiN,OAAqCH,EAAAC,EAAQD,IAAA,CAC7C,IAAAw/P,EAAAr9C,EAAAniN,GACA,GAAAw/P,KAAAxlE,EAAAylE,YAAA,CAGA,IAAA9hQ,EAAAq8L,EAAAylE,YAAAD,GACA,GAAA1/P,MAAAC,QAAApC,GACA,QAAAiN,EAAAjN,EAAAwC,OAAA,EAAwCyK,EAAA,EAAOA,IAC/CjN,EAAAiN,IAAAjN,EAAAiN,EAAA,GAGA4xL,EAAA+E,UAAAi+D,EAAA7hQ,IAEAu8L,EAAA3lB,QAAAioB,cACA,IAAAkjE,EAAA,IAAAhU,EAAA7yD,SACA,IAAA74L,EAAA,EAAAC,EAAAmkM,EAAAjkM,OAAoCH,EAAAC,EAAQD,IAC5C0/P,EAAA7tE,IAAAuS,EAAApkM,IAIA,OAFAw8L,EAAAC,WAAAijE,EACA,IAAAhU,EAAAjzD,YAAAyB,GACAmI,YAGA+sD,EAjQA,GAmQAD,EAAA,WACA,SAAAA,EAAAp1D,EAAAC,GACA37L,KAAA27L,aACA,IAAA54K,EAAA,IAAAsqO,EAAAzyD,UAAAc,EAAAC,EAAAyxD,GACAptP,KAAA67L,IAAA94K,EAAA9Q,QACA,IAAAwrP,EAAA,IAAApQ,EAAAjzD,YAAAp6L,KAAA67L,KACA77L,KAAAq+L,MAAAr+L,KAAA67L,IAAAwC,MACA,IACAr+L,KAAA0kB,KAAA+4O,EAAAz5D,UACK,MAAA/nL,MACL3W,EAAA4O,MAAA,0BAAAynL,EAAAg2C,YACA3xO,KAAA0kB,KAAAg3K,GAoCA,OAjCAo1D,EAAAlxP,WACA6yP,gBACA,OAAAzyP,KAAA67L,IAAAoC,YAAAluL,OAEAouP,WAAA,WACA,OAAAn+P,KAAA67L,IAAAqB,iBAEA6gE,gBAAA,WACA,IAGAlM,EACAQ,EAJAx2D,EAAA77L,KAAA67L,IACAF,EAAA37L,KAAA27L,WACA2lE,EAAAzlE,EAAAqB,gBAGA,GAAAvB,EAAAkiD,UAAA,CAEA,GADAgU,EAAA1yP,OAAAe,OAAA,MACA27L,EAAAe,UACA,IAAAy1D,EAAA,EAA2BA,EAAAiP,EAAAx/P,OAA2BuwP,IAAA,CACtD,IAAAnxD,EAAAogE,EAAAjP,GAEAR,EADAl2D,EAAA0jD,KAAA8K,WAAAjpD,IACAmxD,OAGA,IAAAA,EAAA,EAA2BA,EAAAx2D,EAAAoC,YAAAluL,MAAiCsiP,IAC5DR,EAAAQ,KAGA,OAAAR,EAIA,OADAsN,EAAAxjE,EADAE,EAAAziB,SAAAyiB,EAAAziB,kBAAA,KACAkoF,KAIAxQ,EA/CA,GAkDA,oBAAAyQ,WAAA,UAAA/rF,KAAA+rF,UAAAC,aACAniQ,EAAA+tP,4BAIA,oBAAAmU,WAAA,kBAAA/rF,KAAA+rF,UAAAC,aACAhU,MAGAnuP,EAAA+tP,wBACA/tP,EAAA8tP,2BACA9tP,EAAA6tP,yBACA7tP,EAAAqyO,YACAryO,EAAAs0O,OACAt0O,EAAAo/O,YACAp/O,EAAA6/O,eACA7/O,EAAAwgP,uBACAxgP,EAAA4tP,wBACA5tP,EAAA40O,gDCn/EA90O,OAAAC,eAAAC,EAAA,cACAC,WAKAD,EAAAgiM,iBAHA,wgEAIAhiM,EAAAkiM,eAHA,urEAIAliM,EAAAoiM,qBAHA,grCAAAggE,IAAA,SAAAxlP,EAAAhS,EAAA0L,GAAA,aCLAxW,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA81P,2BAEA,IAAA7vP,EAAYC,EAAQ,KAEpB8nP,EAAkB9nP,EAAQ,KAE1B2mO,EAAiB3mO,EAAQ,KAEzBw1L,EAAiBx1L,EAAQ,KAEzB8W,EAAc9W,EAAQ,KAEtB4vP,EAAA,WACA,SAAAuM,EAAAh9O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,GAEA,SAAAo6O,EAAAj9O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,GAEA,SAAAq6O,EAAAl9O,EAAAhf,EAAAI,GACA,IAEA+iK,EAAAh8J,EAAAlL,EAFA4lB,EAAA,IAAAo6O,EAAAj9O,EAAAhf,EAAA,GAAAg8P,EAAAh9O,EAAAhf,EAAA,GAAAg8P,EAAAh9O,EAAAhf,EAAA,IACAg8L,EAAAigE,EAAAj9O,EAAAhf,EAAA6hB,GAEA,OAAAm6K,EAAA,CACAigE,EAAAj9O,EAAAhf,EAAA6hB,EAAA,GACA,IAAAsrO,EAAA8O,EAAAj9O,EAAAhf,EAAA6hB,EAAA,MAGA,IAFA1a,EAAAnH,EAAA6hB,EAAA,GACAshJ,KACAlnK,EAAA,EAAiBA,EAAAkxP,EAAclxP,IAAAkL,GAAA,EAC/Bg8J,EAAAlnK,IAAqBmE,IAAA67P,EAAAj9O,EAAA7X,IAGrB,IADAA,GAAA,EACAlL,EAAA,EAAiBA,EAAAkxP,EAAclxP,IAAAkL,GAAA,EAC/Bg8J,EAAAlnK,GAAA+D,MAAAi8P,EAAAj9O,EAAA7X,GAEA,IAAAlL,EAAA,EAAiBA,EAAAkxP,EAAclxP,IAAAkL,GAAA,EAC/Bg8J,EAAAlnK,GAAAkgQ,QAAAF,EAAAj9O,EAAA7X,GAEA,IAAAlL,EAAA,EAAiBA,EAAAkxP,EAAclxP,IAAAkL,GAAA,GAC/B,IAAAi1P,EAAAH,EAAAj9O,EAAA7X,GACA,OAAAi1P,EAAA,CAGAj5F,EAAAlnK,GAAAkxK,OACA,QAAAtmK,EAAA,EAAAsiK,EAAAhG,EAAAlnK,GAAAmE,IAAA+iK,EAAAlnK,GAAA+D,MAAA,EAAiE6G,EAAAsiK,EAAQtiK,IACzEs8J,EAAAlnK,GAAAkxK,IAAAtmK,GAAAo1P,EAAAj9O,EAAA7X,EAAAi1P,GACAA,GAAA,GAGA,OAAAj5F,EACK,QAAA64B,EAAA,CACLggE,EAAAh9O,EAAAhf,EAAA6hB,EAAA,GACA,IAAAw6O,EAAAL,EAAAh9O,EAAAhf,EAAA6hB,EAAA,IAGA,IAFA1a,EAAAnH,EAAA6hB,EAAA,GACAshJ,KACAlnK,EAAA,EAAiBA,EAAAogQ,EAAYpgQ,IAC7BknK,EAAAtrJ,MACA7X,MAAAg8P,EAAAh9O,EAAA7X,GACA/G,IAAA47P,EAAAh9O,EAAA7X,EAAA,GACAg1P,QAAAH,EAAAh9O,EAAA7X,EAAA,GAAA60P,EAAAh9O,EAAA7X,KAEAA,GAAA,GAEA,OAAAg8J,EAEA,UAAAvjK,EAAAyD,YAAA,qBAAA24L,GAEA,SAAAsgE,EAAAt9O,EAAAhf,EAAAI,EAAA81L,GACA,IAEAC,EADA,IAAAwxD,EAAAzyD,UAAA,IAAAv+K,EAAAxX,OAAA6f,EAAAhf,EAAAI,EAAAJ,MAAAk2L,GACA3pL,QACA,OACA4/N,OAAAh2C,EAAAoC,YAAAsE,QACAwD,MAAAlK,EAAA3lB,QAAAioB,aAAAtC,EAAA3lB,QAAAioB,YAAAC,YAAAvC,EAAA3lB,QAAAioB,YAAAC,WAAAmE,QACA0/D,OAAApmE,EAAAO,iBAAAP,EAAAO,gBAAAmG,SAyBA,SAAA2/D,EAAAr5F,EAAA8kC,GAKA,IAJA,IAAAlkM,EAAAkkM,EAAAn4L,WAAA,GACAysL,EAAA,EACAxgG,EAAA,EACA9rF,EAAAkzJ,EAAA/mK,OAAA,EACA2/F,EAAA9rF,GAAA,CACA,IAAAzJ,EAAAu1F,EAAA9rF,EAAA,KACAlM,EAAAo/J,EAAA38J,GAAAxG,MACAiQ,EAAAzJ,EAAA,EAEAu1F,EAAAv1F,EAMA,OAHA28J,EAAApnE,GAAA/7F,OAAA+D,MAAAo/J,EAAApnE,GAAA37F,MACAm8L,EAAAp5B,EAAApnE,GAAAogK,SAAAh5F,EAAApnE,GAAAoxE,IAAAhK,EAAApnE,GAAAoxE,IAAAppK,EAAAo/J,EAAApnE,GAAA/7F,OAAA+D,GAAA,QAGA02O,SAAA12O,EACA4oP,QAAApwD,GAwfA,SAAAkgE,EAAAllE,GACAj9L,KAAAoiQ,eAAAjjQ,OAAAe,OAAA,MACAF,KAAAqiQ,0BAAAljQ,OAAAe,OAAA,MACAF,KAAAi9L,aAyCA,SAAAqlE,EAAAzwB,EAAAoO,EAAAhjD,GACAA,MAAA,uBACAklE,EAAAr+P,KAAA9D,KAAAi9L,GACAj9L,KAAA6xO,SACA7xO,KAAAigP,OAOA,SAAAsiB,EAAAC,EAAAviB,EAAAhjD,EAAAwlE,GACAxlE,MAAA,mBACAklE,EAAAr+P,KAAA9D,KAAAi9L,GACAj9L,KAAA6xO,OAAA2wB,EAAA3wB,OACA7xO,KAAAiiQ,OAAAO,EAAAP,WACAjiQ,KAAA+lM,MAAAy8D,EAAAz8D,UACA/lM,KAAAigP,OACAjgP,KAAAyiQ,mBAAAv2B,EAAAzgN,oBACAzrB,KAAA0iQ,WAAA1iQ,KAAAiiQ,OAAAngQ,OAAA,SAAA9B,KAAAiiQ,OAAAngQ,OAAA,iBACA9B,KAAA2iQ,UAAA3iQ,KAAA+lM,MAAAjkM,OAAA,SAAA9B,KAAA+lM,MAAAjkM,OAAA,iBAOA,OAlEAqgQ,EAAAviQ,WACA6yO,UAAA,SAAA9kC,GACA,IAAAsyC,EAAAiiB,EAAAliQ,KAAAigP,KAAAtyC,GACA/pM,EAAA5D,KAAAoiQ,eAAAniB,EAAAoS,SAQA,OAPAzuP,IACAA,EAAA5D,KAAA4iQ,aAAA5iQ,KAAA6xO,OAAAoO,EAAAoS,UACAryP,KAAAoiQ,eAAAniB,EAAAoS,SAAAzuP,YAEA5D,KAAAqiQ,0BAAApiB,EAAAE,YACAngP,KAAAqiQ,0BAAApiB,EAAAE,UAAAF,EAAAoS,SAEAzuP,GAEAg/P,aAAA,SAAAn5P,GACA,IAAAA,GAAA,IAAAA,EAAA3H,QAAA,KAAA2H,EAAA,GACA,MArBA,GAuBA,IAAAo5P,KAYA,OAXAA,EAAAtlP,MAAiBld,IAAA,SACjBwiQ,EAAAtlP,MACAld,IAAA,YACA2oB,KAAAhpB,KAAAi9L,WAAAp7L,UAEAghQ,EAAAtlP,MACAld,IAAA,QACA2oB,MAAA,kBAEAhpB,KAAA8iQ,iBAAAr5P,EAAAo5P,GACAA,EAAAtlP,MAAiBld,IAAA,YACjBwiQ,GAEAC,iBAAA,cACAx9P,EAAAgK,aAAA,4CAEAijO,aAAA,SAAA5kC,GACA,IAAAsyC,EAAAiiB,EAAAliQ,KAAAigP,KAAAtyC,GACA,gBAAA3tM,KAAAoiQ,eAAAniB,EAAAoS,mBAAAryP,KAAAqiQ,0BAAApiB,EAAAE,YASA76O,EAAA8C,KAAAivK,QAAAirF,EAAAH,GACAW,iBAAA,SAAAr5P,EAAAo5P,IAxiBA,SAAAE,EAAAt5P,EAAAo5P,EAAAvxB,GACA,SAAAkG,EAAA58N,EAAA5E,GACA6sP,EAAAtlP,MACAld,IAAA,SACA2oB,MAAApO,EAAA5E,KAGA,SAAAyhO,EAAA78N,EAAA5E,GACA6sP,EAAAtlP,MACAld,IAAA,SACA2oB,MAAApO,EAAA5E,KAGA,SAAAgtP,EAAAC,EAAAC,EAAAtoP,EAAA5E,GACA6sP,EAAAtlP,MACAld,IAAA,mBACA2oB,MAAAi6O,EAAAC,EAAAtoP,EAAA5E,KAGA,IAEA42J,EAFAjrK,EAAA,EACAwhQ,GAAA15P,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YAEAiZ,EAAA,EACA5E,EAAA,EAEA,GADArU,GAAA,GACAwhQ,EAAA,EACA,GACAv2F,EAAAnjK,EAAA9H,IAAA,EAAA8H,EAAA9H,EAAA,GACA,IAEAkzM,EAAAC,EAFAzR,EAAA55L,EAAA9H,EAAA,MAAA8H,EAAA9H,EAAA,GACAA,GAAA,EAEA,EAAAirK,GACAioC,GAAAprM,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YACAmzM,GAAArrM,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,YACAA,GAAA,IAEAkzM,EAAAprM,EAAA9H,KACAmzM,EAAArrM,EAAA9H,MAEA,EAAAirK,GACAhyJ,EAAAi6L,EACA7+L,EAAA8+L,IAEAl6L,EAAA,EACA5E,EAAA,GAEA,IAAAqoN,EAAA,EACAC,EAAA,EACA8kC,EAAA,EACAC,EAAA,EACA,EAAAz2F,GACAyxD,EAAAC,GAAA70N,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,mBACAA,GAAA,GACS,GAAAirK,GACTyxD,GAAA50N,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,mBACA28N,GAAA70N,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACAA,GAAA,GACS,IAAAirK,IACTyxD,GAAA50N,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,mBACAyhQ,GAAA35P,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACA0hQ,GAAA55P,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACA28N,GAAA70N,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,mBACAA,GAAA,GAEA,IAAA2hQ,EAAAhyB,EAAAO,OAAAxuC,GACAigE,IACAT,EAAAtlP,MAAqBld,IAAA,SACrBwiQ,EAAAtlP,MACAld,IAAA,YACA2oB,MAAAq1M,EAAA+kC,EAAAC,EAAA/kC,EAAA1jN,EAAA5E,KAEA+sP,EAAAO,EAAAT,EAAAvxB,GACAuxB,EAAAtlP,MAAqBld,IAAA,mBAEd,GAAAusK,OACF,CACL,IACArgK,EAAAsiK,EADA00F,KAEA,IAAAh3P,EAAA,EAAiBA,EAAA42P,EAAsB52P,IACvCg3P,EAAAhmP,KAAA9T,EAAA9H,IAAA,EAAA8H,EAAA9H,EAAA,IACAA,GAAA,EAGAA,GAAA,GADA8H,EAAA9H,IAAA,EAAA8H,EAAA9H,EAAA,IAIA,IAFA,IAAA6hQ,EAAAD,IAAAzhQ,OAAA,KACA2hQ,KACAA,EAAA3hQ,OAAA0hQ,GAAA,CAEA,IAAAhM,EAAA,EAIA,IAHA,GAFA5qF,EAAAnjK,EAAA9H,QAGA61P,GAAA/tP,EAAA9H,MAEA61P,KAAA,GACAiM,EAAAlmP,MAAuBqvJ,UAGvB,IAAArgK,EAAA,EAAiBA,EAAAi3P,EAAoBj3P,IAAA,CACrC,UAAAk3P,EAAAl3P,GAAAqgK,OACA,OACAhyJ,IAAAnR,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YACAA,GAAA,EACA,MACA,OACAiZ,GAAAnR,EAAA9H,KACA,MACA,QACAiZ,GAAAnR,EAAA9H,KAGA8hQ,EAAAl3P,GAAAqO,IAEA,IAAArO,EAAA,EAAiBA,EAAAi3P,EAAoBj3P,IAAA,CACrC,UAAAk3P,EAAAl3P,GAAAqgK,OACA,OACA52J,IAAAvM,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,YACAA,GAAA,EACA,MACA,OACAqU,GAAAvM,EAAA9H,KACA,MACA,QACAqU,GAAAvM,EAAA9H,KAGA8hQ,EAAAl3P,GAAAyJ,IAEA,IAAA0tP,EAAA,EACA,IAAA/hQ,EAAA,EAAiBA,EAAAwhQ,EAAsBxhQ,IAAA,CACvC,IAAAgiQ,EAAAJ,EAAA5hQ,GACAiiQ,EAAAH,EAAA5hQ,MAAA6hQ,EAAAC,EAAA,GACA,KAAAC,EAAA,GAAAh3F,MACAg3F,EAAArmP,KAAAqmP,EAAA,SACS,KAAAA,IAAA9hQ,OAAA,GAAA8qK,MACTg3F,EAAA7sD,QAAA6sD,IAAA9hQ,OAAA,QACS,CACT,IAAA+K,GACA+/J,MAAA,EACAhyJ,GAAAgpP,EAAA,GAAAhpP,EAAAgpP,IAAA9hQ,OAAA,GAAA8Y,GAAA,EACA5E,GAAA4tP,EAAA,GAAA5tP,EAAA4tP,IAAA9hQ,OAAA,GAAAkU,GAAA,GAEA4tP,EAAA7sD,QAAAlqM,GACA+2P,EAAArmP,KAAA1Q,GAGA,IADA2qO,EAAAosB,EAAA,GAAAhpP,EAAAgpP,EAAA,GAAA5tP,GACAzJ,EAAA,EAAAsiK,EAAA+0F,EAAA9hQ,OAAwCyK,EAAAsiK,EAAQtiK,IAChD,EAAAq3P,EAAAr3P,GAAAqgK,MACA6qE,EAAAmsB,EAAAr3P,GAAAqO,EAAAgpP,EAAAr3P,GAAAyJ,GACW,EAAA4tP,EAAAr3P,EAAA,GAAAqgK,OACXo2F,EAAAY,EAAAr3P,GAAAqO,EAAAgpP,EAAAr3P,GAAAyJ,EAAA4tP,EAAAr3P,EAAA,GAAAqO,EAAAgpP,EAAAr3P,EAAA,GAAAyJ,GACAzJ,KAEAy2P,EAAAY,EAAAr3P,GAAAqO,EAAAgpP,EAAAr3P,GAAAyJ,GAAA4tP,EAAAr3P,GAAAqO,EAAAgpP,EAAAr3P,EAAA,GAAAqO,GAAA,GAAAgpP,EAAAr3P,GAAAyJ,EAAA4tP,EAAAr3P,EAAA,GAAAyJ,GAAA,GAGA0tP,EAAAC,EAAA,IA1JA,CAyiBAl6P,EAAAo5P,EAAA7iQ,SAcAsF,EAAA8C,KAAAivK,QAAAkrF,EAAAJ,GACAW,iBAAA,SAAAr5P,EAAAo5P,IA1ZA,SAAAgB,EAAAp6P,EAAAo5P,EAAAvxB,GACA,IAAA71C,KACA7gL,EAAA,EACA5E,EAAA,EACA8tP,EAAA,EACA,SAAAtsB,EAAA58N,EAAA5E,GACA6sP,EAAAtlP,MACAld,IAAA,SACA2oB,MAAApO,EAAA5E,KAGA,SAAAyhO,EAAA78N,EAAA5E,GACA6sP,EAAAtlP,MACAld,IAAA,SACA2oB,MAAApO,EAAA5E,KAGA,SAAA+tP,EAAArmF,EAAAK,EAAA37J,EAAA8qK,EAAAtyK,EAAA5E,GACA6sP,EAAAtlP,MACAld,IAAA,gBACA2oB,MAAA00J,EAAAK,EAAA37J,EAAA8qK,EAAAtyK,EAAA5E,MAGA,SAAA/D,EAAAxI,GAEA,IADA,IAAA9H,EAAA,EACAA,EAAA8H,EAAA3H,QAAA,CACA,IAEAmhQ,EAAAe,EAAAd,EAAAe,EAAAlmF,EAAAmP,EAAAvmL,EAAAu9P,EAFAC,KACAlgQ,EAAAwF,EAAA9H,KAEA,OAAAsC,GACA,OAIA,OACA6/P,GAAAroE,EAAA35L,QAAA,EACAqiQ,KACA,MACA,OACAnuP,GAAAylL,EAAAlrB,MACAinE,EAAA58N,EAAA5E,GACAmuP,KACA,MACA,OACA,KAAA1oE,EAAA35L,OAAA,GACA8Y,GAAA6gL,EAAAzzL,QACAgO,GAAAylL,EAAAzzL,QACAyvO,EAAA78N,EAAA5E,GAEA,MACA,OACA,KAAAylL,EAAA35L,OAAA,IAEA21O,EADA78N,GAAA6gL,EAAAzzL,QACAgO,GACA,IAAAylL,EAAA35L,SAGAkU,GAAAylL,EAAAzzL,QACAyvO,EAAA78N,EAAA5E,GAEA,MACA,OACA,KAAAylL,EAAA35L,OAAA,IACAkU,GAAAylL,EAAAzzL,QACAyvO,EAAA78N,EAAA5E,GACA,IAAAylL,EAAA35L,SAIA21O,EADA78N,GAAA6gL,EAAAzzL,QACAgO,GAEA,MACA,OACA,KAAAylL,EAAA35L,OAAA,GACAmhQ,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GAEA,MACA,QACArP,EAAA80L,EAAAlrB,MAAA+gE,EAAAqxB,WACAuB,EAAA5yB,EAAAvrC,MAAAp/L,KAEAsL,EAAAiyP,GAEA,MACA,QACA,OACA,QAEA,OADAjgQ,EAAAwF,EAAA9H,MAEA,QAEAqiQ,GADAf,EAAAroP,EAAA6gL,EAAAzzL,SACAyzL,EAAAzzL,QACA+1K,EAAA/nK,EAAAylL,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACA+7P,EAAAd,EAAAjtP,EAAAguP,EAAAjmF,EAAAnjK,EAAAmjK,GAEAimF,GADAf,EAAAroP,EAAA6gL,EAAAzzL,SACAyzL,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACA+7P,EAAAd,EAAAllF,EAAAimF,EAAAhuP,EAAA4E,EAAA5E,GACA,MACA,QACAitP,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GACAitP,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GACAylL,EAAAlrB,MACA,MACA,QAMAwzF,EALAd,EAAAroP,EAAA6gL,EAAAzzL,QACA+1K,EAAA/nK,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAklL,EAAAnP,EAAA0d,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAklL,GAKA62E,EAJAd,EAAAroP,EAAA6gL,EAAAzzL,QAIAklL,EAHA82E,EAAAf,EAAAxnE,EAAAzzL,QACAklL,EAAAuO,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,GACA,MACA,QACA,IAAAunK,EAAA3iK,EACAgjK,EAAA5nK,EACAitP,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GACAitP,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EACAhuP,EAAAiuP,EACA/0P,KAAAglM,IAAAt5L,EAAA2iK,GAAAruK,KAAAglM,IAAAl+L,EAAA4nK,GACAhjK,GAAA6gL,EAAAzzL,QAEAgO,GAAAylL,EAAAzzL,QAEA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GACA,MACA,QACA,UAAA1Q,EAAAyD,YAAA,wBAAA9E,GAEA,MACA,QACA,GAAAw3L,EAAA35L,QAAA,GACA,IAAAsiQ,EAAA3oE,EAAAlrB,MACA8zF,EAAA5oE,EAAAlrB,MACAv6J,EAAAylL,EAAAlrB,MACA31J,EAAA6gL,EAAAlrB,MACAsyF,EAAAtlP,MAAyBld,IAAA,SACzBwiQ,EAAAtlP,MACAld,IAAA,YACA2oB,MAAApO,EAAA5E,KAEA,IAAAiqO,EAAAiiB,EAAA5wB,EAAA2O,KAAA1+N,OAAAC,aAAA8vN,EAAAmxB,aAAA1nE,EAAAr/K,iBAAA0oP,MACAP,EAAAvyB,EAAAO,OAAAoO,EAAAoS,SAAAwQ,EAAAvxB,GACAuxB,EAAAtlP,MAAyBld,IAAA,YACzB4/O,EAAAiiB,EAAA5wB,EAAA2O,KAAA1+N,OAAAC,aAAA8vN,EAAAmxB,aAAA1nE,EAAAr/K,iBAAA2oP,MACAR,EAAAvyB,EAAAO,OAAAoO,EAAAoS,SAAAwQ,EAAAvxB,GAEA,OACA,QACAwyB,GAAAroE,EAAA35L,QAAA,EACAqiQ,KACA,MACA,QAKA,QAEAxiQ,IADAmiQ,GAAAroE,EAAA35L,QAAA,GACA,KACAqiQ,KACA,MACA,QACAnuP,GAAAylL,EAAAlrB,MAEAinE,EADA58N,GAAA6gL,EAAAlrB,MACAv6J,GACAmuP,KACA,MACA,QAEA3sB,EADA58N,GAAA6gL,EAAAlrB,MACAv6J,GACAmuP,KACA,MACA,QACAL,GAAAroE,EAAA35L,QAAA,EACAqiQ,KACA,MACA,QACA,KAAA1oE,EAAA35L,OAAA,GACAmhQ,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GAEA4E,GAAA6gL,EAAAzzL,QACAgO,GAAAylL,EAAAzzL,QACAyvO,EAAA78N,EAAA5E,GACA,MACA,QACA,KAAAylL,EAAA35L,OAAA,GACA8Y,GAAA6gL,EAAAzzL,QACAgO,GAAAylL,EAAAzzL,QACAyvO,EAAA78N,EAAA5E,GAEAitP,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GACA,MACA,QAIA,IAHAylL,EAAA35L,OAAA,IACA8Y,GAAA6gL,EAAAzzL,SAEAyzL,EAAA35L,OAAA,GACAmhQ,EAAAroP,EACAsoP,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EACAhuP,EAAAiuP,EAAAxoE,EAAAzzL,QACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GAEA,MACA,QAIA,IAHAylL,EAAA35L,OAAA,IACAkU,GAAAylL,EAAAzzL,SAEAyzL,EAAA35L,OAAA,GAOAiiQ,EANAd,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EACAguP,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,GAGA,MACA,QACAxoE,EAAAl+K,MAAA9T,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,aACAA,GAAA,EACA,MACA,QACAgF,EAAA80L,EAAAlrB,MAAA+gE,EAAAoxB,YACAwB,EAAA5yB,EAAA2wB,OAAAt7P,KAEAsL,EAAAiyP,GAEA,MACA,QACA,KAAAzoE,EAAA35L,OAAA,IACAmhQ,EAAAroP,EACAsoP,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,GAAA,IAAAxoE,EAAA35L,OAAA25L,EAAAzzL,QAAA,GACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GACA,IAAAylL,EAAA35L,SAGAmhQ,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EACAguP,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QAEA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EADArpP,EAAAopP,GAAA,IAAAvoE,EAAA35L,OAAA25L,EAAAzzL,QAAA,GACAgO,GAEA,MACA,QACA,KAAAylL,EAAA35L,OAAA,IACAmhQ,EAAAroP,EAAA6gL,EAAAzzL,QACAk7P,EAAAltP,EACAguP,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACAgO,EAAAiuP,EAAAxoE,EAAAzzL,QAEA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EADArpP,EAAAopP,GAAA,IAAAvoE,EAAA35L,OAAA25L,EAAAzzL,QAAA,GACAgO,GACA,IAAAylL,EAAA35L,SAGAmhQ,EAAAroP,EACAsoP,EAAAltP,EAAAylL,EAAAzzL,QACAg8P,EAAAf,EAAAxnE,EAAAzzL,QACAi8P,EAAAf,EAAAznE,EAAAzzL,QACA4S,EAAAopP,EAAAvoE,EAAAzzL,QACAgO,EAAAiuP,GAAA,IAAAxoE,EAAA35L,OAAA25L,EAAAzzL,QAAA,GACA+7P,EAAAd,EAAAC,EAAAc,EAAAC,EAAArpP,EAAA5E,GAEA,MACA,QACA,GAAA/R,EAAA,GACA,UAAAqB,EAAAyD,YAAA,qBAAA9E,GAEAA,EAAA,IACAw3L,EAAAl+K,KAAAtZ,EAAA,KACaA,EAAA,IACbw3L,EAAAl+K,KAAA,KAAAtZ,EAAA,KAAAwF,EAAA9H,KAAA,KACasC,EAAA,IACbw3L,EAAAl+K,KAAA,MAAAtZ,EAAA,KAAAwF,EAAA9H,KAAA,MAEA85L,EAAAl+K,MAAA9T,EAAA9H,IAAA,GAAA8H,EAAA9H,EAAA,OAAA8H,EAAA9H,EAAA,MAAA8H,EAAA9H,EAAA,WACAA,GAAA,GAIAwiQ,IACA1oE,EAAA35L,OAAA,IAzTA,CA6TA2H,GApVA,CA2ZAA,EAAAo5P,EAAA7iQ,UAIAE,OAAA,SAAAoxO,EAAA11C,GAIA,IAHA,IACAqkD,EAAA+W,EAAAiD,EAAAp+D,EAAA++D,EAAAlH,EADAhvO,EAAA,IAAA9e,WAAA0rO,EAAA5sN,MAEAsrO,EAAA2R,EAAAj9O,EAAA,GACA/iB,EAAA,EAAAkL,EAAA,GAA6BlL,EAAAquP,EAAeruP,IAAAkL,GAAA,IAC5C,IAAAyjP,KAAAhrP,EAAAsmK,eAAAlnJ,EAAApe,SAAAuG,IAAA,IACA0a,EAAAm6O,EAAAh9O,EAAA7X,EAAA,GACA/K,EAAA4/P,EAAAh9O,EAAA7X,EAAA,IACA,OAAAyjP,GACA,WACArQ,EAAA2hB,EAAAl9O,EAAA6C,GACA,MACA,WACAyvO,EAAAtyO,EAAApe,SAAAihB,IAAAzlB,GACA,MACA,WACAm4P,EAAAv1O,EAAApe,SAAAihB,IAAAzlB,GACA,MACA,WACA4xP,EAAAiO,EAAAj9O,EAAA6C,EAAA,IACAqzO,EAAA+G,EAAAj9O,EAAA6C,EAAA,IACA,MACA,WACAs0K,EAAAmmE,EAAAt9O,EAAA6C,IAAAzlB,EAAA85L,IAIA,GAAAo7D,EAAA,CACA,IAAA/5D,EAAAy2D,GAAA,EAAAA,EAAA,MAAAA,EAAA,KAAApiB,EAAAr0C,WACA,WAAAqlE,EAroBA,SAAAtL,EAAAiD,EAAAa,GACA,IAAAE,EAAAC,EAooBAL,GAloBAI,EAAA,EACAC,EAAA,SAAAv2O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,MAGAyzO,EAAA,EACAC,EAAA,SAAAv2O,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,QAKA,IAFA,IAAAsqN,KACA3Z,EAAA+iC,EAAAhB,EAAA,GACA1tP,EAAAyuP,EAA0BzuP,EAAA0tP,EAAAn4P,OAAiByK,GAAAyuP,EAAA,CAC3C,IAAAl/B,EAAAm/B,EAAAhB,EAAA1tP,GACAslO,EAAAt0N,KAAAy5O,EAAA1wP,SAAA4xN,EAAA4D,IACA5D,EAAA4D,EAEA,OAAA+V,EApBA,CAqoBAmlB,EAAAiD,GAAAha,EAAAhjD,GAEA,WAAAslE,EAAA1mE,EAAAokD,EAAA3O,EAAAr0C,WAAAq0C,EAAAmxB,gBAxsBA,GA4sBApjQ,EAAA81P,wDC3tBAh2P,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA+gQ,mBAEA,IAAA96P,EAAYC,EAAQ,KAEpBw1L,EAAiBx1L,EAAQ,KAEzB8W,EAAc9W,EAAQ,KAGtB++P,EAAA,WACA,IAAAC,GAGA,GAHAA,GAIA,GAJAA,GAKA,GALAA,GAMA,GANAA,GAOA,GAPAA,GASA,OATAA,GAWA,IAXAA,GAYA,IAZAA,GAaA,IAbAA,GAcA,IAdAA,GAeA,IAEA,SAAAD,IACAtkQ,KAAAuQ,MAAA,EACAvQ,KAAAwkQ,IAAA,EACAxkQ,KAAAykQ,WACAzkQ,KAAAkyL,UACAlyL,KAAAy7L,SA0NA,OAxNA6oE,EAAA1kQ,WACAoxP,QAAA,SAAA0T,EAAA3+D,EAAAnK,GAIA,IAHA,IAEA+oE,EAAAC,EAAA5kE,EAFAjwL,EAAA20P,EAAA5iQ,OACA46M,KAEA/6M,EAAA,EAAqBA,EAAAoO,EAAWpO,IAAA,CAChC,IAAArC,EAAAolQ,EAAA/iQ,GACA,GAAArC,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAAolQ,IAAA/iQ,IAEArC,GACA,OAOA,OAEAU,KAAAy7L,SACA,MAIA,OACA,GAAAz7L,KAAAykQ,QAAA,CACA,GAAAzkQ,KAAAy7L,MAAA35L,OAAA,GACA46M,KACA,MAEA,IAAAmoD,EAAA7kQ,KAAAy7L,MAAAlrB,MACAvwK,KAAAy7L,MAAAl+K,KAAA,EAAAsnP,GACA,MAEAnoD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,OACA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,OACA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,OACA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,OACA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,OACAvkQ,KAAAy7L,SACA,MACA,QACA,GAAAz7L,KAAAy7L,MAAA35L,OAAA,GACA46M,KACA,MAGA,IAAA3W,EADA/F,EAAAhgM,KAAAy7L,MAAAlrB,OACA,CACAmsC,KACA,MAEAA,EAAA18M,KAAAgxP,QAAAjrD,EAAA/F,GAAA+F,EAAAnK,GACA,MACA,QACA,OAAA8gB,EACA,QACA,GAAA18M,KAAAy7L,MAAA35L,OAAA,GACA46M,KACA,MAEAioD,EAAA3kQ,KAAAy7L,MAAAlrB,MACAq0F,EAAA5kQ,KAAAy7L,MAAAlrB,MACAvwK,KAAAwkQ,IAAAI,EACA5kQ,KAAAuQ,MAAAo0P,EACA3kQ,KAAAy7L,MAAAl+K,KAAAonP,EAAAC,GACAloD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,QACAvkQ,KAAAkyL,OAAA30K,KAAAgnP,EAAA,IACA,MACA,QACA,GAAAvkQ,KAAAykQ,QACA,MAEA/nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,QACA,GAAAvkQ,KAAAykQ,QAAA,CACAzkQ,KAAAy7L,MAAAl+K,KAAA,GACA,MAEAm/L,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,QACA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,QACA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,UAGA,UAOA,UAEAvkQ,KAAAy7L,SACA,MAIA,UACAG,GACA57L,KAAA8/L,KAAA9/L,KAAAy7L,MAAAj0K,QAAA,KACAk1L,EAAA18M,KAAA8kQ,eAAA,EAAAP,IAEA7nD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GAEA,MACA,UACA,GAAAvkQ,KAAAy7L,MAAA35L,OAAA,GACA46M,KACA,MAEA18M,KAAAy7L,MAAAlrB,MACAo0F,EAAA3kQ,KAAAy7L,MAAAlrB,MACA,IAAAw0F,EAAA/kQ,KAAAy7L,MAAAlrB,MACAq0F,EAAA5kQ,KAAAy7L,MAAAlrB,MACAvwK,KAAAwkQ,IAAAI,EACA5kQ,KAAAuQ,MAAAo0P,EACA3kQ,KAAAy7L,MAAAl+K,KAAAonP,EAAAC,EAAAG,GACAroD,EAAA18M,KAAA8kQ,eAAA,EAAAP,GACA,MACA,UACA,GAAAvkQ,KAAAy7L,MAAA35L,OAAA,GACA46M,KACA,MAEA,IAAAnH,EAAAv1M,KAAAy7L,MAAAlrB,MACA+kC,EAAAt1M,KAAAy7L,MAAAlrB,MACAvwK,KAAAy7L,MAAAl+K,KAAA+3L,EAAAC,GACA,MACA,UACA,GAAAv1M,KAAAy7L,MAAA35L,OAAA,GACA46M,KACA,MAEA1c,EAAAhgM,KAAAy7L,MAAAlrB,MACA,IAAAm0E,EAAA1kP,KAAAy7L,MAAAlrB,MACA,OAAAyvB,GAAA,IAAA0kD,EAAA,CACA,IAAAsgB,EAAAhlQ,KAAAy7L,MAAAj0K,OAAAxnB,KAAAy7L,MAAA35L,OAAA,OACA9B,KAAAy7L,MAAAl+K,KAAAynP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAtoD,EAAA18M,KAAA8kQ,eAAA,GAAAP,MACAvkQ,KAAAykQ,WACAzkQ,KAAAy7L,MAAAl+K,KAAAynP,EAAA,IAAAA,EAAA,UACe,IAAAhlE,GAAA,IAAA0kD,IACf1kP,KAAAykQ,YAEA,MACA,UACA,MACA,UACAzkQ,KAAAy7L,SACA,MACA,WACAn2L,EAAA4O,MAAA,yCAAA5U,EAAA,KAGA,GAAAo9M,EACA,WAGSp9M,GAAA,IACTA,GAAA,IAEAA,EADSA,GAAA,IACT,KAAAA,EAAA,KAAAolQ,IAAA/iQ,GAAA,IACSrC,GAAA,KACT,KAAAA,EAAA,KAAAolQ,IAAA/iQ,GAAA,KAEA,IAAA+iQ,IAAA/iQ,KAAA,QAAA+iQ,IAAA/iQ,KAAA,QAAA+iQ,IAAA/iQ,KAAA,OAAA+iQ,IAAA/iQ,KAAA,EAEA3B,KAAAy7L,MAAAl+K,KAAAje,GAEA,OAAAo9M,GAEAooD,eAAA,SAAAG,EAAAC,EAAAC,GACA,IAAAC,EAAAplQ,KAAAy7L,MAAA35L,OACA,GAAAmjQ,EAAAG,EACA,SAGA,IADA,IAAA1/P,EAAA0/P,EAAAH,EACAtjQ,EAAA+D,EAAyB/D,EAAAyjQ,EAAiBzjQ,IAAA,CAC1C,IAAArC,EAAAU,KAAAy7L,MAAA95L,GACA8b,OAAAC,UAAApe,GACAU,KAAAkyL,OAAA30K,KAAA,GAAAje,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACAU,KAAAkyL,OAAA30K,KAAA,IAAAje,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,OANAU,KAAAkyL,OAAA30K,KAAAo5L,MAAA32M,KAAAkyL,OAAAgzE,GACAC,EACAnlQ,KAAAy7L,MAAAj0K,OAAA9hB,EAAAu/P,GAEAjlQ,KAAAy7L,MAAA35L,OAAA,OAKAwiQ,EAjPA,GAmPAlE,EAAA,WACA,IAAAiF,EAAA,MAEA,SAAAC,EAAA77P,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,SAAAwD,EAAAyX,EAAAxiB,EAAAqjQ,GACA,GAAAA,GAAA7gP,EAAA5iB,OACA,WAAA8D,WAAA,GAEA,IAGAjE,EACA4K,EAJAoJ,EAAA,EAAAzT,EAKA,IAAAP,EAAA,EAAeA,EAAA4jQ,EAAmB5jQ,IAClCgU,EALA,OAKA+O,EAAA/iB,GAAAgU,GAJA,MAIA,MAEA,IAAA5F,EAAA2U,EAAA5iB,OAAAyjQ,EACAC,EAAA,IAAA5/P,WAAAmK,GACA,IAAApO,EAAA4jQ,EAAAh5P,EAAA,EAAkCA,EAAAwD,EAAWpO,IAAA4K,IAAA,CAC7C,IAAAjN,EAAAolB,EAAA/iB,GACA6jQ,EAAAj5P,GAAAjN,EAAAqW,GAAA,EACAA,EAZA,OAYArW,EAAAqW,GAXA,MAWA,MAEA,OAAA6vP,EA4BA,SAAAC,EAAAv5P,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,SAAAk0P,EAAAj4P,EAAAu9P,EAAA9pE,GACA,GAAA8pE,EAAA,CACA,IAAAhhP,EAAAvc,EAAA1D,WACAkhQ,IAAAL,EAAA5gP,EAAA,KAAA4gP,EAAA5gP,EAAA,KAAA4gP,EAAA5gP,EAAA,KAAA4gP,EAAA5gP,EAAA,KACAvc,EAAA,IAAAkU,EAAAxX,OAAA8gQ,EAAA14P,EAAAyX,EAAA2gP,EAAA,GAjCA,SAAA3gP,EAAAxiB,EAAAqjQ,GACA,IAMA5jQ,EAAA4K,EANAoJ,EAAA,EAAAzT,EAGA6N,EAAA2U,EAAA5iB,OAEA0jQ,EAAA,IAAA5/P,WADAmK,IAAA,GAGA,IAAApO,EAAA,EAAA4K,EAAA,EAAsB5K,EAAAoO,EAAWpO,IAAA,CACjC,IAAAikQ,EAAAlhP,EAAA/iB,GACA,GAAA2jQ,EAAAM,GAAA,CAIA,IAAAC,EACA,IAFAlkQ,IAEAA,EAAAoO,IAAAu1P,EAAAO,EAAAnhP,EAAA/iB,KACAA,IAEA,GAAAA,EAAAoO,EAAA,CACA,IAAAzQ,EAAAk3K,SAAAj1J,OAAAC,aAAAokP,EAAAC,GAAA,IACAL,EAAAj5P,KAAAjN,EAAAqW,GAAA,EACAA,EAnBA,OAmBArW,EAAAqW,GAlBA,MAkBA,QAGA,OAAAlU,MAAA7B,UAAAiC,MAAAiC,KAAA0hQ,EASA,EATAj5P,GAxBA,CAiCAmY,EAAA2gP,IAEArlQ,KAAA47L,wBACA57L,KAAAmI,SACAnI,KAAAkf,WAyOA,OAvOAkhP,EAAAxgQ,WACAkmQ,gBAAA,WACA9lQ,KAAA+lQ,WAEA,IADA,IAAAzoP,OACA,CACA,IAAAs3J,EAAA50K,KAAA+lQ,WACA,UAAAnxF,GAAA,MAAAA,GAAA,MAAAA,EACA,MAEAt3J,EAAAC,KAAAuhL,WAAAlqB,GAAA,IAEA,OAAAt3J,GAEA2tO,WAAA,WACA,IAAAr2E,EAAA50K,KAAA+lQ,WACA,OAAAjnE,WAAAlqB,GAAA,IAEAoxF,QAAA,WACA,IAAApxF,EAAA50K,KAAA+lQ,WACA,SAAAvvF,SAAA5B,GAAA,OAEAqxF,YAAA,WAEA,eADAjmQ,KAAA+lQ,WACA,KAEA7mP,SAAA,WACA,OAAAlf,KAAAihB,YAAAjhB,KAAAmI,OAAAnC,WAEA+/P,SAAA,WAGA,IAFA,IAAAvjP,KACA9U,EAAA1N,KAAAihB,cACA,CACA,QAAAvT,EACA,YAEA,GAAA8U,EACA,KAAA9U,GAAA,KAAAA,IACA8U,WAES,QAAA9U,EACT8U,UACS,OAAAld,EAAAgI,SAAAI,GACT,MAEAA,EAAA1N,KAAAkf,WAEA,GAAAumP,EAAA/3P,GAEA,OADA1N,KAAAkf,WACAqC,OAAAC,aAAA9T,GAEA,IAAAknK,EAAA,GACA,GACAA,GAAArzJ,OAAAC,aAAA9T,GACAA,EAAA1N,KAAAkf,iBACOxR,GAAA,OAAApI,EAAAgI,SAAAI,KAAA+3P,EAAA/3P,IACP,OAAAknK,GAEAsxF,gBAAA,SAAAvgQ,EAAAwgQ,GACA,WAAAA,EACAxgQ,EAEAsH,EAAAtH,EA7HA,KA6HAwgQ,IAEA3F,mBAAA,WACA,IAAAr4P,EAAAnI,KAAAmI,OACA49L,KACAytD,KACA4N,EAAAjiQ,OAAAe,OAAA,MACAkhQ,EAAA+E,MAAA,EAOA,IANA,IAKAvxF,EAAA9yK,EAAA4iB,EAAAyhP,EAAAzB,EALA0B,GACArgE,SACAytD,eACA73D,YAAqBylE,gBAGrB,QAAAxsF,EAAA50K,KAAA+lQ,aACA,SAAAnxF,EAIA,OADAA,EAAA50K,KAAA+lQ,YAEA,kBAKA,IAJA/lQ,KAAA+lQ,WACA/lQ,KAAA+lQ,WACA/lQ,KAAA+lQ,WACA/lQ,KAAA+lQ,WAGA,QADAnxF,EAAA50K,KAAA+lQ,aACA,QAAAnxF,GAGA,SAAAA,EAAA,CAGA,IAAA89D,EAAA1yO,KAAA+lQ,WACAjkQ,EAAA9B,KAAAgmQ,UACAhmQ,KAAA+lQ,WACArhP,EAAAvc,EAAArB,cAAAqB,EAAAtC,IAAA/D,GACAqkQ,EAAAC,EAAAzqE,WAAAylE,YAAA+E,MACAzB,EAAA1kQ,KAAAkmQ,gBAAAxhP,EAAAjgB,WAAA0hQ,GACAh+P,EAAAzB,KAAA5E,GACA9B,KAAAkf,WAEA,cADA01J,EAAA50K,KAAA+lQ,aAEA/lQ,KAAA+lQ,WAEAvS,EAAAj2O,MACAm1N,QACAgyB,YAGA,MACA,YAGA,IAFA1kQ,KAAAgmQ,UACAhmQ,KAAA+lQ,WACA,QAAA/lQ,KAAA+lQ,YAAA,CACA,IAAAxiP,EAAAvjB,KAAAgmQ,UACAlkQ,EAAA9B,KAAAgmQ,UACAhmQ,KAAA+lQ,WACArhP,EAAAvc,EAAArB,cAAAqB,EAAAtC,IAAA/D,GACAqkQ,EAAAC,EAAAzqE,WAAAylE,YAAA+E,MACAzB,EAAA1kQ,KAAAkmQ,gBAAAxhP,EAAAjgB,WAAA0hQ,GACAh+P,EAAAzB,KAAA5E,GACA9B,KAAAkf,WAEA,cADA01J,EAAA50K,KAAA+lQ,aAEA/lQ,KAAA+lQ,WAEAhgE,EAAAxiL,GAAAmhP,EAEA,MACA,iBACA,iBACA,kBACA,uBACA,IAAA2B,EAAArmQ,KAAA8lQ,kBACAO,EAAAvkQ,OAAA,GAAAukQ,EAAAvkQ,OAGA,MACA,gBACA,gBACAskQ,EAAAzqE,WAAAylE,YAAAxsF,GAAA50K,KAAA8lQ,kBACA,MACA,YACA,YACAM,EAAAzqE,WAAAylE,YAAAxsF,GAAA50K,KAAA8lQ,kBAAA,GACA,MACA,gBACA,YACA,eACA,gBACA,oBACA,sBACAM,EAAAzqE,WAAAylE,YAAAxsF,GAAA50K,KAAAirP,aACA,MACA,gBACAmb,EAAAzqE,WAAAylE,YAAAxsF,GAAA50K,KAAAimQ,cAIA,QAAAtkQ,EAAA,EAAqBA,EAAA6xP,EAAA1xP,OAAwBH,IAAA,CAC7C+wO,EAAA8gB,EAAA7xP,GAAA+wO,MACAgyB,EAAAlR,EAAA7xP,GAAA+iQ,QACA,IAAA4B,EAAA,IAAAhC,EACA5nD,EAAA4pD,EAAAtV,QAAA0T,EAAA3+D,EAAA/lM,KAAA47L,qBACA1J,EAAAo0E,EAAAp0E,OACAwqB,IACAxqB,GAAA,KAEAk0E,EAAA5S,YAAAj2O,MACA0hO,UAAAvM,EACAxyC,WAAAhO,EACA3hL,MAAA+1P,EAAA/1P,MACAi0P,IAAA8B,EAAA9B,IACA1kE,KAAAwmE,EAAAxmE,OAGA,OAAAsmE,GAEA/F,kBAAA,SAAA1kE,GAEA,IADA,IAAA/mB,EACA,QAAAA,EAAA50K,KAAA+lQ,aACA,SAAAnxF,EAIA,OADAA,EAAA50K,KAAA+lQ,YAEA,iBACA,IAAAhzP,EAAA/S,KAAA8lQ,kBACAnqE,EAAAsB,WAAAlqL,EACA,MACA,eACA,IACAqmK,EADAmtF,EAAAvmQ,KAAA+lQ,WAEA,WAAAvwF,KAAA+wF,GAEa,CACbntF,KACA,IAAA1xK,EAAA,EAAA8uK,SAAA+vF,EAAA,IACAvmQ,KAAA+lQ,WACA,QAAAx5P,EAAA,EAA6BA,EAAA7E,EAAU6E,IAAA,CAEvC,IADAqoK,EAAA50K,KAAA+lQ,WACA,QAAAnxF,GAAA,QAAAA,GAEA,WADAA,EAAA50K,KAAA+lQ,YAEA,OAGA,WAAAnxF,EACA,MAEA,IAAArxJ,EAAAvjB,KAAAgmQ,UACAhmQ,KAAA+lQ,WACA,IAAArzB,EAAA1yO,KAAA+lQ,WACA3sF,EAAA71J,GAAAmvN,EACA1yO,KAAA+lQ,iBApBA3sF,KAAA2hB,EAAAj/K,aAAAyqP,GAuBA5qE,EAAAkiE,gBAAAzkF,EACA,MACA,eACA,IAAA+jB,EAAAn9L,KAAA8lQ,kBACAnqE,EAAAyB,OAAAluL,KAAA2H,IAAAsmL,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAAnuL,KAAAC,IAAAguL,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,mBAMA8iE,EAzSA,GA2SA/gQ,EAAA+gQ,gDC1iBAjhQ,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA0xO,mBAAA1xO,EAAAo1O,eAEA,IAAAnvO,EAAYC,EAAQ,KAEpBslK,EAAkBtlK,EAAQ,KAE1BC,EAAkBD,EAAQ,KAE1BihQ,GACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEAtyB,EAAA,WACA,SAAAA,OACAnvO,EAAAgK,aAAA,uCAgCA,OA9BAmlO,EAAA70O,WACAonQ,WAAA,SAAAC,MACA3hQ,EAAAgK,aAAA,qCAAA23P,KAGAxyB,EAAAC,aAAA,SAAAF,EAAAzhO,EAAAtS,EAAA0R,EAAAknM,EAAAjnM,GACA,IAAAvP,KAAA2C,EAAAhB,UAAAgwO,KAAA3xO,KAAA2xO,EACAtwO,EAAArB,EAAA1C,IAAA,eACA,IACA,OAAA+D,GACA,KAAAsiQ,EAAAE,MACA,KAAAF,EAAAG,OACA,WAAAO,EAAAC,YAAAtkQ,EAAAkQ,EAAAtS,EAAA0R,EAAAC,GACA,KAAAo0P,EAAAI,eACA,KAAAJ,EAAAK,kBACA,KAAAL,EAAAM,iBACA,KAAAN,EAAAO,kBACA,WAAAG,EAAAE,KAAA5yB,EAAAzhO,EAAAtS,EAAA0R,EAAAC,GACA,QACA,UAAA9M,EAAAyD,YAAA,4BAAA7E,IAEK,MAAA0c,GACL,GAAAA,aAAAtb,EAAA6X,qBACA,MAAAyD,EAIA,OAFAy4L,EAAA/tL,KAAA,sBAA0C+wL,UAAA/2M,EAAAg3M,qBAAA+qD,oBAC1C/hQ,EAAA4O,MAAA0M,GACA,IAAAsmP,EAAAI,QAGA7yB,EAlCA,GAoCAyyB,GACAA,aAAA,MACAA,EAAAC,YAAA,WACA,SAAAA,EAAAtkQ,EAAAkQ,EAAAtS,EAAA0R,EAAAC,GACApS,KAAA+S,SACA/S,KAAAunQ,UAAA1kQ,EAAArB,SAAA,UACAxB,KAAAwnQ,YAAA3kQ,EAAA1C,IAAA,eACAH,KAAAkE,KAAA,UACA,IAAAgO,EAAArP,EAAA1C,IAAA,mBACA+R,EAAA24J,EAAAx7J,WAAA4C,MAAAC,EAAAzR,EAAA0R,EAAAC,GACApS,KAAAkS,KACA,IAAAu1P,EAAA,EACApzE,EAAA,EACA,GAAAxxL,EAAAP,IAAA,WACA,IAAAolQ,EAAA7kQ,EAAArB,SAAA,UACAimQ,EAAAC,EAAA,GACArzE,EAAAqzE,EAAA,GAEA,IAAAC,KACAC,KACA,GAAA/kQ,EAAAP,IAAA,WACA,IAAAulQ,EAAAhlQ,EAAArB,SAAA,UACAmmQ,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,KAAA7nQ,KAAAwnQ,cAAAhB,EAAAG,QAAAgB,GAAAC,GAAA,CACA,IAAAlqF,EAAA19K,KAAAunQ,UAAA,GACAxpF,EAAA/9K,KAAAunQ,UAAA,GACAO,EAAA9nQ,KAAAunQ,UAAA,GACAnlP,EAAApiB,KAAAunQ,UAAA,GACAr6E,EAAAltL,KAAAunQ,UAAA,GACAQ,EAAA/nQ,KAAAunQ,UAAA,GACAS,EAAA94P,KAAAoM,MAAAoiK,EAAAt7J,IAAAs7J,EAAAt7J,IAAA27J,EAAAmP,IAAAnP,EAAAmP,IACA46E,GAAAC,EAAAC,GAAAD,GAAAD,EAAAE,MACA1iQ,EAAA4O,MAAA,gCAGAlU,KAAA2nQ,cACA3nQ,KAAA4nQ,YACA,IAAAx4D,EAAAvsM,EAAA1C,IAAA,YACAyD,EAAAwO,EAAA61P,gBAAA74D,GACA8C,EAAA7d,EAAAozE,EACAS,EAAAh2D,EAAA,GACAi2D,EAAAnoQ,KAAAmoQ,cACA,GAAAV,GAAApzE,GAAA6zE,GAAA,KACA5iQ,EAAAkR,MAAA,2BADA,CAOA,IAHA,IAEAq2J,EAFAv0J,EAAA,IAAAzD,aAAA3C,EAAAnB,UACAq/G,EAAA,IAAAv7G,aAAA,GAEAlT,EAAA8lQ,EAAoB9lQ,GAAA0yL,EAAS1yL,GAAAumQ,EAAA,CAC7B93I,EAAA,GAAAzuH,EACAiC,EAAAwsH,EAAA,EAAA93G,EAAA,GACAu0J,EAAA36J,EAAA3C,OAAA+I,EAAA,GACA,IAAA8vP,EAAA9iQ,EAAA8C,KAAAigQ,WAAAx7F,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAs7F,EAAA5qP,OAAA5b,EAAA8lQ,GAAAv1D,EAAAk2D,IAEA,IAAAE,EAAA,cACAzlQ,EAAAP,IAAA,gBACAuqK,EAAA36J,EAAA3C,OAAA1M,EAAA1C,IAAA,iBACAmoQ,EAAAhjQ,EAAA8C,KAAAigQ,WAAAx7F,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA86F,IACAQ,EAAApxD,SAAA,EAAAuxD,IACAH,EAAA,OAAAjB,EAAAqB,cAEAX,IACAO,IAAArmQ,OAAA,OAAAolQ,EAAAqB,aACAJ,EAAA5qP,MAAA,EAAA+qP,KAEAtoQ,KAAAmoQ,cAmCA,OAjCAhB,EAAAvnQ,WACAklB,MAAA,WACA,IAEA5gB,EAAAs2N,EAAAC,EAAA+tC,EAAAV,EAFAP,EAAAvnQ,KAAAunQ,UACAC,EAAAxnQ,KAAAwnQ,YAEAA,IAAAhB,EAAAE,OACAlsC,GAAA+sC,EAAA,GAAAA,EAAA,IACA9sC,GAAA8sC,EAAA,GAAAA,EAAA,IACAiB,EAAA,KACAV,EAAA,KACA5jQ,EAAA,SACOsjQ,IAAAhB,EAAAG,QACPnsC,GAAA+sC,EAAA,GAAAA,EAAA,IACA9sC,GAAA8sC,EAAA,GAAAA,EAAA,IACAiB,EAAAjB,EAAA,GACAO,EAAAP,EAAA,GACArjQ,EAAA,aAEAoB,EAAAgK,aAAA,4BAAAk4P,GAEA,IAAAz0P,EAAA/S,KAAA+S,OACA,GAAAA,IACAynN,EAAAl1N,EAAA8C,KAAAqgQ,eAAAjuC,EAAAznN,GACA0nN,EAAAn1N,EAAA8C,KAAAqgQ,eAAAhuC,EAAA1nN,GACAy0P,IAAAhB,EAAAG,QAAA,CACA,IAAA5xP,EAAAzP,EAAA8C,KAAAsgQ,8BAAA31P,GACAy1P,GAAAzzP,EAAA,GACA+yP,GAAA/yP,EAAA,GAGA,qBAAA7Q,EAAAlE,KAAAmoQ,WAAA3tC,EAAAC,EAAA+tC,EAAAV,KAGAX,EAxGA,GA0GAD,EAAAE,KAAA,WACA,SAAAuB,EAAAxgQ,EAAAwd,GACA3lB,KAAAmI,SACAnI,KAAA2lB,UACA3lB,KAAA+G,OAAA,EACA/G,KAAAmH,aAAA,EACA,IAAA4J,EAAA4U,EAAA5U,SACA/Q,KAAA4oQ,YAAA,IAAA/zP,aAAA9D,GACA,IAAA83P,EAAAljP,EAAA0nN,WAAAt8N,SACA/Q,KAAA8oQ,cAAAnjP,EAAAojP,QAAA,IAAAl0P,aAAAg0P,GAAA7oQ,KAAA4oQ,YAEAD,EAAA/oQ,WACAopQ,cACA,GAAAhpQ,KAAAmI,OAAArC,IACA,OAAA9F,KAAAmI,OAAAtC,IAAA7F,KAAAmI,OAAArC,IAEA,GAAA9F,KAAAmH,aAAA,EACA,SAEA,IAAAkxN,EAAAr4N,KAAAmI,OAAAnC,UACA,QAAAqyN,EAAA,IAGAr4N,KAAA+G,OAAAsxN,EACAr4N,KAAAmH,aAAA,OAGAsH,SAAA,SAAA9H,GACA,IAAAI,EAAA/G,KAAA+G,OACAI,EAAAnH,KAAAmH,aACA,QAAAR,EAAA,CACA,OAAAQ,EACA,OAAAnH,KAAAmI,OAAAnC,WAAA,GAAAhG,KAAAmI,OAAAnC,WAAA,GAAAhG,KAAAmI,OAAAnC,WAAA,EAAAhG,KAAAmI,OAAAnC,aAAA,EAEAe,KAAA,GAAA/G,KAAAmI,OAAAnC,WAAA,GAAAhG,KAAAmI,OAAAnC,WAAA,EAAAhG,KAAAmI,OAAAnC,UACA,IAAAqyN,EAAAr4N,KAAAmI,OAAAnC,UAEA,OADAhG,KAAA+G,OAAAsxN,GAAA,GAAAlxN,GAAA,GACAJ,GAAA,EAAAI,GAAA,IAAAkxN,IAAAlxN,KAAA,EAEA,OAAAR,GAAA,IAAAQ,EACA,OAAAnH,KAAAmI,OAAAnC,UAEA,KAAAmB,EAAAR,GACAI,KAAA,EAAA/G,KAAAmI,OAAAnC,UACAmB,GAAA,EAKA,OAHAA,GAAAR,EACA3G,KAAAmH,eACAnH,KAAA+G,UAAA,GAAAI,GAAA,EACAJ,GAAAI,GAEA8hQ,MAAA,WACAjpQ,KAAA+G,OAAA,EACA/G,KAAAmH,aAAA,GAEA+hQ,SAAA,WACA,OAAAlpQ,KAAAyO,SAAAzO,KAAA2lB,QAAAwjP,cAEAC,eAAA,WACA,IAAAC,EAAArpQ,KAAA2lB,QAAA0jP,kBACA1jH,EAAA3lJ,KAAAyO,SAAA46P,GACAC,EAAAtpQ,KAAAyO,SAAA46P,GACAh1P,EAAArU,KAAA2lB,QAAAtR,OACAU,EAAAs0P,EAAA,UAAAA,GAAA,0BACA,OAAA1jH,EAAA5wI,GAAAV,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAi1P,EAAAv0P,GAAAV,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAEAk1P,eAAA,WAMA,IALA,IAAAx4P,EAAA/Q,KAAA2lB,QAAA5U,SACAoT,EAAAnkB,KAAA2lB,QAAAxB,iBACApP,EAAAoP,EAAA,UAAAA,GAAA,0BACA9P,EAAArU,KAAA2lB,QAAAtR,OACA6pK,EAAAl+K,KAAA4oQ,YACAjnQ,EAAA,EAAA4K,EAAA,EAA4B5K,EAAAoP,EAAcpP,IAAA4K,GAAA,GAC1C,IAAAi9P,EAAAxpQ,KAAAyO,SAAA0V,GACA+5J,EAAAv8K,GAAA6nQ,EAAAz0P,GAAAV,EAAA9H,EAAA,GAAA8H,EAAA9H,IAAA8H,EAAA9H,GAEA,IAAA+L,EAAAtY,KAAA8oQ,cAIA,OAHA9oQ,KAAA2lB,QAAAojP,SACA/oQ,KAAA2lB,QAAAojP,QAAA7qF,EAAA,EAAA5lK,EAAA,GAEAtY,KAAA2lB,QAAA0nN,WAAA99N,OAAA+I,EAAA,KA8DA,IAAAmxP,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,WAUA,IAAAx3F,KACA,gBAAAriK,GAIA,OAHAqiK,EAAAriK,KACAqiK,EAAAriK,GAZA,SAAAA,GAEA,IADA,IAAA85P,KACAloQ,EAAA,EAAqBA,GAAAoO,EAAYpO,IAAA,CACjC,IAAAsI,EAAAtI,EAAAoO,EACA+5P,EAAA,EAAA7/P,EACA4/P,EAAAtsP,KAAA,IAAA1I,cAAAi1P,MAAA,EAAA7/P,EAAA6/P,IAAA,EAAA7/P,IAAA6/P,EAAA7/P,SAEA,OAAA4/P,EAPA,CAYA95P,IAEAqiK,EAAAriK,IAfA,GAkBA,SAAAg6P,EAAAC,EAAAzmP,GACA,IAAA0mP,EAAAD,EAAAE,QAAA3mP,MACAje,EAAA0Y,QAAA,UAAAisP,EAAA/lQ,KAAA,gCACA,IAAAimQ,EAAAH,EAAAG,OACA1+P,EAAAu+P,EAAAv+P,OACA+7G,EAAAyiJ,EAAAE,OACAX,EAAAS,EAAAx+P,OACA2+P,EAAAl7P,KAAAC,IAAAg7P,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,QAAA2iJ,EAAA3iJ,EAAA,SACA6iJ,EAAAn7P,KAAAC,IAAAg7P,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,QAAA2iJ,EAAA3iJ,EAAA,SACA8iJ,EAAAp7P,KAAA2H,IAAAszP,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,QAAA2iJ,EAAA3iJ,EAAA,SACA+iJ,EAAAr7P,KAAA2H,IAAAszP,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,OAAA2iJ,EAAA3iJ,EAAA,QAAA2iJ,EAAA3iJ,EAAA,SACAgjJ,EAAAt7P,KAAA01J,MAAA0lG,EAAAF,GAAAT,GAAAK,EAAAx3D,OAAA,GAAAw3D,EAAAx3D,OAAA,KACAg4D,EAAAt7P,KAAA2H,IAAA4yP,EAAAv6P,KAAAC,IAAAu6P,EAAAc,IACA,IAAAC,EAAAv7P,KAAA01J,MAAA2lG,EAAAF,GAAAV,GAAAK,EAAAx3D,OAAA,GAAAw3D,EAAAx3D,OAAA,KACAi4D,EAAAv7P,KAAA2H,IAAA4yP,EAAAv6P,KAAAC,IAAAu6P,EAAAe,IAaA,IAZA,IAAAC,EAAAF,EAAA,EACAG,EAAA,IAAApiQ,YAAAkiQ,EAAA,GAAAC,GACAE,EAAA,IAAAriQ,YAAAkiQ,EAAA,GAAAC,GACAx/P,EAAA,EACA2/P,EAAA,IAAAjlQ,WAAA,GACAklQ,EAAA,IAAAllQ,WAAA,GACAosM,EAAAvmM,EAAA+9P,EAAA,IACAv3D,EAAAxmM,EAAA+9P,EAAA,IACAuB,EAAAt/P,EAAA+9P,EAAA,IACAwB,EAAAv/P,EAAA+9P,EAAA,IACAyB,EAAArB,EAAAa,GACAS,EAAAtB,EAAAY,GACApwF,EAAA,EAAqBA,GAAAqwF,EAAiBrwF,IAAA,CACtCywF,EAAA,IAAA74D,EAAA,IAAAy4D,EAAArwF,GAAA2wF,EAAA,GAAA3wF,GAAAqwF,EAAA,EACAI,EAAA,IAAA74D,EAAA,IAAAy4D,EAAArwF,GAAA2wF,EAAA,GAAA3wF,GAAAqwF,EAAA,EACAI,EAAA,IAAA74D,EAAA,IAAAy4D,EAAArwF,GAAA2wF,EAAA,GAAA3wF,GAAAqwF,EAAA,EACAK,EAAA,IAAA74D,EAAA,IAAAw4D,EAAArwF,GAAA4wF,EAAA,GAAA5wF,GAAAqwF,EAAA,EACAK,EAAA,IAAA74D,EAAA,IAAAw4D,EAAArwF,GAAA4wF,EAAA,GAAA5wF,GAAAqwF,EAAA,EACAK,EAAA,IAAA74D,EAAA,IAAAw4D,EAAArwF,GAAA4wF,EAAA,GAAA5wF,GAAAqwF,EAAA,EACA,QAAAlzC,EAAA,EAAuBA,GAAAizC,EAAiBjzC,IAAArsN,IACxC,OAAAkvK,OAAAqwF,GAAA,IAAAlzC,OAAAizC,EAAA,CAMA,IAHA,IAAA5vP,EAAA,EACA5E,EAAA,EACArH,EAAA,EACAhN,EAAA,EAAuBA,GAAA,EAAQA,IAC/B,QAAA4K,EAAA,EAAyBA,GAAA,EAAQA,IAAAoC,IAAA,CACjC,IAAAoH,EAAAk1P,EAAA7wF,GAAAz4K,GAAAupQ,EAAA3zC,GAAAhrN,GACAqO,GAAAuvP,EAAA3iJ,EAAA74G,IAAA,GAAAoH,EACAC,GAAAm0P,EAAA3iJ,EAAA74G,IAAA,GAAAoH,EAGA40P,EAAAz/P,GAAAi/P,EAAAroQ,OACAqoQ,EAAA5sP,MAAA3C,EAAA5E,IACA40P,EAAA1/P,GAAAO,EAAA3J,OACA,IAAAqpQ,EAAA,IAAAvlQ,WAAA,GACAulQ,EAAA,IAAAN,EAAA,IAAAL,EAAAjzC,GAAAuzC,EAAA,GAAAvzC,GAAAizC,EAAA,EACAW,EAAA,IAAAN,EAAA,IAAAL,EAAAjzC,GAAAuzC,EAAA,GAAAvzC,GAAAizC,EAAA,EACAW,EAAA,IAAAN,EAAA,IAAAL,EAAAjzC,GAAAuzC,EAAA,GAAAvzC,GAAAizC,EAAA,EACA/+P,EAAA8R,KAAA4tP,IAGAR,EAAA,GAAAnjJ,EAAA,GACAojJ,EAAA,GAAApB,EAAA,GACAmB,EAAAH,GAAAhjJ,EAAA,GACAojJ,EAAAJ,GAAAhB,EAAA,GACAmB,EAAAD,EAAAD,GAAAjjJ,EAAA,IACAojJ,EAAAF,EAAAD,GAAAjB,EAAA,GACAmB,EAAAD,EAAAD,EAAAD,GAAAhjJ,EAAA,IACAojJ,EAAAF,EAAAD,EAAAD,GAAAhB,EAAA,GACAQ,EAAAE,QAAA3mP,IACArf,KAAA,UACAimQ,OAAAQ,EACAl/P,OAAAm/P,EACAF,kBAuPA,SAAAU,EAAApB,GAKA,IAJA,IAAAziD,EAAAyiD,EAAAG,OAAA,MACA3iD,EAAAwiD,EAAAG,OAAA,MACA1jP,EAAA8gM,EACAmd,EAAAld,EACA7lN,EAAA,EAAAC,EAAAooQ,EAAAG,OAAAroQ,OAA4CH,EAAAC,EAAQD,IAAA,CACpD,IAAAiZ,EAAAovP,EAAAG,OAAAxoQ,GAAA,GACAqU,EAAAg0P,EAAAG,OAAAxoQ,GAAA,GACA4lN,IAAA3sM,IAAA2sM,EACAC,IAAAxxM,IAAAwxM,EACA/gM,IAAA7L,IAAA6L,EACAi+M,IAAA1uN,IAAA0uN,EAEAslC,EAAAx3D,QAAA+U,EAAAC,EAAA/gM,EAAAi+M,GAgCA,SAAA0iC,EAAAj/P,EAAA4K,EAAAtS,EAAA0R,EAAAC,GACA,OAAA5M,EAAAhB,UAAA2D,GACA,UAAA7C,EAAAyD,YAAA,6BAEA,IAAAlG,EAAAsF,EAAAtF,KACA7C,KAAA+S,SACA/S,KAAAwnQ,YAAA3kQ,EAAA1C,IAAA,eACAH,KAAAkE,KAAA,UACAlE,KAAAwkO,KAAA3hO,EAAArB,SAAA,QACA,IAAA0Q,EAAArP,EAAA1C,IAAA,mBACA+R,EAAA24J,EAAAx7J,WAAA4C,MAAAC,EAAAzR,EAAA0R,EAAAC,GACApS,KAAAkS,KACAlS,KAAAsoQ,WAAAzlQ,EAAAP,IAAA,cAAA4P,EAAA3C,OAAA1M,EAAA1C,IAAA,sBACA,IAAAivM,EAAAvsM,EAAA1C,IAAA,YACAyD,EAAAwrM,EAAAh9L,EAAA61P,gBAAA74D,GAAA,KACApvM,KAAAmqQ,UACAnqQ,KAAAyL,UACAzL,KAAAkqQ,WACA,IASAlxD,EAAA,IAAA2vD,EAAAxgQ,GARAkhQ,kBAAAxmQ,EAAA1C,IAAA,qBACAgkB,iBAAAthB,EAAA1C,IAAA,oBACAgpQ,YAAAtmQ,EAAA1C,IAAA,eACAkU,OAAAxR,EAAArB,SAAA,UACAunQ,QAAAnlQ,EACAypO,WAAAn7N,EACAnB,SAAAnN,EAAA,EAAAsO,EAAAnB,WAGAs6P,KACA,OAAArrQ,KAAAwnQ,aACA,KAAAhB,EAAAI,gBAxdA,SAAAoD,EAAAhxD,GAMA,IALA,IAAAmxD,EAAAH,EAAAG,OACA1+P,EAAAu+P,EAAAv+P,OACAsoM,KACAu3D,KACAC,EAAA,EACAvyD,EAAAgwD,SAAA,CACA,IAAAtuL,EAAAs+H,EAAAkwD,WACAsC,EAAAxyD,EAAAowD,iBACA9wP,EAAA0gM,EAAAuwD,iBACA,OAAAgC,EAAA,CACA,QAAA7wL,MAAA,GACA,UAAAp1E,EAAAyD,YAAA,sBAEA,OAAA2xE,GACA,OACA6wL,EAAA,EACA,MACA,OACAD,EAAA/tP,KAAA+tP,IAAAxpQ,OAAA,GAAAwpQ,IAAAxpQ,OAAA,IACAypQ,EAAA,EACA,MACA,OACAD,EAAA/tP,KAAA+tP,IAAAxpQ,OAAA,GAAAwpQ,IAAAxpQ,OAAA,IACAypQ,EAAA,EAGAx3D,EAAAx2L,KAAAm9D,GAEA4wL,EAAA/tP,KAAA4sP,EAAAroQ,QACAqoQ,EAAA5sP,KAAAiuP,GACA//P,EAAA8R,KAAAjF,GACAizP,IACAvyD,EAAAiwD,QAEAe,EAAAE,QAAA3sP,MACArZ,KAAA,YACAimQ,OAAA,IAAA5hQ,WAAA+iQ,GACA7/P,OAAA,IAAAlD,WAAA+iQ,KAtCA,CAydAtrQ,KAAAg5M,GACA,MACA,KAAAwtD,EAAAK,kBACA,IAAA6D,EAAA,EAAA7nQ,EAAA1C,IAAA,kBACA,GAAAuqQ,EAAA,EACA,UAAAplQ,EAAAyD,YAAA,2BArbA,SAAAihQ,EAAAhxD,EAAA0xD,GAIA,IAHA,IAAAP,EAAAH,EAAAG,OACA1+P,EAAAu+P,EAAAv+P,OACA6/P,KACAtyD,EAAAgwD,SAAA,CACA,IAAAwC,EAAAxyD,EAAAowD,iBACA9wP,EAAA0gM,EAAAuwD,iBACA+B,EAAA/tP,KAAA4sP,EAAAroQ,QACAqoQ,EAAA5sP,KAAAiuP,GACA//P,EAAA8R,KAAAjF,GAEA0xP,EAAAE,QAAA3sP,MACArZ,KAAA,UACAimQ,OAAA,IAAA5hQ,WAAA+iQ,GACA7/P,OAAA,IAAAlD,WAAA+iQ,GACAZ,mBAfA,CAubA1qQ,KAAAg5M,EAAA0xD,GACA,MACA,KAAAlE,EAAAM,kBAzUA,SAAAkD,EAAAhxD,GAKA,IAJA,IAAAmxD,EAAAH,EAAAG,OACA1+P,EAAAu+P,EAAAv+P,OACA6/P,EAAA,IAAA/iQ,WAAA,IACA2J,EAAA,IAAA3J,WAAA,GACAywM,EAAAgwD,SAAA,CACA,IAIArnQ,EAAAC,EAJA84E,EAAAs+H,EAAAkwD,WACA,QAAAxuL,MAAA,GACA,UAAAp1E,EAAAyD,YAAA,sBAGA,IAAAy+G,EAAA2iJ,EAAAroQ,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAA84E,EAAA,KAAwC/4E,EAAAC,EAAQD,IAChDwoQ,EAAA5sP,KAAAy7L,EAAAowD,kBAEA,IAIA10E,EAAAzC,EAAAwC,EAAAg3E,EAJAjC,EAAA/9P,EAAA3J,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAA84E,EAAA,IAAuC/4E,EAAAC,EAAQD,IAC/C8J,EAAA8R,KAAAy7L,EAAAuwD,kBAGA,OAAA7uL,GACA,OACA4wL,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,EACAt1G,EAAA,GAAAs3P,EAAA,EACAt3P,EAAA,GAAAs3P,EAAA,EACAt3P,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAs3P,EAAA,EACA,MACA,OACA90E,EAAA42E,EAAA,IACAr5E,EAAAq5E,EAAA,IACA72E,EAAA62E,EAAA,IACAG,EAAAH,EAAA,IACAA,EAAA,IAAAG,EACAH,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA72E,EACA62E,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAr5E,EACAq5E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA52E,EACA42E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACAktE,EAAAxiL,EAAA,GACA+/K,EAAA//K,EAAA,GACAA,EAAA,GAAA+/K,EACA//K,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAwiL,EACAxiL,EAAA,GAAAs3P,EAAA,EACA,MACA,OACA90E,EAAA42E,EAAA,IACAr5E,EAAAq5E,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAr5E,EACAq5E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA52E,EACA42E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACAktE,EAAAxiL,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAwiL,EACAxiL,EAAA,GAAAs3P,EAAA,EACA,MACA,OACA8B,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACAt1G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAs3P,EAAA,EAGA8B,EAAA,GAAAnB,EAAAroQ,OACAqoQ,EAAA5sP,QAAA,EAAA4sP,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,eAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,aACAA,EAAA,GAAAnB,EAAAroQ,OACAqoQ,EAAA5sP,QAAA,EAAA4sP,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,gBAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,cACAA,EAAA,GAAAnB,EAAAroQ,OACAqoQ,EAAA5sP,QAAA,EAAA4sP,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,eAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,aACAA,EAAA,IAAAnB,EAAAroQ,OACAqoQ,EAAA5sP,QAAA,EAAA4sP,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,eAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,UAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,YAAAnB,EAAAmB,EAAA,QAAAnB,EAAAmB,EAAA,WAAAnB,EAAAmB,EAAA,OAAAnB,EAAAmB,EAAA,aACAtB,EAAAE,QAAA3sP,MACArZ,KAAA,QACAimQ,OAAA,IAAA5hQ,WAAA+iQ,GACA7/P,OAAA,IAAAlD,WAAA2J,MAlHA,CA0UAlS,KAAAg5M,GACAqyD,KACA,MACA,KAAA7E,EAAAO,mBAvNA,SAAAiD,EAAAhxD,GAKA,IAJA,IAAAmxD,EAAAH,EAAAG,OACA1+P,EAAAu+P,EAAAv+P,OACA6/P,EAAA,IAAA/iQ,WAAA,IACA2J,EAAA,IAAA3J,WAAA,GACAywM,EAAAgwD,SAAA,CACA,IAIArnQ,EAAAC,EAJA84E,EAAAs+H,EAAAkwD,WACA,QAAAxuL,MAAA,GACA,UAAAp1E,EAAAyD,YAAA,sBAGA,IAAAy+G,EAAA2iJ,EAAAroQ,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAA84E,EAAA,MAAyC/4E,EAAAC,EAAQD,IACjDwoQ,EAAA5sP,KAAAy7L,EAAAowD,kBAEA,IAIA10E,EAAAzC,EAAAwC,EAAAg3E,EAJAjC,EAAA/9P,EAAA3J,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAA84E,EAAA,IAAuC/4E,EAAAC,EAAQD,IAC/C8J,EAAA8R,KAAAy7L,EAAAuwD,kBAGA,OAAA7uL,GACA,OACA4wL,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,IAAA9jJ,EAAA,GACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,EACAt1G,EAAA,GAAAs3P,EAAA,EACAt3P,EAAA,GAAAs3P,EAAA,EACAt3P,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAs3P,EAAA,EACA,MACA,OACA90E,EAAA42E,EAAA,IACAr5E,EAAAq5E,EAAA,IACA72E,EAAA62E,EAAA,IACAG,EAAAH,EAAA,IACAA,EAAA,IAAAG,EACAH,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA72E,EACA62E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,GACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAr5E,EACAq5E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA52E,EACA42E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACAktE,EAAAxiL,EAAA,GACA+/K,EAAA//K,EAAA,GACAA,EAAA,GAAA+/K,EACA//K,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAwiL,EACAxiL,EAAA,GAAAs3P,EAAA,EACA,MACA,OACA90E,EAAA42E,EAAA,IACAr5E,EAAAq5E,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,GACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAr5E,EACAq5E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA52E,EACA42E,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACAktE,EAAAxiL,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAwiL,EACAxiL,EAAA,GAAAs3P,EAAA,EACA,MACA,OACA8B,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,IAAA9jJ,EAAA,GACA8jJ,EAAA,IAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,GACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACA8jJ,EAAA,GAAA9jJ,EAAA,EACAt1G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAs3P,EACAt3P,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAs3P,EAAA,EAGAQ,EAAAE,QAAA3sP,MACArZ,KAAA,QACAimQ,OAAA,IAAA5hQ,WAAA+iQ,GACA7/P,OAAA,IAAAlD,WAAA2J,MA1HA,CAwNAlS,KAAAg5M,GACAqyD,KACA,MACA,WACA/lQ,EAAAgK,aAAA,0BAGA,GAAA+7P,EAAA,CACAD,EAAAprQ,MACA,QAAA2B,EAAA,EAAAC,EAAA5B,KAAAkqQ,QAAApoQ,OAA+CH,EAAAC,EAAQD,IACvDooQ,EAAA/pQ,KAAA2B,GAGAypQ,EAAAprQ,MAxFA,SAAAgqQ,GACA,IAAAroQ,EAAAC,EAAA2K,EAAAsiK,EACAs7F,EAAAH,EAAAG,OACAuB,EAAA,IAAA72P,aAAA,EAAAs1P,EAAAroQ,QACA,IAAAH,EAAA,EAAA4K,EAAA,EAAA3K,EAAAuoQ,EAAAroQ,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAgqQ,EAAAxB,EAAAxoQ,GACA+pQ,EAAAn/P,KAAAo/P,EAAA,GACAD,EAAAn/P,KAAAo/P,EAAA,GAEA3B,EAAAG,OAAAuB,EACA,IAAAjgQ,EAAAu+P,EAAAv+P,OACAmgQ,EAAA,IAAAhmQ,WAAA,EAAA6F,EAAA3J,QACA,IAAAH,EAAA,EAAA4K,EAAA,EAAA3K,EAAA6J,EAAA3J,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAuK,EAAAT,EAAA9J,GACAiqQ,EAAAr/P,KAAAL,EAAA,GACA0/P,EAAAr/P,KAAAL,EAAA,GACA0/P,EAAAr/P,KAAAL,EAAA,GAEA89P,EAAAv+P,OAAAmgQ,EACA,IAAA1B,EAAAF,EAAAE,QACA,IAAAvoQ,EAAA,EAAAC,EAAAsoQ,EAAApoQ,OAAoCH,EAAAC,EAAQD,IAAA,CAC5C,IAAAsoQ,EAAAC,EAAAvoQ,GACA2pQ,EAAArB,EAAAE,OACAj4P,EAAA+3P,EAAAx+P,OACA,IAAAc,EAAA,EAAAsiK,EAAAy8F,EAAAxpQ,OAAiCyK,EAAAsiK,EAAQtiK,IACzC++P,EAAA/+P,IAAA,EACA2F,EAAA3F,IAAA,GA1BA,CAyFAvM,MAOA,OALAonQ,EAAAxnQ,WACAklB,MAAA,WACA,cAAA9kB,KAAAwnQ,YAAAxnQ,KAAAmqQ,OAAAnqQ,KAAAyL,OAAAzL,KAAAkqQ,QAAAlqQ,KAAAwyM,OAAAxyM,KAAA+S,OAAA/S,KAAAwkO,KAAAxkO,KAAAsoQ,cAGAlB,EA/kBA,GAilBAF,EAAAI,MAAA,WACA,SAAAA,IACAtnQ,KAAAkE,KAAA,UAOA,OALAojQ,EAAA1nQ,WACAklB,MAAA,WACA,kBAGAwiP,EATA,GAuBAjoQ,EAAAo1O,UACAp1O,EAAA0xO,mBAbA,SAAAxlN,EAAA1oB,EAAAmmB,GACA,IAAAjW,EAAAlQ,EAAArB,SAAA,UACAgjO,EAAAl/N,EAAA8C,KAAAu7N,cAAA9gO,EAAArB,SAAA,SACAqqQ,EAAAhpQ,EAAA1C,IAAA,SACA2rQ,EAAAjpQ,EAAA1C,IAAA,SACA4rQ,EAAAlpQ,EAAA1C,IAAA,aACA6rQ,EAAAnpQ,EAAA1C,IAAA,cACA,GAAAqkO,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,MACA,UAAAl/N,EAAAyD,YAAA,4CAAAy7N,EAAA,MAEA,uBAAAx7M,EAAAuC,EAAAxY,EAAAyxN,EAAAqnC,EAAAC,EAAAC,EAAAC,sCC1wBA7sQ,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAu8O,YAEA,IAAAt2O,EAAYC,EAAQ,KAEpB0mQ,GAAA,moCACAC,GAAA,mzCACA,SAAAC,EAAAxqQ,GACA,aAAAA,GAEA,SAAAyqQ,EAAAzqQ,GACA,aAAAA,GAEA,SAAA0qQ,EAAAriG,EAAAtkK,EAAApG,GACA,QAAAiN,EAAA7G,EAAAmpK,EAAA7E,EAAAloK,OAAsCyK,EAAAsiK,IAAQtiK,EAC9C,GAAAy9J,EAAAz9J,KAAAjN,EACA,OAAAiN,EAGA,OAAAA,EAEA,SAAA+/P,EAAAtiG,EAAAtkK,EAAAI,EAAAxG,GACA,QAAAiN,EAAA7G,EAAqB6G,EAAAzG,IAASyG,EAC9By9J,EAAAz9J,GAAAjN,EAGA,SAAAitQ,EAAAviG,EAAAtkK,EAAAI,GACA,QAAAnE,EAAA+D,EAAA6G,EAAAzG,EAAA,EAAkCnE,EAAA4K,IAAO5K,IAAA4K,EAAA,CACzC,IAAAigQ,EAAAxiG,EAAAroK,GACAqoK,EAAAroK,GAAAqoK,EAAAz9J,GACAy9J,EAAAz9J,GAAAigQ,GAGA,SAAAC,EAAArpQ,EAAAspQ,EAAA1zB,GACA,OACA51O,MACAy4O,IAAA7C,EAAA,MAAA0zB,EAAA,aAGA,IAAAp/D,KACAzK,KAkMAxjM,EAAAu8O,KAjMA,SAAAx4O,EAAAupQ,EAAA3zB,GACA,IAAA0zB,KACAE,EAAAxpQ,EAAAtB,OACA,OAAA8qQ,GAAA5zB,EACA,OAAAyzB,EAAArpQ,EAAAspQ,EAAA1zB,GAEA1rC,EAAAxrM,OAAA8qQ,EACA/pE,EAAA/gM,OAAA8qQ,EACA,IACAjrQ,EAAAC,EADAirQ,EAAA,EAEA,IAAAlrQ,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAAA,CAC5B2rM,EAAA3rM,GAAAyB,EAAA+kL,OAAAxmL,GACA,IAAAw+O,EAAA/8O,EAAAoS,WAAA7T,GACAmrQ,EAAA,IACA3sB,GAAA,IACA2sB,EAAAb,EAAA9rB,GACK,MAAAA,MAAA,KACL2sB,EAAA,IACK,MAAA3sB,MAAA,MACL2sB,EAAAZ,EAAA,IAAA/rB,QAEA76O,EAAA4O,MAAA,mCAAAisO,EAAAh9O,SAAA,KAEK,MAAAg9O,MAAA,OACL2sB,EAAA,MAEA,MAAAA,GAAA,OAAAA,GAAA,OAAAA,GACAD,IAEAhqE,EAAAlhM,GAAAmrQ,EAEA,OAAAD,EAEA,OAAAJ,EAAArpQ,EADAspQ,OAGA,IAAAC,IACAE,EAAAD,EAAA,IACAF,KACAC,EAAA,IAEAD,KACAC,EAAA,IAGA,IAAA9+E,KACA,IAAAlsL,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAC5BksL,EAAAlsL,GAAAgrQ,EAEA,IAYA1iQ,EAZAgS,EAAAkwP,EAAAQ,GAAA,QACAI,EAAA9wP,EACA+wP,EAAAD,EACAE,EAAAF,EACA,IAAAprQ,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAC5B,QAAAkhM,EAAAlhM,GACAkhM,EAAAlhM,GAAAsrQ,EAEAA,EAAApqE,EAAAlhM,GAKA,IAFAsrQ,EAAAF,EAEAprQ,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAE5B,QADAsI,EAAA44L,EAAAlhM,IAEAkhM,EAAAlhM,GAAA,OAAAsrQ,EAAA,UACK,MAAAhjQ,GAAA,MAAAA,GAAA,OAAAA,IACLgjQ,EAAAhjQ,GAGA,IAAAtI,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAE5B,QADAsI,EAAA44L,EAAAlhM,MAEAkhM,EAAAlhM,GAAA,KAGA,IAAAA,EAAA,EAAaA,EAAAirQ,EAAA,IAAmBjrQ,EAChC,OAAAkhM,EAAAlhM,IAAA,OAAAkhM,EAAAlhM,EAAA,WAAAkhM,EAAAlhM,EAAA,KACAkhM,EAAAlhM,GAAA,MAEA,OAAAkhM,EAAAlhM,IAAA,OAAAkhM,EAAAlhM,EAAA,WAAAkhM,EAAAlhM,EAAA,IAAAkhM,EAAAlhM,EAAA,KAAAkhM,EAAAlhM,EAAA,KACAkhM,EAAAlhM,GAAAkhM,EAAAlhM,EAAA,IAGA,IAAAA,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAC5B,UAAAkhM,EAAAlhM,GAAA,CACA,IAAA4K,EACA,IAAAA,EAAA5K,EAAA,EAAqB4K,GAAA,GACrB,OAAAs2L,EAAAt2L,KAD6BA,EAI7Bs2L,EAAAt2L,GAAA,KAEA,IAAAA,EAAA5K,EAAA,EAAqB4K,EAAAqgQ,GACrB,OAAA/pE,EAAAt2L,KADoCA,EAIpCs2L,EAAAt2L,GAAA,KAIA,IAAA5K,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAE5B,QADAsI,EAAA44L,EAAAlhM,KACA,OAAAsI,GAAA,OAAAA,GAAA,OAAAA,IACA44L,EAAAlhM,GAAA,MAIA,IADAsrQ,EAAAF,EACAprQ,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAE5B,QADAsI,EAAA44L,EAAAlhM,IAEAkhM,EAAAlhM,GAAA,MAAAsrQ,EAAA,SACK,MAAAhjQ,GAAA,MAAAA,IACLgjQ,EAAAhjQ,GAGA,IAAAtI,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAC5B,UAAAkhM,EAAAlhM,GAAA,CACA,IAAAmE,EAAAumQ,EAAAxpE,EAAAlhM,EAAA,QACAurQ,EAAAH,EACAprQ,EAAA,IACAurQ,EAAArqE,EAAAlhM,EAAA,IAEA,IAAAwrQ,EAAAH,EACAlnQ,EAAA,EAAA8mQ,IACAO,EAAAtqE,EAAA/8L,EAAA,IAEA,MAAAonQ,IACAA,EAAA,KAEA,MAAAC,IACAA,EAAA,KAEAD,IAAAC,GACAb,EAAAzpE,EAAAlhM,EAAAmE,EAAAonQ,GAEAvrQ,EAAAmE,EAAA,EAGA,IAAAnE,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAC5B,OAAAkhM,EAAAlhM,KACAkhM,EAAAlhM,GAAAsa,GAGA,IAAAta,EAAA,EAAaA,EAAAirQ,IAAejrQ,EAC5BsI,EAAA44L,EAAAlhM,GACAyqQ,EAAAv+E,EAAAlsL,IACA,MAAAsI,EACA4jL,EAAAlsL,IAAA,EACO,OAAAsI,GAAA,OAAAA,IACP4jL,EAAAlsL,IAAA,GAGA,MAAAsI,GAAA,OAAAA,GAAA,OAAAA,IACA4jL,EAAAlsL,IAAA,GAIA,IAEAmsL,EAFAs/E,GAAA,EACAC,EAAA,GAEA,IAAA1rQ,EAAA,EAAAC,EAAAisL,EAAA/rL,OAAiCH,EAAAC,IAAQD,EAEzCyrQ,GADAt/E,EAAAD,EAAAlsL,MAEAyrQ,EAAAt/E,GAEAu/E,EAAAv/E,GAAAq+E,EAAAr+E,KACAu/E,EAAAv/E,GAGA,IAAAA,EAAAs/E,EAA4Bt/E,GAAAu/E,IAAyBv/E,EAAA,CACrD,IAAApoL,GAAA,EACA,IAAA/D,EAAA,EAAAC,EAAAisL,EAAA/rL,OAAmCH,EAAAC,IAAQD,EAC3CksL,EAAAlsL,GAAAmsL,EACApoL,GAAA,IACA6mQ,EAAAj/D,EAAA5nM,EAAA/D,GACA+D,GAAA,GAEOA,EAAA,IACPA,EAAA/D,GAGA+D,GAAA,GACA6mQ,EAAAj/D,EAAA5nM,EAAAmoL,EAAA/rL,QAGA,IAAAH,EAAA,EAAAC,EAAA0rM,EAAAxrM,OAAgCH,EAAAC,IAAQD,EAAA,CACxC,IAAA+L,EAAA4/L,EAAA3rM,GACA,MAAA+L,GAAA,MAAAA,IACA4/L,EAAA3rM,GAAA,IAGA,OAAA8qQ,EAAAn/D,EAAArrL,KAAA,IAAAyqP,sCC1OAvtQ,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAmiP,kBAEA,IAAAl8O,EAAYC,EAAQ,KAEpBi8O,KAAAl8O,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAAqjQ,QAAA,IACArjQ,EAAA,oBACAA,EAAA,2BACAA,EAAA,uBACAA,EAAAi9L,WAAA,EAAA5hM,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,KACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA,qBAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,IACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA,4BAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,IACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA,wBAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,KACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAAzK,QAAA,EAAA8F,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAA8xI,UAAA,IACA9xI,EAAAguG,WAAA,IACAhuG,EAAAmwE,YAAA,IACAnwE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA29H,SAAA,IACA39H,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA8pD,aAAA,IACA9pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAA0iG,MAAA,IACA1iG,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAA85D,UAAA,IACA95D,EAAA8jB,MAAA,IACA9jB,EAAAglB,KAAA,IACAhlB,EAAA6mB,IAAA,IACA7mB,EAAAioB,MAAA,IACAjoB,EAAAksB,QAAA,IACAlsB,EAAAo+B,IAAA,IACAp+B,EAAAmuB,MAAA,IACAnuB,EAAA2sB,IAAA,IACA3sB,EAAAwzB,KAAA,IACAxzB,EAAA+jI,OAAA,IACA/jI,EAAAk1B,MAAA,IACAl1B,EAAAy2B,OAAA,IACAz2B,EAAAs4B,GAAA,IACAt4B,EAAA05B,GAAA,IACA15B,EAAA48B,QAAA,IACA58B,EAAAs+B,GAAA,IACAt+B,EAAA0lC,MAAA,IACA1lC,EAAA6/B,IAAA,IACA7/B,EAAAskC,MAAA,IACAtkC,EAAA6kC,IAAA,IACA7kC,EAAAopC,QAAA,IACAppC,EAAA+2H,OAAA,IACA/2H,EAAAs8B,MAAA,IACAt8B,EAAA4rC,GAAA,IACA5rC,EAAAy+B,IAAA,IACAz+B,EAAAmuC,KAAA,IACAnuC,EAAAmxD,YAAA,IACAnxD,EAAA6jI,UAAA,IACA7jI,EAAAwxD,aAAA,IACAxxD,EAAAi8G,cAAA,IACAj8G,EAAAwxI,WAAA,IACAxxI,EAAAqlH,UAAA,IACArlH,EAAA+jD,MAAA,IACA/jD,EAAAqtD,KAAA,IACArtD,EAAAi2D,IAAA,IACAj2D,EAAAsiE,MAAA,IACAtiE,EAAAotE,QAAA,IACAptE,EAAAy8G,IAAA,IACAz8G,EAAAyI,MAAA,IACAzI,EAAA4uE,IAAA,IACA5uE,EAAAotF,KAAA,IACAptF,EAAA08G,KAAA,IACA18G,EAAA4xF,MAAA,IACA5xF,EAAAw4F,OAAA,IACAx4F,EAAAokG,GAAA,IACApkG,EAAAwtG,GAAA,IACAxtG,EAAA8yG,QAAA,IACA9yG,EAAAu9G,GAAA,IACAv9G,EAAA8jI,MAAA,IACA9jI,EAAAooH,IAAA,IACApoH,EAAA82H,MAAA,IACA92H,EAAAs/H,IAAA,IACAt/H,EAAAmyI,QAAA,IACAnyI,EAAAuyG,OAAA,IACAvyG,EAAAsyG,MAAA,IACAtyG,EAAA07I,GAAA,IACA17I,EAAAwgH,IAAA,IACAxgH,EAAAmlJ,KAAA,IACAnlJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAu3H,QAAA,IACAv3H,EAAAktB,KAAA,IACAltB,EAAAqpC,SAAA,IACArpC,EAAA+iG,OAAA,IACA/iG,EAAAu6F,UAAA,IACAv6F,EAAA02E,SAAA,IACA12E,EAAAqsF,SAAA,IACArsF,EAAAy0E,OAAA,IACAz0E,EAAAi4D,KAAA,IACAj4D,EAAAijE,QAAA,IACAjjE,EAAAygF,MAAA,IACAzgF,EAAA+6H,MAAA,IACA/6H,EAAA0mD,UAAA,KACA1mD,EAAA6nD,UAAA,IACA7nD,EAAAyoD,QAAA,IACAzoD,EAAAkoD,WAAA,IACAloD,EAAAonD,UAAA,IACApnD,EAAA+hE,OAAA,IACA/hE,EAAA2+G,UAAA,IACA3+G,EAAAswH,OAAA,IACAtwH,EAAA+7E,aAAA,IACA/7E,EAAAglG,SAAA,IACAhlG,EAAAugH,aAAA,IACAvgH,EAAAo5G,YAAA,IACAp5G,EAAA2yD,OAAA,IACA3yD,EAAA4jE,OAAA,IACA5jE,EAAAusG,SAAA,IACAvsG,EAAA0tE,YAAA,IACA1tE,EAAAgmD,YAAA,IACAhmD,EAAAurE,SAAA,IACAvrE,EAAAipD,YAAA,IACAjpD,EAAA4nD,aAAA,IACA5nD,EAAA+zD,eAAA,IACA/zD,EAAA6jD,MAAA,IACA7jD,EAAA2yB,SAAA,IACA3yB,EAAA4/B,SAAA,IACA5/B,EAAAs4I,YAAA,IACAt4I,EAAAo3D,eAAA,IACAp3D,EAAAs3D,WAAA,IACAt3D,EAAAisE,SAAA,IACAjsE,EAAA6sF,aAAA,IACA7sF,EAAA6xI,MAAA,IACA7xI,EAAAqgH,eAAA,IACArgH,EAAA+mH,eAAA,IACA/mH,EAAAgtG,UAAA,IACAhtG,EAAAogH,aAAA,IACApgH,EAAA8mH,aAAA,IACA9mH,EAAAkrE,QAAA,IACAlrE,EAAAqsG,WAAA,IACArsG,EAAA4kD,MAAA,IACA5kD,EAAAq7E,SAAA,IACAr7E,EAAAknH,cAAA,IACAlnH,EAAAo8D,eAAA,IACAp8D,EAAA+pI,eAAA,IACA/pI,EAAAggH,QAAA,IACAhgH,EAAAolH,QAAA,IACAplH,EAAA0lE,QAAA,IACA1lE,EAAAm8F,WAAA,IACAn8F,EAAAk8F,WAAA,IACAl8F,EAAAq8F,UAAA,IACAr8F,EAAA+mD,aAAA,KACA/mD,EAAAinD,aAAA,IACAjnD,EAAAmnD,WAAA,IACAnnD,EAAAknD,cAAA,IACAlnD,EAAAgnD,aAAA,IACAhnD,EAAA28F,QAAA,IACA38F,EAAAilD,UAAA,IACAjlD,EAAAinH,aAAA,IACAjnH,EAAAm8D,cAAA,IACAn8D,EAAA8pI,cAAA,IACA9pI,EAAAg+H,UAAA,IACAh+H,EAAAw4G,YAAA,IACAx4G,EAAAm4G,YAAA,IACAn4G,EAAAk4G,YAAA,IACAl4G,EAAAuxD,cAAA,IACAvxD,EAAAqxD,cAAA,IACArxD,EAAAoxD,cAAA,IACApxD,EAAA0wD,YAAA,IACA1wD,EAAAuwD,aAAA,IACAvwD,EAAAswD,YAAA,IACAtwD,EAAAowD,QAAA,IACApwD,EAAAklD,WAAA,IACAllD,EAAAusF,SAAA,IACAvsF,EAAA4sF,WAAA,IACA5sF,EAAA0sF,WAAA,IACA1sF,EAAAysF,WAAA,IACAzsF,EAAAk5G,aAAA,IACAl5G,EAAA64G,aAAA,IACA74G,EAAA44G,aAAA,IACA54G,EAAA4xD,eAAA,IACA5xD,EAAA0xD,eAAA,IACA1xD,EAAAyxD,eAAA,IACAzxD,EAAAixD,aAAA,IACAjxD,EAAA8wD,cAAA,IACA9wD,EAAA6wD,aAAA,IACA7wD,EAAA8lD,MAAA,MAEA9lD,EAAA,kBAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,IACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA,iBAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,IACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA,uBAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,IACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA,mBAAA3E,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA4vE,OAAA,IACA5vE,EAAAikH,SAAA,IACAjkH,EAAAguG,WAAA,IACAhuG,EAAA0kE,OAAA,IACA1kE,EAAAo7G,QAAA,IACAp7G,EAAAmkD,UAAA,IACAnkD,EAAA2kH,WAAA,IACA3kH,EAAAg4G,UAAA,IACAh4G,EAAA04G,WAAA,IACA14G,EAAA2pD,SAAA,IACA3pD,EAAAw+G,KAAA,IACAx+G,EAAA+4D,MAAA,IACA/4D,EAAAylF,OAAA,IACAzlF,EAAAw7G,OAAA,IACAx7G,EAAA25H,MAAA,IACA35H,EAAAmkJ,KAAA,IACAnkJ,EAAAizG,IAAA,IACAjzG,EAAAgtI,IAAA,IACAhtI,EAAAolI,MAAA,IACAplI,EAAAg1E,KAAA,IACAh1E,EAAAmzE,KAAA,IACAnzE,EAAAm4H,IAAA,IACAn4H,EAAAkyH,MAAA,IACAlyH,EAAAmpE,MAAA,IACAnpE,EAAA+oG,KAAA,IACA/oG,EAAAw4D,MAAA,IACAx4D,EAAA0xH,UAAA,IACA1xH,EAAAs6F,KAAA,IACAt6F,EAAAstE,MAAA,IACAttE,EAAA87E,QAAA,IACA97E,EAAAyjH,SAAA,IACAzjH,EAAAoqD,GAAA,IACApqD,EAAAwM,EAAA,IACAxM,EAAAwO,EAAA,IACAxO,EAAAyO,EAAA,IACAzO,EAAAmnB,EAAA,IACAnnB,EAAAqpB,EAAA,IACArpB,EAAAstB,EAAA,IACAttB,EAAAsM,EAAA,IACAtM,EAAA6vB,EAAA,IACA7vB,EAAAqxB,EAAA,IACArxB,EAAAk0B,EAAA,IACAl0B,EAAA00B,EAAA,IACA10B,EAAA2M,EAAA,IACA3M,EAAAmR,EAAA,IACAnR,EAAAoR,EAAA,IACApR,EAAA25B,EAAA,IACA35B,EAAA69B,EAAA,IACA79B,EAAA4+B,EAAA,IACA5+B,EAAAg/B,EAAA,IACAh/B,EAAAqgC,EAAA,IACArgC,EAAA4kC,EAAA,IACA5kC,EAAA6mC,EAAA,IACA7mC,EAAAoqC,EAAA,IACApqC,EAAA8qC,EAAA,IACA9qC,EAAA6O,EAAA,IACA7O,EAAA8O,EAAA,IACA9O,EAAA+O,EAAA,IACA/O,EAAAmxD,YAAA,IACAnxD,EAAAyrD,UAAA,IACAzrD,EAAAwxD,aAAA,IACAxxD,EAAAkpD,YAAA,IACAlpD,EAAAwxI,WAAA,IACAxxI,EAAAwkH,UAAA,IACAxkH,EAAAkO,EAAA,IACAlO,EAAAb,EAAA,IACAa,EAAAiC,EAAA,IACAjC,EAAAw9D,EAAA,IACAx9D,EAAAgS,EAAA,IACAhS,EAAAywE,EAAA,IACAzwE,EAAA2L,EAAA,IACA3L,EAAA+c,EAAA,IACA/c,EAAAtI,EAAA,IACAsI,EAAAsC,EAAA,IACAtC,EAAAiB,EAAA,IACAjB,EAAAw3F,EAAA,IACAx3F,EAAA8L,EAAA,IACA9L,EAAAtD,EAAA,IACAsD,EAAAgvG,EAAA,IACAhvG,EAAA4C,EAAA,IACA5C,EAAA0E,EAAA,IACA1E,EAAA0L,EAAA,IACA1L,EAAAktH,EAAA,IACAltH,IAAA,IACAA,EAAA0uI,EAAA,IACA1uI,EAAAhG,EAAA,IACAgG,EAAA8c,EAAA,IACA9c,EAAA2Q,EAAA,IACA3Q,EAAA+L,EAAA,IACA/L,EAAAkiJ,EAAA,IACAliJ,EAAAqwD,UAAA,IACArwD,EAAAisD,IAAA,IACAjsD,EAAA4wD,WAAA,IACA5wD,EAAAopD,WAAA,IACAppD,EAAA+vE,WAAA,IACA/vE,EAAA40D,KAAA,IACA50D,EAAAm9H,SAAA,IACAn9H,EAAA02E,SAAA,IACA12E,EAAAk+I,IAAA,IACAl+I,EAAAy0E,OAAA,IACAz0E,EAAAwwH,QAAA,IACAxwH,EAAAm9D,SAAA,IACAn9D,EAAA8kH,YAAA,IACA9kH,EAAAmkH,aAAA,IACAnkH,EAAAy8E,cAAA,IACAz8E,EAAA28E,cAAA,IACA38E,EAAA48E,eAAA,IACA58E,EAAA6xE,GAAA,IACA7xE,EAAAw0E,GAAA,IACAx0E,EAAAosE,OAAA,IACApsE,EAAAk+D,OAAA,IACAl+D,EAAAm+D,UAAA,IACAn+D,EAAA07G,eAAA,IACA17G,EAAA83G,UAAA,IACA93G,EAAA2yD,OAAA,IACA3yD,EAAA6kH,eAAA,IACA7kH,EAAAkkH,aAAA,IACAlkH,EAAAukH,cAAA,IACAvkH,EAAA08E,eAAA,IACA18E,EAAAurE,SAAA,IACAvrE,EAAAk8G,YAAA,IACAl8G,EAAA4jH,aAAA,IACA5jH,EAAAs7E,MAAA,IACAt7E,EAAA0wC,MAAA,IACA1wC,EAAA03D,WAAA,IACA13D,EAAAqnI,MAAA,IACArnI,EAAAw9F,OAAA,IACAx9F,EAAA6xD,MAAA,IACA7xD,EAAAklE,UAAA,IACAllE,EAAAmjE,SAAA,IACAnjE,EAAAiqH,KAAA,IACAjqH,EAAA00D,QAAA,IACA10D,EAAAslF,aAAA,IACAtlF,EAAA8wG,OAAA,IACA9wG,EAAA4zD,MAAA,IACA5zD,EAAA6rE,OAAA,IACA7rE,EAAAyhB,GAAA,IACAzhB,EAAAo1G,YAAA,IACAp1G,EAAAw3B,OAAA,IACAx3B,EAAAm9B,OAAA,IACAn9B,EAAA45B,GAAA,IACA55B,EAAAq1G,aAAA,IACAr1G,EAAA0xC,GAAA,IACA1xC,EAAAulE,SAAA,IACAvlE,EAAA68F,OAAA,IACA78F,EAAAy1G,OAAA,IACAz1G,EAAA4wG,GAAA,IACA5wG,EAAA04E,WAAA,IACA14E,EAAAkyB,UAAA,IACAlyB,EAAA6mE,OAAA,IACA7mE,EAAA2vC,OAAA,IACA3vC,EAAA4wI,cAAA,IACA5wI,EAAAsnE,OAAA,IACAtnE,EAAAosC,UAAA,IACApsC,EAAA4jE,OAAA,IACA5jE,EAAA+rC,OAAA,IACA/rC,EAAAwiB,YAAA,IACAxiB,EAAA8uC,OAAA,IACA9uC,EAAAmnC,YAAA,IACAnnC,EAAAg8I,OAAA,IACAh8I,EAAAiwH,aAAA,IACAjwH,EAAA2nE,YAAA,IACA3nE,EAAA4pC,MAAA,IACA5pC,EAAAynC,UAAA,IACAznC,EAAAylD,QAAA,IACAzlD,EAAA8mC,OAAA,IACA9mC,EAAA+xI,QAAA,IACA/xI,EAAAuqB,UAAA,IACAvqB,EAAA4nB,OAAA,IACA5nB,EAAAk5D,YAAA,IACAl5D,EAAAk8D,UAAA,IACAl8D,EAAAsrB,QAAA,IACAtrB,EAAAi0D,OAAA,IACAj0D,EAAAumD,MAAA,IACAvmD,EAAA64B,aAAA,IACA74B,EAAA03F,OAAA,IACA13F,EAAAohD,OAAA,IACAphD,EAAAmlC,aAAA,IACAnlC,EAAAwlB,OAAA,IACAxlB,EAAAqqD,OAAA,IACArqD,EAAA0qB,WAAA,IACA1qB,EAAAwvH,OAAA,IACAxvH,EAAA0vH,SAAA,IACA1vH,EAAA+lF,OAAA,IACA/lF,EAAA28F,QAAA,IACA38F,EAAAm/B,OAAA,IACAn/B,EAAA2uB,aAAA,IACA3uB,EAAAkvI,YAAA,IACAlvI,EAAAowC,YAAA,IACApwC,EAAAgkB,QAAA,IACAhkB,EAAAqmH,OAAA,IACArmH,EAAAk0D,SAAA,IACAl0D,EAAA8tC,WAAA,IACA9tC,EAAA4lC,MAAA,IACA5lC,EAAAm8B,QAAA,IACAn8B,EAAAk/B,OAAA,IACAl/B,EAAA8iC,OAAA,IACA9iC,EAAA0gE,OAAA,IACA1gE,EAAA+oC,QAAA,IACA/oC,EAAA2yI,MAAA,IACA3yI,EAAA0mI,cAAA,IACA1mI,EAAAq7B,OAAA,IACAr7B,EAAAyjB,OAAA,IACAzjB,EAAA+hB,OAAA,IACA/hB,EAAAglG,SAAA,IACAhlG,EAAA2uI,OAAA,IACA3uI,EAAA+kC,OAAA,IACA/kC,EAAAo5G,YAAA,IACAp5G,EAAAg9I,UAAA,IACAh9I,EAAAw4B,OAAA,IACAx4B,EAAAsmF,YAAA,IACAtmF,EAAA6pB,YAAA,IACA7pB,EAAAqxC,UAAA,IACArxC,EAAAqoE,UAAA,IACAroE,EAAAizD,OAAA,IACAjzD,EAAAimG,OAAA,IACAjmG,EAAAmxI,QAAA,IACAnxI,EAAAy4B,OAAA,IACAz4B,EAAAyxB,OAAA,IACAzxB,EAAA2+G,UAAA,IACA3+G,EAAAqyD,UAAA,IACAryD,EAAAgnH,WAAA,IACAhnH,EAAAsuB,OAAA,IACAtuB,EAAAuyB,WAAA,IACAvyB,EAAAg+H,UAAA,IACAh+H,EAAA6qB,OAAA,IACA7qB,EAAAklH,OAAA,IACAllH,EAAAkyG,QAAA,IACAlyG,EAAAwtC,OAAA,IACAxtC,EAAAytC,OAAA,IACAztC,EAAA+7E,aAAA,IACA/7E,EAAA8sB,IAAA,IACA9sB,EAAA4lB,SAAA,IACA5lB,EAAA+5F,aAAA,IACA/5F,EAAA8/H,OAAA,IACA9/H,EAAA4sE,QAAA,IACA5sE,EAAAmpC,QAAA,IACAnpC,EAAA6hB,OAAA,IACA7hB,EAAAmjB,UAAA,IACAnjB,EAAA4oE,OAAA,IACA5oE,EAAAoiJ,OAAA,IACApiJ,EAAAmtF,QAAA,IACAntF,EAAA85B,OAAA,IACA95B,EAAAivG,OAAA,IACAjvG,EAAAikD,QAAA,IACAjkD,EAAAotH,OAAA,IACAptH,EAAA8pF,UAAA,IACA9pF,EAAAs6B,YAAA,IACAt6B,EAAAkoC,OAAA,IACAloC,EAAAioB,MAAA,IACAjoB,EAAA4kI,MAAA,IACA5kI,EAAAuuI,YAAA,IACAvuI,EAAAg7B,UAAA,IACAh7B,EAAAokG,GAAA,IACApkG,EAAAyqF,OAAA,IACAzqF,EAAA2xG,cAAA,IACA3xG,EAAAgsB,QAAA,IACAhsB,EAAA8gE,OAAA,IACA9gE,EAAAumI,cAAA,IACAvmI,EAAAojC,SAAA,IACApjC,EAAA25F,OAAA,IACA35F,EAAAw1B,aAAA,IACAx1B,EAAAw2B,OAAA,IACAx2B,EAAA6pI,UAAA,IACA7pI,EAAAuoE,WAAA,IACAvoE,EAAA4yB,OAAA,IACA5yB,EAAAkzB,QAAA,IACAlzB,EAAA02B,OAAA,IACA12B,EAAA6zG,QAAA,IACA7zG,EAAAu6F,UAAA,IACAv6F,EAAA+vG,YAAA,IACA/vG,EAAAutG,OAAA,IACAvtG,EAAA2oC,cAAA,IACA3oC,EAAAspB,OAAA,IACAtpB,EAAAyrE,QAAA,IACAzrE,EAAA23E,OAAA,IACA33E,EAAAu0G,WAAA,IACAv0G,EAAAijC,OAAA,IACAjjC,EAAA0jC,aAAA,IACA1jC,EAAAg8B,cAAA,IACAh8B,EAAA+hE,OAAA,IACA/hE,EAAAgxG,OAAA,IACAhxG,EAAA2lB,OAAA,IACA3lB,EAAAiwI,OAAA,IACAjwI,EAAAolH,QAAA,IACAplH,EAAAwnB,OAAA,IACAxnB,EAAAwmH,aAAA,IACAxmH,EAAAw5B,OAAA,IACAx5B,EAAAi2G,OAAA,IACAj2G,EAAAs/B,aAAA,IACAt/B,EAAA82B,aAAA,IACA92B,EAAAwkB,OAAA,IACAxkB,EAAAkkB,QAAA,IACAlkB,EAAAmkB,MAAA,IACAnkB,EAAAy9B,OAAA,IACAz9B,EAAA4jJ,WAAA,IACA5jJ,EAAAypB,OAAA,IACAzpB,EAAAuzB,QAAA,IACAvzB,EAAAizF,aAAA,IACAjzF,EAAA0iG,MAAA,IACA1iG,EAAA8xB,YAAA,IACA9xB,EAAA4mG,OAAA,IACA5mG,EAAAugI,aAAA,IACAvgI,EAAAm8F,WAAA,IACAn8F,EAAAywG,UAAA,IACAzwG,EAAAyvI,UAAA,IACAzvI,EAAAusG,SAAA,IACAvsG,EAAAg4E,aAAA,IACAh4E,EAAA+uE,IAAA,IACA/uE,EAAAujJ,OAAA,IACAvjJ,EAAAgnG,aAAA,IACAhnG,EAAAy0G,YAAA,IACAz0G,EAAA+rF,QAAA,IACA/rF,EAAAktB,KAAA,MAEAltB,EAAA+iM,cAAA,EAAA1nM,EAAAkmB,uBAAA,SAAAvhB,GACAA,EAAA66H,MAAA,IACA76H,EAAA2tJ,GAAA,IACA3tJ,EAAA4tJ,GAAA,IACA5tJ,EAAA6tJ,KAAA,IACA7tJ,EAAA8tJ,GAAA,IACA9tJ,EAAA+tJ,GAAA,IACA/tJ,EAAAguJ,GAAA,IACAhuJ,EAAAiuJ,KAAA,IACAjuJ,EAAAkuJ,KAAA,IACAluJ,EAAAmuJ,KAAA,IACAnuJ,EAAAouJ,IAAA,IACApuJ,EAAAquJ,IAAA,IACAruJ,EAAAsuJ,IAAA,IACAtuJ,EAAAuuJ,IAAA,IACAvuJ,EAAAwuJ,IAAA,IACAxuJ,EAAAyuJ,IAAA,IACAzuJ,EAAA0uJ,KAAA,IACA1uJ,EAAA2uJ,IAAA,IACA3uJ,EAAA4uJ,IAAA,IACA5uJ,EAAA6uJ,IAAA,IACA7uJ,EAAA8uJ,IAAA,IACA9uJ,EAAA+uJ,IAAA,IACA/uJ,EAAAgvJ,IAAA,IACAhvJ,EAAAivJ,IAAA,IACAjvJ,EAAAkvJ,IAAA,IACAlvJ,EAAAmvJ,IAAA,IACAnvJ,EAAAovJ,IAAA,IACApvJ,EAAAqvJ,IAAA,IACArvJ,EAAAsvJ,IAAA,IACAtvJ,EAAAuvJ,GAAA,IACAvvJ,EAAAwvJ,GAAA,IACAxvJ,EAAAyvJ,GAAA,IACAzvJ,EAAA0vJ,GAAA,IACA1vJ,EAAA2vJ,IAAA,IACA3vJ,EAAA4vJ,IAAA,IACA5vJ,EAAA6vJ,IAAA,IACA7vJ,EAAA8vJ,IAAA,IACA9vJ,EAAA+vJ,IAAA,IACA/vJ,EAAAgwJ,IAAA,IACAhwJ,EAAAiwJ,IAAA,IACAjwJ,EAAAkwJ,IAAA,IACAlwJ,EAAAmwJ,IAAA,IACAnwJ,EAAAowJ,IAAA,IACApwJ,EAAAqwJ,IAAA,IACArwJ,EAAAswJ,IAAA,IACAtwJ,EAAAuwJ,IAAA,IACAvwJ,EAAAwwJ,IAAA,IACAxwJ,EAAAywJ,IAAA,IACAzwJ,EAAA0wJ,IAAA,IACA1wJ,EAAA2wJ,IAAA,IACA3wJ,EAAA4wJ,IAAA,IACA5wJ,EAAA6wJ,IAAA,IACA7wJ,EAAA8wJ,IAAA,IACA9wJ,EAAA+wJ,IAAA,IACA/wJ,EAAAgxJ,IAAA,IACAhxJ,EAAAixJ,IAAA,IACAjxJ,EAAAkxJ,IAAA,IACAlxJ,EAAAmxJ,IAAA,IACAnxJ,EAAAoxJ,IAAA,IACApxJ,EAAAqxJ,IAAA,IACArxJ,EAAAsxJ,IAAA,IACAtxJ,EAAAuxJ,IAAA,IACAvxJ,EAAAwxJ,IAAA,IACAxxJ,EAAAyxJ,IAAA,IACAzxJ,EAAA0xJ,IAAA,IACA1xJ,EAAA2xJ,IAAA,IACA3xJ,EAAA4xJ,IAAA,IACA5xJ,EAAA6xJ,IAAA,IACA7xJ,EAAA8xJ,IAAA,IACA9xJ,EAAA+xJ,IAAA,IACA/xJ,EAAAgyJ,IAAA,IACAhyJ,EAAAiyJ,IAAA,IACAjyJ,EAAAkyJ,IAAA,IACAlyJ,EAAAmyJ,IAAA,IACAnyJ,EAAAoyJ,IAAA,IACApyJ,EAAAqyJ,IAAA,IACAryJ,EAAAsyJ,IAAA,IACAtyJ,EAAAuyJ,IAAA,IACAvyJ,EAAAwyJ,IAAA,IACAxyJ,EAAAyyJ,IAAA,IACAzyJ,EAAA0yJ,KAAA,IACA1yJ,EAAA2yJ,IAAA,IACA3yJ,EAAA4yJ,KAAA,IACA5yJ,EAAA6yJ,IAAA,IACA7yJ,EAAA8yJ,IAAA,IACA9yJ,EAAA+yJ,IAAA,IACA/yJ,EAAAgzJ,IAAA,IACAhzJ,EAAAizJ,IAAA,IACAjzJ,EAAAkzJ,IAAA,IACAlzJ,EAAAmzJ,IAAA,IACAnzJ,EAAAozJ,IAAA,IACApzJ,EAAAqzJ,IAAA,IACArzJ,EAAAszJ,IAAA,IACAtzJ,EAAAuzJ,IAAA,IACAvzJ,EAAAwzJ,KAAA,IACAxzJ,EAAAs5J,IAAA,IACAt5J,EAAAu5J,IAAA,IACAv5J,EAAAw5J,IAAA,IACAx5J,EAAAy5J,IAAA,IACAz5J,EAAA05J,IAAA,IACA15J,EAAA25J,IAAA,IACA35J,EAAA45J,KAAA,IACA55J,EAAA65J,IAAA,IACA75J,EAAA85J,KAAA,IACA95J,EAAA+5J,IAAA,IACA/5J,EAAAg6J,IAAA,IACAh6J,EAAAi6J,IAAA,IACAj6J,EAAAk6J,IAAA,IACAl6J,EAAAm6J,IAAA,IACAn6J,EAAAyzJ,KAAA,IACAzzJ,EAAA0zJ,KAAA,IACA1zJ,EAAA2zJ,KAAA,IACA3zJ,EAAA4zJ,KAAA,IACA5zJ,EAAA6zJ,KAAA,IACA7zJ,EAAA8zJ,KAAA,IACA9zJ,EAAA+zJ,KAAA,IACA/zJ,EAAAg0J,KAAA,IACAh0J,EAAAi0J,KAAA,IACAj0J,EAAAk0J,KAAA,IACAl0J,EAAAm0J,KAAA,IACAn0J,EAAAo0J,KAAA,IACAp0J,EAAAq0J,KAAA,IACAr0J,EAAAs0J,KAAA,IACAt0J,EAAAu0J,KAAA,IACAv0J,EAAAw0J,KAAA,IACAx0J,EAAAy0J,KAAA,IACAz0J,EAAA00J,KAAA,IACA10J,EAAA20J,KAAA,IACA30J,EAAA40J,KAAA,IACA50J,EAAA60J,KAAA,IACA70J,EAAA80J,KAAA,IACA90J,EAAA+0J,KAAA,IACA/0J,EAAAg1J,KAAA,IACAh1J,EAAAi1J,KAAA,IACAj1J,EAAAk1J,KAAA,IACAl1J,EAAAm1J,KAAA,IACAn1J,EAAAo1J,KAAA,IACAp1J,EAAAq1J,KAAA,IACAr1J,EAAAs1J,KAAA,IACAt1J,EAAAu1J,KAAA,IACAv1J,EAAAw1J,KAAA,IACAx1J,EAAAy1J,KAAA,IACAz1J,EAAA01J,KAAA,IACA11J,EAAA21J,KAAA,IACA31J,EAAA41J,KAAA,IACA51J,EAAA61J,KAAA,IACA71J,EAAA81J,KAAA,IACA91J,EAAA+1J,KAAA,IACA/1J,EAAAg2J,KAAA,IACAh2J,EAAAi2J,KAAA,IACAj2J,EAAAk2J,KAAA,IACAl2J,EAAAm2J,KAAA,IACAn2J,EAAAo2J,KAAA,IACAp2J,EAAAq2J,KAAA,IACAr2J,EAAAs2J,KAAA,IACAt2J,EAAAu2J,KAAA,IACAv2J,EAAAw2J,KAAA,IACAx2J,EAAAy2J,KAAA,IACAz2J,EAAA02J,KAAA,IACA12J,EAAA22J,KAAA,IACA32J,EAAA42J,KAAA,IACA52J,EAAA62J,KAAA,IACA72J,EAAA82J,KAAA,KACA92J,EAAA+2J,KAAA,IACA/2J,EAAAg3J,KAAA,IACAh3J,EAAAi3J,KAAA,IACAj3J,EAAAk3J,KAAA,IACAl3J,EAAAm3J,KAAA,IACAn3J,EAAAo3J,KAAA,IACAp3J,EAAAq3J,KAAA,IACAr3J,EAAAs3J,KAAA,IACAt3J,EAAAu3J,KAAA,IACAv3J,EAAAw3J,KAAA,IACAx3J,EAAAy3J,KAAA,IACAz3J,EAAA03J,KAAA,IACA13J,EAAA23J,KAAA,IACA33J,EAAA43J,KAAA,IACA53J,EAAA63J,KAAA,IACA73J,EAAA83J,KAAA,IACA93J,EAAA+3J,KAAA,IACA/3J,EAAAg4J,KAAA,IACAh4J,EAAAi4J,KAAA,IACAj4J,EAAAk4J,KAAA,IACAl4J,EAAAm4J,KAAA,IACAn4J,EAAAo4J,KAAA,IACAp4J,EAAAq4J,KAAA,IACAr4J,EAAAs4J,KAAA,IACAt4J,EAAAu4J,KAAA,IACAv4J,EAAAw4J,KAAA,IACAx4J,EAAAy4J,KAAA,IACAz4J,EAAA04J,KAAA,IACA14J,EAAA24J,KAAA,IACA34J,EAAA44J,KAAA,IACA54J,EAAA64J,KAAA,IACA74J,EAAA84J,KAAA,IACA94J,EAAA+4J,KAAA,IACA/4J,EAAAg5J,KAAA,IACAh5J,EAAAi5J,KAAA,IACAj5J,EAAAk5J,KAAA,IACAl5J,EAAAm5J,KAAA,IACAn5J,EAAAo5J,KAAA,IACAp5J,EAAAq5J,KAAA,QAGAjkK,EAAAmiP,+CCj4FAriP,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAA2zM,iBAAA3zM,EAAA0zM,uBAEA,IAAAztM,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BytM,EAAA,WACA,SAAAA,EAAAt2L,GACA1c,KAAA0c,QACA1c,KAAA+zM,aACA/zM,KAAA40K,MAAA,KACA50K,KAAA4lN,KAAA,KAgEA,OA9DA5S,EAAApzM,WACA2tQ,UAAA,WACAvtQ,KAAA4lN,KAAA5lN,KAAA40K,MACA50K,KAAA40K,MAAA50K,KAAA0c,MAAAqpP,YAEAyH,OAAA,SAAAtpQ,GACA,OAAAlE,KAAA40K,MAAA1wK,WACAlE,KAAAutQ,iBAKAE,OAAA,SAAAvpQ,GACA,GAAAlE,KAAAwtQ,OAAAtpQ,GACA,SAEA,UAAAoB,EAAAyD,YAAA,4BAAA/I,KAAA40K,MAAA1wK,KAAA,aAAAA,EAAA,MAEA+N,MAAA,WAKA,OAJAjS,KAAAutQ,YACAvtQ,KAAAytQ,OAAAC,EAAAC,QACA3tQ,KAAA4tQ,aACA5tQ,KAAAytQ,OAAAC,EAAAG,QACA7tQ,KAAA+zM,WAEA65D,WAAA,WACA,OACA,GAAA5tQ,KAAAwtQ,OAAAE,EAAAI,QACA9tQ,KAAA+zM,UAAAx2L,KAAAvd,KAAA4lN,KAAAtmN,YACS,GAAAU,KAAAwtQ,OAAAE,EAAAK,UACT/tQ,KAAA+zM,UAAAx2L,KAAAvd,KAAA4lN,KAAAtmN,WACS,KAAAU,KAAAwtQ,OAAAE,EAAAC,QAGT,OAFA3tQ,KAAAguQ,mBAMAA,eAAA,WACA,IAAAC,EAAAjuQ,KAAA+zM,UAAAjyM,OAIA,GAHA9B,KAAA+zM,UAAAx2L,KAAA,WACAvd,KAAA4tQ,aACA5tQ,KAAAytQ,OAAAC,EAAAG,QACA7tQ,KAAAwtQ,OAAAE,EAAAQ,IACAluQ,KAAA+zM,UAAAk6D,GAAAjuQ,KAAA+zM,UAAAjyM,OACA9B,KAAA+zM,UAAAk6D,EAAA,YACO,KAAAjuQ,KAAAwtQ,OAAAE,EAAAC,QAYP,UAAAroQ,EAAAyD,YAAA,2CAXA,IAAAolQ,EAAAnuQ,KAAA+zM,UAAAjyM,OACA9B,KAAA+zM,UAAAx2L,KAAA,WACA,IAAA6wP,EAAApuQ,KAAA+zM,UAAAjyM,OACA9B,KAAA4tQ,aACA5tQ,KAAAytQ,OAAAC,EAAAG,QACA7tQ,KAAAytQ,OAAAC,EAAAW,QACAruQ,KAAA+zM,UAAAo6D,GAAAnuQ,KAAA+zM,UAAAjyM,OACA9B,KAAA+zM,UAAAo6D,EAAA,OACAnuQ,KAAA+zM,UAAAk6D,GAAAG,EACApuQ,KAAA+zM,UAAAk6D,EAAA,WAMAj7D,EArEA,GAuEA06D,GACAC,OAAA,EACAE,OAAA,EACAC,OAAA,EACAC,SAAA,EACAG,GAAA,EACAG,OAAA,GAEAC,EAAA,WACA,SAAAA,EAAApqQ,EAAA5E,GACAU,KAAAkE,OACAlE,KAAAV,QAEA,IAAAivQ,EAAApvQ,OAAAe,OAAA,MAYA,OAXAouQ,EAAAE,YAAA,SAAA55D,GAEA,OADA25D,EAAA35D,KAIA25D,EAAA35D,GAAA,IAAA05D,EAAAZ,EAAAK,SAAAn5D,KAEA05D,EAAAX,OAAA,IAAAW,EAAAZ,EAAAC,OAAA,KACAW,EAAAT,OAAA,IAAAS,EAAAZ,EAAAG,OAAA,KACAS,EAAAJ,GAAA,IAAAI,EAAAZ,EAAAQ,GAAA,MACAI,EAAAD,OAAA,IAAAC,EAAAZ,EAAAW,OAAA,UACAC,EAjBA,GAmBAv7D,EAAA,WACA,SAAAA,EAAA5qM,GACAnI,KAAAmI,SACAnI,KAAAkf,WACAlf,KAAA8gB,UAiFA,OA/EAiyL,EAAAnzM,WACAsf,SAAA,WACA,OAAAlf,KAAAihB,YAAAjhB,KAAAmI,OAAAnC,WAEA+/P,SAAA,WAGA,IAFA,IAAAvjP,KACA9U,EAAA1N,KAAAihB,cACA,CACA,GAAAvT,EAAA,EACA,OAAAlI,EAAA3F,IAEA,GAAA2iB,EACA,KAAA9U,GAAA,KAAAA,IACA8U,WAES,QAAA9U,EACT8U,UACS,OAAAld,EAAAgI,SAAAI,GACT,MAEAA,EAAA1N,KAAAkf,WAEA,SAAAxR,GACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WAAA4gQ,EAAAZ,EAAAI,OAAA9tQ,KAAAmhB,aACA,SAEA,OADAnhB,KAAAkf,WACAovP,EAAAX,OACA,SAEA,OADA3tQ,KAAAkf,WACAovP,EAAAT,OAEA,IAAA/sP,EAAA9gB,KAAA8gB,OAGA,IAFAA,EAAAhf,OAAA,EACAgf,EAAA,GAAAS,OAAAC,aAAA9T,IACAA,EAAA1N,KAAAkf,aAAA,IAAAxR,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAoT,EAAAvD,KAAAgE,OAAAC,aAAA9T,IAEA,IAAAtK,EAAA0d,EAAAmB,KAAA,IACA,OAAA7e,EAAAqrQ,eACA,SACA,OAAAH,EAAAJ,GACA,aACA,OAAAI,EAAAD,OACA,QACA,OAAAC,EAAAE,YAAAprQ,KAGA+d,UAAA,WACA,IAAAzT,EAAA1N,KAAAihB,YACAH,EAAA9gB,KAAA8gB,OAGA,IAFAA,EAAAhf,OAAA,EACAgf,EAAA,GAAAS,OAAAC,aAAA9T,IACAA,EAAA1N,KAAAkf,aAAA,IACAxR,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,IACAoT,EAAAvD,KAAAgE,OAAAC,aAAA9T,IAKA,IAAApO,EAAAw/L,WAAAh+K,EAAAmB,KAAA,KACA,GAAAy0J,MAAAp3K,GACA,UAAAgG,EAAAyD,YAAA,kCAAAzJ,GAEA,OAAAA,IAGAyzM,EArFA,GAuFA1zM,EAAA0zM,kBACA1zM,EAAA2zM,qDCnMA7zM,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAwiP,sBAEA,IAAAv8O,EAAYC,EAAQ,KAEpBs8O,EAAA,SAAA6sB,GAGA,SAAA7sB,EAAA6sB,GAEA1uQ,KAAAqR,GAAAq9P,EAAA,WAAAA,EADA,WAEA1uQ,KAAAuR,GAAAm9P,EAAA,WAAAA,EAFA,WAiGA,OA7FA7sB,EAAAjiP,WACAkiP,OAAA,SAAAz0O,GACA,IAAAqX,SACA5iB,SACA,MAAAwD,EAAAiQ,UAAAlI,GAAA,CACAqX,EAAA,IAAA9e,WAAA,EAAAyH,EAAAvL,QACAA,EAAA,EACA,QAAAH,EAAA,EAAAC,EAAAyL,EAAAvL,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAA8H,EAAA4D,EAAAmI,WAAA7T,GACA8H,GAAA,IACAib,EAAA5iB,KAAA2H,GAEAib,EAAA5iB,KAAA2H,IAAA,EACAib,EAAA5iB,KAAA,IAAA2H,QAGO,QAAAnE,EAAAq9M,eAAAt1M,GAIP,UAAAyV,MAAA,gFAFAhhB,GADA4iB,EAAArX,GACA5F,WAeA,IAXA,IAAAknQ,EAAA7sQ,GAAA,EACA8sQ,EAAA9sQ,EAAA,EAAA6sQ,EACAE,EAAA,IAAA50F,YAAAv1J,EAAA3d,OAAA,EAAA4nQ,GACAl3E,EAAA,EACAq3E,EAAA,EACAz9P,EAAArR,KAAAqR,GACAE,EAAAvR,KAAAuR,GACAw9P,EAAA,WACAC,EAAA,UAGA1kG,EAAA,EAAsBA,EAAAqkG,EAAkBrkG,IACxC,EAAAA,EAOAj5J,EAAA,GADAA,GADAA,GADAomL,GADAA,GADAA,GADAA,EAAAo3E,EAAAvkG,IACAykG,EA3CA,WAsCAA,MAKAt3E,EA1CA,QA2CA,GAAAA,IAAA,IACAu3E,EA7CA,WAuCAA,MAMAv3E,EA5CA,QA8CA,GAAApmL,IAAA,IACA,WAQAE,EAAA,GADAA,GADAA,GADAu9P,GADAA,GADAA,GADAA,EAAAD,EAAAvkG,IACAykG,EAnDA,WAsCAA,MAaAD,EAlDA,QAmDA,GAAAA,IAAA,IACAE,EArDA,WAuCAA,MAcAF,EApDA,QAsDA,GAAAv9P,IAAA,IACA,WAIA,OADAkmL,EAAA,EACAm3E,GACA,OACAn3E,GAAA/yK,EAAA,EAAAiqP,EAAA,OACA,OACAl3E,GAAA/yK,EAAA,EAAAiqP,EAAA,MACA,OAIAl3E,GADAA,GADAA,GADAA,GAAA/yK,EAAA,EAAAiqP,IACAI,EAnEA,WAsCAA,MA6BAt3E,EAlEA,QAmEA,GAAAA,IAAA,IACAu3E,EArEA,WAuCAA,MA8BAv3E,EApEA,MAqEA,EAAAk3E,EACAt9P,GAAAomL,EAEAlmL,GAAAkmL,EAKA,OAFAz3L,KAAAqR,KACArR,KAAAuR,KACAvR,MAEAkiP,UAAA,WACA,IAAA7wO,EAAArR,KAAAqR,GACAE,EAAAvR,KAAAuR,GAEAF,EAAA,YADAA,GAAAE,IAAA,GAnFA,WAoFA,MAAAF,EAnFA,MAsFAA,EAAA,WADAA,IADAE,EAAA,WAAAA,EArFA,YAqFA,YAAAA,GAAA,GAAAF,IAAA,IArFA,cAqFA,MACA,GAtFA,WAuFA,MAAAA,EAtFA,MAyFA,QAAA1P,EAAA,EAAAqoK,GADA34J,IADAE,EAAA,WAAAA,EAxFA,YAwFA,YAAAA,GAAA,GAAAF,IAAA,IAxFA,cAwFA,MACA,EACAE,GAAAnO,EAAA,GAA+CzB,EAAAqoK,EAAAloK,OAAgBH,IAAA,CAE/D,IADA,IAAAijN,GAAA56C,EAAAroK,KAAA,GAAAwB,SAAA,IACAyhN,EAAA9iN,OAAA,GACA8iN,EAAA,IAAAA,EAEAxhN,GAAAwhN,EAEA,OAAAxhN,IAGAy+O,EArGA,GAuGAxiP,EAAAwiP,mDC9GA1iP,OAAAC,eAAAC,EAAA,cACAC,WAEAD,EAAAkwO,gBAEA,IAAAxlE,EAA4a,SAAAC,EAAAroK,GAA2B,GAAAF,MAAAC,QAAAsoK,GAA0B,OAAAA,EAAc,GAAAxqK,OAAAC,YAAAN,OAAA6qK,GAA2C,OAAxf,SAAAA,EAAAroK,GAAiC,IAAAsoK,KAAeC,KAAeC,KAAgBC,SAAoB,IAAM,QAAAC,EAAAC,EAAAN,EAAAxqK,OAAAC,cAA0CyqK,GAAAG,EAAAC,EAAAC,QAAAxoJ,QAA4CkoJ,EAAA1sJ,KAAA8sJ,EAAA/qK,QAAqBqC,GAAAsoK,EAAAnoK,SAAAH,GAAlCuoK,OAAyE,MAAAV,GAAcW,KAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAAE,QAAAF,EAAAE,SAA2C,QAAU,GAAAL,EAAA,MAAAC,GAAsB,OAAAH,EAA3X,CAAwfD,EAAAroK,GAAuC,UAAA8oK,UAAA,yDAEjkBnlK,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BslK,EAAkBtlK,EAAQ,KAE1B8W,EAAc9W,EAAQ,KAEtBiX,EAAmBjX,EAAQ,KAE3Bg6N,EAAWh6N,EAAQ,KAEnBgqO,EAAA,WACA,SAAA0/B,EAAA9hC,EAAA8C,GACA,OAAAA,KAAA/C,UAAAC,GACA8C,EAAA57N,OAAA84N,GAEA7rO,QAAAC,QAAA4rO,GAEA,SAAA+hC,EAAA5vQ,EAAA6vQ,EAAAC,EAAAv4P,GAEA,OADAvX,EAAA6vQ,EAAA7vQ,EAAA8vQ,GACA,IAAA9vQ,EAAAuX,IAAAvX,EAEA,SAAA+vQ,EAAA7/P,EAAAkB,EAAAU,EAAAC,EAAAC,EAAAC,GACA,IAIA5P,EACA4K,EACAiF,EAEAC,EARA3P,EAAAwP,EAAAC,EACA3B,EAAAc,GAAA,MAAA9K,WAAA9D,GAAA4O,GAAA,OAAArC,YAAAvM,GAAA,IAAAm4K,YAAAn4K,GACA4P,EAAAN,EAAAE,EACAK,EAAAN,EAAAE,EAIAK,EAAA,EAEAC,EAAA,IAAAxD,YAAAiD,GACAQ,EAAAV,EACA,IAAAzP,EAAA,EAAeA,EAAA2P,EAAQ3P,IACvBkQ,EAAAlQ,GAAAuN,KAAA6C,MAAApQ,EAAA+P,GAEA,IAAA/P,EAAA,EAAeA,EAAA4P,EAAQ5P,IAEvB,IADA6P,EAAAtC,KAAA6C,MAAApQ,EAAAgQ,GAAAG,EACAvF,EAAA,EAAiBA,EAAA+E,EAAQ/E,IACzBkF,EAAAD,EAAAK,EAAAtF,GACAqD,EAAAgC,KAAApC,EAAAiC,GAGA,OAAA7B,EAEA,SAAA2/N,EAAAt/D,GACA,IAAAxvK,EAAAwvK,EAAAxvK,KACA0R,EAAA89J,EAAA99J,IACAg7N,EAAAl9D,EAAAk9D,MACAmiC,EAAAr/F,EAAA2/D,SACAA,WAAA0/B,KACAC,EAAAt/F,EAAAs+D,MACAA,WAAAghC,EAAA,KAAAA,EACAC,EAAAv/F,EAAAohD,KACAA,WAAAm+C,EAAA,KAAAA,EACAC,EAAAx/F,EAAAy/F,OACAA,WAAAD,KACAr9P,EAAA69J,EAAA79J,mBAEApS,KAAAmtO,QACA,IAAAtqO,EAAAsqO,EAAAtqO,KACA,GAAAA,EAAAP,IAAA,WACA,IAAAmc,EAAA5b,EAAA1C,IAAA,UAAAJ,KACA,iBAAA0e,EAAA,CACA,IAAA+gN,EAAA,IAAAD,EAAA7iD,SACA8iD,EAAAj0C,qBAAA4hD,EAAAhlO,QACAglO,EAAAhlO,OAAAvB,QACAumO,EAAAhpN,iBAAAq7M,EAAAr7M,iBACAgpN,EAAAp8N,SAAAyuN,EAAAv7C,oBACO,gBAAAxlK,IACP0uN,EAAAhpN,iBAAA,EACAgpN,EAAAp8N,SAAA,GAKA,GAFA/Q,KAAAuQ,MAAA1N,EAAA1C,IAAA,aACAH,KAAAwQ,OAAA3N,EAAA1C,IAAA,cACAH,KAAAuQ,MAAA,GAAAvQ,KAAAwQ,OAAA,EACA,UAAAlL,EAAAyD,YAAA,wBAAA/I,KAAAuQ,MAAA,eAAAvQ,KAAAwQ,QAEAxQ,KAAA8wM,YAAAjuM,EAAA1C,IAAA,uBACAH,KAAAgoB,UAAAnlB,EAAA1C,IAAA,sBACAH,KAAA2vQ,MAAA9sQ,EAAA1C,IAAA,aACA,IAAAgkB,EAAAgpN,EAAAhpN,iBACA,IAAAA,KACAA,EAAAthB,EAAA1C,IAAA,2BACA,CACA,IAAAH,KAAAgoB,UAGA,UAAA1iB,EAAAyD,YAAA,wCAAA/I,KAAAgoB,WAFA7D,EAAA,EAOA,GADAnkB,KAAA0Q,IAAAyT,GACAnkB,KAAAgoB,UAAA,CACA,IAAAqlN,EAAAxqO,EAAA1C,IAAA,mBACA,IAAAktO,EAEA,UADA/nO,EAAAkR,MAAA,kDACA22N,EAAAp8N,UACA,OACAs8N,EAAA7nO,EAAA1F,KAAAK,IAAA,cACA,MACA,OACAktO,EAAA7nO,EAAA1F,KAAAK,IAAA,aACA,MACA,OACAktO,EAAA7nO,EAAA1F,KAAAK,IAAA,cACA,MACA,QACA,UAAA2iB,MAAA,mBAAA9iB,KAAA+Q,SAAA,oCAGA,IAAAkwM,EAAA2uB,EAAAz9N,EAAA,KACAnS,KAAAqtO,WAAAxiE,EAAAx7J,WAAA4C,MAAAo7N,EAAA5sO,EAAAwgN,EAAA7uM,GACApS,KAAA+Q,SAAA/Q,KAAAqtO,WAAAt8N,SAIA,GAFA/Q,KAAAqU,OAAAxR,EAAArB,SAAA,cACAxB,KAAA4vQ,eACA5vQ,KAAAqU,SAAArU,KAAAqtO,aAAArtO,KAAAqtO,WAAAj5N,gBAAApU,KAAAqU,SAAAq7P,IAAA7kG,EAAAx7J,WAAA+E,gBAAApU,KAAAqU,OAAA,KACArU,KAAA4vQ,eACA,IAAA/4P,GAAA,GAAAsN,GAAA,EACAnkB,KAAA6vQ,sBACA7vQ,KAAA8vQ,iBACA,QAAAnuQ,EAAA,EAAA4K,EAAA,EAA4B5K,EAAA3B,KAAAqU,OAAAvS,OAAwBH,GAAA,IAAA4K,EAAA,CACpD,IAAAmmM,EAAA1yM,KAAAqU,OAAA1S,GACAgxM,EAAA3yM,KAAAqU,OAAA1S,EAAA,GACA3B,KAAA6vQ,mBAAAtjQ,GAAAomM,EAAAD,EACA1yM,KAAA8vQ,cAAAvjQ,GAAAsK,EAAA67L,GAGA67B,EACAvuO,KAAAuuO,MAAA,IAAAgB,GACA9uO,OACA0R,MACAg7N,MAAAoB,EACAqB,WACAx9N,uBAEKi/M,KACL,EAAA7rN,EAAAhB,UAAA6sN,GACAA,EAAAxuN,KACA1C,IAAA,kBAIAH,KAAAqxN,KAAA,IAAAke,GACA9uO,OACA0R,MACAg7N,MAAA9b,EACAue,WACA8/B,UACAt9P,0BARA9M,EAAA4O,MAAA,+CAYAlU,KAAAqxN,QAkYA,OA9XAke,EAAAS,WAAA,SAAA9/D,GACAA,EAAAmpC,QAAA,IAWA02D,EACAC,EAXAvvQ,EAAAyvK,EAAAzvK,KACA0R,EAAA+9J,EAAA/9J,IACAg7N,EAAAj9D,EAAAi9D,MACA8iC,EAAA//F,EAAA0/D,SACAA,WAAAqgC,KACAC,EAAAhgG,EAAA+/D,cACAA,WAAAigC,EAAA,KAAAA,EACA99P,EAAA89J,EAAA99J,mBAEA+9P,EAAAlB,EAAA9hC,EAAA8C,GAGA1B,EAAApB,EAAAtqO,KAAA1C,IAAA,SACAkxN,EAAA8b,EAAAtqO,KAAA1C,IAAA,QAmBA,OAlBAouO,GACAwhC,EAAAd,EAAA1gC,EAAA0B,GACA+/B,EAAA1uQ,QAAAC,QAAA,QAEAwuQ,EAAAzuQ,QAAAC,QAAA,MACA8vN,KACA7rN,EAAAhB,UAAA6sN,GACA2+C,EAAAf,EAAA59C,EAAA4e,GACSxuO,MAAAC,QAAA2vN,GACT2+C,EAAA1uQ,QAAAC,QAAA8vN,OAEA/rN,EAAA4O,MAAA,4BACA87P,EAAA1uQ,QAAAC,QAAA,OAGAyuQ,EAAA1uQ,QAAAC,QAAA,OAGAD,QAAAquK,KAAAwgG,EAAAJ,EAAAC,IAAAvoG,KAAA,SAAAwoC,GACA,IAAAK,EAAAvmC,EAAAkmC,EAAA,GACAmgE,EAAA9/D,EAAA,GACA+/D,EAAA//D,EAAA,GACAggE,EAAAhgE,EAAA,GAEA,WAAAi/B,GACA9uO,OACA0R,MACAg7N,MAAAijC,EACAxgC,WACArB,MAAA8hC,EACAh/C,KAAAi/C,EACAl+P,0BAIAm9N,EAAAC,WAAA,SAAAj/B,GACA,IASA7rL,EAAA/iB,EATA2tO,EAAA/+B,EAAA++B,SACA/+N,EAAAggM,EAAAhgM,MACAC,EAAA+/L,EAAA//L,OACAi/N,EAAAl/B,EAAAk/B,wBACAC,EAAAn/B,EAAAm/B,cAEA6gC,GAAAhgQ,EAAA,MAAAC,EACAyvP,EAAA3wB,EAAA7nO,WAGA,IAAAgoO,GAAAC,GAFA6gC,IAAAtQ,EAIK,GAAAvwB,EAML,KAFAhrN,EAAA,IAAA9e,WAAA2qQ,IACAluQ,IAAAitO,GACA3tO,EAAAs+P,EAA4Bt+P,EAAA4uQ,EAAoB5uQ,IAChD+iB,EAAA/iB,GAAA,SANA+iB,EAAA,IAAA9e,WAAAq6P,IACA59P,IAAAitO,QAHA5qN,EAAA4qN,EAWA,GAAAI,EACA,IAAA/tO,EAAA,EAAiBA,EAAAs+P,EAAkBt+P,IACnC+iB,EAAA/iB,IAAA,IAGA,OACA+iB,OACAnU,QACAC,WAGA++N,EAAA3vO,WACAglB,gBACA,OAAA1V,KAAA2H,IAAA7W,KAAAuQ,MAAAvQ,KAAAuuO,OAAAvuO,KAAAuuO,MAAAh+N,OAAA,EAAAvQ,KAAAqxN,MAAArxN,KAAAqxN,KAAA9gN,OAAA,IAEAsU,iBACA,OAAA3V,KAAA2H,IAAA7W,KAAAwQ,OAAAxQ,KAAAuuO,OAAAvuO,KAAAuuO,MAAA/9N,QAAA,EAAAxQ,KAAAqxN,MAAArxN,KAAAqxN,KAAA7gN,QAAA,IAEAggQ,aAAA,SAAAzpQ,GACA,IAKApF,EAAAC,EALA8O,EAAA1Q,KAAA0Q,IACAK,EAAA/Q,KAAA+Q,SACA++P,EAAA9vQ,KAAA8vQ,cACAD,EAAA7vQ,KAAA6vQ,mBACAh5P,GAAA,GAAAnG,GAAA,EAEA,OAAAA,EAAA,CAMA,IAAA6S,EAAA,EACA,IAAA5hB,EAAA,EAAAC,EAAA5B,KAAAuQ,MAAAvQ,KAAAwQ,OAAgD7O,EAAAC,EAAQD,IACxD,QAAA4K,EAAA,EAAuBA,EAAAwE,EAAcxE,IACrCxF,EAAAwc,GAAA2rP,EAAAnoQ,EAAAwc,GAAAusP,EAAAvjQ,GAAAsjQ,EAAAtjQ,GAAAsK,GACA0M,SATA,IAAA5hB,EAAA,EAAAC,EAAAmF,EAAAjF,OAAuCH,EAAAC,EAAQD,IAC/CoF,EAAApF,KAAAoF,EAAApF,IAYA8uQ,cAAA,SAAA1pQ,GACA,IAAA2J,EAAA1Q,KAAA0Q,IACA,OAAAA,EACA,OAAA3J,EAEA,IASAnF,EACA8uQ,EAVAngQ,EAAAvQ,KAAAuQ,MACAC,EAAAxQ,KAAAwQ,OACAO,EAAA/Q,KAAA+Q,SACAjP,EAAAyO,EAAAC,EAAAO,EACA4/P,EAAA,EACAz+E,EAAAxhL,GAAA,MAAA9K,WAAA9D,GAAA4O,GAAA,OAAArC,YAAAvM,GAAA,IAAAm4K,YAAAn4K,GACA8uQ,EAAArgQ,EAAAQ,EACA8F,GAAA,GAAAnG,GAAA,EACA/O,EAAA,EAGA,OAAA+O,EAEA,IADA,IAAA2gN,EAAAw/C,EAAAC,EACAvkQ,EAAA,EAAuBA,EAAAiE,EAAYjE,IAAA,CAGnC,IAFAskQ,EAAAlvQ,IAAA,EAAAivQ,GACAE,EAAAnvQ,EAAAivQ,EACAjvQ,EAAAkvQ,GACAH,EAAA3pQ,EAAA4pQ,KACAz+E,EAAAvwL,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,GAAA+uQ,GAAA,IACAx+E,EAAAvwL,EAAA,KAAA+uQ,EACA/uQ,GAAA,EAEA,GAAAA,EAAAmvQ,EAGA,IAFAJ,EAAA3pQ,EAAA4pQ,KACAt/C,EAAA,IACA1vN,EAAAmvQ,GACA5+E,EAAAvwL,SAAA+uQ,EAAAr/C,GACAA,IAAA,MAIO,CACP,IAAAloN,EAAA,EAEA,IADAunQ,EAAA,EACA/uQ,EAAA,EAAAC,EAAAE,EAAgCH,EAAAC,IAAQD,EAAA,CAKxC,IAJAA,EAAAivQ,GAAA,IACAF,EAAA,EACAvnQ,EAAA,GAEAA,EAAAuH,GACAggQ,KAAA,EAAA3pQ,EAAA4pQ,KACAxnQ,GAAA,EAEA,IAAA4nQ,EAAA5nQ,EAAAuH,EACApR,EAAAoxQ,GAAAK,EACA7+E,EAAAvwL,GAAArC,EAAA,IAAAA,EAAAuX,IAAAvX,EACAoxQ,IAAA,GAAAK,GAAA,EACA5nQ,EAAA4nQ,GAGA,OAAA7+E,GAEA8+E,YAAA,SAAAC,EAAA1gQ,EAAAC,EAAAC,EAAA08N,GACA,IAEA+jC,EAAAC,EAAAzpB,EAAA/lP,EAAAC,EAAA2K,EAFAgiO,EAAAvuO,KAAAuuO,MACAld,EAAArxN,KAAAqxN,KAEA,GAAAkd,EACA4iC,EAAA5iC,EAAAh+N,MACAm3O,EAAAnZ,EAAA/9N,OACA0gQ,EAAA,IAAAtrQ,WAAAurQ,EAAAzpB,GACAnZ,EAAA6iC,eAAAF,GACAC,IAAA5gQ,GAAAm3O,IAAAl3O,IACA0gQ,EAAA7B,EAAA6B,EAAA3iC,EAAA79N,IAAAygQ,EAAAzpB,EAAAn3O,EAAAC,SAEO,GAAA6gN,EACP,GAAAA,aAAAke,EAAA,CAMA,IALA4hC,EAAA9/C,EAAA9gN,MACAm3O,EAAAr2B,EAAA7gN,OACA0gQ,EAAA,IAAAtrQ,WAAAurQ,EAAAzpB,GACAr2B,EAAAtgN,SAAA,EACAsgN,EAAA+/C,eAAAF,GACAvvQ,EAAA,EAAAC,EAAAuvQ,EAAAzpB,EAAmC/lP,EAAAC,IAAQD,EAC3CuvQ,EAAAvvQ,GAAA,IAAAuvQ,EAAAvvQ,GAEAwvQ,IAAA5gQ,GAAAm3O,IAAAl3O,IACA0gQ,EAAA7B,EAAA6B,EAAA7/C,EAAA3gN,IAAAygQ,EAAAzpB,EAAAn3O,EAAAC,QAES,KAAA/O,MAAAC,QAAA2vN,GAiBT,UAAA/rN,EAAAyD,YAAA,wBAhBAmoQ,EAAA,IAAAtrQ,WAAA2K,EAAAC,GACA,IAAAO,EAAA/Q,KAAA+Q,SACA,IAAApP,EAAA,EAAAC,EAAA2O,EAAAC,EAA0C7O,EAAAC,IAAQD,EAAA,CAClD,IAAA0vQ,EAAA,EACAC,EAAA3vQ,EAAAoP,EACA,IAAAxE,EAAA,EAAuBA,EAAAwE,IAAcxE,EAAA,CACrC,IAAA+L,EAAA60N,EAAAmkC,EAAA/kQ,GACAglQ,EAAA,EAAAhlQ,EACA,GAAA+L,EAAA+4M,EAAAkgD,IAAAj5P,EAAA+4M,EAAAkgD,EAAA,IACAF,EAAA,IACA,OAGAH,EAAAvvQ,GAAA0vQ,GAMA,GAAAH,EACA,IAAAvvQ,EAAA,EAAA4K,EAAA,EAAA3K,EAAA2O,EAAAE,EAAqD9O,EAAAC,IAAQD,EAAA4K,GAAA,EAC7D0kQ,EAAA1kQ,GAAA2kQ,EAAAvvQ,QAGA,IAAAA,EAAA,EAAA4K,EAAA,EAAA3K,EAAA2O,EAAAE,EAAqD9O,EAAAC,IAAQD,EAAA4K,GAAA,EAC7D0kQ,EAAA1kQ,GAAA,KAIAilQ,aAAA,SAAAzqQ,EAAAwJ,EAAAC,GACA,IAAAm/P,EAAA3vQ,KAAAuuO,OAAAvuO,KAAAuuO,MAAAohC,MACA,GAAAA,EASA,IANA,IAKAh6P,EAAAC,EAAAxM,EALAqoQ,EAAAzxQ,KAAAqtO,WAAA99N,OAAAogQ,EAAA,GACA+B,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA3vQ,EAAAyO,EAAAC,EAAA,EAEA7O,EAAA,EAAqBA,EAAAG,EAAYH,GAAA,GACjC,IAAAqsD,EAAAjnD,EAAApF,EAAA,GACA,OAAAqsD,EAAA,CAMA,IAAA9iD,EAAA,IAAA8iD,EACAr4C,GAAA5O,EAAApF,GAAA+vQ,GAAAxmQ,EAAAwmQ,EACA97P,GAAA7O,EAAApF,EAAA,GAAAgwQ,GAAAzmQ,EAAAymQ,EACAvoQ,GAAArC,EAAApF,EAAA,GAAAiwQ,GAAA1mQ,EAAA0mQ,EACA7qQ,EAAApF,GAAAgU,GAAA,IAAAA,GAAA,UAAAA,EACA5O,EAAApF,EAAA,GAAAiU,GAAA,IAAAA,GAAA,UAAAA,EACA7O,EAAApF,EAAA,GAAAyH,GAAA,IAAAA,GAAA,UAAAA,OAXArC,EAAApF,GAAA,IACAoF,EAAApF,EAAA,OACAoF,EAAApF,EAAA,SAYAkuO,gBAAA,WACA,IAaAP,EAbAuiC,EAAAh+P,UAAA/R,OAAA,YAAA+R,UAAA,IAAAA,UAAA,GAEA+Q,EAAA5kB,KAAA4kB,UACAC,EAAA7kB,KAAA6kB,WACAsC,GACA5W,MAAAqU,EACApU,OAAAqU,GAEA9T,EAAA/Q,KAAA+Q,SACAV,EAAArQ,KAAAuQ,MACAD,EAAAtQ,KAAAwQ,OACAE,EAAA1Q,KAAA0Q,IACA9E,EAAAyE,EAAAU,EAAAL,EAAA,KAEA,IAAAmhQ,EAAA,CACA,IAAAnqP,EAMA,GALA,eAAA1nB,KAAAqtO,WAAAttO,MAAA,IAAA2Q,EACAgX,EAAApiB,EAAAqiB,UAAAmqP,eACS,cAAA9xQ,KAAAqtO,WAAAttO,MAAA,IAAA2Q,GAAA1Q,KAAA4vQ,cACTloP,EAAApiB,EAAAqiB,UAAAoqP,WAEArqP,IAAA1nB,KAAAuuO,QAAAvuO,KAAAqxN,MAAAzsM,IAAAvU,GAAAwU,IAAAvU,EAAA,CAGA,GAFA6W,EAAAO,OACA4nN,EAAAtvO,KAAAgyQ,cAAA1hQ,EAAA1E,GACA5L,KAAAmtO,iBAAA9wN,EAAAnX,aACAiiB,EAAAzC,KAAA4qN,MACW,CACX,IAAA2iC,EAAA,IAAArsQ,WAAA0pO,EAAAxtO,QACAmwQ,EAAA5vQ,IAAAitO,GACAnoN,EAAAzC,KAAAutP,EAEA,GAAAjyQ,KAAA4vQ,YAAA,IACAtqQ,EAAA0Y,QAAA0J,IAAApiB,EAAAqiB,UAAAmqP,gBAEA,IADA,IAAA/qQ,EAAAogB,EAAAzC,KACA/iB,EAAA,EAAAC,EAAAmF,EAAAjF,OAA+CH,EAAAC,EAAQD,IACvDoF,EAAApF,IAAA,IAGA,OAAAwlB,EAEA,GAAAnnB,KAAAmtO,iBAAA3wN,EAAA0D,aAAAlgB,KAAAuuO,QAAAvuO,KAAAqxN,KAAA,CACA,IAAA6gD,EAAA5hQ,EAAA1E,EACA,OAAA5L,KAAAqtO,WAAAttO,MACA,iBACAmyQ,GAAA,EACA,gBACA,iBAGA,OAFA/qP,EAAAO,KAAApiB,EAAAqiB,UAAAoqP,UACA5qP,EAAAzC,KAAA1kB,KAAAgyQ,cAAAE,EAAAttP,EAAAC,MACAsC,IAKA,IAEAnX,EAAAmiQ,EAFA1hQ,EAAA,GADA6+N,EAAAtvO,KAAAgyQ,cAAA1hQ,EAAA1E,IACA9J,OAAA8J,EAAAiZ,EAAAvU,EACAK,EAAA3Q,KAAAywQ,cAAAnhC,GAqBA,OAnBAuiC,GAAA7xQ,KAAAuuO,OAAAvuO,KAAAqxN,MAMAlqM,EAAAO,KAAApiB,EAAAqiB,UAAAC,WACAT,EAAAzC,KAAA,IAAA9e,WAAAgf,EAAAC,EAAA,GACA7U,EAAA,EACAmiQ,KACAnyQ,KAAAgxQ,YAAA7pP,EAAAzC,KAAAE,EAAAC,EAAApU,EAAAE,KATAwW,EAAAO,KAAApiB,EAAAqiB,UAAAoqP,UACA5qP,EAAAzC,KAAA,IAAA9e,WAAAgf,EAAAC,EAAA,GACA7U,EAAA,EACAmiQ,MAQAnyQ,KAAA4vQ,aACA5vQ,KAAAwwQ,aAAA7/P,GAEA3Q,KAAAqtO,WAAAj9N,QAAA+W,EAAAzC,KAAArU,EAAAC,EAAAsU,EAAAC,EAAApU,EAAAC,EAAAC,EAAAX,GACAmiQ,GACAnyQ,KAAAwxQ,aAAArqP,EAAAzC,KAAAE,EAAAnU,GAEA0W,GAEAiqP,eAAA,SAAArqQ,GACA,IAAAgK,EAAA/Q,KAAA+Q,SACA,OAAAA,EACA,UAAAzL,EAAAyD,YAAA,0CAAAgI,GAEA,IAMApP,EAAAG,EANAyO,EAAAvQ,KAAAuQ,MACAC,EAAAxQ,KAAAwQ,OACAE,EAAA1Q,KAAA0Q,IACA9E,EAAA2E,EAAAQ,EAAAL,EAAA,KACA4+N,EAAAtvO,KAAAgyQ,cAAAxhQ,EAAA5E,GACA+E,EAAA3Q,KAAAywQ,cAAAnhC,GAEA,OAAA5+N,EAAA,CAaA1Q,KAAA4vQ,aACA5vQ,KAAAwwQ,aAAA7/P,GAEA7O,EAAAyO,EAAAC,EACA,IAAAuE,EAAA,SAAArE,GAAA,GACA,IAAA/O,EAAA,EAAiBA,EAAAG,IAAYH,EAC7BoF,EAAApF,GAAAoT,EAAApE,EAAAhP,GAAA,OAjBA,GADAG,EAAAyO,EAAAC,EACAxQ,KAAA4vQ,YACA,IAAAjuQ,EAAA,EAAqBA,EAAAG,IAAYH,EACjCoF,EAAApF,GAAAgP,EAAAhP,GAAA,WAGA,IAAAA,EAAA,EAAqBA,EAAAG,IAAYH,EACjCoF,EAAApF,GAAA,KAAAgP,EAAAhP,IAcAqwQ,cAAA,SAAAlwQ,EAAA8iB,EAAAC,GACA,IAAAX,EAAArQ,UAAA/R,OAAA,YAAA+R,UAAA,IAAAA,UAAA,GAMA,OAJA7T,KAAAmtO,MAAAvmO,QACA5G,KAAAmtO,MAAAvoN,aAAA5kB,KAAAuQ,MACAvQ,KAAAmtO,MAAAtoN,cAAA7kB,KAAAwQ,OACAxQ,KAAAmtO,MAAAjpN,aACAlkB,KAAAmtO,MAAA1oO,SAAA3C,KAGAytO,EAnhBA,GAqhBAlwO,EAAAkwO","file":"15-3db8d5dd2ebe80be8b37.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.305';\nvar pdfjsBuild = '9c6a8801';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.305';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;"],"sourceRoot":""}