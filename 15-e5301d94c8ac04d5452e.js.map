{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","EOF","Name","name","this","nameCache","create","get","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","Promise","resolve","getArray","Array","isArray","i","ii","slice","length","isRef","fetch","getRaw","key","getKeys","keys","set","has","forEach","callback","empty","merge","dictArray","mergedDict","dict","isDict","keyName","undefined","Ref","num","gen","toString","str","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","call","clear","isName","v","type","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","__webpack_require__","_primitives","arrayBuffer","start","bytes","Uint8Array","pos","end","isEmpty","getByte","getUint16","b0","b1","getInt32","strEnd","subarray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","buffer","stringToBytes","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","chunk","shift","newLength","baseStreams","stream","Util","appendToArray","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","isSpace","firstDigit","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","Math","min","log","ColorSpace","unreachable","getRgb","src","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","bpc","comps","rgbBuf","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","resizeRgbImage","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFn","AlternateCS","range","LabCS","arguments","colorSpaces","resCS","mode","altIR","warn","isDefaultDecode","decode","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","isString","charCodeAt","outputDelta","lookupPos","r","g","convertToRgb","srcScale","m","y","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","max","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","sRGBTransferFunction","color","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","Error","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","e","MissingDataException","cipherTransform","makeInlineImage","array","push","makeStream","Number","isInteger","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","assert","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","StreamType","FLATE","LZW","DCT","JpegStream","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","ex","knownCommands","strBuf","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj1","obj2","obj3","isNum","hints","hintsLength","item","index","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","_jpg","configurable","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transform","transformNeeded","maxValue","decodeTransform","colorTransform","data","getData","drawWidth","drawHeight","getIR","forceDataSchema","createObjectURL","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","offset","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","extendObj","lastChunk","transfers","cached","getTransfers","send","operatorList","getLookupTableFactory","getGlyphsUnicode","getDingbatsGlyphsUnicode","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","begin","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","reject","read","then","readChunk","arrayByteLength","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","sort","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","next","sliceIterator","TypeError","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","stringToUTF8String","bytesToString","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","s","st","toRoman","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","promises","all","translatedFonts","translated","getPage","_this2","getPageDict","_ref","_ref2","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","actionName","indexOf","addDefaultProtocolToUrl","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","tryConvertUrlEncoding","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","first","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","topDict","XRefParseException","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","isNaN","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","l","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","d","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","componentsCount","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","getPrototypeOf","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","PasswordException","PasswordResponses","NEED_PASSWORD","decodeUserPassword","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","b2","parseFloat","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","toNumberArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","clip","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","__esModule","default","_message_handler","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","catch","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","now","getOperatorList","renderInteractiveForms","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","boundException","MissingPDFException","UnexpectedResponseException","UnknownErrorException","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","window","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","getInheritableProperty","stopWhenFound","resources","mediaBox","cropBox","intersection","intersect","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getter","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","getTransformMatrix","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","head","locaLength","b3","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","ratio","cssColor","makeCssRgb","background","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,i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ACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GAC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47C,eACA57C,EAAA27C,gBACA37C,EAAAm8B,yBACAn8B,EAAA07C,QACA17C,EAAAy7C,QACAz7C,EAAAw7C,eACAx7C,EAAAu7C,kBACAv7C,EAAAs7C,kBACAt7C,EAAAq7C,oDCl3CAv7C,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAknD,YAAAlnD,EAAAmnD,eAAAnnD,EAAAonD,WAAApnD,EAAAqnD,WAAArnD,EAAAsnD,SAAAtnD,EAAAunD,WAAAvnD,EAAAwnD,UAAAxnD,EAAAynD,IAAAznD,EAAA0nD,UAAA1nD,EAAA2nD,wBAAA9jD,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBuhD,EAAgBvhD,EAAQ,KAExBwhD,EAAiBxhD,EAAQ,KAGzBshD,EAAA,moIACAD,EAAA,WACA,IAAAI,EAAA,OACAC,GAAA,QACA93C,IAAA,EACA+3C,eAAA,EACAC,MAAA,GACG,MACHF,GAAA,QACA93C,IAAA,EACA+3C,eAAA,EACAC,MAAA,GACG,CACHF,GAAA,UACA93C,IAAA,EACA+3C,eAAA,GACG,CACHD,GAAA,UACA93C,IAAA,EACAi4C,YAAA,GACG,CACHH,GAAA,UACA93C,IAAA,EACAi4C,YAAA,GACG,CACHH,GAAA,UACA93C,IAAA,EACAi4C,YAAA,GACG,CACHH,GAAA,YACA93C,IAAA,EACAi4C,YAAA,GACG,MACHH,GAAA,WACA93C,IAAA,EACAk4C,YAAA,GACG,CACHJ,GAAA,SACA93C,IAAA,EACAk4C,YAAA,GACG,WACHJ,GAAA,UACA93C,IAAA,EACA+3C,eAAA,GACG,gBACHD,GAAA,UACA93C,IAAA,EACA+3C,eAAA,EACAC,MAAA,GACG,CACHF,GAAA,WACA93C,IAAA,EACA+3C,eAAA,GACG,CACHD,GAAA,WACA93C,IAAA,EACA+3C,eAAA,GACG,CACHD,GAAA,UACA93C,IAAA,EACA+3C,eAAA,GACG,CACHD,GAAA,UACA93C,IAAA,EACA+3C,eAAA,GACG,CACHD,GAAA,UACA93C,IAAA,EACA+3C,eAAA,EACAC,MAAA,GACG,CACHF,GAAA,aACA93C,IAAA,EACAi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snB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,OACAtnB,IAAA,QACC,CACDsnB,MAAA,OACAtnB,IAAA,QACC,CACDsnB,MAAA,QACAtnB,IAAA,SACC,CACDsnB,MAAA,MACAtnB,IAAA,OACC,CACDsnB,MAAA,OACAtnB,IAAA,QACC,CACDsnB,MAAA,KACAtnB,IAAA,MACC,CACDsnB,MAAA,KACA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,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,IACG,EACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,IACG,EACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,IACG,EACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,EAAA,EACAjF,GAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,GACG,CACHiF,GAAA,EACAjF,EAAA,KAEA81D,EAAA,EACAC,OAAA,EACA9wD,EAAA,EACAjF,GAAA,GACK,CACLiF,EAAA,EACAjF,GAAA,GACK,CACLiF,GAAA,EACAjF,EAAA,IAEAg2D,UAAA,EACA/wD,EAAA,EACAjF,GAAA,GACK,CACLiF,EAAA,EACAjF,GAAA,GACK,CACLiF,GAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,GACK,CACLiF,GAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,KAEG,CACH+1D,OAAA,EACA9wD,GAAA,EACAjF,GAAA,GACK,CACLiF,EAAA,EACAjF,GAAA,GACK,CACLiF,EAAA,EACAjF,GAAA,GACK,CACLiF,GAAA,EACAjF,EAAA,IAEAg2D,UAAA,EACA/wD,EAAA,EACAjF,GAAA,GACK,CACLiF,GAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,GACK,CACLiF,EAAA,EACAjF,EAAA,MAGAi2D,EAAA,qBACAC,EAAA,OAyBA,SAAAC,EAAAC,EAAA37D,EAAAC,EAAA27D,EAAAC,EAAA1lE,EAAA2lE,EAAAC,GACA,GAAAJ,EAEA,OAAAK,EADA,IAAAC,EAAAF,EAAAnnD,KAAAmnD,EAAA5mE,MAAA4mE,EAAAxmE,KACAyK,EAAAC,GAAA,GAEA,OAAA27D,IAAAzlE,IAAA0lE,GAAA,IAAAC,EAAAxqE,QAAA,IAAAwqE,EAAA,GAAAtxD,IAAA,IAAAsxD,EAAA,GAAAv2D,IAAA,IAAAu2D,EAAA,GAAAtxD,IAAA,IAAAsxD,EAAA,GAAAv2D,GAAA,IAAAu2D,EAAA,GAAAtxD,IAAA,IAAAsxD,EAAA,GAAAv2D,IAAA,IAAAu2D,EAAA,GAAAtxD,IAAA,IAAAsxD,EAAA,GAAAv2D,EACA,OA9BA,SAAAvF,EAAAC,EAAA87D,GACA,IAEAv0B,EACAr2C,EACA6K,EACAkgE,EACApqC,EACAqqC,EACAC,EARAr7B,EAAAg7B,EAAAh7B,QACA/M,EAAA+nC,EAAAjB,aAAAE,YAAA,MAQAqB,EAAA,GAEA,IAAAlrE,EAAA,EAAeA,EAAA8O,EAAY9O,IAK3B,IAJA2gC,EAAAuqC,EAAAlrE,GAAA,IAAAkE,WAAA2K,GACAm8D,EAAAhrE,EAAA,EAAA2gC,EAAAuqC,EAAAlrE,EAAA,GAEAq2C,GADA40B,EAAAjrE,EAAA,EAAA2gC,EAAAuqC,EAAAlrE,EAAA,IACA,OAAAirE,EAAA,OAAAA,EAAA,OAAAD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MACAngE,EAAA,EAAiBA,EAAAgE,EAAWhE,IAC5B81B,EAAA91B,GAAAkgE,EAAAn7B,EAAAhN,QAAAC,EAAAwT,GACAA,GARA,MAQAA,IAAA,GAAAxrC,EAAA,EAAAgE,EAAAo8D,EAAApgE,EAAA,WAAAA,EAAA,EAAAgE,EAAAm8D,EAAAngE,EAAA,SAAAkgE,EAGA,OAAAG,EAQAC,CAAAt8D,EAAAC,EAAA87D,GAEA,IAAAQ,IAAApmE,EACAqmE,EAAApB,EAAAQ,GAAAjc,OAAAmc,GACAU,EAAA/7C,KAAA,SAAA/Y,EAAA7O,GACA,OAAA6O,EAAAnC,EAAA1M,EAAA0M,GAAAmC,EAAA8C,EAAA3R,EAAA2R,IAEA,IAQA7O,EAAAhB,EARA8hE,EAAAD,EAAAlrE,OACAorE,EAAA,IAAAx1B,UAAAu1B,GACAE,EAAA,IAAAz1B,UAAAu1B,GACAG,EAAA,GACAC,EAAA,EACAC,EAAA,EACAnmD,EAAA,EACAomD,EAAA,EAEA,IAAApiE,EAAA,EAAeA,EAAA8hE,EAAoB9hE,IACnC+hE,EAAA/hE,GAAA6hE,EAAA7hE,GAAA6P,EACAmyD,EAAAhiE,GAAA6hE,EAAA7hE,GAAA4K,EACAu3D,EAAAn+D,KAAAC,IAAAk+D,EAAAN,EAAA7hE,GAAA6P,GACAmM,EAAAhY,KAAAyH,IAAAuQ,EAAA6lD,EAAA7hE,GAAA6P,GACAuyD,EAAAp+D,KAAAC,IAAAm+D,EAAAP,EAAA7hE,GAAA4K,GACA5K,EAAA8hE,EAAA,GAAAD,EAAA7hE,GAAA4K,IAAAi3D,EAAA7hE,EAAA,GAAA4K,GAAAi3D,EAAA7hE,GAAA6P,IAAAgyD,EAAA7hE,EAAA,GAAA6P,EAAA,EACAqyD,GAAA,GAAAJ,EAAA,EAAA9hE,EAEAiiE,EAAAtvD,KAAA3S,GAGA,IAAAqiE,EAAAJ,EAAAtrE,OACA2rE,EAAA,IAAA/1B,UAAA81B,GACAE,EAAA,IAAAh2B,UAAA81B,GACAG,EAAA,IAAAr/D,YAAAk/D,GACA,IAAArhE,EAAA,EAAeA,EAAAqhE,EAA2BrhE,IAC1ChB,EAAAiiE,EAAAjhE,GACAshE,EAAAthE,GAAA6gE,EAAA7hE,GAAA6P,EACA0yD,EAAAvhE,GAAA6gE,EAAA7hE,GAAA4K,EACA43D,EAAAxhE,GAAA,GAAA8gE,EAAA,EAAA9hE,EAiBA,IAfA,IASAqB,EACAsrC,EACA81B,EAEAj1B,EACA1wC,EAdA4lE,GAAAP,EACAQ,GAAAP,EACAQ,EAAAv9D,EAAA2W,EACA6mD,EAAAhC,EAAAI,GACA9pC,EAAA,IAAAz8B,WAAA2K,GACAq8D,EAAA,GACAt7B,EAAAg7B,EAAAh7B,QACA/M,EAAA+nC,EAAAjB,aAAAE,YAAA,MACAyC,EAAA,EAIAj2B,EAAA,EAGAr2C,EAAA,EAAmBA,EAAA8O,EAAY9O,IAAA,CAC/B,GAAA0qE,EAGA,GADA4B,GADA18B,EAAAhN,QAAAC,EAAAwpC,GAEA,CACAnB,EAAA/uD,KAAAwkB,GACA,SAKA,IAFAA,EAAA,IAAAz8B,WAAAy8B,GACAuqC,EAAA/uD,KAAAwkB,GACA91B,EAAA,EAAiBA,EAAAgE,EAAWhE,IAC5B,GAAAugE,GAAApmE,EAAAhF,GAAA6K,GACA81B,EAAA91B,GAAA,MADA,CAIA,GAAAA,GAAAqhE,GAAArhE,EAAAuhE,GAAApsE,GAAAmsE,EAEA,IADA91B,KAAA,EAAAq1B,EACAliE,EAAA,EAAqBA,EAAAqiE,EAA2BriE,IAChD2sC,EAAAn2C,EAAA+rE,EAAAviE,GACAyiE,EAAAphE,EAAAihE,EAAAtiE,IACAwtC,EAAAk0B,EAAA/0B,GAAA81B,MAGA51B,GADAW,EAAAg1B,EAAAxiE,SAOA,IAFA6sC,EAAA,EACA/vC,EAAAglE,EAAA,EACA9hE,EAAA,EAAqBA,EAAA8hE,EAAoB9hE,IAAAlD,KACzC2lE,EAAAphE,EAAA0gE,EAAA/hE,KACA,GAAAyiE,EAAAp9D,IACAsnC,EAAAn2C,EAAAwrE,EAAAhiE,KACA,IACAwtC,EAAAk0B,EAAA/0B,GAAA81B,MAEA51B,GAAAW,GAAA1wC,GAMA,IAAAykE,EAAAn7B,EAAAhN,QAAAC,EAAAwT,GACA1V,EAAA91B,GAAAkgE,GAGA,OAAAG,EAEA,SAAAqB,EAAA19D,EAAAC,EAAA27D,EAAA+B,EAAAC,EAAAC,EAAAhC,EAAAC,EAAAC,GACA,IAAA+B,EAAAzC,EAAAO,GAAAN,OACA,IAAAM,IACAkC,IAAAne,OAAA,CAAAmc,EAAA,MAEA,IAGAnhE,EAHAojE,EAAAD,EAAAxsE,OACA0sE,EAAA,IAAAhmE,WAAA+lE,GACAE,EAAA,IAAAjmE,WAAA+lE,GAEA,IAAApjE,EAAA,EAAeA,EAAAojE,EAA0BpjE,IACzCqjE,EAAArjE,GAAAmjE,EAAAnjE,GAAA6P,EACAyzD,EAAAtjE,GAAAmjE,EAAAnjE,GAAA4K,EAEA,IAAA24D,EAAA7C,EAAAO,GAAAL,UACA,IAAAK,IACAsC,IAAAve,OAAA,CAAAmc,EAAA,MAEA,IAAAqC,EAAAD,EAAA5sE,OACA8sE,EAAA,IAAApmE,WAAAmmE,GACAE,EAAA,IAAArmE,WAAAmmE,GACA,IAAAxjE,EAAA,EAAeA,EAAAwjE,EAA6BxjE,IAC5CyjE,EAAAzjE,GAAAujE,EAAAvjE,GAAA6P,EACA6zD,EAAA1jE,GAAAujE,EAAAvjE,GAAA4K,EASA,IAPA,IAAA+4D,EAAAX,EAAA,GAAArsE,OACAitE,EAAAZ,EAAArsE,OACAksE,EAAA/B,EAAAG,GACAS,EAAA,GACAt7B,EAAAg7B,EAAAh7B,QACA/M,EAAA+nC,EAAAjB,aAAAE,YAAA,MACAyC,EAAA,EACAtsE,EAAA,EAAmBA,EAAA8O,EAAY9O,IAAA,CAC/B,GAAA0qE,EAGA,GADA4B,GADA18B,EAAAhN,QAAAC,EAAAwpC,GAGA,UAAA9C,EAAA,+BAGA,IAAA5oC,EAAA,IAAAz8B,WAAA2K,GACAq8D,EAAA/uD,KAAAwkB,GACA,QAAA91B,EAAA,EAAqBA,EAAAgE,EAAWhE,IAAA,CAChC,IAAAsrC,EAAA81B,EACA51B,EAAA,EACA,IAAA7sC,EAAA,EAAmBA,EAAAojE,EAA0BpjE,IAC7C2sC,EAAAn2C,EAAA8sE,EAAAtjE,GACAyiE,EAAAphE,EAAAgiE,EAAArjE,GACA2sC,EAAA,GAAA81B,EAAA,GAAAA,GAAAp9D,EACAwnC,IAAA,EAEAA,KAAA,EAAA60B,EAAA/0B,GAAA81B,GAGA,IAAAziE,EAAA,EAAmBA,EAAAwjE,EAA6BxjE,IAChD2sC,EAAAn2C,EAAAktE,EAAA1jE,GAAAkjE,EACAT,EAAAphE,EAAAoiE,EAAAzjE,GAAAijE,EACAt2B,EAAA,GAAAA,GAAAi3B,GAAAnB,EAAA,GAAAA,GAAAkB,EACA92B,IAAA,EAEAA,KAAA,EAAAm2B,EAAAr2B,GAAA81B,GAGA,IAAAlB,EAAAn7B,EAAAhN,QAAAC,EAAAwT,GACA1V,EAAA91B,GAAAkgE,GAGA,OAAAG,EA+GA,SAAAmC,EAAAC,EAAAC,EAAA1+D,EAAAC,EAAA0+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvD,EAAAwD,EAAAC,GACA,GAAAf,GAAAC,EACA,UAAAhE,EAAA,4CAEA,IACAvpE,EAAA2gC,EADAuqC,EAAA,GAEA,IAAAlrE,EAAA,EAAeA,EAAA8O,EAAY9O,IAAA,CAE3B,GADA2gC,EAAA,IAAAz8B,WAAA2K,GACA2+D,EACA,QAAA3iE,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClC81B,EAAA91B,GAAA2iE,EAGAtC,EAAA/uD,KAAAwkB,GAEA,IAAAiP,EAAAg7B,EAAAh7B,QACA+5B,EAAAiB,EAAAjB,aACA2E,EAAAhB,GAAAW,EAAAM,YAAA77D,OAAA27D,IAAA3E,EAAAC,EAAA,OAAA/5B,GACA4+B,EAAA,EAEA,IADAxuE,EAAA,EACAA,EAAAytE,GAAA,CAEAa,GADAhB,EAAAW,EAAAM,YAAA77D,OAAA27D,GAAA3E,EAAAC,EAAA,OAAA/5B,GAKA,IADA,IAAA6+B,EADAD,GADAlB,EAAAW,EAAAS,YAAAh8D,OAAA27D,GAAA3E,EAAAC,EAAA,OAAA/5B,KAGA,CACA,IAAA++B,EAAA,EACAjB,EAAA,IACAiB,EAAArB,EAAAe,EAAAthE,SAAAqhE,GAAA1E,EAAAC,EAAA,OAAA/5B,IAEA,IAAArnC,EAAAmlE,EAAAY,EAAAK,EACAC,EAAAtB,EAAAW,EAAAY,cAAAn8D,OAAA27D,GAAAtE,EAAAJ,EAAA/5B,EAAAg+B,GACAkB,EAAAvB,IAAAD,EAAAe,EAAAzrC,UAAA8mC,EAAAC,EAAA,OAAA/5B,IACAm/B,EAAApB,EAAAiB,GACAI,EAAAD,EAAA,GAAA5uE,OACA8uE,EAAAF,EAAA5uE,OACA,GAAA2uE,EAAA,CACA,IAAAI,EAAAxF,EAAAC,EAAA,QAAA/5B,GACAu/B,EAAAzF,EAAAC,EAAA,QAAA/5B,GAKAm/B,EAAAxC,EAFAyC,GAAAE,EACAD,GAAAE,EACAjB,EAAAa,GAAAG,GAAA,GAJAxF,EAAAC,EAAA,QAAA/5B,IAIAu/B,GAAA,GAHAzF,EAAAC,EAAA,QAAA/5B,IAGA,EAAAu+B,EAAAvD,GAEA,IAEAnsB,EAAApB,EAAA+xB,EAFAC,EAAA9mE,GAAA,EAAAwlE,EAAA,EAAAkB,EAAA,GACAK,EAAAb,GAAA,EAAAV,EAAAiB,EAAA,KAEA,GAAAnB,EAAA,CACA,IAAApvB,EAAA,EAAsBA,EAAAwwB,EAAmBxwB,IAEzC,GADA9d,EAAAuqC,EAAAoE,EAAA7wB,GACA,CAGA2wB,EAAAL,EAAAtwB,GACA,IAAA8wB,EAAA/hE,KAAAC,IAAAoB,EAAAwgE,EAAAL,GACA,OAAAhB,GACA,OACA,IAAA3wB,EAAA,EAA4BA,EAAAkyB,EAAelyB,IAC3C1c,EAAA0uC,EAAAhyB,IAAA+xB,EAAA/xB,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAAkyB,EAAelyB,IAC3C1c,EAAA0uC,EAAAhyB,IAAA+xB,EAAA/xB,GAEA,MACA,QACA,UAAAksB,EAAA,YAAAyE,EAAA,sBAGAS,GAAAQ,EAAA,MACS,CACT,IAAA5xB,EAAA,EAAsBA,EAAA4xB,EAAmB5xB,IAEzC,GADA1c,EAAAuqC,EAAAmE,EAAAhyB,GAKA,OADA+xB,EAAAL,EAAA1xB,GACA2wB,GACA,OACA,IAAAvvB,EAAA,EAA4BA,EAAAuwB,EAAkBvwB,IAC9C9d,EAAA2uC,EAAA7wB,IAAA2wB,EAAA3wB,GAEA,MACA,OACA,IAAAA,EAAA,EAA4BA,EAAAuwB,EAAkBvwB,IAC9C9d,EAAA2uC,EAAA7wB,IAAA2wB,EAAA3wB,GAEA,MACA,QACA,UAAA8qB,EAAA,YAAAyE,EAAA,qBAGAS,GAAAO,EAAA,EAEAhvE,IACA,IAAAwvE,EAAAlC,EAAAW,EAAAwB,YAAA/8D,OAAA27D,GAAA3E,EAAAC,EAAA,OAAA/5B,GACA,UAAA4/B,EACA,MAEAf,GAAAe,EAAA1B,GAGA,OAAA5C,EA2JA,SAAAwE,EAAAjsD,EAAAzf,GACA,IAAA2rE,EAAA,GACAA,EAAA1X,QAAA,EAAAr0D,EAAAsuC,YAAAzuB,EAAAzf,GACA,IAAAmvB,EAAA1P,EAAAzf,EAAA,GACA4rE,EAAA,GAAAz8C,EACA,IAAA62C,EAAA4F,GACA,UAAArG,EAAA,yBAAAqG,GAEAD,EAAAntE,KAAAotE,EACAD,EAAAE,SAAA7F,EAAA4F,GACAD,EAAAG,qBAAA,IAAA38C,GACA,IAAA48C,KAAA,GAAA58C,GACA68C,EAAAvsD,EAAAzf,EAAA,GACAisE,EAAAD,GAAA,IACAE,EAAA,IAAAF,GACAjkD,EAAA/nB,EAAA,EACA,OAAAgsE,EAAA,CACAC,EAAA,aAAArsE,EAAAsuC,YAAAzuB,EAAAsI,EAAA,GACAA,GAAA,EACA,IAAA9nB,EAAAgsE,EAAA,KAEA,IADAC,EAAA,GAAAzsD,EAAAsI,OACA9nB,EAAA,GACAisE,EAAA/zD,KAAAsH,EAAAsI,WAEK,OAAAikD,GAAA,IAAAA,EACL,UAAAzG,EAAA,6BAEAoG,EAAAO,aACA,IAEAlwE,EAAAC,EAFAkwE,EAAAR,EAAA1X,QAAA,MAAA0X,EAAA1X,QAAA,UACAmY,EAAA,GAEA,IAAApwE,EAAA,EAAeA,EAAAiwE,EAAqBjwE,IAAA,CACpC,IAAAi4D,EAAA,IAAAkY,EAAA1sD,EAAAsI,GAAA,IAAAokD,GAAA,EAAAvsE,EAAAmuC,YAAAtuB,EAAAsI,IAAA,EAAAnoB,EAAAsuC,YAAAzuB,EAAAsI,GACAqkD,EAAAj0D,KAAA87C,GACAlsC,GAAAokD,EAWA,GATAR,EAAAS,aACAL,GAGAJ,EAAAU,iBAAA,EAAAzsE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,GAHA4jD,EAAAU,gBAAA5sD,EAAAsI,KAKA4jD,EAAAxvE,QAAA,EAAAyD,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA,aAAA4jD,EAAAxvE,OAAA,CACA,QAAAyvE,EA4BA,UAAArG,EAAA,kCA3BA,IAAA+G,EAAAC,EAAA9sD,EAAAsI,GAEAykD,KAAA,EADA/sD,EAAAsI,EAAA0kD,IAGAC,EAAA,IAAAxsE,WADA,GAUA,IARAssE,IACAE,EAAA,OACAA,EAAA,QAEAA,EAAA,GAAAJ,EAAAxhE,SAAA,OACA4hE,EAAA,GAAAJ,EAAAxhE,QAAA,OACA4hE,EAAA,GAAAJ,EAAAxhE,QAAA,MACA4hE,EAAA,OAAAJ,EAAAxhE,OACA9O,EAAA+rB,EAAA9rB,EAAAwjB,EAAAtjB,OAA4CH,EAAAC,EAAQD,IAAA,CAEpD,IADA,IAAA6K,EAAA,EACAA,EAZA,GAYA6lE,EAAA7lE,KAAA4Y,EAAAzjB,EAAA6K,IACAA,IAEA,GAfA,IAeAA,EAAA,CACA8kE,EAAAxvE,OAAAH,EAhBA,EAiBA,OAGA,gBAAA2vE,EAAAxvE,OACA,UAAAopE,EAAA,6BAOA,OADAoG,EAAAgB,UAAA5kD,EACA4jD,EAEA,SAAAiB,EAAAxqB,EAAA3iC,EAAAzf,EAAAI,GAGA,IAFA,IAAAysE,EAAA,GACA9kD,EAAA/nB,EACA+nB,EAAA3nB,GAAA,CACA,IAAAurE,EAAAD,EAAAjsD,EAAAsI,GACAA,EAAA4jD,EAAAgB,UACA,IAAAG,EAAA,CACA1qB,OAAAupB,EACAlsD,QAQA,GANA2iC,EAAA2qB,eACAD,EAAA9sE,MAAA+nB,EACAA,GAAA4jD,EAAAxvE,OACA2wE,EAAA1sE,IAAA2nB,GAEA8kD,EAAA10D,KAAA20D,GACA,KAAAnB,EAAAntE,KACA,MAGA,GAAA4jD,EAAA2qB,aACA,QAAA/wE,EAAA,EAAAC,EAAA4wE,EAAA1wE,OAA2CH,EAAAC,EAAQD,IACnD6wE,EAAA7wE,GAAAgE,MAAA+nB,EACAA,GAAA8kD,EAAA7wE,GAAAomD,OAAAjmD,OACA0wE,EAAA7wE,GAAAoE,IAAA2nB,EAGA,OAAA8kD,EAEA,SAAAN,EAAA9sD,EAAAzf,GACA,OACA6K,OAAA,EAAAjL,EAAAsuC,YAAAzuB,EAAAzf,GACA8K,QAAA,EAAAlL,EAAAsuC,YAAAzuB,EAAAzf,EAAA,GACAqV,GAAA,EAAAzV,EAAAsuC,YAAAzuB,EAAAzf,EAAA,GACAoQ,GAAA,EAAAxQ,EAAAsuC,YAAAzuB,EAAAzf,EAAA,IACAgqE,oBAAA,EAAAvqD,EAAAzf,EAAA,KAGA,IAAAysE,EAAA,GACA,SAAAO,EAAAF,EAAA3X,GACA,IAIAnxC,EAAA2iD,EAAA3qE,EAAAixE,EAJA7qB,EAAA0qB,EAAA1qB,OACA3iC,EAAAqtD,EAAArtD,KACAsI,EAAA+kD,EAAA9sE,MACAI,EAAA0sE,EAAA1sE,IAEA,OAAAgiD,EAAA5jD,MACA,OACA,IAAA0uE,EAAA,GACAC,GAAA,EAAAvtE,EAAAmuC,YAAAtuB,EAAAsI,GAYA,GAXAmlD,EAAA5D,WAAA,EAAA6D,GACAD,EAAA3D,cAAA,EAAA4D,GACAD,EAAAE,kBAAAD,GAAA,IACAD,EAAAG,kBAAAF,GAAA,IACAD,EAAAI,mBAAAH,GAAA,IACAD,EAAAK,6BAAAJ,GAAA,IACAD,EAAAM,2BAAA,IAAAL,GACAD,EAAAO,+BAAA,IAAAN,GACAD,EAAA7F,SAAA8F,GAAA,KACAD,EAAAQ,mBAAAP,GAAA,KACAplD,GAAA,GACAmlD,EAAA5D,QAAA,CAGA,IAFA2D,EAAA,IAAAC,EAAA7F,SAAA,IACAV,EAAA,GACA3qE,EAAA,EAAqBA,EAAAixE,EAAcjxE,IACnC2qE,EAAAxuD,KAAA,CACA9C,GAAA,EAAAzV,EAAA+tE,UAAAluD,EAAAsI,GACA3X,GAAA,EAAAxQ,EAAA+tE,UAAAluD,EAAAsI,EAAA,KAEAA,GAAA,EAEAmlD,EAAAvG,KAEA,GAAAuG,EAAA3D,aAAA2D,EAAAQ,mBAAA,CAEA,IADA/G,EAAA,GACA3qE,EAAA,EAAqBA,EAAA,EAAOA,IAC5B2qE,EAAAxuD,KAAA,CACA9C,GAAA,EAAAzV,EAAA+tE,UAAAluD,EAAAsI,GACA3X,GAAA,EAAAxQ,EAAA+tE,UAAAluD,EAAAsI,EAAA,KAEAA,GAAA,EAEAmlD,EAAA/C,aAAAxD,EAEAuG,EAAAU,yBAAA,EAAAhuE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACAmlD,EAAAW,oBAAA,EAAAjuE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA/D,EAAA,CAAAkpD,EAAA9qB,EAAA6R,OAAA7R,EAAAgqB,WAAA3sD,EAAAsI,EAAA3nB,GACA,MACA,OACA,OACA,IAAA0tE,EAAA,GACAA,EAAAl9D,KAAA27D,EAAA9sD,EAAAsI,GACAA,GAAA0kD,EACA,IAAAsB,GAAA,EAAAnuE,EAAAmuC,YAAAtuB,EAAAsI,GAYA,GAXAA,GAAA,EACA+lD,EAAAxE,WAAA,EAAAyE,GACAD,EAAAvE,cAAA,EAAAwE,GACAD,EAAA1D,aAAA2D,GAAA,IACAD,EAAApE,UAAA,GAAAoE,EAAA1D,aACA0D,EAAA/D,gBAAAgE,GAAA,IACAD,EAAAjE,cAAA,GAAAkE,GACAD,EAAA9D,oBAAA+D,GAAA,IACAD,EAAAtE,kBAAAuE,GAAA,IACAD,EAAAhE,SAAAiE,GAAA,OACAD,EAAAJ,mBAAAK,GAAA,KACAD,EAAAxE,QAAA,CACA,IAAA0E,GAAA,EAAApuE,EAAAmuC,YAAAtuB,EAAAsI,GACAA,GAAA,EACA+lD,EAAAG,UAAA,EAAAD,EACAF,EAAAI,UAAAF,GAAA,IACAF,EAAAK,UAAAH,GAAA,IACAF,EAAAM,oBAAAJ,GAAA,IACAF,EAAAO,oBAAAL,GAAA,IACAF,EAAAQ,oBAAAN,GAAA,KACAF,EAAAS,oBAAAP,GAAA,KACAF,EAAAU,iCAAA,MAAAR,GAEA,GAAAF,EAAAvE,aAAAuE,EAAAJ,mBAAA,CAEA,IADA/G,EAAA,GACA3qE,EAAA,EAAqBA,EAAA,EAAOA,IAC5B2qE,EAAAxuD,KAAA,CACA9C,GAAA,EAAAzV,EAAA+tE,UAAAluD,EAAAsI,GACA3X,GAAA,EAAAxQ,EAAA+tE,UAAAluD,EAAAsI,EAAA,KAEAA,GAAA,EAEA+lD,EAAA3D,aAAAxD,EAEAmH,EAAArE,yBAAA,EAAA7pE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA/D,EAAA,CAAA8pD,EAAA1rB,EAAAgqB,WAAA3sD,EAAAsI,EAAA3nB,GACA,MACA,QACA,IAAAquE,EAAA,GACAC,EAAAjvD,EAAAsI,KACA0mD,EAAAjI,OAAA,EAAAkI,GACAD,EAAApH,SAAAqH,GAAA,IACAD,EAAAE,aAAAlvD,EAAAsI,KACA0mD,EAAAG,cAAAnvD,EAAAsI,KACA0mD,EAAAI,iBAAA,EAAAjvE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA/D,EAAA,CAAAyqD,EAAArsB,EAAA6R,OAAAx0C,EAAAsI,EAAA3nB,GACA,MACA,QACA,QACA,IAAA0uE,EAAA,GACAA,EAAAl+D,KAAA27D,EAAA9sD,EAAAsI,GACAA,GAAA0kD,EACA,IAAAsC,EAAAtvD,EAAAsI,KACA+mD,EAAAtI,OAAA,EAAAuI,GACAD,EAAAzH,SAAA0H,GAAA,IACAD,EAAAE,cAAA,EAAAD,GACAD,EAAA9E,oBAAA+E,GAAA,IACAD,EAAAtF,kBAAAuF,GAAA,IACAD,EAAAG,WAAA,EAAArvE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA+mD,EAAAI,YAAA,EAAAtvE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA+mD,EAAAK,YAAA,cAAAvvE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA+mD,EAAAM,YAAA,cAAAxvE,EAAAsuC,YAAAzuB,EAAAsI,GACAA,GAAA,EACA+mD,EAAAO,aAAA,EAAAzvE,EAAAmuC,YAAAtuB,EAAAsI,GACAA,GAAA,EACA+mD,EAAAQ,aAAA,EAAA1vE,EAAAmuC,YAAAtuB,EAAAsI,GACAA,GAAA,EACA/D,EAAA,CAAA8qD,EAAA1sB,EAAAgqB,WAAA3sD,EAAAsI,EAAA3nB,GACA,MACA,QACA,QACA,IAAAmvE,EAAA,GACAA,EAAA3+D,KAAA27D,EAAA9sD,EAAAsI,GACAA,GAAA0kD,EACA,IAAA+C,EAAA/vD,EAAAsI,KAIA,GAHAwnD,EAAA/I,OAAA,EAAAgJ,GACAD,EAAAlI,SAAAmI,GAAA,IACAD,EAAA7I,cAAA,EAAA8I,IACAD,EAAA/I,IAAA,CAGA,IAFAyG,EAAA,IAAAsC,EAAAlI,SAAA,IACAV,EAAA,GACA3qE,EAAA,EAAqBA,EAAAixE,EAAcjxE,IACnC2qE,EAAAxuD,KAAA,CACA9C,GAAA,EAAAzV,EAAA+tE,UAAAluD,EAAAsI,GACA3X,GAAA,EAAAxQ,EAAA+tE,UAAAluD,EAAAsI,EAAA,KAEAA,GAAA,EAEAwnD,EAAA5I,KAEA3iD,EAAA,CAAAurD,EAAA9vD,EAAAsI,EAAA3nB,GACA,MACA,QACA,IAAAqvE,EAAA,CACA5kE,OAAA,EAAAjL,EAAAsuC,YAAAzuB,EAAAsI,GACAjd,QAAA,EAAAlL,EAAAsuC,YAAAzuB,EAAAsI,EAAA,GACA2nD,aAAA,EAAA9vE,EAAAsuC,YAAAzuB,EAAAsI,EAAA,GACA4nD,aAAA,EAAA/vE,EAAAsuC,YAAAzuB,EAAAsI,EAAA,KAEA,aAAA0nD,EAAA3kE,eACA2kE,EAAA3kE,OAEA,IAAA8kE,EAAAnwD,EAAAsI,EAAA,KACA,EAAAnoB,EAAAmuC,YAAAtuB,EAAAsI,EAAA,IACA0nD,EAAAI,YAAA,EAAAD,GACAH,EAAAlG,cAAA,EAAAqG,GACAH,EAAAjG,kBAAAoG,GAAA,IACAH,EAAAzF,oBAAA4F,GAAA,IACAH,EAAAK,kBAAA,GAAAF,GACAH,EAAAM,+BAAA,GAAAH,GACA5rD,EAAA,CAAAyrD,GACA,MACA,QAEA,QAEA,QACA,MACA,QACAzrD,EAAA,CAAAo+B,EAAA6R,OAAAx0C,EAAAsI,EAAA3nB,GACA,MACA,QACA,MACA,QACA,UAAAmlE,EAAA,gBAAAnjB,EAAAypB,SAAA,IAAAzpB,EAAA5jD,KAAA,wBAEA,IAAAwxE,EAAA,KAAA5tB,EAAAypB,SACAmE,KAAA7a,GACAA,EAAA6a,GAAA9Z,MAAAf,EAAAnxC,GAGA,SAAAisD,EAAApD,EAAA1X,GACA,QAAAn5D,EAAA,EAAAC,EAAA4wE,EAAA1wE,OAAyCH,EAAAC,EAAQD,IACjDgxE,EAAAH,EAAA7wE,GAAAm5D,GAYA,SAAA+a,KA8IA,SAAAC,EAAAC,GACA,IAAAA,EAAAj0E,QACAhC,KAAAk2E,OAAA,EACAl2E,KAAAm2E,SAAA,EACAn2E,KAAAo2E,aAAAH,EAAA,GACAj2E,KAAAq2E,YAAA,EACAr2E,KAAAs2E,WAAAL,EAAA,GACAj2E,KAAAu2E,cAAA,IAEAv2E,KAAAk2E,OAAA,EACAl2E,KAAAm2E,SAAAF,EAAA,GACAj2E,KAAAo2E,aAAAH,EAAA,GACAj2E,KAAAq2E,YAAAJ,EAAA,GACAj2E,KAAAs2E,WAAAL,EAAA,GACAj2E,KAAAu2E,aAAA,UAAAN,EAAA,IAGA,SAAAO,EAAAC,GACAz2E,KAAA02E,SAAA,GACAD,GACAz2E,KAAA22E,QAAA,EACA32E,KAAAq2E,YAAAI,EAAAJ,YACAr2E,KAAAm2E,SAAAM,EAAAN,SACAn2E,KAAAu2E,aAAAE,EAAAF,aACAv2E,KAAAk2E,MAAAO,EAAAP,OAEAl2E,KAAA22E,QAAA,EA+BA,SAAAC,EAAAC,EAAAC,GACAA,GACA92E,KAAA+2E,kBAAAF,GAEA72E,KAAAg3E,SAAA,IAAAR,EAAA,MACA,IAAA30E,OAAA,EACAC,EAAA+0E,EAAA70E,OACAy0E,OAAA,EACA,IAAA50E,EAAA,EAAeA,EAAAC,EAAQD,KACvB40E,EAAAI,EAAAh1E,IACAu0E,aAAA,GACAp2E,KAAAg3E,SAAAC,UAAAR,IAAAL,aAAA,GAjNAL,EAAAn2E,UAAA,CACAs3E,kBAAA,SAAAzgE,GACAzW,KAAAm3E,gBAAA1gE,EACA,IAAAwR,EAAAxR,EAAA/F,MAAA,KACAxJ,EAAA,IAAAkvC,kBAAAnuB,EAAAxR,EAAA9F,QACA,GAAA8F,EAAA44D,kBACA,QAAAxtE,EAAA,EAAAC,EAAAoF,EAAAlF,OAA2CH,EAAAC,EAAQD,IACnDqF,EAAArF,GAAA,IAGA7B,KAAAkH,UAEAkwE,WAAA,SAAAC,EAAAtK,GACA,IAQAlrE,EAAA6K,EAAA4qE,EAAAnvD,EARAmtD,EAAAt1E,KAAAm3E,gBACAzmE,EAAA2mE,EAAA3mE,MACAC,EAAA0mE,EAAA1mE,OACAsX,EAAAqtD,EAAA5kE,MAAA,KACAm/D,EAAAyF,EAAAM,4BAAAyB,EAAAxH,oBAAAyF,EAAAzF,oBACA3oE,EAAAlH,KAAAkH,OACAqwE,EAAA,QAAAF,EAAAn8D,GACA60C,EAAAsnB,EAAAphE,EAAAgS,GAAAovD,EAAAn8D,GAAA,GAEA,OAAA20D,GACA,OACA,IAAAhuE,EAAA,EAAqBA,EAAA8O,EAAY9O,IAAA,CAGjC,IAFAy1E,EAAAC,EACApvD,EAAA4nC,EACArjD,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClCqgE,EAAAlrE,GAAA6K,KACAxF,EAAAihB,IAAAmvD,IAEAA,IAAA,KAEAA,EAAA,IACAnvD,KAGA4nC,GAAA9nC,EAEA,MACA,OACA,IAAApmB,EAAA,EAAqBA,EAAA8O,EAAY9O,IAAA,CAGjC,IAFAy1E,EAAAC,EACApvD,EAAA4nC,EACArjD,EAAA,EAAuBA,EAAAgE,EAAWhE,IAClCqgE,EAAAlrE,GAAA6K,KACAxF,EAAAihB,IAAAmvD,IAEAA,IAAA,KAEAA,EAAA,IACAnvD,KAGA4nC,GAAA9nC,EAEA,MACA,QACA,UAAAmjD,EAAA,YAAAyE,EAAA,uBAGA2H,yBAAA,SAAAC,EAAAnyD,EAAAzf,EAAAI,GACA,IAAAoxE,EAAAI,EAAAhhE,KACAg2D,EAAA,IAAAnB,EAAAhmD,EAAAzf,EAAAI,GACA8mE,EAAAX,EAAAqL,EAAApL,IAAAgL,EAAA3mE,MAAA2mE,EAAA1mE,OAAA8mE,EAAAvK,SAAAuK,EAAAlL,WAAA,KAAAkL,EAAAjL,GAAAC,GACAzsE,KAAAo3E,WAAAC,EAAAtK,IAEA2K,iCAAA,WACA13E,KAAAw3E,yBAAAzb,MAAA/7D,KAAAgU,YAEA2jE,mBAAA,SAAA5E,EAAA6E,EAAAC,EAAAvyD,EAAAzf,EAAAI,GACA,IAAA6pE,OAAA,EACAI,OAAA,EACA6C,EAAA5D,UACAW,EAqaA,SAAAiD,EAAAd,EAAA6F,GACA,IAAAC,EAAA,EACAC,OAAA,EACAC,OAAA,EACA,OAAAlF,EAAAE,mBACA,OACA,OACA+E,EAAAE,EAAAnF,EAAAE,kBAAA,GACA,MACA,OACA+E,EAAAG,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAA3M,EAAA,+BAEA,OAAA2H,EAAAG,mBACA,OACA,OACA+E,EAAAC,EAAAnF,EAAAG,kBAAA,GACA,MACA,OACA+E,EAAAE,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAA3M,EAAA,+BAEA,IAAAgN,OAAA,EACAC,OAAA,EACAtF,EAAAI,oBACAiF,EAAAD,EAAAJ,EAAA9F,EAAA6F,GACAC,KAEAK,EAAAF,EAAA,GAGAG,EADAtF,EAAAK,6BACA+E,EAAAJ,EAAA9F,EAAA6F,GAEAI,EAAA,GAEA,OACAF,mBACAC,kBACAG,kBACAC,2BAldAC,CAAAvF,EAAA8E,EAAA73E,KAAA83E,cACA5H,EAAA,IAAAvD,EAAArnD,EAAAzf,EAAAI,IAEA,IAAAsyE,EAAAv4E,KAAAu4E,QACAA,IACAv4E,KAAAu4E,UAAA,IAGA,IADA,IAAA/I,EAAA,GACA3tE,EAAA,EAAAC,EAAA+1E,EAAA71E,OAAmDH,EAAAC,EAAQD,IAAA,CAC3D,IAAA22E,EAAAD,EAAAV,EAAAh2E,IACA22E,IACAhJ,IAAAnf,OAAAmoB,IAGA,IAAA/L,EAAA,IAAAnB,EAAAhmD,EAAAzf,EAAAI,GACAsyE,EAAAX,GAhxBA,SAAAzI,EAAAC,EAAAmJ,EAAA7E,EAAAD,EAAA3D,EAAAxD,EAAAE,EAAAuD,EAAAC,EAAAvD,EAAAyD,GACA,GAAAf,GAAAC,EACA,UAAAhE,EAAA,mDAEA,IAAAqN,EAAA,GACAC,EAAA,EACAjJ,GAAA,EAAAhqE,EAAA2qC,MAAAmoC,EAAAv2E,OAAA0xE,GACAjiC,EAAAg7B,EAAAh7B,QACA+5B,EAAAiB,EAAAjB,aACAmN,OAAA,EACAC,OAAA,EAMA,IALAzJ,IACAwJ,EAAAT,EAAA,GACAU,EAAA,GACAnJ,EAAApgE,KAAAyH,IAAA24D,EAAA,IAEAgJ,EAAAz2E,OAAA0xE,GAAA,CAEAgF,GADAvJ,EAAAW,EAAAkI,iBAAAzjE,OAAA27D,GAAA3E,EAAAC,EAAA,OAAA/5B,GAKA,IAHA,IAAAonC,EAAA,EACAC,EAAA,EACAC,EAAA5J,EAAAyJ,EAAA52E,OAAA,IACA,CACA,IAMA+qE,EANAiM,EAAA7J,EAAAW,EAAAmI,gBAAA1jE,OAAA27D,GAAA3E,EAAAC,EAAA,OAAA/5B,GACA,UAAAunC,EACA,MAKA,GAFAF,GADAD,GAAAG,EAGA5J,EAAA,CACA,IAAA6J,EAAA1N,EAAAC,EAAA,OAAA/5B,GACA,GAAAwnC,EAAA,EACAlM,EAAAmC,EAAAC,EAAAC,EAAAyJ,EAAAH,EAAA,EAAAO,EAAA,EAAAV,EAAAloB,OAAAooB,GAAAhJ,EAAA,QAAAK,EAAAC,EAAAC,EAAAvD,EAAA,EAAAyD,OACW,CACX,IAAAO,EAAA7E,EAAAJ,EAAA/5B,EAAAg+B,GACAyJ,EAAA3N,EAAAC,EAAA,QAAA/5B,GACA0nC,EAAA5N,EAAAC,EAAA,QAAA/5B,GAEAs7B,EAAAqB,EAAAyK,EAAAH,EAAA3I,EADAU,EAAA8H,EAAAv2E,OAAAu2E,EAAA9H,GAAAgI,EAAAhI,EAAA8H,EAAAv2E,QACAk3E,EAAAC,GAAA,EAAAnJ,EAAAvD,GAEAgM,EAAAz6D,KAAA+uD,QACSoC,EACTyJ,EAAA56D,KAAA66D,IAEA9L,EAAAX,GAAA,EAAAyM,EAAAH,EAAApM,GAAA,OAAAE,EAAAC,GACAgM,EAAAz6D,KAAA+uD,IAGA,GAAAoC,IAAAC,EAAA,CACA,IAAAgK,EAAAtJ,EAAAsI,gBAAA7jE,OAAA27D,GACAA,EAAAluC,YACA,IAAAq3C,OAAA,EACA,OAAAD,EACAC,EAAAC,EAAApJ,EAAA4I,EAAAJ,OACS,CACT,IAAAa,EAAArJ,EAAAjqE,IACAuzE,EAAAtJ,EAAAtiD,SAAAwrD,EACAlJ,EAAAjqE,IAAAuzE,EACAH,EAAA3M,EAAAwD,EAAA4I,EAAAJ,GAAA,GACAxI,EAAAjqE,IAAAszE,EACArJ,EAAAtiD,SAAA4rD,EAEA,IAAAC,EAAAb,EAAA52E,OACA,GAAA+2E,IAAAU,EAAA,EACAhB,EAAAz6D,KAAAq7D,OACS,CACT,IAAA3mD,OAAA,EACAzc,OAAA,EACAyjE,EAAA,EACAC,OAAA,EAEA/I,OAAA,EACA,IAAAl+C,EAAAqmD,EAAgCrmD,EAAA+mD,EAA6B/mD,IAAA,CAI7D,IAFAinD,EAAAD,EADAd,EAAAlmD,GAEAk+C,EAAA,GACA36D,EAAA,EAAuBA,EAAAyiE,EAAmBziE,IAC1C26D,EAAA5yD,KAAAq7D,EAAApjE,GAAAxP,SAAAizE,EAAAC,IAEAlB,EAAAz6D,KAAA4yD,GACA8I,EAAAC,KASA,IAJA,IAAAC,EAAA,GACA5kD,EAAA,GACA6kD,GAAA,EACAC,EAAAvB,EAAAv2E,OAAA0xE,EACA1+C,EAAAhzB,OAAA83E,GAAA,CAEA,IADA,IAAAC,EAAA5K,EAAAwJ,EAAApkE,OAAA27D,GAAA3E,EAAAC,EAAA,OAAA/5B,GACAsoC,KACA/kD,EAAAhX,KAAA67D,GAEAA,KAEA,QAAAh4E,EAAA,EAAAC,GAAAy2E,EAAAv2E,OAAwCH,EAAAC,GAAQD,IAChDmzB,EAAAnzB,IACA+3E,EAAA57D,KAAAu6D,EAAA12E,IAGA,QAAA6K,GAAA,EAAmBA,GAAAgnE,EAAwB7xE,IAAA6K,KAC3CsoB,EAAAnzB,IACA+3E,EAAA57D,KAAAy6D,EAAA/rE,KAGA,OAAAktE,EAqqBAI,CAAAjH,EAAA5D,QAAA4D,EAAA3D,WAAAI,EAAAuD,EAAAW,mBAAAX,EAAAU,wBAAA3D,EAAAiD,EAAA7F,SAAA6F,EAAAvG,GAAAuG,EAAAQ,mBAAAR,EAAA/C,aAAAvD,EAAAyD,IAEA+J,sBAAA,SAAAxC,EAAAI,EAAAvyD,EAAAzf,EAAAI,GAMA,IALA,IAAAoxE,EAAAI,EAAAhhE,KACAq5D,OAAA,EACAI,OAAA,EACAqI,EAAAv4E,KAAAu4E,QACA/I,EAAA,GACA3tE,EAAA,EAAAC,EAAA+1E,EAAA71E,OAAmDH,EAAAC,EAAQD,IAAA,CAC3D,IAAA22E,EAAAD,EAAAV,EAAAh2E,IACA22E,IACAhJ,IAAAnf,OAAAmoB,IAGA,IAAA/I,GAAA,EAAAhqE,EAAA2qC,MAAAo/B,EAAAxtE,QACAy1E,EAAAtI,UACAe,EAAA,IAAAvD,EAAArnD,EAAAzf,EAAAI,GACA6pE,EAmSA,SAAA6D,EAAA1B,EAAA6F,EAAAoC,EAAA5b,GACA,IAAA50D,EAAA,GACA7H,OAAA,EACAuM,OAAA,EACA,IAAAvM,EAAA,EAAeA,GAAA,GAASA,IACxBuM,EAAAkwD,EAAA1vD,SAAA,GACAlF,EAAAsU,KAAA,IAAAg4D,EAAA,CAAAn0E,EAAAuM,EAAA,OAEA,IAAA+rE,EAAA,IAAAvD,EAAAltE,GAAA,GAEA,IADAA,EAAA1H,OAAA,EACAH,EAAA,EAAeA,EAAAq4E,GAEf,IADA9rE,EAAA+rE,EAAA5lE,OAAA+pD,KACA,IACA,IAAA8b,OAAA,EACAC,OAAA,EACA3tE,OAAA,EACA,OAAA0B,GACA,QACA,OAAAvM,EACA,UAAAupE,EAAA,wCAEAiP,EAAA/b,EAAA1vD,SAAA,KACAwrE,EAAA1wE,EAAA7H,EAAA,GAAAu0E,aACA,MACA,QACAiE,EAAA/b,EAAA1vD,SAAA,KACAwrE,EAAA,EACA,MACA,QACAC,EAAA/b,EAAA1vD,SAAA,MACAwrE,EAAA,EACA,MACA,QACA,UAAAhP,EAAA,0CAEA,IAAA1+D,EAAA,EAAmBA,EAAA2tE,EAAqB3tE,IACxChD,EAAAsU,KAAA,IAAAg4D,EAAA,CAAAn0E,EAAAu4E,EAAA,OACAv4E,SAGA6H,EAAAsU,KAAA,IAAAg4D,EAAA,CAAAn0E,EAAAuM,EAAA,OACAvM,IAGAy8D,EAAAt8B,YACA,IAAA0uC,EAAA,IAAAkG,EAAAltE,GAAA,GACAquE,EAAA,EACAxH,OAAA,EACAe,OAAA,EACAlB,OAAA,EACA,OAAAuD,EAAAG,WACA,OACA,OACAvD,EAAA2H,EAAAvE,EAAAG,UAAA,GACA,MACA,OACAvD,EAAA4H,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAA3M,EAAA,+BAEA,OAAAuI,EAAAI,WACA,OACA,OACA,OACAzC,EAAA4G,EAAAvE,EAAAI,UAAA,GACA,MACA,OACAzC,EAAA6G,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAA3M,EAAA,+BAEA,OAAAuI,EAAAK,WACA,OACA,OACA,OACA5D,EAAA8H,EAAAvE,EAAAK,UAAA,IACA,MACA,OACA5D,EAAA+H,EAAAJ,EAAA9F,EAAA6F,GACAC,IACA,MACA,QACA,UAAA3M,EAAA,+BAEA,GAAAuI,EAAAvE,WACA,UAAAhE,EAAA,4CAEA,OACAsF,gBACAH,cACAe,cACAlB,eAlYAkK,CAAA7C,EAAAI,EAAA73E,KAAA83E,aAAAtI,EAAAxtE,OAAAkuE,IAEA,IAAAzD,EAAA,IAAAnB,EAAAhmD,EAAAzf,EAAAI,GACA8mE,EAAAmC,EAAAuI,EAAAtI,QAAAsI,EAAArI,WAAAiI,EAAA3mE,MAAA2mE,EAAA1mE,OAAA8mE,EAAApI,kBAAAoI,EAAAnI,wBAAAmI,EAAAlI,UAAAC,EAAAC,EAAAgI,EAAA/H,WAAA+H,EAAA9H,SAAA8H,EAAA7H,gBAAA6H,EAAA5H,oBAAAC,EAAA2H,EAAAlE,mBAAAkE,EAAAzH,aAAAvD,EAAAgL,EAAAxH,aAAAC,GACAlwE,KAAAo3E,WAAAC,EAAAtK,IAEAwN,8BAAA,WACAv6E,KAAAi6E,sBAAAle,MAAA/7D,KAAAgU,YAEAwmE,oBAAA,SAAAzH,EAAA6E,EAAAtyD,EAAAzf,EAAAI,GACA,IAAAw0E,EAAAz6E,KAAAy6E,SACAA,IACAz6E,KAAAy6E,WAAA,IAEA,IAAAhO,EAAA,IAAAnB,EAAAhmD,EAAAzf,EAAAI,GACAw0E,EAAA7C,GAxlBA,SAAAvL,EAAAmI,EAAAC,EAAAC,EAAAxH,EAAAT,GACA,IAAAD,EAAA,GACAH,IACAG,EAAAxuD,KAAA,CACA9C,GAAAs5D,EACAv+D,EAAA,IAEA,IAAAi3D,IACAV,EAAAxuD,KAAA,CACA9C,GAAA,EACAjF,GAAA,IAEAu2D,EAAAxuD,KAAA,CACA9C,EAAA,EACAjF,GAAA,IAEAu2D,EAAAxuD,KAAA,CACA9C,GAAA,EACAjF,GAAA,MAYA,IARA,IACAojE,EAAAjN,EAAAC,GADAqI,EAAA,GAAAF,EACAC,EAAAvH,GAAA,OAAAV,EAAAC,GACAgO,EAAA,GACA54E,EAAA,EACA64E,OAAA,EACAhB,OAAA,EACAC,OAAA,EACA1jE,OAAA,EACApU,GAAA6yE,GAAA,CAIA,IAHAgG,EAAA,GAEAf,GADAD,EAAAlF,EAAA3yE,GACA2yE,EACAv+D,EAAA,EAAiBA,EAAAw+D,EAAmBx+D,IACpCykE,EAAA18D,KAAAq7D,EAAApjE,GAAAxP,SAAAizE,EAAAC,IAEAc,EAAAz8D,KAAA08D,GACA74E,IAEA,OAAA44E,EAgjBAE,CAAA5H,EAAA1G,IAAA0G,EAAAyB,aAAAzB,EAAA0B,cAAA1B,EAAA2B,gBAAA3B,EAAA7F,SAAAT,IAEAmO,0BAAA,SAAAnD,EAAAI,EAAAvyD,EAAAzf,EAAAI,GACA,IAAAw0E,EAAAz6E,KAAAy6E,SAAA5C,EAAA,IACAR,EAAAI,EAAAhhE,KACAg2D,EAAA,IAAAnB,EAAAhmD,EAAAzf,EAAAI,GACA8mE,EApjBA,SAAAV,EAAAoO,EAAAvN,EAAA2N,EAAAC,EAAAzL,EAAAwF,EAAAhF,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1I,GAEA,GAAAoI,EACA,UAAAzJ,EAAA,yBAEA,OAAAyE,EACA,UAAAzE,EAAA,YAAAyE,EAAA,wCAEA,IAAAkL,EAAA,GACAl5E,OAAA,EACA6K,OAAA,EACA81B,OAAA,EACA,IAAA3gC,EAAA,EAAeA,EAAAi5E,EAAkBj5E,IAAA,CAEjC,GADA2gC,EAAA,IAAAz8B,WAAA80E,GACAxL,EACA,IAAA3iE,EAAA,EAAmBA,EAAAmuE,EAAiBnuE,IACpC81B,EAAA91B,GAAA2iE,EAGA0L,EAAA/8D,KAAAwkB,GAEA,IAAAw4C,EAAAP,EAAAz4E,OACAi5E,EAAAR,EAAA,GACAjG,EAAAyG,EAAA,GAAAj5E,OACAyyE,EAAAwG,EAAAj5E,OACAk5E,GAAA,EAAAz1E,EAAA2qC,MAAA4qC,GACAxO,EAAA,GACAH,IACAG,EAAAxuD,KAAA,CACA9C,EAAAgyD,GAAA,MACAj3D,GAAA,IAEA,IAAAi3D,IACAV,EAAAxuD,KAAA,CACA9C,GAAA,EACAjF,GAAA,IAEAu2D,EAAAxuD,KAAA,CACA9C,EAAA,EACAjF,GAAA,IAEAu2D,EAAAxuD,KAAA,CACA9C,GAAA,EACAjF,GAAA,MAIA,IAAAklE,EAAA,GACAC,OAAA,EACArO,OAAA,EAIA,IAHAV,IACA+O,EAAA,IAAAzO,EAAAF,EAAAnnD,KAAAmnD,EAAA5mE,MAAA4mE,EAAAxmE,MAEApE,EAAAq5E,EAAA,EAA8Br5E,GAAA,EAAQA,IAEtCkrE,EADAV,EACAK,EAAA0O,EAAAtG,EAAAC,GAAA,GAEA3I,GAAA,EAAA0I,EAAAC,EAAA7H,GAAA,EAxDA,KAwDAV,EAAAC,GAEA0O,EAAAt5E,GAAAkrE,EAEA,IAAAsO,OAAA,EACAC,OAAA,EACAziC,OAAA,EACA0iC,OAAA,EACAb,OAAA,EACAx/D,OAAA,EACAjF,OAAA,EACAulE,OAAA,EACAC,OAAA,EACA,IAAAJ,EAAA,EAAgBA,EAAAtG,EAAiBsG,IACjC,IAAAC,EAAA,EAAkBA,EAAAxG,EAAgBwG,IAAA,CAGlC,IAFAziC,EAAA,EACA0iC,EAAA,EACA7uE,EAAAwuE,EAAA,EAAkCxuE,GAAA,EAAQA,IAE1C6uE,IADA1iC,EAAAsiC,EAAAzuE,GAAA2uE,GAAAC,GAAAziC,IACAnsC,EAKA,GAHAguE,EAAAD,EAAAc,GAEAtlE,EAAAg/D,EAAAoG,EAAAnG,EAAAoG,EAAAnG,GAAA,GADAj6D,EAAA85D,EAAAqG,EAAAlG,EAAAmG,EAAApG,GAAA,IAEA,GAAAh6D,EAAAs5D,GAAAqG,GAAA5kE,GAAA,GAAAA,EAAAw+D,GAAAqG,EACA,IAAAj5E,EAAA,EAAqBA,EAAA4yE,EAAmB5yE,IAGxC,IAFA45E,EAAAV,EAAA9kE,EAAApU,GACA25E,EAAAd,EAAA74E,GACA6K,EAAA,EAAuBA,EAAA8nE,EAAkB9nE,IACzC+uE,EAAAvgE,EAAAxO,IAAA8uE,EAAA9uE,OAGS,CACT,IAAAgvE,OAAA,EACAC,OAAA,EACA,IAAA95E,EAAA,EAAqBA,EAAA4yE,EAAmB5yE,IAExC,MADA85E,EAAA1lE,EAAApU,GACA,GAAA85E,GAAAb,GAKA,IAFAW,EAAAV,EAAAY,GACAH,EAAAd,EAAA74E,GACA6K,EAAA,EAAuBA,EAAA8nE,EAAkB9nE,KACzCgvE,EAAAxgE,EAAAxO,IACA,GAAAgvE,EAAAb,IACAY,EAAAC,IAAAF,EAAA9uE,KAOA,OAAAquE,EAucAa,CAAAnE,EAAApL,IAAAoO,EAAAhD,EAAAvK,SAAAmK,EAAA3mE,MAAA2mE,EAAA1mE,OAAA8mE,EAAApI,kBAAAoI,EAAA5C,WAAA4C,EAAA5H,oBAAA4H,EAAA3C,UAAA2C,EAAA1C,WAAA0C,EAAAzC,YAAAyC,EAAAxC,YAAAwC,EAAAvC,YAAAuC,EAAAtC,YAAA1I,GACAzsE,KAAAo3E,WAAAC,EAAAtK,IAEA8O,kCAAA,WACA77E,KAAA46E,0BAAA7e,MAAA/7D,KAAAgU,YAEA8nE,SAAA,SAAAlE,EAAAtyD,EAAAzf,EAAAI,GACA,IAAA6xE,EAAA93E,KAAA83E,aACAA,IACA93E,KAAA83E,eAAA,IAEAA,EAAAF,GAgHA,SAAAtyD,EAAAzf,EAAAI,GACA,IAAA+uB,EAAA1P,EAAAzf,GACAk2E,EAAA,cAAAt2E,EAAAsuC,YAAAzuB,EAAAzf,EAAA,GACAm2E,EAAA,cAAAv2E,EAAAsuC,YAAAzuB,EAAAzf,EAAA,GACAy4D,EAAA,IAAAqO,EAAArnD,EAAAzf,EAAA,EAAAI,GACAg2E,EAAA,GAAAjnD,GAAA,KACAknD,EAAA,GAAAlnD,GAAA,KACA6hD,EAAA,GACAT,OAAA,EACAC,OAAA,EACA8F,EAAAJ,EACA,GACA3F,EAAA9X,EAAA1vD,SAAAqtE,GACA5F,EAAA/X,EAAA1vD,SAAAstE,GACArF,EAAA74D,KAAA,IAAAg4D,EAAA,CAAAmG,EAAA/F,EAAAC,EAAA,KACA8F,GAAA,GAAA9F,QACK8F,EAAAH,GACL5F,EAAA9X,EAAA1vD,SAAAqtE,GACApF,EAAA74D,KAAA,IAAAg4D,EAAA,CAAA+F,EAAA,EAAA3F,EAAA,gBACAA,EAAA9X,EAAA1vD,SAAAqtE,GACApF,EAAA74D,KAAA,IAAAg4D,EAAA,CAAAgG,EAAA5F,EAAA,QACA,EAAAphD,IACAohD,EAAA9X,EAAA1vD,SAAAqtE,GACApF,EAAA74D,KAAA,IAAAg4D,EAAA,CAAAI,EAAA,MAEA,WAAAQ,EAAAC,GAAA,GAzIAuF,CAAA92D,EAAAzf,EAAAI,KAgCAuwE,EAAA52E,UAAA,CACAq3E,UAAA,SAAAR,EAAAtuE,GACA,IAAA0wC,EAAA49B,EAAAH,YAAAnuE,EAAA,EACA,GAAAA,GAAA,EACAnI,KAAA02E,SAAA79B,GAAA,IAAA29B,EAAAC,OACO,CACP,IAAAr9C,EAAAp5B,KAAA02E,SAAA79B,GACAzf,IACAp5B,KAAA02E,SAAA79B,GAAAzf,EAAA,IAAAo9C,EAAA,OAEAp9C,EAAA69C,UAAAR,EAAAtuE,EAAA,KAGAk0E,WAAA,SAAA/d,GACA,GAAAt+D,KAAA22E,OAAA,CACA,GAAA32E,KAAAk2E,MACA,YAEA,IAAAoG,EAAAhe,EAAA1vD,SAAA5O,KAAAq2E,aACA,OAAAr2E,KAAAm2E,UAAAn2E,KAAAu2E,cAAA+F,KAEA,IAAAljD,EAAAp5B,KAAA02E,SAAApY,EAAA75B,WACA,IAAArL,EACA,UAAAgyC,EAAA,wBAEA,OAAAhyC,EAAAijD,WAAA/d,KAkBAsY,EAAAh3E,UAAA,CACA2U,OAAA,SAAA+pD,GACA,OAAAt+D,KAAAg3E,SAAAqF,WAAA/d,IAEAyY,kBAAA,SAAAF,GACA,IAAA0F,EAAA1F,EAAA70E,OACAw6E,EAAA,EACA36E,OAAA,EACA,IAAAA,EAAA,EAAiBA,EAAA06E,EAAiB16E,IAClC26E,EAAAntE,KAAAyH,IAAA0lE,EAAA3F,EAAAh1E,GAAAu0E,cAEA,IAAAqG,EAAA,IAAAp6C,YAAAm6C,EAAA,GACA,IAAA36E,EAAA,EAAiBA,EAAA06E,EAAiB16E,IAClC46E,EAAA5F,EAAAh1E,GAAAu0E,gBAEA,IAAAsG,EAAA,EACAC,EAAA,EACAC,OAAA,EACAC,OAAA,EACApG,OAAA,EAEA,IADAgG,EAAA,KACAC,GAAAF,GAAA,CAIA,IAFAI,EADAD,IAAAF,EAAAC,EAAA,MAEAG,EAAA,EACAA,EAAAN,IACA9F,EAAAI,EAAAgG,IACAzG,eAAAsG,IACAjG,EAAAH,WAAAsG,EACAA,KAEAC,IAEAH,OA+BA,IAAAI,EAAA,GACA,SAAA5E,EAAApe,GACA,IAAArwD,EAAAqzE,EAAAhjB,GACA,GAAArwD,EACA,OAAAA,EAEA,IAAAotE,OAAA,EACA,OAAA/c,GACA,OACA+c,EAAA,mDACA,MACA,OACAA,EAAA,2EACA,MACA,OACAA,EAAA,mHACA,MACA,OACAA,EAAA,oEACA,MACA,OACAA,EAAA,2GACA,MACA,OACAA,EAAA,wMACA,MACA,OACAA,EAAA,+MACA,MACA,OACAA,EAAA,6QACA,MACA,OACAA,EAAA,4RACA,MACA,QACAA,EAAA,kRACA,MACA,QACAA,EAAA,8JACA,MACA,QACAA,EAAA,6JACA,MACA,QACAA,EAAA,yJACA,MACA,QACAA,EAAA,sDACA,MACA,QACAA,EAAA,qKACA,MACA,QACA,UAAAzL,EAAA,oBAAAtR,EAAA,mBAEA,IAAA93D,EAAA60E,EAAA70E,OACAH,OAAA,EACA,IAAAA,EAAA,EAAeA,EAAAG,EAAYH,IAC3Bg1E,EAAAh1E,GAAA,IAAAm0E,EAAAa,EAAAh1E,IAIA,OAFA4H,EAAA,IAAAmtE,EAAAC,GAAA,GACAiG,EAAAhjB,GAAArwD,EACAA,EAEA,SAAAkjE,EAAArnD,EAAAzf,EAAAI,GACAjG,KAAAslB,OACAtlB,KAAA6F,QACA7F,KAAAiG,MACAjG,KAAA4tB,SAAA/nB,EACA7F,KAAAmI,OAAA,EACAnI,KAAA+8E,YAAA,EAiCA,SAAA5E,EAAAj0D,EAAA+tD,EAAA6F,GACA,IAAArhD,EAAA,EACA50B,OAAA,EACAC,EAAAmwE,EAAAjwE,OACAyH,OAAA,EACA,IAAA5H,EAAA,EAAeA,EAAAC,EAAQD,IAEvB,GADA4H,EAAAquE,EAAA7F,EAAApwE,IACA,CACA,GAAAqiB,IAAAuS,EACA,OAAAhtB,EAEAgtB,IAGA,UAAA20C,EAAA,mCAoJA,SAAAkO,EAAAhb,EAAA5tD,EAAAC,GACA,IAAAo8D,EAAA,GACA7xD,OAAA,EACAjF,OAAA,EACAusB,OAAA,EACA,IAAAvsB,EAAA,EAAeA,EAAAtF,EAAYsF,IAAA,CAG3B,IAFAusB,EAAA,IAAAz8B,WAAA2K,GACAq8D,EAAA/uD,KAAAwkB,GACAtnB,EAAA,EAAiBA,EAAAxK,EAAWwK,IAC5BsnB,EAAAtnB,GAAAojD,EAAA75B,UAEA65B,EAAAt8B,YAEA,OAAA+qC,EAEA,SAAAL,EAAAl/D,EAAAkD,EAAAC,EAAAqsE,GACA,IAAAxxE,EAAA,CACAivC,GAAA,EACAiwB,QAAAh6D,EACAi6D,KAAAh6D,EACAk6D,UAAA,EACAD,WAAAoS,GAEAvrC,EAAA,IAAA64B,EAAAhpC,gBAAA9zB,EAAAhC,GACAuhE,EAAA,GACA7xD,OAAA,EACAjF,OAAA,EACAusB,OAAA,EACAu6C,OAAA,EACA50E,OAAA,EACAZ,GAAA,EACA,IAAA0O,EAAA,EAAeA,EAAAtF,EAAYsF,IAI3B,IAHAusB,EAAA,IAAAz8B,WAAA2K,GACAq8D,EAAA/uD,KAAAwkB,GACAr6B,GAAA,EACA+S,EAAA,EAAiBA,EAAAxK,EAAWwK,IAC5B/S,EAAA,KAEA,KADA40E,EAAAtrC,EAAAzO,kBAEA+5C,EAAA,EACAx1E,GAAA,GAEAY,EAAA,GAEAq6B,EAAAtnB,GAAA6hE,GAAA50E,EAAA,EACAA,IAGA,GAAA60E,IAAAz1E,EAEA,IADA,IACA1F,EAAA,EAAqBA,EADrB,IAEA,IAAA4vC,EAAAzO,eAD0CnhC,KAM1C,OAAAkrE,EAEA,SAAA/B,KAMA,OAjQA2B,EAAA/sE,UAAA,CACA6kC,QAAA,WACA,GAAAzkC,KAAAmI,MAAA,GACA,GAAAnI,KAAA4tB,UAAA5tB,KAAAiG,IACA,UAAAmlE,EAAA,iCAEAprE,KAAA+8E,YAAA/8E,KAAAslB,KAAAtlB,KAAA4tB,YACA5tB,KAAAmI,MAAA,EAEA,IAAA0wC,EAAA74C,KAAA+8E,aAAA/8E,KAAAmI,MAAA,EAEA,OADAnI,KAAAmI,QACA0wC,GAEAjqC,SAAA,SAAAquE,GACA,IAAA5kE,EAAA,EACAxW,OAAA,EACA,IAAAA,EAAAo7E,EAAA,EAA2Bp7E,GAAA,EAAQA,IACnCwW,GAAArY,KAAAykC,WAAA5iC,EAEA,OAAAwW,GAEA2pB,UAAA,WACAhiC,KAAAmI,OAAA,GAEAwqB,KAAA,WACA,OAAA3yB,KAAA4tB,UAAA5tB,KAAAiG,KACA,EAEAjG,KAAAslB,KAAAtlB,KAAA4tB,cAgOAo9C,EAAAprE,UAAA,CACAurE,YAAA,SAAA/9C,GACA,OAtmBA,SAAAA,GAEA,IADA,IAAA4tC,EAAA,IAAA+a,EACAl0E,EAAA,EAAAC,EAAAsrB,EAAAprB,OAAuCH,EAAAC,EAAQD,IAAA,CAC/C,IAAAqG,EAAAklB,EAAAvrB,GAEAi0E,EADArD,EAAA,GAAoCvqE,EAAAod,KAAApd,EAAArC,MAAAqC,EAAAjC,KACpC+0D,GAEA,OAAAA,EAAA9zD,OA+lBAg2E,CAAA9vD,KAGA49C,EA3tDA,GA6tDA3rE,EAAA2rE,+CCjvDA7rE,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAulB,eAAA1hB,EAEA,IAAA3D,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5I+F,EAAYC,EAAQ,KAEpBy3E,EAAA,WACA,SAAAA,EAAAh4C,GACAnlC,KAAAolC,QAAA,eAAAD,EAKA,OAHAg4C,EAAAv9E,UAAA,IAAAqd,MACAkgE,EAAAv9E,UAAAG,KAAA,YACAo9E,EAAAx9E,YAAAw9E,EACAA,EAPA,GASAC,EAAA,WACA,SAAAA,EAAAh4C,EAAAi4C,GACAr9E,KAAAolC,UACAplC,KAAAq9E,YAKA,OAHAD,EAAAx9E,UAAA,IAAAqd,MACAmgE,EAAAx9E,UAAAG,KAAA,iBACAq9E,EAAAz9E,YAAAy9E,EACAA,EARA,GAUAE,EAAA,WACA,SAAAA,EAAAl4C,GACAplC,KAAAolC,UAKA,OAHAk4C,EAAA19E,UAAA,IAAAqd,MACAqgE,EAAA19E,UAAAG,KAAA,iBACAu9E,EAAA39E,YAAA29E,EACAA,EAPA,GASA14D,EAAA,WACA,IAAA24D,EAAA,IAAAx3E,WAAA,yLACAy3E,EAAA,KACAC,EAAA,IACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACA,SAAAn5D,IACA5kB,KAAAolB,gBAAA,KACAplB,KAAAqlB,gBAAA,EAEA,SAAA24D,EAAAhzE,EAAAokD,GAMA,IALA,IAEAvtD,EACA6K,EAHArB,EAAA,EACAzB,EAAA,GAGA5H,EAAA,GACAA,EAAA,IAAAgJ,EAAAhJ,EAAA,IACAA,IAEA4H,EAAAoU,KAAA,CACA04D,SAAA,GACAxyD,MAAA,IAEA,IACApV,EADA9B,EAAApD,EAAA,GAEA,IAAA/H,EAAA,EAAeA,EAAAG,EAAYH,IAAA,CAC3B,IAAA6K,EAAA,EAAiBA,EAAA1B,EAAAnJ,GAAoB6K,IAAA,CAGrC,KAFAM,EAAApD,EAAAgvB,OACA89C,SAAA1pE,EAAAkX,OAAAkrC,EAAA/jD,GACA2B,EAAAkX,MAAA,GACAlX,EAAApD,EAAAgvB,MAIA,IAFA5rB,EAAAkX,QACAta,EAAAoU,KAAAhR,GACApD,EAAA5H,QAAAH,GACA+H,EAAAoU,KAAAlP,EAAA,CACA4nE,SAAA,GACAxyD,MAAA,IAEAlX,EAAA0pE,SAAA1pE,EAAAkX,OAAApV,EAAA4nE,SACA1pE,EAAA8B,EAEAzD,IAEAxJ,EAAA,EAAAG,IACA4H,EAAAoU,KAAAlP,EAAA,CACA4nE,SAAA,GACAxyD,MAAA,IAEAlX,EAAA0pE,SAAA1pE,EAAAkX,OAAApV,EAAA4nE,SACA1pE,EAAA8B,GAGA,OAAAlF,EAAA,GAAA8sE,SAEA,SAAAuH,EAAAr4C,EAAApD,EAAA07C,GACA,YAAAt4C,EAAAu4C,cAAA,GAAA37C,EAAA07C,GAEA,SAAAE,EAAA94D,EAAA6C,EAAAk2D,EAAA53C,EAAA63C,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA3qE,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,IAAAA,UAAA,GAEA4qE,EAAAP,EAAAO,YACAC,EAAAR,EAAAQ,YACAC,EAAA32D,EACA42D,EAAA,EACAC,EAAA,EACA,SAAAv6C,IACA,GAAAu6C,EAAA,EAEA,OAAAD,KADAC,EACA,EAGA,UADAD,EAAAz5D,EAAA6C,MACA,CACA,IAAA82D,EAAA35D,EAAA6C,KACA,GAAA82D,EAAA,CACA,SAAAA,GAAAN,EAAA,CACAx2D,GAAA,EACA,IAAAk1D,EAAA/3D,EAAA6C,MAAA,EAAA7C,EAAA6C,KACA,GAAAk1D,EAAA,GAAAA,IAAAgB,EAAAhB,UACA,UAAAD,EAAA,oDAAAC,QAEW,SAAA4B,EACX,UAAA3B,EAAA,qDAEA,UAAAH,EAAA,sBAAA4B,GAAA,EAAAE,GAAA37E,SAAA,MAIA,OADA07E,EAAA,EACAD,IAAA,EAEA,SAAAG,EAAAC,GAEA,IADA,IAAA/lD,EAAA+lD,IACA,CAEA,oBADA/lD,IAAAqL,MAEA,OAAArL,EAEA,wBAAAA,EAAA,YAAA75B,EAAA65B,IACA,UAAA+jD,EAAA,6BAIA,SAAAiC,EAAAp9E,GAEA,IADA,IAAA8E,EAAA,EACA9E,EAAA,GACA8E,KAAA,EAAA29B,IACAziC,IAEA,OAAA8E,EAEA,SAAAu4E,EAAAr9E,GACA,OAAAA,EACA,WAAAyiC,IAAA,KAEA,IAAA39B,EAAAs4E,EAAAp9E,GACA,OAAA8E,GAAA,GAAA9E,EAAA,EACA8E,EAEAA,IAAA,GAAA9E,GAAA,EAgCA,IAAAs9E,EAAA,EA0BA,IACAC,EADAC,EAAA,EAkEA,SAAAC,EAAA75C,EAAArxB,EAAAmrE,EAAAl9C,EAAA07C,GACA,IACAyB,EAAAD,EAAAd,EAIArqE,EAAAqxB,EADAq4C,EAAAr4C,GAJA85C,EAAAd,EAAA,GAEAh5C,EAAAxhC,EAAAo+B,EACAm9C,EAAA/5C,EAAAhe,EAAAs2D,IAIA,SAAA0B,EAAAh6C,EAAArxB,EAAAmrE,GAIAnrE,EAAAqxB,EADAq4C,EAAAr4C,EAFA85C,EAAA95C,EAAAu4C,cAAA,EACAuB,EAAA95C,EAAAu4C,gBAIA,IACAv4C,EAAA/jC,EAAA6K,EAAArB,EAAAvE,EACA+4E,EAFAC,EAAAr5C,EAAAzkC,OAKA69E,EAFAhB,EACA,IAAAN,EACA,IAAAE,EAvHA,SAAA74C,EAAAzd,GACA,IAAA/d,EAAA80E,EAAAt5C,EAAAm6C,gBACAzoB,EAAA,IAAAltD,EAAA,EAAAi1E,EAAAj1E,IAAAs0E,EACA94C,EAAAo6C,UAAA73D,GAAAyd,EAAAq6C,MAAA3oB,GAEA,SAAA1xB,EAAAzd,GACAyd,EAAAo6C,UAAA73D,IAAAsc,KAAAi6C,GAmHA,IAAAD,EAhHA,SAAA74C,EAAAzd,GACA,GAAAm3D,EAAA,EACAA,SAKA,IAFA,IAAAj0E,EAAAkzE,EACA5gE,EAAA6gE,EACAnzE,GAAAsS,GAAA,CACA,IAAAuiE,EAAAhB,EAAAt5C,EAAAu6C,gBACAxpD,EAAA,GAAAupD,EACAtqE,EAAAsqE,GAAA,EACA,OAAAvpD,EAAA,CASA,IAAA6nB,EAAA++B,EADAlyE,GAAAuK,GAEAgwB,EAAAo6C,UAAA73D,EAAAq2B,GAAA6gC,EAAA1oD,IAAA,GAAA+nD,GACArzE,QAXA,CACA,GAAAuK,EAAA,IACA0pE,EAAAF,EAAAxpE,IAAA,GAAAA,GAAA,EACA,MAEAvK,GAAA,MAWA,SAAAu6B,EAAAzd,GAMA,IALA,IAGAwO,EACAupD,EAJA70E,EAAAkzE,EACA5gE,EAAA6gE,EACA5oE,EAAA,EAGAvK,GAAAsS,GAAA,CACA,IAAAyiE,EAAAj4D,EAAAo1D,EAAAlyE,GACA6W,EAAA0jB,EAAAo6C,UAAAI,GAAA,OACA,OAAAZ,GACA,OAIA,GADA5pE,GAFAsqE,EAAAhB,EAAAt5C,EAAAu6C,kBAEA,EACA,IAFAxpD,EAAA,GAAAupD,GAGAtqE,EAAA,IACA0pE,EAAAF,EAAAxpE,IAAA,GAAAA,GACA4pE,EAAA,IAEA5pE,EAAA,GACA4pE,EAAA,OAEa,CACb,OAAA7oD,EACA,UAAAwmD,EAAA,wBAEAoC,EAAAF,EAAA1oD,GACA6oD,EAAA5pE,EAAA,IAEA,SACA,OACA,OACAgwB,EAAAo6C,UAAAI,GACAx6C,EAAAo6C,UAAAI,IAAAl+D,GAAAuiB,KAAAi6C,GAGA,KADA9oE,IAEA4pE,EAAA,IAAAA,EAAA,KAGA,MACA,OACA55C,EAAAo6C,UAAAI,GACAx6C,EAAAo6C,UAAAI,IAAAl+D,GAAAuiB,KAAAi6C,IAEA94C,EAAAo6C,UAAAI,GAAAb,GAAAb,EACAc,EAAA,GAEA,MACA,OACA55C,EAAAo6C,UAAAI,KACAx6C,EAAAo6C,UAAAI,IAAAl+D,GAAAuiB,KAAAi6C,IAIArzE,IAEA,IAAAm0E,GAEA,KADAF,IAEAE,EAAA,IAtHA,SAAA55C,EAAAzd,GACA,IAAA/d,EAAA80E,EAAAt5C,EAAAm6C,gBACAzoB,EAAA,IAAAltD,EAAA,EAAAi1E,EAAAj1E,GACAw7B,EAAAo6C,UAAA73D,GAAAyd,EAAAq6C,MAAA3oB,EAEA,IADA,IAAAjsD,EAAA,EACAA,EAAA,KACA,IAAA60E,EAAAhB,EAAAt5C,EAAAu6C,gBACAxpD,EAAA,GAAAupD,EACAtqE,EAAAsqE,GAAA,EACA,OAAAvpD,EAAA,CAQA,IAAA6nB,EAAA++B,EADAlyE,GAAAuK,GAEAgwB,EAAAo6C,UAAA73D,EAAAq2B,GAAA6gC,EAAA1oD,GACAtrB,QAVA,CACA,GAAAuK,EAAA,GACA,MAEAvK,GAAA,MAuIA,IACAg1E,EACAC,EAMA14D,EAAAxjB,EARAs7E,EAAA,EASA,IALAY,EADA,IAAAR,EACAr5C,EAAA,GAAA03C,cAAA13C,EAAA,GAAA85C,gBAEA3B,EAAAP,EAAAmC,cAGAd,EAAAY,GAAA,CACA,IAAAG,EAAAnC,EAAAjvE,KAAAC,IAAAgxE,EAAAZ,EAAApB,GAAAgC,EACA,IAAAz+E,EAAA,EAAiBA,EAAAi+E,EAAsBj+E,IACvC4kC,EAAA5kC,GAAAo+E,KAAA,EAGA,GADAX,EAAA,EACA,IAAAQ,EAEA,IADAl6C,EAAAa,EAAA,GACA3/B,EAAA,EAAmBA,EAAA25E,EAAe35E,IAClC84E,EAAAh6C,EAAAi6C,EAAAH,GACAA,SAGA,IAAA54E,EAAA,EAAmBA,EAAA25E,EAAe35E,IAAA,CAClC,IAAAjF,EAAA,EAAqBA,EAAAi+E,EAAsBj+E,IAI3C,IAFA+lB,GADAge,EAAAa,EAAA5kC,IACA+lB,EACAxjB,EAAAwhC,EAAAxhC,EACAsI,EAAA,EAAuBA,EAAAtI,EAAOsI,IAC9B,IAAArB,EAAA,EAAyBA,EAAAuc,EAAOvc,IAChCo0E,EAAA75C,EAAAi6C,EAAAH,EAAAhzE,EAAArB,GAIAq0E,IAGAV,EAAA,GACAqB,EAAAK,EAAAp7D,EAAA6C,KACAk4D,EAAAM,WACA,EAAAl7E,EAAA4O,MAAA,wDAAAgsE,EAAAM,SACAx4D,EAAAk4D,EAAAl4D,QAEA,IAAAy4D,EAAAP,KAAAO,OACA,IAAAA,MAAA,MACA,UAAAzD,EAAA,wBAEA,KAAAyD,GAAA,OAAAA,GAAA,OAGA,MAFAz4D,GAAA,EAUA,OALAk4D,EAAAK,EAAAp7D,EAAA6C,KACAk4D,EAAAM,WACA,EAAAl7E,EAAA4O,MAAA,yDAAAgsE,EAAAM,SACAx4D,EAAAk4D,EAAAl4D,QAEAA,EAAA22D,EAEA,SAAA+B,EAAAj7C,EAAAk7C,EAAA9zE,GACA,IAEAusC,EAAA90C,EAAAC,EAAAq8E,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAv3E,EAJAw3E,EAAAh8C,EAAAi8C,kBACA7B,EAAAp6C,EAAAo6C,UAIA,IAAA4B,EACA,UAAAzE,EAAA,wCAEA,QAAA36C,EAAA,EAAqBA,EAAA,GAAUA,GAAA,EAC/B4+C,EAAApB,EAAAc,EAAAt+C,GACA6+C,EAAArB,EAAAc,EAAAt+C,EAAA,GACA8+C,EAAAtB,EAAAc,EAAAt+C,EAAA,GACA++C,EAAAvB,EAAAc,EAAAt+C,EAAA,GACAg/C,EAAAxB,EAAAc,EAAAt+C,EAAA,GACAi/C,EAAAzB,EAAAc,EAAAt+C,EAAA,GACAk/C,EAAA1B,EAAAc,EAAAt+C,EAAA,GACAm/C,EAAA3B,EAAAc,EAAAt+C,EAAA,GACA4+C,GAAAQ,EAAAp/C,GACA,IAAA6+C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAYAN,GAAAO,EAAAp/C,EAAA,GACA8+C,GAAAM,EAAAp/C,EAAA,GACA++C,GAAAK,EAAAp/C,EAAA,GACAg/C,GAAAI,EAAAp/C,EAAA,GACAi/C,GAAAG,EAAAp/C,EAAA,GACAk/C,GAAAE,EAAAp/C,EAAA,GACAm/C,GAAAC,EAAAp/C,EAAA,GAUA/9B,GADA80C,GARAA,EAAAukC,EAAAsD,EAAA,SACA38E,EAAAq5E,EAAA0D,EAAA,QAOA,MACA/8E,EACA2F,GARA1F,EAAA48E,GAQAzD,GAPAkD,EAAAW,GAOA9D,EAAA,OACAl5E,IAAAk5E,EAAAmD,EAAAlD,EAAA,OAGAqD,GADAF,GATAA,EAAAjD,GAAAsD,EAAAM,GAAA,SAGAT,EAAAO,GAAA,GAMA,MACAP,EAEAD,GADAE,GAVAA,EAAApD,GAAAsD,EAAAM,GAAA,SACAV,EAAAM,GAAA,GASA,MACAN,EAEAF,GADAxnC,KALAwnC,EAAA32E,GAKA,MACA22E,EAEAr8E,GADAD,IAAAC,EAAA,MACAA,EACA0F,EAAA42E,EAAArD,EAAAwD,EAAAzD,EAAA,SACAsD,IAAAtD,EAAAyD,EAAAxD,EAAA,SACAwD,EAAA/2E,EACAA,EAAA62E,EAAAxD,EAAAyD,EAAA1D,EAAA,SACAyD,IAAAzD,EAAA0D,EAAAzD,EAAA,SACAyD,EAAA92E,EACA4C,EAAAw1B,GAAA+W,EAAA4nC,EACAn0E,EAAAw1B,EAAA,GAAA+W,EAAA4nC,EACAn0E,EAAAw1B,EAAA,GAAA/9B,EAAAy8E,EACAl0E,EAAAw1B,EAAA,GAAA/9B,EAAAy8E,EACAl0E,EAAAw1B,EAAA,GAAA99B,EAAAu8E,EACAj0E,EAAAw1B,EAAA,GAAA99B,EAAAu8E,EACAj0E,EAAAw1B,EAAA,GAAAu+C,EAAAC,EACAh0E,EAAAw1B,EAAA,GAAAu+C,EAAAC,IApDA52E,EAAA0zE,EAAAsD,EAAA,QACAp0E,EAAAw1B,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,EACA4C,EAAAw1B,EAAA,GAAAp4B,GA8CA,QAAA8zE,EAAA,EAAqBA,EAAA,IAASA,EAC9BkD,EAAAp0E,EAAAkxE,GAQA,KAPAmD,EAAAr0E,EAAAkxE,EAAA,KACAoD,EAAAt0E,EAAAkxE,EAAA,MACAqD,EAAAv0E,EAAAkxE,EAAA,MACAsD,EAAAx0E,EAAAkxE,EAAA,MACAuD,EAAAz0E,EAAAkxE,EAAA,MACAwD,EAAA10E,EAAAkxE,EAAA,MACAyD,EAAA30E,EAAAkxE,EAAA,OAuBAz5E,GADA80C,EAAA,OARAA,EAAAukC,EAAAsD,EAAA,WACA38E,EAAAq5E,EAAA0D,EAAA,UAOA,OACA/8E,EACA2F,GARA1F,EAAA48E,GAQAzD,GAPAkD,EAAAW,GAOA9D,EAAA,SACAl5E,IAAAk5E,EAAAmD,EAAAlD,EAAA,SACAkD,EAAA32E,EAEA82E,GADAF,GATAA,EAAAjD,GAAAsD,EAAAM,GAAA,WAGAT,EAAAO,GAMA,MACAP,EAEAD,GADAE,GAVAA,EAAApD,GAAAsD,EAAAM,GAAA,WACAV,EAAAM,GASA,MACAN,EAKA72E,EAAA42E,EAAArD,EAAAwD,EAAAzD,EAAA,SACAsD,IAAAtD,EAAAyD,EAAAxD,EAAA,SACAwD,EAAA/2E,EACAA,EAAA62E,EAAAxD,EAAAyD,EAAA1D,EAAA,SACAyD,IAAAzD,EAAA0D,EAAAzD,EAAA,SAUA2D,GARAA,GAVA7nC,IAAAwnC,EAAA,MAUAI,GAQA,KAAAC,GAAA,SAAAA,GAAA,EACAC,GAPAA,GAVA58E,IAAAC,EAAA,OAOAw8E,EAAA92E,IAUA,KAAAi3E,GAAA,SAAAA,GAAA,EACAC,GANAA,GAXA58E,EAAAD,EAAAC,GAWAu8E,GAMA,KAAAK,GAAA,SAAAA,GAAA,EACAC,GALAA,GAfAR,EAAAxnC,EAAAwnC,GAeAC,GAKA,KAAAO,GAAA,SAAAA,GAAA,EACAC,GALAA,EAAAT,EAAAC,GAKA,KAAAQ,GAAA,SAAAA,GAAA,EACAC,GARAA,EAAA/8E,EAAAu8E,GAQA,KAAAQ,GAAA,SAAAA,GAAA,EACAC,GAXAA,EAAAj9E,EAAAy8E,GAWA,KAAAQ,GAAA,SAAAA,GAAA,EACAC,GAdAA,EAAApoC,EAAA4nC,GAcA,KAAAQ,GAAA,SAAAA,GAAA,EACA3B,EAAAc,EAAA5C,GAAAkD,EACApB,EAAAc,EAAA5C,EAAA,GAAAmD,EACArB,EAAAc,EAAA5C,EAAA,IAAAoD,EACAtB,EAAAc,EAAA5C,EAAA,IAAAqD,EACAvB,EAAAc,EAAA5C,EAAA,IAAAsD,EACAxB,EAAAc,EAAA5C,EAAA,IAAAuD,EACAzB,EAAAc,EAAA5C,EAAA,IAAAwD,EACA1B,EAAAc,EAAA5C,EAAA,IAAAyD,IA7DAv3E,GADAA,EAAA0zE,EAAAsD,EAAA,WACA,OAAAh3E,GAAA,SAAAA,EAAA,QACA41E,EAAAc,EAAA5C,GAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,GAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,IAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,IAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,IAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,IAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,IAAA9zE,EACA41E,EAAAc,EAAA5C,EAAA,IAAA9zE,GAwDA,SAAA03E,EAAAzD,EAAAz4C,GAIA,IAHA,IAAAu4C,EAAAv4C,EAAAu4C,cACAoC,EAAA36C,EAAA26C,gBACAwB,EAAA,IAAAC,WAAA,IACAC,EAAA,EAA0BA,EAAA1B,EAA4B0B,IACtD,QAAAC,EAAA,EAA4BA,EAAA/D,EAA0B+D,IAAA,CAEtDrB,EAAAj7C,EADAq4C,EAAAr4C,EAAAq8C,EAAAC,GACAH,GAGA,OAAAn8C,EAAAo6C,UAEA,SAAAU,EAAAp7D,EAAA68D,GACA,IAAA7jE,EAAAtK,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,GAAAA,UAAA,GAAAmuE,EAEA,SAAAC,EAAAp8E,GACA,OAAAsf,EAAAtf,IAAA,EAAAsf,EAAAtf,EAAA,GAEA,IAAAq8E,EAAA/8D,EAAAtjB,OAAA,EACAsgF,EAAAhkE,EAAA6jE,EAAA7jE,EAAA6jE,EACA,GAAAA,GAAAE,EACA,YAEA,IAAAE,EAAAH,EAAAD,GACA,GAAAI,GAAA,OAAAA,GAAA,MACA,OACA5B,QAAA,KACAC,OAAA2B,EACAp6D,OAAAg6D,GAIA,IADA,IAAAK,EAAAJ,EAAAE,KACAE,GAAA,OAAAA,GAAA,SACA,KAAAF,GAAAD,EACA,YAEAG,EAAAJ,EAAAE,GAEA,OACA3B,QAAA4B,EAAAj/E,SAAA,IACAs9E,OAAA4B,EACAr6D,OAAAm6D,GA2ZA,OAxZA19D,EAAAhlB,UAAA,CACAyS,MAAA,SAAAiT,GACA,IACAm9D,GADAzuE,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,GAAAA,UAAA,OACA0uE,aACAA,OAAAx/E,IAAAu/E,EAAA,KAAAA,EAEA,SAAA7uC,IACA,IAAAt0C,EAAAgmB,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,GAEA,OADAA,GAAA,EACA7oB,EAEA,SAAAqjF,IACA,IAAA3gF,EAAA4xC,IACAgvC,EAAAz6D,EAAAnmB,EAAA,EACAq+E,EAAAK,EAAAp7D,EAAAs9D,EAAAz6D,GACAk4D,KAAAM,WACA,EAAAl7E,EAAA4O,MAAA,wDAAAgsE,EAAAM,SACAiC,EAAAvC,EAAAl4D,QAEA,IAAApK,EAAAuH,EAAA7e,SAAA0hB,EAAAy6D,GAEA,OADAz6D,GAAApK,EAAA/b,OACA+b,EAEA,SAAA8kE,EAAAxE,GAGA,IAFA,IAAAO,EAAAvvE,KAAA2d,KAAAqxD,EAAAyE,eAAA,EAAAzE,EAAA0E,MACAvC,EAAAnxE,KAAA2d,KAAAqxD,EAAAhB,UAAA,EAAAgB,EAAA2E,MACAnhF,EAAA,EAAuBA,EAAAw8E,EAAA53C,WAAAzkC,OAA6BH,IAAA,CACpD+jC,EAAAy4C,EAAA53C,WAAA5kC,GACA,IAAAs8E,EAAA9uE,KAAA2d,KAAA3d,KAAA2d,KAAAqxD,EAAAyE,eAAA,GAAAl9C,EAAAhe,EAAAy2D,EAAA0E,MACAxC,EAAAlxE,KAAA2d,KAAA3d,KAAA2d,KAAAqxD,EAAAhB,UAAA,GAAAz3C,EAAAxhC,EAAAi6E,EAAA2E,MACAC,EAAArE,EAAAh5C,EAAAhe,EAEAs7D,EAAA,IADA1C,EAAA56C,EAAAxhC,IACA6+E,EAAA,GACAr9C,EAAAo6C,UAAA,IAAAgC,WAAAkB,GACAt9C,EAAAu4C,gBACAv4C,EAAA26C,kBAEAlC,EAAAO,cACAP,EAAAmC,gBAEA,IAGAnC,EAAAC,EAHAn2D,EAAA,EACAg7D,EAAA,KACAC,EAAA,KAEAC,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAnD,EAAAzsC,IACA,WAAAysC,EACA,UAAAlD,EAAA,iBAEAkD,EAAAzsC,IACA6vC,EAAA,aAAApD,GAAA,CACA,IAAAx+E,EAAA6K,EAAAgzB,EACA,OAAA2gD,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,IAAAqD,EAAAf,IACA,QAAAtC,GACA,KAAAqD,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,KACAP,EAAA,CACAha,QAAA,CACAze,MAAAg5B,EAAA,GACA/4B,MAAA+4B,EAAA,IAEAC,aAAAD,EAAA,GACAE,SAAAF,EAAA,MAAAA,EAAA,GACAG,SAAAH,EAAA,OAAAA,EAAA,IACAI,WAAAJ,EAAA,IACAK,YAAAL,EAAA,IACAM,UAAAN,EAAAj9E,SAAA,QAAAi9E,EAAA,IAAAA,EAAA,OAIA,QAAArD,GACA,KAAAqD,EAAA,UAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,KACAN,EAAA,CACAja,QAAAua,EAAA,MAAAA,EAAA,GACAO,OAAAP,EAAA,MAAAA,EAAA,GACAQ,OAAAR,EAAA,MAAAA,EAAA,IACAS,cAAAT,EAAA,MAIA,MACA,WAIA,IAHA,IACAU,EADAxwC,IACAzrB,EAAA,EAEAA,EAAAi8D,GAAA,CACA,IAAAC,EAAA/+D,EAAA6C,KACAm8D,EAAA,IAAA91E,YAAA,IACA,GAAA61E,GAAA,KACA,IAAA33E,EAAA,EAA2BA,EAAA,GAAQA,IAEnC43E,EADA/G,EAAA7wE,IACA4Y,EAAA6C,SAEe,IAAAk8D,GAAA,KAMf,UAAAlH,EAAA,4BALA,IAAAzwE,EAAA,EAA2BA,EAAA,GAAQA,IAEnC43E,EADA/G,EAAA7wE,IACAknC,IAKA0vC,EAAA,GAAAe,GAAAC,EAEA,MACA,WACA,WACA,WACA,GAAAjG,EACA,UAAAlB,EAAA,qCAEAvpC,KACAyqC,EAAA,IACAkG,SAAA,QAAAlE,EACAhC,EAAAQ,YAAA,QAAAwB,EACAhC,EAAAxrC,UAAAvtB,EAAA6C,KACA,IAAAq8D,EAAA5wC,IACAyqC,EAAAhB,UAAAqF,GAAA8B,EACAnG,EAAAyE,eAAAlvC,IACAyqC,EAAA53C,WAAA,GACA43C,EAAAoG,aAAA,GACA,IACAC,EADAx4C,EAAA5mB,EAAA6C,KAEA46D,EAAA,EACAC,EAAA,EACA,IAAAnhF,EAAA,EAAuBA,EAAAqqC,EAAqBrqC,IAAA,CAC5C6iF,EAAAp/D,EAAA6C,GACA,IAAAP,EAAAtC,EAAA6C,EAAA,MACA/jB,EAAA,GAAAkhB,EAAA6C,EAAA,GACA46D,EAAAn7D,IACAm7D,EAAAn7D,GAEAo7D,EAAA5+E,IACA4+E,EAAA5+E,GAEA,IAAAugF,EAAAr/D,EAAA6C,EAAA,GACAuX,EAAA2+C,EAAA53C,WAAAzoB,KAAA,CACA4J,IACAxjB,IACAwgF,eAAAD,EACA9C,kBAAA,OAEAxD,EAAAoG,aAAAC,GAAAhlD,EAAA,EACAvX,GAAA,EAEAk2D,EAAA0E,OACA1E,EAAA2E,OACAH,EAAAxE,GACA,MACA,WACA,IAAAwG,EAAAjxC,IACA,IAAA/xC,EAAA,EAAuBA,EAAAgjF,GAAmB,CAC1C,IAAAC,EAAAx/D,EAAA6C,KACAnd,EAAA,IAAAjF,WAAA,IACAg/E,EAAA,EACA,IAAAr4E,EAAA,EAAyBA,EAAA,GAAQA,IAAAyb,IACjC48D,GAAA/5E,EAAA0B,GAAA4Y,EAAA6C,GAEA,IAAA68D,EAAA,IAAAj/E,WAAAg/E,GACA,IAAAr4E,EAAA,EAAyBA,EAAAq4E,EAAmBr4E,IAAAyb,IAC5C68D,EAAAt4E,GAAA4Y,EAAA6C,GAEAtmB,GAAA,GAAAkjF,GACAD,GAAA,KAAAtB,EAAAD,GAAA,GAAAuB,GAAA9G,EAAAhzE,EAAAg6E,GAEA,MACA,WACApxC,IACA0qC,EAAA1qC,IACA,MACA,WACA,IAAA+qC,EAAA,KAAA0E,IAAAX,EACA9uC,IACA,IAEAhO,EAFAq/C,EAAA3/D,EAAA6C,KACAse,EAAA,GAEA,IAAA5kC,EAAA,EAAuBA,EAAAojF,EAAoBpjF,IAAA,CAC3C,IAAAqjF,EAAA7G,EAAAoG,aAAAn/D,EAAA6C,MACAyd,EAAAy4C,EAAA53C,WAAAy+C,GACA,IAAAC,EAAA7/D,EAAA6C,KACAyd,EAAAm6C,eAAAyD,EAAA2B,GAAA,GACAv/C,EAAAu6C,eAAAoD,EAAA,GAAA4B,GACA1+C,EAAAzoB,KAAA4nB,GAEA,IAAA24C,EAAAj5D,EAAA6C,KACAq2D,EAAAl5D,EAAA6C,KACAi9D,EAAA9/D,EAAA6C,KACA,IACA,IAAAqM,GAAA4pD,EAAA94D,EAAA6C,EAAAk2D,EAAA53C,EAAA63C,EAAAC,EAAAC,EAAA4G,GAAA,KAAAA,EAAAzG,GACAx2D,GAAAqM,GACa,MAAAhT,GACb,GAAAA,aAAA47D,EAEA,OADA,EAAA33E,EAAA4O,MAAAmN,EAAA4jB,QAAA,8CACAplC,KAAAqS,MAAAiT,EAAA,CAAyCo9D,aAAAlhE,EAAA67D,YAC1B,GAAA77D,aAAA87D,EAAA,EACf,EAAA73E,EAAA4O,MAAAmN,EAAA4jB,QAAA,4CACA,MAAAq+C,EAEA,MAAAjiE,EAEA,MACA,WACA2G,GAAA,EACA,MACA,WACA,MAAA7C,EAAA6C,IACAA,IAEA,MACA,QACA,SAAA7C,EAAA6C,EAAA,IAAA7C,EAAA6C,EAAA,SAAA7C,EAAA6C,EAAA,SACAA,GAAA,EACA,MAEA,IAAAk9D,GAAA3E,EAAAp7D,EAAA6C,EAAA,GACA,GAAAk9D,OAAA1E,QAAA,EACA,EAAAl7E,EAAA4O,MAAA,yDAAAgxE,GAAA1E,SACAx4D,EAAAk9D,GAAAl9D,OACA,MAEA,UAAAg1D,EAAA,kBAAAkD,EAAA/8E,SAAA,KAEA+8E,EAAAzsC,IAOA,IALA5zC,KAAA0Q,MAAA2tE,EAAAyE,eACA9iF,KAAA2Q,OAAA0tE,EAAAhB,UACAr9E,KAAAmjF,OACAnjF,KAAAojF,QACApjF,KAAAymC,WAAA,GACA5kC,EAAA,EAAiBA,EAAAw8E,EAAA53C,WAAAzkC,OAA6BH,IAAA,CAE9C,IAAAggF,GAAAyB,GADA19C,EAAAy4C,EAAA53C,WAAA5kC,IACA+iF,gBACA/C,KACAj8C,EAAAi8C,sBAEA7hF,KAAAymC,WAAAzoB,KAAA,CACA2+B,OAAAmlC,EAAAzD,EAAAz4C,GACA0/C,OAAA1/C,EAAAhe,EAAAy2D,EAAA0E,KACAwC,OAAA3/C,EAAAxhC,EAAAi6E,EAAA2E,KACA7E,cAAAv4C,EAAAu4C,cACAoC,gBAAA36C,EAAA26C,kBAGAvgF,KAAAwlF,cAAAxlF,KAAAymC,WAAAzkC,QAGAyjF,wBAAA,SAAA/0E,EAAAC,GACA,IAEAi1B,EAAA8/C,EAAAC,EAAAC,EACA1qE,EAAAjF,EAAApU,EAAA6K,EAAArB,EACA6Y,EAEAy4B,EANA2oC,EAAAtlF,KAAA0Q,QACA60E,EAAAvlF,KAAA2Q,SAIAwX,EAAA,EAEAq9D,EAAAxlF,KAAAymC,WAAAzkC,OACAu7B,EAAA7sB,EAAAC,EAAA60E,EACAlgE,EAAA,IAAA8wB,kBAAA7Y,GACAsoD,EAAA,IAAAxjD,YAAA3xB,GAEA,IAAA7O,EAAA,EAAiBA,EAAA2jF,EAAmB3jF,IAAA,CAOpC,IALA6jF,GADA9/C,EAAA5lC,KAAAymC,WAAA5kC,IACAyjF,SACAK,EAAA//C,EAAA2/C,SACAp9D,EAAAtmB,EACA86C,EAAA/W,EAAA+W,OACAipC,EAAAhgD,EAAAu4C,cAAA,KACAjjE,EAAA,EAAmBA,EAAAxK,EAAWwK,IAC9BxO,EAAA,EAAAwO,EAAAwqE,EACAG,EAAA3qE,IAVA,WAUAxO,IAAA,IAAAA,EAEA,IAAAuJ,EAAA,EAAmBA,EAAAtF,EAAYsF,IAG/B,IADAiO,EAAA0hE,GAdA,YAaAl5E,EAAA,EAAAuJ,EAAA0vE,KACA,EAAAj5E,IAAA,EACAwO,EAAA,EAAqBA,EAAAxK,EAAWwK,IAChCoK,EAAA6C,GAAAw0B,EAAAz4B,EAAA2hE,EAAA3qE,IACAiN,GAAAq9D,EAIA,IAAAvgE,EAAAjlB,KAAAolB,gBACA,GAAAH,EACA,IAAApjB,EAAA,EAAmBA,EAAA07B,GACnB,IAAA7wB,EAAA,EAAArB,EAAA,EAA4BqB,EAAA84E,EAAmB94E,IAAA7K,IAAAwJ,GAAA,EAC/Cia,EAAAzjB,IAAAyjB,EAAAzjB,GAAAojB,EAAA5Z,IAAA,GAAA4Z,EAAA5Z,EAAA,GAIA,OAAAia,GAEAwgE,yBAAA,WACA,OAAA9lF,KAAAojF,QACApjF,KAAAojF,MAAAe,cAEA,IAAAnkF,KAAAwlF,cACA,IAAAxlF,KAAAqlB,eAKA,IAAArlB,KAAAqlB,gBAMA0gE,iBAAA,SAAAzgE,GAEA,IADA,IAAAtM,EAAAgtE,EAAAC,EACApkF,EAAA,EAAAG,EAAAsjB,EAAAtjB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDmX,EAAAsM,EAAAzjB,GACAmkF,EAAA1gE,EAAAzjB,EAAA,GACAokF,EAAA3gE,EAAAzjB,EAAA,GACAyjB,EAAAzjB,GAAAmX,EAAA,cAAAitE,EACA3gE,EAAAzjB,EAAA,GAAAmX,EAAA,aAAAgtE,EAAA,KAAAC,EACA3gE,EAAAzjB,EAAA,GAAAmX,EAAA,cAAAgtE,EAEA,OAAA1gE,GAEA4gE,kBAAA,SAAA5gE,GAGA,IAFA,IAAAtM,EAAAgtE,EAAAC,EAAA56E,EACA8c,EAAA,EACAtmB,EAAA,EAAAG,EAAAsjB,EAAAtjB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDmX,EAAAsM,EAAAzjB,GACAmkF,EAAA1gE,EAAAzjB,EAAA,GACAokF,EAAA3gE,EAAAzjB,EAAA,GACAwJ,EAAAia,EAAAzjB,EAAA,GACAyjB,EAAA6C,KAAA69D,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,mBAAAjtE,EAAA,mBAAA3N,EAAA,kCAAA46E,IAAA,oBAAAA,EAAA,oBAAAjtE,EAAA,mBAAA3N,EAAA,kBAAA2N,GAAA,oBAAAA,EAAA,mBAAA3N,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACAia,EAAA6C,KAAA,iBAAA69D,GAAA,oBAAAA,EAAA,oBAAAC,EAAA,oBAAAjtE,EAAA,oBAAA3N,EAAA,kBAAA46E,IAAA,oBAAAA,EAAA,mBAAAjtE,EAAA,oBAAA3N,EAAA,kBAAA2N,GAAA,mBAAAA,EAAA,mBAAA3N,EAAA,iBAAAA,IAAA,oBAAAA,EAAA,kBACAia,EAAA6C,KAAA69D,IAAA,oBAAAA,EAAA,oBAAAC,EAAA,kBAAAjtE,EAAA,mBAAA3N,EAAA,kCAAA46E,IAAA,oBAAAA,EAAA,oBAAAjtE,EAAA,oBAAA3N,EAAA,kBAAA2N,GAAA,mBAAAA,EAAA,mBAAA3N,EAAA,kBAAAA,IAAA,oBAAAA,EAAA,iBAEA,OAAAia,EAAA7e,SAAA,EAAA0hB,IAEAg+D,mBAAA,SAAA7gE,GAEA,IADA,IAAAtM,EAAAgtE,EAAAC,EACApkF,EAAA,EAAAG,EAAAsjB,EAAAtjB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDmX,EAAAsM,EAAAzjB,GACAmkF,EAAA1gE,EAAAzjB,EAAA,GACAokF,EAAA3gE,EAAAzjB,EAAA,GACAyjB,EAAAzjB,GAAA,QAAAmX,EAAA,MAAAitE,EACA3gE,EAAAzjB,EAAA,WAAAmX,EAAA,KAAAgtE,EAAA,KAAAC,EACA3gE,EAAAzjB,EAAA,WAAAmX,EAAA,MAAAgtE,EAEA,OAAA1gE,GAEA8gE,kBAAA,SAAA9gE,GAIA,IAHA,IAAAjZ,EAAA2J,EAAAC,EAAA5K,EACA8c,EAAA,EAEAtmB,EAAA,EAAAG,EAAAsjB,EAAAtjB,OAA2CH,EAAAG,EAAYH,GAAA,EACvDwK,EAAAiZ,EAAAzjB,IAFA,OAGAmU,EAAAsP,EAAAzjB,EAAA,IAHA,OAIAoU,EAAAqP,EAAAzjB,EAAA,IAJA,OAKAwJ,EAAAia,EAAAzjB,EAAA,IALA,OAMAyjB,EAAA6C,KAAA,IAAA9b,IAAA,kBAAAA,EAAA,kBAAA2J,EAAA,kBAAAC,EAAA,mBAAA5K,EAAA,mBAAA2K,GAAA,mBAAAA,EAAA,mBAAAC,EAAA,mBAAA5K,EAAA,mBAAA4K,IAAA,mBAAAA,EAAA,mBAAA5K,EAAA,kBAAAA,GAAA,kBAAAA,EAAA,oBACAia,EAAA6C,KAAA,IAAA9b,GAAA,kBAAAA,EAAA,mBAAA2J,EAAA,kBAAAC,EAAA,mBAAA5K,EAAA,kBAAA2K,IAAA,mBAAAA,EAAA,mBAAAC,EAAA,mBAAA5K,EAAA,mBAAA4K,GAAA,kBAAAA,EAAA,gBAAA5K,EAAA,mBAAAA,GAAA,mBAAAA,EAAA,oBACAia,EAAA6C,KAAA,IAAA9b,GAAA,kBAAAA,EAAA,kBAAA2J,EAAA,kBAAAC,EAAA,mBAAA5K,EAAA,oBAAA2K,GAAA,kBAAAA,EAAA,kBAAAC,EAAA,mBAAA5K,EAAA,oBAAA4K,GAAA,mBAAAA,EAAA,mBAAA5K,EAAA,oBAAAA,GAAA,kBAAAA,EAAA,oBAEA,OAAAia,EAAA7e,SAAA,EAAA0hB,IAEA5C,QAAA,SAAA7U,EAAAC,EAAA01E,GACA,GAAArmF,KAAAwlF,cAAA,EACA,UAAArI,EAAA,0BAEA,IAAA73D,EAAAtlB,KAAAylF,wBAAA/0E,EAAAC,GACA,OAAA3Q,KAAAwlF,eAAAa,EAAA,CAIA,IAHA,IAAA9oD,EAAAjY,EAAAtjB,OACAskF,EAAA,IAAAlwC,kBAAA,EAAA7Y,GACApV,EAAA,EACAtmB,EAAA,EAAuBA,EAAA07B,EAAgB17B,IAAA,CACvC,IAAA0kF,EAAAjhE,EAAAzjB,GACAykF,EAAAn+D,KAAAo+D,EACAD,EAAAn+D,KAAAo+D,EACAD,EAAAn+D,KAAAo+D,EAEA,OAAAD,EACO,OAAAtmF,KAAAwlF,eAAAxlF,KAAA8lF,2BACP,OAAA9lF,KAAA+lF,iBAAAzgE,GACO,OAAAtlB,KAAAwlF,cAAA,CACP,GAAAxlF,KAAA8lF,2BACA,OAAAO,EACArmF,KAAAkmF,kBAAA5gE,GAEAtlB,KAAAmmF,mBAAA7gE,GACS,GAAA+gE,EACT,OAAArmF,KAAAomF,kBAAA9gE,GAGA,OAAAA,IAGAV,EAp6BA,GAs6BAvlB,EAAAulB,8CC38BAzlB,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA2hB,eAAA9d,EAEA,IAAAuZ,EAAc/W,EAAQ,KAEtB8gF,EAAW9gF,EAAQ,KAEnBD,EAAYC,EAAQ,KAEpBsb,EAAA,WACA,SAAAA,EAAA1Y,EAAAS,EAAAhG,EAAAyI,GACAxL,KAAAsI,SACAtI,KAAA+I,cACA/I,KAAA+C,OACA/C,KAAAwL,SACAiR,EAAApX,aAAApB,KAAAjE,KAAA+I,GA+CA,OA7CAiY,EAAAphB,UAAAT,OAAAe,OAAAuc,EAAApX,aAAAzF,WACAT,OAAAC,eAAA4hB,EAAAphB,UAAA,SACAO,IAAA,WACA,SAAAsF,EAAA+O,QAAAxU,KAAA,QAAAA,KAAAsI,OAAA1D,SAAA5E,KAAA+I,eAEA2b,cAAA,IAEA1D,EAAAphB,UAAA8H,aAAA,SAAAC,KACAqZ,EAAAphB,UAAA6H,UAAA,WACA,IAAAzH,KAAAuH,IAAA,CAGA,IAAAk/E,EAAA,IAAAD,EAAAxhD,SACAyhD,EAAAp0E,MAAArS,KAAA8F,OACA,IAAA4K,EAAA+1E,EAAA/1E,MACAC,EAAA81E,EAAA91E,OACAu7B,EAAAu6C,EAAAv6C,gBACAw6C,EAAAD,EAAA7/C,MAAA5kC,OACA,OAAA0kF,EACA1mF,KAAAkH,OAAAu/E,EAAA7/C,MAAA,GAAAtS,UACK,CAEL,IADA,IAAAhP,EAAA,IAAA8wB,kBAAA1lC,EAAAC,EAAAu7B,GACA7gC,EAAA,EAAqBA,EAAAq7E,EAAer7E,IAWpC,IAVA,IAAAs7E,EAAAF,EAAA7/C,MAAAv7B,GACAu7E,EAAAD,EAAAj2E,MACAm2E,EAAAF,EAAAh2E,OACAm2E,EAAAH,EAAA55E,KACAg6E,EAAAJ,EAAArzC,IACA3jC,EAAAg3E,EAAAryD,MACA0yD,EAAA,EACAC,GAAAv2E,EAAAq2E,EAAAD,GAAA56C,EACAlkB,EAAAtX,EAAAw7B,EACAg7C,EAAAN,EAAA16C,EACAx/B,EAAA,EAAuBA,EAAAm6E,EAAgBn6E,IAAA,CACvC,IAAAX,EAAA4D,EAAAlJ,SAAAugF,IAAAE,GACA5hE,EAAA/iB,IAAAwJ,EAAAk7E,GACAD,GAAAE,EACAD,GAAAj/D,EAGAhoB,KAAAkH,OAAAoe,EAEAtlB,KAAAsH,aAAAtH,KAAAkH,OAAAlF,OACAhC,KAAAuH,KAAA,IAEAyZ,EArDA,GAuDA3hB,EAAA2hB,8CClEA7hB,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA8oE,kBAAA9oE,EAAA8nF,sBAAA9nF,EAAA+nF,gBAAAlkF,EAEA,IAAAmkF,EAAA,SAAAlnF,EAAAmnF,EAAAC,EAAAC,GAAqD,OAAAF,MAAAhvB,SAAA14D,WAAkD,IAAA6nF,EAAAtoF,OAAAuoF,yBAAAJ,EAAAC,GAA8D,QAAArkF,IAAAukF,EAAA,CAA0B,IAAAlzD,EAAAp1B,OAAA4iD,eAAAulC,GAA4C,cAAA/yD,OAAuB,EAA2Bp0B,EAAAo0B,EAAAgzD,EAAAC,GAA4C,aAAAC,EAA4B,OAAAA,EAAAnoF,MAA4B,IAAAqoF,EAAAF,EAAAtnF,IAAuB,YAAA+C,IAAAykF,EAAgDA,EAAA1jF,KAAAujF,QAAhD,GAExZrsC,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAz5C,EAAA,EAAgBA,EAAAy5C,EAAAt5C,OAAkBH,IAAA,CAAO,IAAA05C,EAAAD,EAAAz5C,GAA2B05C,EAAAC,WAAAD,EAAAC,aAAA,EAAwDD,EAAA72B,cAAA,EAAgC,UAAA62B,MAAAE,UAAA,GAAuDt8C,OAAAC,eAAAi8C,EAAAE,EAAAn5C,IAAAm5C,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA97C,UAAA+7C,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAj2C,EAAYC,EAAQ,KAEpB4/D,EAAW5/D,EAAQ,KAEnBC,EAAkBD,EAAQ,KAE1ButB,EAAkBvtB,EAAQ,KAE1B8/D,EAAqB9/D,EAAQ,KAE7B+W,EAAc/W,EAAQ,KAEtB,SAAAm2C,EAAAC,EAAA73C,GAAiD,IAAA63C,EAAa,UAAAC,eAAA,6DAAyF,OAAA93C,GAAA,iBAAAA,GAAA,mBAAAA,EAAA63C,EAAA73C,EAEvJ,SAAA+3C,EAAAC,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAArpB,UAAA,kEAAAqpB,GAAuGD,EAAAr8C,UAAAT,OAAAe,OAAAg8C,KAAAt8C,UAAA,CAAyED,YAAA,CAAeL,MAAA28C,EAAAT,YAAA,EAAAC,UAAA,EAAA/2B,cAAA,KAA6Ew3B,IAAA/8C,OAAAg9C,eAAAh9C,OAAAg9C,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,SAAAG,EAAAC,EAAAZ,GAAiD,KAAAY,aAAAZ,GAA0C,UAAA7oB,UAAA,qCAE3F,IAAAs1C,EAAA,WACA,SAAAA,IACA9rB,EAAAr8C,KAAAmoE,GA6EA,OA1EAhtB,EAAAgtB,EAAA,OACA/lE,IAAA,SACA9C,MAAA,SAAAqB,EAAA8C,EAAAyvB,EAAAkzC,GACA,IAAArjE,EAAApC,EAAAU,WAAAoC,GACA,MAAAkC,EAAA3C,QAAAD,GAAA,CAGA,IAAAqkD,GAAA,EAAAzhD,EAAA1D,OAAAwB,KAAAH,WAAA,SAAA8iE,EAAAC,cACAvyC,EAAA/wB,EAAA5C,IAAA,WACA2zB,GAAA,EAAAnuB,EAAAxB,QAAA2vB,KAAA/zB,KAAA,KACA,IAAA6nF,EAAA,CACAjnF,OACAoC,OACAU,KAAA,EAAAkC,EAAA1D,OAAAwB,KAAA,KACAqwB,UACAszB,KACAl0B,cAEA,OAAAY,GACA,WACA,WAAA+zD,EAAAD,GACA,WACA,WAAAE,EAAAF,GACA,aACA,IAAAG,GAAA,EAAAtiF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,OAGA,OADA2lF,GAAA,EAAApiF,EAAAxB,QAAA4jF,KAAAhoF,KAAA,MAEA,SACA,WAAAioF,EAAAJ,GACA,UACA,WAAAK,EAAAL,GACA,SACA,WAAAM,EAAAN,GAGA,OADA,EAAAniF,EAAA4O,MAAA,oCAAA0zE,EAAA,uCACA,IAAAI,EAAAP,GACA,YACA,WAAAQ,EAAAR,GACA,WACA,WAAAS,EAAAT,GACA,aACA,WAAAU,EAAAV,GACA,aACA,WAAAW,EAAAX,GACA,eACA,WAAAY,EAAAZ,GACA,cACA,WAAAa,EAAAb,GACA,gBACA,WAAAc,EAAAd,GACA,gBACA,WAAAe,EAAAf,GACA,eACA,WAAAgB,EAAAhB,GACA,gBACA,WAAAiB,EAAAjB,GACA,YACA,WAAAkB,EAAAlB,GACA,qBACA,WAAAmB,EAAAnB,GACA,QAMA,OALA9zD,GAGA,EAAAruB,EAAA4O,MAAA,kCAAAyf,EAAA,wCAFA,EAAAruB,EAAA4O,MAAA,gDAIA,IAAA+yE,EAAAQ,SAKAzf,EA/EA,GAgGA,IAAAif,EAAA,WACA,SAAAA,EAAA57E,GACA6wC,EAAAr8C,KAAAonF,GAEA,IAAArkF,EAAAyI,EAAAzI,KACA/C,KAAAgpF,SAAAjmF,EAAA5C,IAAA,MACAH,KAAAipF,aAAAlmF,EAAArB,SAAA,SACA1B,KAAAkpF,SAAAnmF,EAAArB,SAAA,MACA1B,KAAAmpF,eAAApmF,GACA/C,KAAAopF,cAAArmF,GACA/C,KAAAslB,KAAA,CACA+jE,gBAAArpF,KAAAg1B,MACAs0D,YAAAtpF,KAAAspF,YACA/wE,MAAAvY,KAAAuY,MACAgxE,gBAAAvpF,KAAAwpF,WACApiC,GAAA57C,EAAA47C,GACAqiC,KAAAzpF,KAAA0pF,UACA51D,QAAAtoB,EAAAsoB,SA4LA,OAxLAqnB,EAAAisC,EAAA,EACAhlF,IAAA,WACA9C,MAAA,SAAA01B,EAAA20D,GACA,SAAA30D,EAAA20D,KAEG,CACHvnF,IAAA,cACA9C,MAAA,SAAA01B,GACA,OAAAh1B,KAAA4pF,SAAA50D,EAAAvvB,EAAAokF,eAAAC,aAAA9pF,KAAA4pF,SAAA50D,EAAAvvB,EAAAokF,eAAAE,UAAA/pF,KAAA4pF,SAAA50D,EAAAvvB,EAAAokF,eAAAG,UAEG,CACH5nF,IAAA,eACA9C,MAAA,SAAA01B,GACA,OAAAh1B,KAAA4pF,SAAA50D,EAAAvvB,EAAAokF,eAAAI,SAAAjqF,KAAA4pF,SAAA50D,EAAAvvB,EAAAokF,eAAAC,aAAA9pF,KAAA4pF,SAAA50D,EAAAvvB,EAAAokF,eAAAE,UAEG,CACH3nF,IAAA,WACA9C,MAAA,SAAA01B,GACAh1B,KAAAg1B,MAAA9W,OAAAC,UAAA6W,MAAA,EAAAA,EAAA,IAEG,CACH5yB,IAAA,UACA9C,MAAA,SAAAqqF,GACA,OAAA3pF,KAAA4pF,SAAA5pF,KAAAg1B,MAAA20D,KAEG,CACHvnF,IAAA,eACA9C,MAAA,SAAAoqF,GACA/nF,MAAAC,QAAA8nF,IAAA,IAAAA,EAAA1nF,OACAhC,KAAA0pF,UAAAjkF,EAAA8C,KAAA2hF,cAAAR,GAEA1pF,KAAA0pF,UAAA,YAGG,CACHtnF,IAAA,WACA9C,MAAA,SAAAiZ,GACA,IAAA0c,EAAA,IAAAlvB,WAAA,GACA,GAAApE,MAAAC,QAAA2W,GAIA,OAAAA,EAAAvW,QACA,OACAhC,KAAAuY,MAAA,KACA,MACA,OACA0a,EAAAzjB,WAAAuD,WAAAC,KAAAlD,WAAAyI,EAAA,EAAA0c,EAAA,GACAj1B,KAAAuY,MAAA0c,EACA,MACA,OACAhC,EAAAzjB,WAAAuD,WAAAlD,IAAAC,WAAAyI,EAAA,EAAA0c,EAAA,GACAj1B,KAAAuY,MAAA0c,EACA,MACA,OACAhC,EAAAzjB,WAAAuD,WAAAE,KAAAnD,WAAAyI,EAAA,EAAA0c,EAAA,GACAj1B,KAAAuY,MAAA0c,EACA,MACA,QACAj1B,KAAAuY,MAAA0c,OApBAj1B,KAAAuY,MAAA0c,IAwBG,CACH7yB,IAAA,iBACA9C,MAAA,SAAAgqF,GAEA,GADAtpF,KAAAspF,YAAA,IAAAnC,GACA,EAAAxhF,EAAA3C,QAAAsmF,GAGA,GAAAA,EAAA9mF,IAAA,OACA,IAAAO,EAAAumF,EAAAnpF,IAAA,MACAgqF,EAAApnF,EAAA5C,IAAA,QACAgqF,KAAA,EAAAxkF,EAAAxB,QAAAgmF,EAAA,YACAnqF,KAAAspF,YAAAc,SAAArnF,EAAA5C,IAAA,MACAH,KAAAspF,YAAAe,SAAAtnF,EAAA5C,IAAA,MACAH,KAAAspF,YAAAgB,aAAAvnF,EAAArB,SAAA,YAEO,GAAA4nF,EAAA9mF,IAAA,WACP,IAAAub,EAAAurE,EAAA5nF,SAAA,UACAC,MAAAC,QAAAmc,MAAA/b,QAAA,IACAhC,KAAAspF,YAAAiB,0BAAAxsE,EAAA,IACA/d,KAAAspF,YAAAkB,wBAAAzsE,EAAA,IACA/d,KAAAspF,YAAAc,SAAArsE,EAAA,IACA,IAAAA,EAAA/b,QACAhC,KAAAspF,YAAAgB,aAAAvsE,EAAA,UAIA/d,KAAAspF,YAAAc,SAAA,KAGG,CACHhoF,IAAA,gBACA9C,MAAA,SAAAyD,GACA/C,KAAAwpF,WAAA,KACA,IAAAiB,EAAA1nF,EAAA5C,IAAA,MACA,MAAAwF,EAAA3C,QAAAynF,GAAA,CAGA,IAAAC,EAAAD,EAAAtqF,IAAA,KACA,MAAAwF,EAAAhB,UAAA+lF,GACA1qF,KAAAwpF,WAAAkB,OAGA,MAAA/kF,EAAA3C,QAAA0nF,GAAA,CAGA,IAAAlvE,EAAAzY,EAAA5C,IAAA,OACA,EAAAwF,EAAAxB,QAAAqX,IAAAkvE,EAAAloF,IAAAgZ,EAAAzb,QAGAC,KAAAwpF,WAAAkB,EAAAvqF,IAAAqb,EAAAzb,WAEG,CACHqC,IAAA,gBACA9C,MAAA,SAAAyD,GACAA,EAAAP,IAAA,OACAxC,KAAAslB,KAAA/M,MAAA,MAEAvY,KAAAslB,KAAAqlE,SAAA5nF,EAAAP,IAAA,SACAxC,KAAAslB,KAAAyP,OAAA,EAAAtvB,EAAA4vB,mBAAAtyB,EAAA5C,IAAA,UACAH,KAAAslB,KAAAslE,UAAA,EAAAnlF,EAAA4vB,mBAAAtyB,EAAA5C,IAAA,mBAEG,CACHiC,IAAA,gBACA9C,MAAA,SAAAgD,GACA,OAAAtC,KAAAwpF,WAAAzmF,KAAAzB,SAAA,aAAAuuB,KAAA,SAAA42C,GACA,GAAAA,EAIA,OADA,IAAAnB,EAAArzC,aAAAw0C,EAAAnkE,EAAAmkE,EAAA9lE,MACAmgC,OAAAjR,KAAA,WACA,OAAA42C,QAIG,CACHrkE,IAAA,kBACA9C,MAAA,SAAAm5D,EAAAwH,EAAA4qB,GACA,IAAAz7D,EAAApvB,KAEA,IAAAA,KAAAwpF,WACA,OAAAhoF,QAAAC,QAAA,IAAA+jE,EAAA3/C,cAEA,IAAAP,EAAAtlB,KAAAslB,KACAwlE,EAAA9qF,KAAAwpF,WAAAzmF,KACAkjE,EAAAjmE,KAAA+mE,cAAA,iEACAgkB,EAAAD,EAAAppF,SAAA,mBACAyR,EAAA23E,EAAAppF,SAAA,yBACAujB,EAzLA,SAAAwkE,EAAAsB,EAAA53E,GACA,IAAAykD,EAAAnyD,EAAA8C,KAAAyiF,2BAAAD,EAAA53E,GACAq6D,EAAA5V,EAAA,GACA6V,EAAA7V,EAAA,GACAvwC,EAAAuwC,EAAA,GACAqzB,EAAArzB,EAAA,GACA,GAAA4V,IAAAnmD,GAAAomD,IAAAwd,EACA,eAAAxB,EAAA,GAAAA,EAAA,IAEA,IAAA53E,GAAA43E,EAAA,GAAAA,EAAA,KAAApiE,EAAAmmD,GACA17D,GAAA23E,EAAA,GAAAA,EAAA,KAAAwB,EAAAxd,GACA,OAAA57D,EAAA,IAAAC,EAAA23E,EAAA,GAAAjc,EAAA37D,EAAA43E,EAAA,GAAAhc,EAAA37D,GA8KAo5E,CAAA5lE,EAAAmkE,KAAAsB,EAAA53E,GACA,OAAA8yD,EAAAp2C,KAAA,SAAA42C,GACA,IAAA36C,EAAA,IAAA05C,EAAA3/C,aAEA,OADAiG,EAAAN,MAAA/lB,EAAAohB,IAAAskE,gBAAA,CAAA7lE,EAAAmkE,KAAAxkE,EAAA9R,IACAslD,EAAA4J,gBAAA,CACA/5D,OAAA8mB,EAAAo6D,WACAvpB,OACAwG,YACAp6C,aAAAP,IACS+D,KAAA,WAGT,OAFA/D,EAAAN,MAAA/lB,EAAAohB,IAAAukE,cAAA,IACAh8D,EAAAo6D,WAAAziF,QACA+kB,QAIG,CACH1pB,IAAA,WACAjC,IAAA,WACA,WAAAH,KAAAg1B,OAGAh1B,KAAAqrF,YAAArrF,KAAAg1B,SAEG,CACH5yB,IAAA,YACAjC,IAAA,WACA,WAAAH,KAAAg1B,OAGAh1B,KAAAsrF,aAAAtrF,KAAAg1B,WAIAoyD,EA7MA,GAgNAD,EAAA,WACA,SAAAA,IACA9qC,EAAAr8C,KAAAmnF,GAEAnnF,KAAA0Q,MAAA,EACA1Q,KAAAo2B,MAAA3wB,EAAA8lF,0BAAAC,MACAxrF,KAAAyrF,UAAA,IACAzrF,KAAA0rF,uBAAA,EACA1rF,KAAA2rF,qBAAA,EA6EA,OA1EAxwC,EAAAgsC,EAAA,EACA/kF,IAAA,WACA9C,MAAA,SAAAoR,GACAwN,OAAAC,UAAAzN,KACA1Q,KAAA0Q,WAGG,CACHtO,IAAA,WACA9C,MAAA,SAAA82B,GACA,GAAAA,EAGA,OAAAA,EAAAr2B,MACA,QACAC,KAAAo2B,MAAA3wB,EAAA8lF,0BAAAC,MACA,MACA,QACAxrF,KAAAo2B,MAAA3wB,EAAA8lF,0BAAAK,OACA,MACA,QACA5rF,KAAAo2B,MAAA3wB,EAAA8lF,0BAAAM,QACA,MACA,QACA7rF,KAAAo2B,MAAA3wB,EAAA8lF,0BAAAO,MACA,MACA,QACA9rF,KAAAo2B,MAAA3wB,EAAA8lF,0BAAAQ,aAMG,CACH3pF,IAAA,eACA9C,MAAA,SAAAmsF,GACA,GAAA9pF,MAAAC,QAAA6pF,MAAAzpF,OAAA,GAGA,IAFA,IAAAgqF,GAAA,EACAC,GAAA,EACApqF,EAAA,EAAAoI,EAAAwhF,EAAAzpF,OAA+CH,EAAAoI,EAASpI,IAAA,CACxD,IAAAqqF,EAAAT,EAAA5pF,GAEA,MADAqqF,GAAA,GACA,CACAF,GAAA,EACA,MACWE,EAAA,IACXD,GAAA,GAGAD,IAAAC,EACAjsF,KAAAyrF,YAEAzrF,KAAA0Q,MAAA,OAEO+6E,IACPzrF,KAAA0Q,MAAA,KAGG,CACHtO,IAAA,4BACA9C,MAAA,SAAA6sF,GACAjuE,OAAAC,UAAAguE,KACAnsF,KAAA0rF,uBAAAS,KAGG,CACH/pF,IAAA,0BACA9C,MAAA,SAAA6sF,GACAjuE,OAAAC,UAAAguE,KACAnsF,KAAA2rF,qBAAAQ,OAKAhF,EArFA,GAwFAgB,EAAA,SAAAiE,GAGA,SAAAjE,EAAA38E,GACA6wC,EAAAr8C,KAAAmoF,GAEA,IAAA/vD,EAAAyjB,EAAA77C,MAAAmoF,EAAA/rC,WAAAj9C,OAAA4iD,eAAAomC,IAAAlkF,KAAAjE,KAAAwL,IAEAzI,EAAAyI,EAAAzI,KACAuiB,EAAA8S,EAAA9S,KACAA,EAAA+mE,eAAA5mF,EAAA6mF,eAAAC,OACAjnE,EAAAknE,UAAAp0D,EAAAq0D,oBAAA1pF,GACAuiB,EAAAonE,YAAA,EAAAjnF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,IACAV,UAAA,IAEA4jB,EAAAqnE,iBAAA,EAAAlnF,EAAA4vB,mBAAAtyB,EAAA5C,IAAA,WACAmlB,EAAAsnE,mBAAA,EAAAnnF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,QACK,GACL,IAAA2lF,GAAA,EAAAtiF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,OAkBA,OAhBAkjB,EAAAyiE,WAAA,EAAApiF,EAAAxB,QAAA4jF,KAAAhoF,KAAA,KACAq4B,EAAAy0D,gBAAA,EAAApnF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,QACKuD,EAAAlF,KAAAkC,MACL2iB,EAAAwnE,YAAA,EAAArnF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,SAEA8b,OAAAC,UAAAmH,EAAAwnE,aAAAxnE,EAAAwnE,WAAA,KACAxnE,EAAAwnE,WAAA,GAEAxnE,EAAAynE,SAAA30D,EAAA40D,aAAAvnF,EAAAwnF,oBAAAC,UACA,QAAA5nE,EAAAyiE,WACA3vD,EAAA4wD,SAAAvjF,EAAAokF,eAAAE,QAEA3xD,EA4CA,OArFA4jB,EAAAmsC,EAsFCf,GA1CDjsC,EAAAgtC,EAAA,EACA/lF,IAAA,sBACA9C,MAAA,SAAAyD,GACA,IAAAA,EAAAP,IAAA,OAAAO,EAAAP,IAAA,UAEA,OADA,EAAAiD,EAAA4O,MAAA,yDACA,GAEA,IAAAtR,EAAAP,IAAA,UACA,SAAAiD,EAAA4vB,mBAAAtyB,EAAA5C,IAAA,MAEA,IAAAqsF,EAAA,GACAzpF,EAAAP,IAAA,MACAgqF,EAAArwB,SAAA,EAAA12D,EAAA4vB,mBAAAtyB,EAAA5C,IAAA,OAGA,IADA,IAAAgtF,EAAApqF,EACAoqF,EAAA3qF,IAAA,YACA2qF,IAAAhtF,IAAA,WACA,EAAAwF,EAAA3C,QAAAmqF,KAGAA,EAAA3qF,IAAA,MACAgqF,EAAArwB,SAAA,EAAA12D,EAAA4vB,mBAAA83D,EAAAhtF,IAAA,OAGA,OAAAqsF,EAAA3pE,KAAA,OAEG,CACHzgB,IAAA,eACA9C,MAAA,SAAAqqF,GACA,SAAA3pF,KAAAslB,KAAAwnE,WAAAnD,KAEG,CACHvnF,IAAA,kBACA9C,MAAA,SAAAm5D,EAAAwH,EAAA4qB,GACA,OAAAA,EACArpF,QAAAC,QAAA,IAAA+jE,EAAA3/C,cAEAwhE,EAAAc,EAAAvoF,UAAAw8C,WAAAj9C,OAAA4iD,eAAAomC,EAAAvoF,WAAA,kBAAAI,MAAAiE,KAAAjE,KAAAy4D,EAAAwH,EAAA4qB,OAIA1C,EAtFA,GAyFAH,EAAA,SAAAoF,GAGA,SAAApF,EAAAx8E,GACA6wC,EAAAr8C,KAAAgoF,GAEA,IAAAhnD,EAAA6a,EAAA77C,MAAAgoF,EAAA5rC,WAAAj9C,OAAA4iD,eAAAimC,IAAA/jF,KAAAjE,KAAAwL,IAEAzI,EAAAyI,EAAAzI,KACAi+B,EAAA1b,KAAAonE,YAAA,EAAAjnF,EAAA4vB,mBAAA2L,EAAA1b,KAAAonE,YAAA,IACA,IAAAW,GAAA,EAAA5nF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,QAEA8b,OAAAC,UAAAkvE,MAAA,GAAAA,EAAA,KACAA,EAAA,MAEArsD,EAAA1b,KAAAgoE,cAAAD,EACA,IAAAE,GAAA,EAAA9nF,EAAA8gE,wBAAA,CACAxjE,OACAX,IAAA,WAQA,QANA8b,OAAAC,UAAAovE,MAAA,KACAA,EAAA,MAEAvsD,EAAA1b,KAAA3b,OAAA4jF,EACAvsD,EAAA1b,KAAAkoE,UAAAxsD,EAAAgsD,aAAAvnF,EAAAwnF,oBAAAQ,WACAzsD,EAAA1b,KAAAooE,KAAA1sD,EAAAgsD,aAAAvnF,EAAAwnF,oBAAAU,QAAA3sD,EAAAgsD,aAAAvnF,EAAAwnF,oBAAAQ,aAAAzsD,EAAAgsD,aAAAvnF,EAAAwnF,oBAAAW,YAAA5sD,EAAAgsD,aAAAvnF,EAAAwnF,oBAAAY,aAAA,OAAA7sD,EAAA1b,KAAA3b,OACAq3B,EAyBA,OApDAgb,EAAAgsC,EAqDCG,GAvBDhtC,EAAA6sC,EAAA,EACA5lF,IAAA,kBACA9C,MAAA,SAAAm5D,EAAAwH,EAAA4qB,GACA,GAAAA,GAAA7qF,KAAAwpF,WACA,OAAAnC,EAAAW,EAAApoF,UAAAw8C,WAAAj9C,OAAA4iD,eAAAimC,EAAApoF,WAAA,kBAAAI,MAAAiE,KAAAjE,KAAAy4D,EAAAwH,EAAA4qB,GAEA,IAAAx+D,EAAA,IAAAm5C,EAAA3/C,aACA,IAAA7lB,KAAAslB,KAAAsnE,kBACA,OAAAprF,QAAAC,QAAA4qB,GAEA,IAAA/jB,EAAA,IAAAmU,EAAAzX,QAAA,EAAAS,EAAA0B,eAAAnH,KAAAslB,KAAAsnE,oBACA,OAAAn0B,EAAA4J,gBAAA,CACA/5D,SACA23D,OACAwG,UAAAzmE,KAAA6sF,eACAxgE,iBACOwD,KAAA,WACP,OAAAxD,QAKA27D,EArDA,GAwDAC,EAAA,SAAA6F,GAGA,SAAA7F,EAAAz8E,GACA6wC,EAAAr8C,KAAAioF,GAEA,IAAAte,EAAA9tB,EAAA77C,MAAAioF,EAAA7rC,WAAAj9C,OAAA4iD,eAAAkmC,IAAAhkF,KAAAjE,KAAAwL,IAcA,OAZAm+D,EAAArkD,KAAAyoE,UAAApkB,EAAAqjB,aAAAvnF,EAAAwnF,oBAAAe,SAAArkB,EAAAqjB,aAAAvnF,EAAAwnF,oBAAAgB,YACAtkB,EAAArkD,KAAA4oE,YAAAvkB,EAAAqjB,aAAAvnF,EAAAwnF,oBAAAe,SAAArkB,EAAAqjB,aAAAvnF,EAAAwnF,oBAAAgB,YACAtkB,EAAArkD,KAAA6oE,WAAAxkB,EAAAqjB,aAAAvnF,EAAAwnF,oBAAAgB,YACAtkB,EAAArkD,KAAAyoE,SACApkB,EAAAykB,mBACKzkB,EAAArkD,KAAA4oE,YACLvkB,EAAA0kB,oBAAA7iF,GACKm+D,EAAArkD,KAAA6oE,WACLxkB,EAAA2kB,mBAAA9iF,IAEA,EAAA/F,EAAA4O,MAAA,oDAEAs1D,EAqDA,OAxEA3tB,EAAAisC,EAyECE,GAnDDhtC,EAAA8sC,EAAA,EACA7lF,IAAA,mBACA9C,MAAA,YACA,EAAAqG,EAAAxB,QAAAnE,KAAAslB,KAAAonE,cAGA1sF,KAAAslB,KAAAonE,WAAA1sF,KAAAslB,KAAAonE,WAAA3sF,QAEG,CACHqC,IAAA,sBACA9C,MAAA,SAAAkM,GACAxL,KAAAslB,KAAAonE,WAAA1sF,KAAAslB,KAAAipE,YAAA,KACA,IAAAC,EAAAhjF,EAAAzI,KAAA5C,IAAA,UACA,MAAAwF,EAAA3C,QAAAwrF,MAAAhsF,IAAA,MACA,IAAAisF,EAAAD,EAAAruF,IAAA,MACA,EAAAwF,EAAAxB,QAAAsqF,KACAzuF,KAAAslB,KAAAonE,WAAA+B,EAAA1uF,MAGA,IAAA0qF,EAAAj/E,EAAAzI,KAAA5C,IAAA,MACA,MAAAwF,EAAA3C,QAAAynF,GAAA,CAGA,IAAAC,EAAAD,EAAAtqF,IAAA,KACA,MAAAwF,EAAA3C,QAAA0nF,GAIA,IADA,IAAApoF,EAAAooF,EAAAroF,UACAR,EAAA,EAAAC,EAAAQ,EAAAN,OAAuCH,EAAAC,EAAQD,IAC/C,WAAAS,EAAAT,GAAA,CACA7B,KAAAslB,KAAAipE,YAAAjsF,EAAAT,GACA,UAIG,CACHO,IAAA,qBACA9C,MAAA,SAAAkM,GACAA,EAAAzI,KAAAP,IAAA,KAIA8iE,EAAApzC,QAAAyC,oBAAA,CACAC,SAAAppB,EAAAzI,KACA8xB,UAAA70B,KAAAslB,KACAwP,WAAAtpB,EAAA0nB,WAAA4B,cANA,EAAArvB,EAAA4O,MAAA,kEAWA4zE,EAzEA,GA4EAC,EAAA,SAAAwG,GAGA,SAAAxG,EAAA18E,GACA6wC,EAAAr8C,KAAAkoF,GAEA,IAAAyG,EAAA9yC,EAAA77C,MAAAkoF,EAAA9rC,WAAAj9C,OAAA4iD,eAAAmmC,IAAAjkF,KAAAjE,KAAAwL,IAEAmjF,EAAArpE,KAAAuc,QAAA,GACA,IAAAA,GAAA,EAAAp8B,EAAA8gE,wBAAA,CACAxjE,KAAAyI,EAAAzI,KACAX,IAAA,QAEA,GAAAT,MAAAC,QAAAigC,GAEA,IADA,IAAAlhC,EAAA6K,EAAA7K,KACAkB,EAAA,EAAAC,EAAA+/B,EAAA7/B,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAA+sF,EAAAjuF,EAAAU,WAAAwgC,EAAAhgC,IACAgtF,EAAAltF,MAAAC,QAAAgtF,GACAD,EAAArpE,KAAAuc,QAAAhgC,GAAA,CACAitF,YAAAD,EAAAluF,EAAAU,WAAAutF,EAAA,IAAAA,EACAG,cAAA,EAAAtpF,EAAA4vB,mBAAAw5D,EAAAluF,EAAAU,WAAAutF,EAAA,IAAAA,IASA,OALAjtF,MAAAC,QAAA+sF,EAAArpE,KAAAonE,cACAiC,EAAArpE,KAAAonE,WAAA,CAAAiC,EAAArpE,KAAAonE,aAEAiC,EAAArpE,KAAA0pE,MAAAL,EAAA3B,aAAAvnF,EAAAwnF,oBAAAgC,OACAN,EAAArpE,KAAA4pE,YAAAP,EAAA3B,aAAAvnF,EAAAwnF,oBAAAkC,aACAR,EAGA,OA/BA3yC,EAAAksC,EAgCCC,GADDD,EAhCA,GAmCAJ,EAAA,SAAAsH,GAGA,SAAAtH,EAAAF,GACAvrC,EAAAr8C,KAAA8nF,GAEA,IAEAuH,EAAAxzC,EAAA77C,MAAA8nF,EAAA1rC,WAAAj9C,OAAA4iD,eAAA+lC,IAAA7jF,KAAAjE,KAAA4nF,IAWA,OATAyH,EAAA/pE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAgD,KACAD,EAAA/pE,KAAAikE,cACA8F,EAAA/pE,KAAAvlB,KAAA,UAEAsvF,EAAA/pE,KAAAmkE,KAAA,GAAA4F,EAAA/pE,KAAAmkE,KAAA,GARA,GASA4F,EAAA/pE,KAAAmkE,KAAA,GAAA4F,EAAA/pE,KAAAmkE,KAAA,GATA,GAUA4F,EAAA/pE,KAAAvlB,KAAA6nF,EAAA7kF,KAAAP,IAAA,QAAAolF,EAAA7kF,KAAA5C,IAAA,QAAAJ,KAAA,QAEAsvF,EAAAE,cAAA3H,EAAA7kF,MACAssF,EAGA,OArBArzC,EAAA8rC,EAsBCV,GADDU,EAtBA,GAyBAD,EAAA,SAAA2H,GAGA,SAAA3H,EAAAr8E,GACA6wC,EAAAr8C,KAAA6nF,GAEA,IAAA4H,EAAA5zC,EAAA77C,MAAA6nF,EAAAzrC,WAAAj9C,OAAA4iD,eAAA8lC,IAAA5jF,KAAAjE,KAAAwL,IAQA,OANAikF,EAAAnqE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAoD,KACApqB,EAAApzC,QAAAyC,oBAAA,CACAC,SAAAppB,EAAAzI,KACA8xB,UAAA46D,EAAAnqE,KACAwP,WAAAtpB,EAAA0nB,WAAA4B,aAEA26D,EAGA,OAhBAzzC,EAAA6rC,EAiBCT,GADDS,EAjBA,GAoBAO,EAAA,SAAAuH,GAGA,SAAAvH,EAAAR,GACAvrC,EAAAr8C,KAAAooF,GAEA,IAAAwH,EAAA/zC,EAAA77C,MAAAooF,EAAAhsC,WAAAj9C,OAAA4iD,eAAAqmC,IAAAnkF,KAAAjE,KAAA4nF,IAEAgI,EAAAtqE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAuD,MACA,IAAA9sF,EAAA6kF,EAAA7kF,KACA+sF,EAAA/sF,EAAA5C,IAAA,UACA,IAAA2vF,EAEA,OADA,EAAArqF,EAAA4O,MAAA,gEACAwnC,EAAA+zC,GAEA,IAAAG,EAAAD,EAAA3vF,IAAA,WAWA,GAVAyvF,EAAAtqE,KAAA0qE,YAAA,EAAArqF,EAAAxB,QAAA4rF,KAAAhwF,KAAA,KACA6vF,EAAAtqE,KAAA2qE,SAAAltF,EAAAZ,OAAA,UAAAmB,WACAssF,EAAAtqE,KAAAyP,OAAA,EAAAtvB,EAAA4vB,mBAAAy6D,EAAA3vF,IAAA,UACAyvF,EAAAtqE,KAAAslE,UAAA,EAAAnlF,EAAA4vB,mBAAAy6D,EAAA3vF,IAAA,iBACA2vF,EAAAttF,IAAA,MAGAotF,EAAA1G,SAAA4G,EAAApuF,SAAA,MACAkuF,EAAAtqE,KAAA/M,MAAAq3E,EAAAr3E,OAHAq3E,EAAAtqE,KAAA/M,MAAA,MAKAq3E,EAAA9pB,SAAA,CACA,IAAAoqB,EAAAJ,EAAA3vF,IAAA,KACAyvF,EAAAvE,YAAA6E,IACAN,EAAA5G,SAAAkH,GAGA,OAAAN,EAGA,OAlCA5zC,EAAAosC,EAmCChB,GADDgB,EAnCA,GAsCAC,EAAA,SAAA8H,GAGA,SAAA9H,EAAAT,GACAvrC,EAAAr8C,KAAAqoF,GAEA,IAAA+H,EAAAv0C,EAAA77C,MAAAqoF,EAAAjsC,WAAAj9C,OAAA4iD,eAAAsmC,IAAApkF,KAAAjE,KAAA4nF,IAEAwI,EAAA9qE,KAAA+mE,eAAA5mF,EAAA6mF,eAAA+D,KACA,IAAAttF,EAAA6kF,EAAA7kF,KAGA,OAFAqtF,EAAA9qE,KAAAgrE,gBAAA7qF,EAAA8C,KAAA2hF,cAAAnnF,EAAArB,SAAA,MACA0uF,EAAAb,cAAAxsF,GACAqtF,EAGA,OAdAp0C,EAAAqsC,EAeCjB,GADDiB,EAfA,GAkBAC,EAAA,SAAAiI,GAGA,SAAAjI,EAAAV,GACAvrC,EAAAr8C,KAAAsoF,GAEA,IAAAkI,EAAA30C,EAAA77C,MAAAsoF,EAAAlsC,WAAAj9C,OAAA4iD,eAAAumC,IAAArkF,KAAAjE,KAAA4nF,IAIA,OAFA4I,EAAAlrE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAmE,OACAD,EAAAjB,cAAA3H,EAAA7kF,MACAytF,EAGA,OAZAx0C,EAAAssC,EAaClB,GADDkB,EAbA,GAgBAC,EAAA,SAAAmI,GAGA,SAAAnI,EAAAX,GACAvrC,EAAAr8C,KAAAuoF,GAEA,IAAAoI,EAAA90C,EAAA77C,MAAAuoF,EAAAnsC,WAAAj9C,OAAA4iD,eAAAwmC,IAAAtkF,KAAAjE,KAAA4nF,IAIA,OAFA+I,EAAArrE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAsE,OACAD,EAAApB,cAAA3H,EAAA7kF,MACA4tF,EAGA,OAZA30C,EAAAusC,EAaCnB,GADDmB,EAbA,GAgBAC,EAAA,SAAAqI,GAGA,SAAArI,EAAAZ,GACAvrC,EAAAr8C,KAAAwoF,GAEA,IAAAsI,EAAAj1C,EAAA77C,MAAAwoF,EAAApsC,WAAAj9C,OAAA4iD,eAAAymC,IAAAvkF,KAAAjE,KAAA4nF,IAEAkJ,EAAAxrE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAyE,SACA,IAAAhuF,EAAA6kF,EAAA7kF,KACAiuF,EAAAjuF,EAAArB,SAAA,YACAovF,EAAAxrE,KAAA2rE,SAAA,GACA,QAAApvF,EAAA,EAAAC,EAAAkvF,EAAAhvF,OAA4CH,EAAAC,EAAQD,GAAA,EACpDivF,EAAAxrE,KAAA2rE,SAAAjzE,KAAA,CACA9C,EAAA81E,EAAAnvF,GACAoU,EAAA+6E,EAAAnvF,EAAA,KAIA,OADAivF,EAAAvB,cAAAxsF,GACA+tF,EAGA,OArBA90C,EAAAwsC,EAsBCpB,GADDoB,EAtBA,GAyBAC,EAAA,SAAAyI,GAGA,SAAAzI,EAAAb,GACAvrC,EAAAr8C,KAAAyoF,GAEA,IAAA0I,EAAAt1C,EAAA77C,MAAAyoF,EAAArsC,WAAAj9C,OAAA4iD,eAAA0mC,IAAAxkF,KAAAjE,KAAA4nF,IAGA,OADAuJ,EAAA7rE,KAAA+mE,eAAA5mF,EAAA6mF,eAAA8E,QACAD,EAGA,OAXAn1C,EAAAysC,EAYCD,GADDC,EAZA,GAeAC,EAAA,SAAA2I,GAGA,SAAA3I,EAAAd,GACAvrC,EAAAr8C,KAAA0oF,GAEA,IAAA4I,EAAAz1C,EAAA77C,MAAA0oF,EAAAtsC,WAAAj9C,OAAA4iD,eAAA2mC,IAAAzkF,KAAAjE,KAAA4nF,IAIA,OAFA0J,EAAAhsE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAiF,UACAD,EAAA/B,cAAA3H,EAAA7kF,MACAuuF,EAGA,OAZAt1C,EAAA0sC,EAaCtB,GADDsB,EAbA,GAgBAC,EAAA,SAAA6I,GAGA,SAAA7I,EAAAf,GACAvrC,EAAAr8C,KAAA2oF,GAEA,IAAA8I,EAAA51C,EAAA77C,MAAA2oF,EAAAvsC,WAAAj9C,OAAA4iD,eAAA4mC,IAAA1kF,KAAAjE,KAAA4nF,IAIA,OAFA6J,EAAAnsE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAP,UACA0F,EAAAlC,cAAA3H,EAAA7kF,MACA0uF,EAGA,OAZAz1C,EAAA2sC,EAaCvB,GADDuB,EAbA,GAgBAC,EAAA,SAAA8I,GAGA,SAAA9I,EAAAhB,GACAvrC,EAAAr8C,KAAA4oF,GAEA,IAAA+I,EAAA91C,EAAA77C,MAAA4oF,EAAAxsC,WAAAj9C,OAAA4iD,eAAA6mC,IAAA3kF,KAAAjE,KAAA4nF,IAIA,OAFA+J,EAAArsE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAsF,SACAD,EAAApC,cAAA3H,EAAA7kF,MACA4uF,EAGA,OAZA31C,EAAA4sC,EAaCxB,GADDwB,EAbA,GAgBAC,EAAA,SAAAgJ,GAGA,SAAAhJ,EAAAjB,GACAvrC,EAAAr8C,KAAA6oF,GAEA,IAAAiJ,EAAAj2C,EAAA77C,MAAA6oF,EAAAzsC,WAAAj9C,OAAA4iD,eAAA8mC,IAAA5kF,KAAAjE,KAAA4nF,IAIA,OAFAkK,EAAAxsE,KAAA+mE,eAAA5mF,EAAA6mF,eAAAyF,UACAD,EAAAvC,cAAA3H,EAAA7kF,MACA+uF,EAGA,OAZA91C,EAAA6sC,EAaCzB,GADDyB,EAbA,GAgBAC,EAAA,SAAAkJ,GAGA,SAAAlJ,EAAAlB,GACAvrC,EAAAr8C,KAAA8oF,GAEA,IAAAmJ,EAAAp2C,EAAA77C,MAAA8oF,EAAA1sC,WAAAj9C,OAAA4iD,eAAA+mC,IAAA7kF,KAAAjE,KAAA4nF,IAIA,OAFAqK,EAAA3sE,KAAA+mE,eAAA5mF,EAAA6mF,eAAA4F,MACAD,EAAA1C,cAAA3H,EAAA7kF,MACAkvF,EAGA,OAZAj2C,EAAA8sC,EAaC1B,GADD0B,EAbA,GAgBAC,EAAA,SAAAoJ,GAGA,SAAApJ,EAAAnB,GACAvrC,EAAAr8C,KAAA+oF,GAEA,IAAAqJ,EAAAv2C,EAAA77C,MAAA+oF,EAAA3sC,WAAAj9C,OAAA4iD,eAAAgnC,IAAA9kF,KAAAjE,KAAA4nF,IAEA//B,EAAA,IAAAyd,EAAAvzC,SAAA61D,EAAA7kF,KAAA5C,IAAA,MAAAynF,EAAAjnF,MAIA,OAHAyxF,EAAA9sE,KAAA+mE,eAAA5mF,EAAA6mF,eAAA+F,eACAD,EAAA9sE,KAAAuiC,OAAAvwB,aACA86D,EAAA7C,cAAA3H,EAAA7kF,MACAqvF,EAGA,OAdAp2C,EAAA+sC,EAeC3B,GADD2B,EAfA,GAkBA1pF,EAAA+nF,aACA/nF,EAAA8nF,wBACA9nF,EAAA8oE,sDCp7BAhpE,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA6nE,sBAAAhkE,EAEA,IAAAuC,EAAYC,EAAQ,KAEpB4sF,EAAY5sF,EAAQ,KAEpB+W,EAAc/W,EAAQ,KAEtBC,EAAkBD,EAAQ,KAE1B6sF,EAAa7sF,EAAQ,KAErBwhD,EAAiBxhD,EAAQ,KAEzB8sF,EAAe9sF,EAAQ,KAEvB+sF,EAAsB/sF,EAAQ,KAE9BgtF,EAAehtF,EAAQ,KAEvBotB,EAAcptB,EAAQ,KAEtBitF,EAAYjtF,EAAQ,KAEpButB,EAAkBvtB,EAAQ,KAE1BktF,EAAiBltF,EAAQ,KAEzBmtF,EAAentF,EAAQ,KAEvBggE,EAAgBhgE,EAAQ,KAExBkX,EAAmBlX,EAAQ,KAE3BotF,EAAkBptF,EAAQ,KAE1B8/D,EAAqB9/D,EAAQ,KAE7BqtF,EAAartF,EAAQ,KAErBwhE,EAAA,WACA,IAAA8rB,EAAA,CACArtE,iBAAA,EACAu+C,cAAA,EACAC,iBAAA,EACAC,0BAAA3+D,EAAAwtF,oBAAAC,OACA7uB,cAAA,EACAjQ,iBAAA,GAEA,SAAA++B,EAAA76D,GACA,IAAA33B,EAAA23B,EAAA33B,KACA8lE,EAAAnuC,EAAAmuC,UACA9H,EAAArmC,EAAAqmC,QACAy0B,EAAA96D,EAAA3S,gBACAA,OAAAziB,IAAAkwF,KACA5gF,EAAA8lB,EAAA9lB,mBAEAxS,KAAAW,OACAX,KAAAymE,YACAzmE,KAAA2+D,UACA3+D,KAAA2lB,kBACA3lB,KAAAwS,qBAmCA,SAAA00D,EAAA7R,GACA,IAAAjmC,EAAApvB,KAEAkzB,EAAAmiC,EAAAniC,WACAvyB,EAAA00D,EAAA10D,KACAg+D,EAAAtJ,EAAAsJ,QACAzzC,EAAAmqC,EAAAnqC,UACAk7C,EAAA/Q,EAAA+Q,UACA9yC,EAAA+hC,EAAA/hC,UACAC,EAAA8hC,EAAA9hC,iBACA8/D,EAAAh+B,EAAAxzB,QACAA,OAAA3+B,IAAAmwF,EAAA,KAAAA,EACA7gF,EAAA6iD,EAAA7iD,mBAEAxS,KAAAkzB,aACAlzB,KAAAW,OACAX,KAAA2+D,UACA3+D,KAAAkrB,YACAlrB,KAAAomE,YACApmE,KAAAszB,YACAtzB,KAAAuzB,mBACAvzB,KAAA6hC,WAAAmxD,EACAhzF,KAAAwS,qBACAxS,KAAAszF,iBAAA,SAAAvzF,GACA,IAAAwzF,EAAAnkE,EAAAmE,iBAAAxzB,GACA,OAAAwzF,EACA/xF,QAAAC,QAAA8xF,GAEAnkE,EAAAuvC,QAAAT,gBAAA,oBAAgEn+D,SAAa8vB,KAAA,SAAAvK,GAI7E,OAHAA,EAAAkuE,kBAAA/tF,EAAAguF,oBAAAC,OACAtkE,EAAAmE,iBAAAxzB,GAAAulB,GAEAA,KAjEA6tE,EAAAvzF,UAAA,CACA+zF,UAAA,SAAAC,GACA,OAAAA,aAAAh3E,EAAAkE,YAAAqyE,EAAAU,YAAAD,EAAA5zF,KAAAW,KAAAX,KAAAymE,UAAAzmE,KAAAwS,qBAEA+B,OAAA,SAAAq/E,GACA,IACAE,EADAF,EAAA7wF,KACA5C,IAAA,mBAEA,OADA2zF,EAAA7gE,EAAAzjB,WAAA6C,MAAAyhF,EAAA9zF,KAAAW,KAAAX,KAAAymE,UAAAzmE,KAAAwS,oBACAxS,KAAA2+D,QAAAT,gBAAA,cAAA01B,EAAAluE,MAAA1lB,KAAA2lB,iBAAAmuE,EAAA5iF,WAAA2e,KAAA,SAAA0I,GACA,IAAAjT,EAAAiT,EAAAjT,KACAiT,EAAA7nB,MACA6nB,EAAA5nB,OAEA,WAAA8L,EAAAzX,OAAAsgB,EAAA,EAAAA,EAAAtjB,OAAA4xF,EAAA7wF,UAIAowF,EAAAY,YAAA,SAAAH,EAAAjzF,EAAA4R,EAAAC,GACA,IAAAzP,EAAA6wF,EAAA7wF,KACA,GAAAA,EAAAP,IAAA,gBAAAO,EAAAP,IAAA,MACA,SAEA,IAAA8P,EAAA2gB,EAAAzjB,WAAA6C,MAAAtP,EAAA5C,IAAA,mBAAAQ,EAAA4R,EAAAC,GACA,sBAAAF,EAAAvS,MAAA,cAAAuS,EAAAvS,OAAAuS,EAAAgC,gBAAAvR,EAAArB,SAAA,gBAEAyxF,EAAAU,YAAA,SAAAD,EAAAjzF,EAAA4R,EAAAC,GACA,IAAAzP,EAAA6wF,EAAA7wF,KACA,GAAAA,EAAAP,IAAA,gBAAAO,EAAAP,IAAA,MACA,SAEA,IAAA8P,EAAA2gB,EAAAzjB,WAAA6C,MAAAtP,EAAA5C,IAAA,mBAAAQ,EAAA4R,EAAAC,GACA,WAAAF,EAAApB,UAAA,IAAAoB,EAAApB,WAAAoB,EAAAgC,gBAAAvR,EAAArB,SAAA,gBAwCA,SAAAsyF,IACAh0F,KAAA+G,QAEAitF,EAAAp0F,UAAA,CACA2L,MAAA,WACA,UAAAvL,KAAAi0F,QANA,OASAj0F,KAAAi0F,QAAA,EACAj0F,KAAAk0F,SAAA/xB,KAAAC,QAEAr7D,MAAA,WACA/G,KAAAk0F,QAAA/xB,KAAAC,MAdA,GAeApiE,KAAAi0F,QAAA,IA6CA,IAAAE,EAAA3yF,QAAAC,UAk4DA,OA/3DAylE,EAAAtnE,UAAA,CACAw0F,MAAA,WACA,IAAAC,EAAArgF,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,GAAAA,UAAA,GAAAg/E,EAEAsB,EAAAn1F,OAAAe,OAAAF,MAEA,OADAs0F,EAAAzyD,QAAAwyD,EACAC,GAGAhtB,cAAA,SAAAb,GACA,OAAA9gE,EAAA3C,QAAAyjE,GACA,SAEA,IAAAjyC,EAAAr1B,OAAAe,OAAA,MACAumE,EAAA5lE,QACA2zB,EAAAiyC,EAAA5lE,QAAA,GAIA,IAFA,IAAA0zF,EAAA,CAAA9tB,GACA9lE,EAAAX,KAAAW,KACA4zF,EAAAvyF,QAAA,CACA,IAAAI,EAAAP,EAAAC,EACAs3B,EAAAm7D,EAAApsF,QACAqsF,EAAAp7D,EAAAj5B,IAAA,aACA,MAAAwF,EAAA3C,QAAAwxF,GAAA,CACA,IAAAC,EAAAD,EAAAnyF,UACA,IAAAR,EAAA,EAAAC,EAAA2yF,EAAAzyF,OAAoDH,EAAAC,EAAQD,IAAA,CAC5DO,EAAAqyF,EAAA5yF,GACA,IACA6yF,EADAF,EAAAr0F,IAAAiC,GACAjC,IAAA,MACA,MAAAwF,EAAAxB,QAAAuwF,IAAA,WAAAA,EAAA30F,KACA,UAIA,IAAA40F,EAAAv7D,EAAAj5B,IAAA,WACA,MAAAwF,EAAA3C,QAAA2xF,GAAA,CAGA,IAAAC,EAAAD,EAAAtyF,UACA,IAAAR,EAAA,EAAAC,EAAA8yF,EAAA5yF,OAA6CH,EAAAC,EAAQD,IAAA,CACrDO,EAAAwyF,EAAA/yF,GACA,IAAAgzF,EAAAF,EAAAxyF,OAAAC,GACA,MAAAuD,EAAA1D,OAAA4yF,GAAA,CACA,GAAArgE,EAAAqgE,EAAAvxF,YACA,SAEAuxF,EAAAl0F,EAAAuB,MAAA2yF,GAEA,MAAAlvF,EAAAhB,UAAAkwF,GAAA,CAGA,GAAAA,EAAA9xF,KAAAlC,MAAA,CACA,GAAA2zB,EAAAqgE,EAAA9xF,KAAAlC,OACA,SAEA2zB,EAAAqgE,EAAA9xF,KAAAlC,QAAA,EAEA,IAAAi0F,EAAAD,EAAA9xF,KAAA5C,IAAA,eACA,EAAAwF,EAAA3C,QAAA8xF,MAAAj0F,OAAA2zB,EAAAsgE,EAAAj0F,SACA0zF,EAAAv2E,KAAA82E,GACAA,EAAAj0F,QACA2zB,EAAAsgE,EAAAj0F,QAAA,OAKA,UAEAk0F,iBAAA,SAAAtuB,EAAAuuB,EAAAC,EAAA5oE,EAAA4zC,EAAAi1B,GACA,IAAAnyF,EAAAiyF,EAAAjyF,KACAoQ,EAAApQ,EAAArB,SAAA,UACAqpF,EAAAhoF,EAAArB,SAAA,QACAyzF,EAAApyF,EAAA5C,IAAA,SACA,GAAAg1F,EAAA,CACA,IAAAC,EAAA,CACAjiF,SACA43E,OACAkK,QACAI,UAAA,EACAC,UAAA,GAEAC,EAAAJ,EAAAh1F,IAAA,KACA2zF,EAAA,MACA,EAAAnuF,EAAAxB,QAAAoxF,EAAA,kBACAH,EAAAC,SAAAF,EAAAh1F,IAAA,SACAi1F,EAAAE,SAAAH,EAAAh1F,IAAA,SACAg1F,EAAA3yF,IAAA,QACAsxF,EAAA7gE,EAAAzjB,WAAA6C,MAAA8iF,EAAAh1F,IAAA,MAAAH,KAAAW,KAAA8lE,EAAAzmE,KAAAwS,sBAGAyiF,KAAAO,WACA1B,KAAA7gE,EAAAzjB,WAAAuD,WAAAlD,IACAolF,EAAAO,SAAA1B,EAAApkF,OAAAulF,EAAAO,SAAA,IAEAnpE,EAAAb,MAAA/lB,EAAAohB,IAAA4uE,WAAA,CAAAL,IAGA,OADA/oE,EAAAb,MAAA/lB,EAAAohB,IAAA6uE,sBAAA,CAAAviF,EAAA43E,IACA/qF,KAAAqiE,gBAAA,CACA/5D,OAAA0sF,EACA/0B,OACAwG,UAAA1jE,EAAA5C,IAAA,cAAAsmE,EACAp6C,eACA6oE,iBACOrlE,KAAA,WACPxD,EAAAb,MAAA/lB,EAAAohB,IAAA8uE,oBAAA,IACAR,GACA9oE,EAAAb,MAAA/lB,EAAAohB,IAAA+uE,SAAA,CAAAR,OAIAS,uBAAA,SAAAngC,GACA,IAAAt9B,EAAAp4B,KAEAymE,EAAA/Q,EAAA+Q,UACAmtB,EAAAl+B,EAAAk+B,MACAkC,EAAApgC,EAAAqgC,SACAA,OAAA7yF,IAAA4yF,KACAzpE,EAAAqpC,EAAArpC,aACA9M,EAAAm2C,EAAAn2C,SACAlC,EAAAq4C,EAAAr4C,WACA24E,EAAAtgC,EAAAugC,+BACAA,OAAA/yF,IAAA8yF,KAEAjzF,EAAA6wF,EAAA7wF,KACA4kB,EAAA5kB,EAAA5C,IAAA,aACAynB,EAAA7kB,EAAA5C,IAAA,cACA,KAAAwnB,IAAA,EAAAliB,EAAAqe,OAAA6D,IAAAC,IAAA,EAAAniB,EAAAqe,OAAA8D,IAEA,OADA,EAAAniB,EAAA4O,MAAA,iDACA7S,QAAAC,UAEA,IAMAsmB,EAAA8B,EANAq6C,EAAAlkE,KAAA6hC,QAAAqiC,aACA,QAAAA,GAAAv8C,EAAAC,EAAAs8C,EAEA,OADA,EAAAz+D,EAAA4O,MAAA,wDACA7S,QAAAC,UAIA,GAFAsB,EAAA5C,IAAA,sBAEA,CACA,IAAAuQ,EAAA3N,EAAA5C,IAAA,aACAwQ,EAAA5N,EAAA5C,IAAA,cACA+1F,EAAAxlF,EAAA,KACAylF,EAAAvC,EAAAhvF,SAAAsxF,EAAAvlF,GACA4D,EAAAxR,EAAArB,SAAA,cAiBA,OAhBAqmB,EAAAgrE,EAAAqD,SAAAC,WAAA,CACAF,WACAzlF,QACAC,SACA2lF,wBAAA1C,aAAAn3E,EAAApX,aACAkxF,gBAAAhiF,KAAA,QAEA2X,QAAA,EACArC,EAAA,CAAA9B,GACAsE,EAAAb,MAAA/lB,EAAAohB,IAAA4B,sBAAAoB,GACAtK,IACAlC,EAAAkC,GAAA,CACAxb,GAAA0B,EAAAohB,IAAA4B,sBACAoB,SAGAroB,QAAAC,UAEA,IAAA+0F,EAAAzzF,EAAA5C,IAAA,kBACAm3E,EAAAv0E,EAAA5C,IAAA,YAEA,GAAA41F,IAAAS,IAAAlf,KAAAsc,aAAAh3E,EAAAkE,aAAA6G,EAAAC,EADA,IAWA,OAFAG,EAPA,IAAAgrE,EAAAqD,SAAA,CACAz1F,KAAAX,KAAAW,KACA4R,IAAAk0D,EACAmtB,QACAmC,WACAvjF,mBAAAxS,KAAAwS,qBAEAikF,iBAAA,GACApqE,EAAAb,MAAA/lB,EAAAohB,IAAAE,wBAAA,CAAAgB,IACAvmB,QAAAC,UAEA,IAAA2iE,EAAA6xB,EAAAxwF,EAAAwtF,oBAAAS,KAAA1zF,KAAA6hC,QAAAuiC,0BACAvjE,EAAA,OAAAb,KAAAomE,UAAAC,cACA,GAAAjC,IAAA3+D,EAAAwtF,oBAAAS,OAAA8C,IAAAlf,GAAAsc,aAAAh3E,EAAAkE,YAAAqyE,EAAAY,YAAAH,EAAA5zF,KAAAW,KAAA8lE,EAAAzmE,KAAAwS,oBACA,OAAAxS,KAAA2+D,QAAAT,gBAAA,OAAAr9D,EAAAb,KAAAkrB,UAAA,aAAA0oE,EAAAluE,MAAA1lB,KAAA6hC,QAAAlc,mBAAAkK,KAAA,WACAxD,EAAAX,cAAA7qB,GACAgpB,EAAA,CAAAhpB,EAAA8mB,EAAAC,GACAyE,EAAAb,MAAA/lB,EAAAohB,IAAA6vE,iBAAA7sE,GACAtK,IACAlC,EAAAkC,GAAA,CACAxb,GAAA0B,EAAAohB,IAAA6vE,iBACA7sE,UAGS,SAAA00C,GAET,OADA,EAAA94D,EAAA4O,MAAA,sDAAAkqD,KAAAn5B,UACAhN,EAAAy9D,uBAAA,CACApvB,YACAmtB,QACAmC,WACA1pE,eACA9M,WACAlC,aACA44E,gCAAA,MAIA,IAAAU,EAAA,KAkCA,OAjCAvyB,IAAA3+D,EAAAwtF,oBAAAC,SAAAU,aAAAh3E,EAAAkE,YAAAw2D,aAAA16D,EAAAkE,YAAA01E,aAAA55E,EAAAkE,cACA61E,EAAA,IAAAxD,EAAA,CACAxyF,KAAAX,KAAAW,KACA8lE,YACA9H,QAAA3+D,KAAA2+D,QACAh5C,gBAAA3lB,KAAA6hC,QAAAlc,gBACAnT,mBAAAxS,KAAAwS,sBAGA6Z,EAAAX,cAAA7qB,GACAgpB,EAAA,CAAAhpB,EAAA8mB,EAAAC,GACAmrE,EAAAqD,SAAAQ,WAAA,CACAj4B,QAAA3+D,KAAA2+D,QACAh+D,KAAAX,KAAAW,KACA4R,IAAAk0D,EACAmtB,QACAmC,WACAc,cAAAF,EACAnkF,mBAAAxS,KAAAwS,qBACOqd,KAAA,SAAAinE,GACP,IAAA/uE,EAAA+uE,EAAAL,iBAAA,GACAr+D,EAAAumC,QAAAvyC,KAAA,OAAAvrB,EAAAu3B,EAAAlN,UAAA,QAAAnD,GAAA,CAAAA,EAAAzC,KAAApe,WACOg6D,MAAA,SAAA3C,IACP,EAAA94D,EAAA4O,MAAA,2BAAAkqD,GACAnmC,EAAAumC,QAAAvyC,KAAA,OAAAvrB,EAAAu3B,EAAAlN,UAAA,iBAEAmB,EAAAb,MAAA/lB,EAAAohB,IAAA8C,kBAAAE,GACAtK,IACAlC,EAAAkC,GAAA,CACAxb,GAAA0B,EAAAohB,IAAA8C,kBACAE,SAGAroB,QAAAC,WAGAs1F,YAAA,SAAA9B,EAAAxuB,EAAAp6C,EAAA4zC,EAAA+2B,GACA,IAAAC,EAAAhC,EAAA90F,IAAA,KACA+2F,EAAA,CACApjE,QAAAmhE,EAAA90F,IAAA,KAAAJ,KACAy1F,SAAAP,EAAA90F,IAAA,OAEAg3F,EAAAlC,EAAA90F,IAAA,MACA,MAAAulE,EAAAzR,eAAAkjC,GAAA,CAIA,IAHA,IAAAC,EAAAp3F,KAAAwS,mBAAAtS,OAAAi3F,GACAE,EAAA,IAAAtxF,WAAA,KACAw2C,EAAA,IAAAznC,aAAA,GACAjT,EAAA,EAAuBA,EAAA,IAASA,IAChC06C,EAAA,GAAA16C,EAAA,IACAu1F,EAAA76C,EAAA,EAAAA,EAAA,GACA86C,EAAAx1F,GAAA,IAAA06C,EAAA,KAEA26C,EAAAG,cAEA,OAAAr3F,KAAA+0F,iBAAAtuB,EAAAwwB,EAAAC,EAAA7qE,EAAA4zC,EAAA+2B,EAAAz4E,MAAA61E,UAEAkD,iBAAA,SAAAvzF,EAAA8lB,EAAA48C,EAAAxgD,EAAAsxE,EAAAlrE,EAAA4zC,GACA,IAAAj/B,EAAAhhC,KAEAw3F,EAAA,IAAAhyB,EAAA3/C,aACA4xE,EAAA,CAAAF,EAAAp3F,IAAA,aAAAsmE,GACAixB,EAAA/xF,EAAAlF,KAAAmC,MAAA5C,KAAAW,KAAA82F,GACA,OAAAz3F,KAAAqiE,gBAAA,CACA/5D,OAAA2d,EACAg6C,OACAwG,UAAAixB,EACArrE,aAAAmrE,IACO3nE,KAAA,WACP,SAAA6iE,EAAAiF,oBAAA,CACAlxE,QAAA+wE,EAAA/wE,QACAC,UAAA8wE,EAAA9wE,WACS6wE,EAAA1tE,KACFgG,KAAA,SAAA+nE,GACPvrE,EAAAT,gBAAA4rE,EAAApsE,cACAiB,EAAAb,MAAAznB,EAAA6zF,IACO,SAAAr5B,GACP,GAAAv9B,EAAAa,QAAAwiC,aAGA,OAFArjC,EAAA29B,QAAAvyC,KAAA,sBAAqDm2C,UAAA98D,EAAA+8D,qBAAAC,eACrD,EAAAh9D,EAAA4O,MAAA,yCAAAkqD,EAAA,MAGA,MAAAA,KAIAs5B,cAAA,SAAApxB,EAAAqxB,EAAAC,EAAA1rE,EAAA4zC,EAAA1hD,GACA,IAEAy5E,EAFAruB,EAAA3pE,KAOA,OAJA83F,IAEAE,GADAF,IAAA/1F,SACA,GAAAhC,MAEAC,KAAAi4F,SAAAD,EAAAD,EAAAtxB,GAAA52C,KAAA,SAAAqI,GACA,OAAAA,EAAAggE,KAAAC,YAGAjgE,EAAAkgE,cAAAzuB,EAAAlD,EAAAp6C,EAAA4zC,GAAApwC,KAAA,WACA,OAAAqI,IACSgpC,MAAA,SAAA3C,GAET,OADAoL,EAAAhL,QAAAvyC,KAAA,sBAAqDm2C,UAAA98D,EAAA+8D,qBAAA01B,OACrD,IAAAG,EAAA,mBAAA9F,EAAA+F,UAAA,0BAAA/5B,GAAArmC,EAAAggE,QANAhgE,IAQOrI,KAAA,SAAAqI,GAGP,OAFA3Z,EAAA25E,KAAAhgE,EAAAggE,KACAhgE,EAAA9L,KAAAu9C,EAAAhL,SACAzmC,EAAAqgE,cAGAC,WAAA,SAAAnlC,EAAA90C,GACA,IAAAowE,EAAA3uF,KAEAk4F,EAAA35E,EAAA25E,KACAO,EAAAP,EAAAQ,cAAArlC,GACAslC,KAAAp6E,EAAAq6E,kBAAAnzF,EAAAozF,kBAAAC,kBACA,GAAAZ,EAAA5yE,OAAAqzE,GAAA34F,KAAA6hC,QAAAsiC,iBAAA,YAAA5lD,EAAAw6E,eAAAh5F,MAOA,IANA,IAAAi5F,EAAA,SAAAC,GACA,IAAAf,EAAAgB,SAAAC,aAAAF,GAAA,CACA,IAAAG,EAAAlB,EAAAgB,SAAAG,UAAAJ,GACAtK,EAAAhwB,QAAAvyC,KAAA,aAAA8rE,EAAAK,WAAA,SAAAU,EAAA,WAAAG,MAGAv3F,EAAA,EAAAC,EAAA22F,EAAAz2F,OAA2CH,EAAAC,EAAQD,IAAA,CACnD,IAAAy3F,EAAAb,EAAA52F,GACAm3F,EAAAM,EAAAL,UACA,IAAAM,EAAAD,EAAAC,OACAA,KAAAN,UACAD,EAAAO,EAAAN,UAIA,OAAAR,GAEAe,UAAA,SAAA/yB,EAAAgzB,EAAAptE,EAAA4zC,EAAA+2B,GAuEA,IAtEA,IAAA3H,EAAArvF,KAEA05F,EAAA,GACAC,EAAAF,EAAAp3F,UACA6sB,EAAA1tB,QAAAC,UAEAm4F,EAAA,WACA,IAAAx3F,EAAAu3F,EAAA93F,GACAvC,EAAAm6F,EAAAt5F,IAAAiC,GACA,OAAAA,GACA,WACA,MACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACAs3F,EAAA17E,KAAA,CAAA5b,EAAA9C,IACA,MACA,WACA4vB,IAAAW,KAAA,WACA,OAAAw/D,EAAAwI,cAAApxB,EAAA,KAAAnnE,EAAA,GAAA+sB,EAAA4zC,EAAA+2B,EAAAz4E,OAAAsR,KAAA,SAAA0oE,GACAlsE,EAAAX,cAAA6sE,GACAmB,EAAA17E,KAAA,CAAA5b,EAAA,CAAAm2F,EAAAj5F,EAAA,UAGA,MACA,SACAo6F,EAAA17E,KAAA,CAAA5b,EA9ZA,SAAA9C,GACA,OAAAqG,EAAAxB,QAAA7E,GACA,oBAEA,OAAAA,EAAAS,MACA,aACA,iBACA,oBACA,eACA,iBACA,aACA,eACA,cACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,oBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,iBACA,mBACA,gBACA,kBACA,UACA,YACA,iBACA,mBACA,YACA,cACA,iBACA,mBAGA,OADA,EAAA0F,EAAA4O,MAAA,2BAAA/U,EAAAS,MACA,cAsXA85F,CAAAv6F,KACA,MACA,YACA,MAAAqG,EAAAxB,QAAA7E,EAAA,SACAo6F,EAAA17E,KAAA,CAAA5b,GAAA,IACA,OAEA,EAAAuD,EAAA3C,QAAA1D,IACA4vB,IAAAW,KAAA,WACA,OAAAw/D,EAAA0H,YAAAz3F,EAAAmnE,EAAAp6C,EAAA4zC,EAAA+2B,KAEA0C,EAAA17E,KAAA,CAAA5b,GAAA,MAEA,EAAAqD,EAAA4O,MAAA,0BAEA,MACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,EAAA5O,EAAAgR,MAAA,0BAAArU,GACA,MACA,SACA,EAAAqD,EAAAgR,MAAA,kCAAArU,KAKAP,EAAA,EAAAC,EAAA63F,EAAA33F,OAA6CH,EAAAC,EAAQD,IACrD+3F,IAEA,OAAA1qE,EAAAW,KAAA,WACA6pE,EAAA13F,OAAA,GACAqqB,EAAAb,MAAA/lB,EAAAohB,IAAA2yE,UAAA,CAAAE,OAIAzB,SAAA,SAAAD,EAAAE,EAAAzxB,GACA,IAAAgpB,EAAAzvF,KAEA,SAAA85F,IACA,OAAAt4F,QAAAC,QAAA,IAAA42F,EAAA,mBAAA9F,EAAA+F,UAAA,QAAAN,EAAA,qBAAAE,IAEA,IAAAH,EACAp3F,EAAAX,KAAAW,KACA,GAAAu3F,EAAA,CACA,OAAAvyF,EAAA1D,OAAAi2F,GACA,UAAAj7E,MAAA,4CAEA86E,EAAAG,MACO,CACP,IAAA6B,EAAAtzB,EAAAtmE,IAAA,QACA,IAAA45F,EAIA,OADA,EAAAt0F,EAAA4O,MAAA,yBACAylF,IAHA/B,EAAAgC,EAAA53F,OAAA61F,GAMA,IAAAD,EAEA,OADA,EAAAtyF,EAAA4O,MAAA,yBACAylF,IAEA,GAAA95F,KAAAszB,UAAA9wB,IAAAu1F,GACA,OAAA/3F,KAAAszB,UAAAnzB,IAAA43F,GAGA,GADAG,EAAAv3F,EAAAU,WAAA02F,KACA,EAAApyF,EAAA3C,QAAAk1F,GACA,OAAA4B,IAEA,GAAA5B,EAAAhgE,WACA,OAAAggE,EAAAhgE,WAEA,IAIA8hE,EAmCAC,EAvCAC,GAAA,EAAAz0F,EAAAupB,2BACAmrE,EAAAn6F,KAAAo6F,gBAAAlC,GACA38C,EAAA4+C,EAAA5+C,WACA8+C,GAAA,EAAA10F,EAAA1D,OAAA81F,GAKA,GAHAsC,IACAL,EAAAjC,EAAAz0F,aAEA,EAAAqC,EAAA3C,QAAAu4C,GAAA,CACAA,EAAA++C,cACA/+C,EAAA++C,YAAAn7F,OAAAe,OAAA,OAEA,IAAAo6F,EAAA/+C,EAAA++C,YACA12C,EAAAu2C,EAAAv2C,KACA,GAAA02C,EAAA12C,GAAA,CACA,IAAA22C,EAAAD,EAAA12C,GAAA9/C,SACA,GAAAu2F,GAAAE,GAAAv6F,KAAAszB,UAAA9wB,IAAA+3F,GAEA,OADAv6F,KAAAszB,UAAAzvB,SAAAk0F,EAAAwC,GACAv6F,KAAAszB,UAAAnzB,IAAA43F,QAGAuC,EAAA12C,GAAA,CAA+Bo2C,OAAAzH,EAAAiI,KAAAC,aAE/BJ,IACAC,EAAA12C,GAAA9/C,SAAAi0F,GAEAiC,EAAAM,EAAA12C,GAAAo2C,OAEAK,EACAr6F,KAAAszB,UAAA5vB,IAAAq0F,EAAAmC,EAAAhrE,UAEA8qE,IACAA,EAAAh6F,KAAAomE,UAAAC,eAEArmE,KAAAszB,UAAA5vB,IAAA,MAAAs2F,EAAAE,EAAAhrE,WAEA,EAAAzpB,EAAAgZ,QAAAu7E,EAAA,iCACA9B,EAAAK,WAAA,KAAAv4F,KAAAkzB,WAAA2sC,MAAA,KAAAm6B,EACA9B,EAAAhgE,WAAAgiE,EAAAhrE,QAEA,IACA+qE,EAAAj6F,KAAA06F,cAAAP,GACO,MAAAx8E,GACPs8E,EAAAz4F,QAAAmuB,OAAAhS,GAoBA,OAlBAs8E,EAAApqE,KAAA,SAAA8qE,QACAz3F,IAAAy3F,EAAAC,WACAj6F,EAAA6f,MAAAsa,UACA6/D,EAAAC,WAAA,GAEAV,EAAAz4F,QAAA,IAAA42F,EAAAH,EAAAK,WAAAoC,EAAAzC,MACOh3B,MAAA,SAAA3C,GACPkxB,EAAA9wB,QAAAvyC,KAAA,sBAAmDm2C,UAAA98D,EAAA+8D,qBAAA01B,OACnD,IACA,IAAA38C,EAAA4+C,EAAA5+C,WACAs/C,EAAAt/C,KAAAp7C,IAAA,aACA2zB,EAAA+mE,KAAA16F,IAAA,WACAy6F,GAAA,EAAArI,EAAAuI,aAAAX,EAAA91F,KAAAyvB,KAAA/zB,MACAY,EAAA6f,MAAAsa,UACA8/D,IAAA,EACS,MAAAp5E,IACT04E,EAAAz4F,QAAA,IAAA42F,EAAAH,EAAAK,WAAA,IAAAhG,EAAA+F,UAAA/5B,aAAAthD,MAAAshD,EAAAn5B,QAAAm5B,GAAA25B,MAEAgC,EAAAhrE,SAEA8pE,UAAA,SAAA3sE,EAAAtoB,EAAA8lB,GACA,IAAAkxE,EAAA1uE,EAAArqB,OAAA,EAIA,GAHA6nB,IACAA,EAAA,IAEAkxE,EAAA,GAAA1uE,EAAA5F,QAAAs0E,KAAAt1F,EAAAohB,IAAAm0E,cACA3uE,EAAAb,MAAA/lB,EAAAohB,IAAAm0E,cAAA,EAAAj3F,GAAA8lB,QACO,CACP,IAAAoxE,EAAA5uE,EAAA3F,UAAAq0E,GACAE,EAAA,GAAAj9E,KAAAja,GACApC,MAAA/B,UAAAoe,KAAA+9C,MAAAk/B,EAAA,GAAApxE,KAGAqxE,aAAA,SAAA7uE,EAAAtoB,EAAA8lB,EAAAvX,EAAAmoE,EAAAhU,EAAAxG,GACA,IACAh6C,EADAk1E,EAAAtxE,IAAA7nB,OAAA,GAEA,MAAA2D,EAAAxB,QAAAg3F,KAAAl1E,EAAAw0D,EAAAt6E,IAAAg7F,EAAAp7F,OAAA,CACA,IAAAgD,GAAA,EAAA4C,EAAAhB,UAAAshB,KAAAljB,KAAAkjB,EACAm1E,EAAAr4F,EAAA5C,IAAA,eACA,GA1hBA,IA0hBAi7F,EAAA,CACA,IAAA7iF,EAAAjG,EAAAsC,KAAAtC,EAAAsC,KAAAlF,OAAAma,EAAA,QACA,OAAA7pB,KAAAs3F,iBAAAvzF,EAAAwU,EAAAkuD,EAAAxgD,EAAAljB,EAAAspB,EAAA4zC,GACS,GA5hBT,IA4hBSm7B,EAAA,CACT,IAAAC,EAAAt4F,EAAA5C,IAAA,WACAgT,EAAApQ,EAAArB,SAAA,UAGA,OAFAukB,EAAAysE,EAAA4I,QAAAC,aAAAF,EAAAloF,EAAAnT,KAAAW,KAAA8lE,EAAAzmE,KAAA2+D,QAAA3+D,KAAAwS,oBACA6Z,EAAAb,MAAAznB,EAAAkiB,EAAAP,SACAlkB,QAAAC,UAEA,OAAAD,QAAAmuB,OAAA,IAAA1S,MAAA,wBAAAm+E,IAGA,OADA/uE,EAAAb,MAAAznB,EAAA8lB,GACAroB,QAAAC,WAEA4gE,gBAAA,SAAA1M,GACA,IAAAi6B,EAAA5vF,KAEAsI,EAAAqtD,EAAArtD,OACA23D,EAAAtK,EAAAsK,KACAwG,EAAA9Q,EAAA8Q,UACAp6C,EAAAspC,EAAAtpC,aACAmvE,EAAA7lC,EAAAu/B,aACAA,OAAAhyF,IAAAs4F,EAAA,KAAAA,EAIA,GAFA/0B,KAAA9gE,EAAAlF,KAAAkC,MACAuyF,KAAA,IAAAuG,GACApvE,EACA,UAAApP,MAAA,qDAEA,IAAA6+B,EAAA97C,KACAW,EAAAX,KAAAW,KACA0c,EAAAle,OAAAe,OAAA,MACAw7F,EAAAj1B,EAAAtmE,IAAA,YAAAwF,EAAAlF,KAAAkC,MACA83E,EAAAhU,EAAAtmE,IAAA,YAAAwF,EAAAlF,KAAAkC,MACAq0F,EAAA,IAAA2E,EAAAzG,GACA0G,EAAA,IAAAC,EAAAvzF,EAAA3H,EAAAq2F,GACA8E,EAAA,IAAA9H,EACA,SAAA+H,EAAAC,GACA,QAAAn6F,EAAA,EAAAC,EAAA85F,EAAAK,iBAA2Dp6F,EAAAC,EAAQD,IACnEwqB,EAAAb,MAAA/lB,EAAAohB,IAAAG,QAAA,IAGA,WAAAxlB,QAAA,SAAA06F,EAAAz6F,EAAAkuB,GACA,IAAAgD,EAAA,SAAAzD,GACAA,EAAAW,KAAA,WACA,IACAqsE,EAAAz6F,EAAAkuB,GACa,MAAAnO,GACbmO,EAAAnO,KAEWmO,IAEXswC,EAAA7C,sBACA0+B,EAAA/0F,QAMA,IALA,IAAAo1F,EAEAt6F,EACAC,EACAwQ,EAHAkpD,EAAA,KAIA2gC,EAAAL,EAAAvwF,WACAiwD,EAAA3xC,KAAA,KACA+xE,EAAAhsE,KAAA4rC,KAFA,CAKA,IAAA3xC,EAAA2xC,EAAA3xC,KACA9lB,EAAAy3D,EAAAz3D,GACA,SAAAA,GACA,KAAA0B,EAAAohB,IAAAu1E,aACA,IAAAr8F,EAAA8pB,EAAA,GAAA9pB,KACA,GAAAA,QAAAmD,IAAAma,EAAAtd,GAAA,CACAssB,EAAAb,MAAAnO,EAAAtd,GAAAgE,GAAAsZ,EAAAtd,GAAA8pB,MACAA,EAAA,KACA,SAiDA,YA/CA8I,EAAA,IAAAnxB,QAAA,SAAA66F,EAAAC,GACA,IAAAv8F,EACA,UAAA0F,EAAAyD,YAAA,wCAEA,IAAA8rF,EAAA0G,EAAAv7F,IAAAJ,GACA,IAAAi1F,EAGA,OAFA3oE,EAAAb,MAAAznB,EAAA8lB,QACAwyE,IAGA,OAAA12F,EAAAhB,UAAAqwF,GACA,UAAAvvF,EAAAyD,YAAA,8BAEA,IAAA7E,EAAA2wF,EAAAjyF,KAAA5C,IAAA,WACA,OAAAwF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,sCAEA,YAAA7E,EAAAtE,KAMA,OALAi3F,EAAAlwE,YACAg1B,EAAAi5C,iBAAAtuB,EAAAuuB,EAAA,KAAA3oE,EAAA4zC,EAAA+2B,EAAAz4E,MAAA61E,SAAAvkE,KAAA,WACAmnE,EAAAhwE,UACAq1E,KACmBC,GAEF,aAAAj4F,EAAAtE,KAAA,CASA,UAAAsE,EAAAtE,KAGjB,UAAA0F,EAAAyD,YAAA,6BAAA7E,EAAAtE,OAFA,EAAA0F,EAAAgR,MAAA,8BAIA4lF,SAbAvgD,EAAA+5C,uBAAA,CACApvB,YACAmtB,MAAAoB,EACA3oE,eACA9M,SAAAxf,EACAsd,eACmBwS,KAAAwsE,EAAAC,KAQJp7B,MAAA,SAAA3C,GACf,GAAAziB,EAAAja,QAAAwiC,aAGA,OAFAvoB,EAAA6iB,QAAAvyC,KAAA,sBAA2Dm2C,UAAA98D,EAAA+8D,qBAAAC,eAC3D,EAAAh9D,EAAA4O,MAAA,wCAAAkqD,EAAA,MAGA,MAAAA,KAGA,KAAA94D,EAAAohB,IAAAmD,QACA,IAAAuyE,EAAA1yE,EAAA,GAKA,YAJA8I,EAAAmpB,EAAA+7C,cAAApxB,EAAA58C,EAAA,KAAAwC,EAAA4zC,EAAA+2B,EAAAz4E,OAAAsR,KAAA,SAAA0oE,GACAlsE,EAAAX,cAAA6sE,GACAlsE,EAAAb,MAAA/lB,EAAAohB,IAAAmD,QAAA,CAAAuuE,EAAAgE,OAGA,KAAA92F,EAAAohB,IAAA21E,eACA,IAAAj9E,EAAAsK,EAAA,GAAAtK,SACA,GAAAA,EAAA,CACA,IAAAI,EAAAtC,EAAAkC,GACA,QAAArc,IAAAyc,EAAA,CACA0M,EAAAb,MAAA7L,EAAA5b,GAAA4b,EAAAkK,MACAA,EAAA,KACA,UAWA,YARA8I,EAAAmpB,EAAA+5C,uBAAA,CACApvB,YACAmtB,MAAA/pE,EAAA,GACAksE,UAAA,EACA1pE,eACA9M,WACAlC,gBAGA,KAAA5X,EAAAohB,IAAAqD,SACAL,EAAA,GAAAiyB,EAAA08C,WAAA3uE,EAAA,GAAAmtE,EAAAz4E,OACA,MACA,KAAA9Y,EAAAohB,IAAA41E,eACA,IAAArqE,EAAAvI,EAAA,GACA6yE,EAAA,GACAC,EAAAvqE,EAAApwB,OACAuc,EAAAy4E,EAAAz4E,MACA,IAAA1c,EAAA,EAAyBA,EAAA86F,IAAe96F,EAAA,CACxC,IAAA+6F,EAAAxqE,EAAAvwB,IACA,EAAA4D,EAAA+P,UAAAonF,GACAj7F,MAAA/B,UAAAoe,KAAA+9C,MAAA2gC,EAAA5gD,EAAA08C,WAAAoE,EAAAr+E,KACiB,EAAA9Y,EAAAqe,OAAA84E,IACjBF,EAAA1+E,KAAA4+E,GAGA/yE,EAAA,GAAA6yE,EACA34F,EAAA0B,EAAAohB,IAAAqD,SACA,MACA,KAAAzkB,EAAAohB,IAAAg2E,iBACAxwE,EAAAb,MAAA/lB,EAAAohB,IAAAi2E,UACAjzE,EAAA,GAAAiyB,EAAA08C,WAAA3uE,EAAA,GAAAmtE,EAAAz4E,OACAxa,EAAA0B,EAAAohB,IAAAqD,SACA,MACA,KAAAzkB,EAAAohB,IAAAk2E,2BACA1wE,EAAAb,MAAA/lB,EAAAohB,IAAAi2E,UACAzwE,EAAAb,MAAA/lB,EAAAohB,IAAAm2E,eAAA,CAAAnzE,EAAA1hB,UACAkkB,EAAAb,MAAA/lB,EAAAohB,IAAAo2E,eAAA,CAAApzE,EAAA1hB,UACA0hB,EAAA,GAAAiyB,EAAA08C,WAAA3uE,EAAA,GAAAmtE,EAAAz4E,OACAxa,EAAA0B,EAAAohB,IAAAqD,SACA,MACA,KAAAzkB,EAAAohB,IAAAq2E,qBACAlG,EAAAz4E,MAAAq6E,kBAAA/uE,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAAs2E,kBACAnG,EAAAz4E,MAAAw6E,eAAA9lE,EAAAzjB,WAAA6C,MAAAwX,EAAA,GAAAlpB,EAAA8lE,EAAA3qB,EAAAtpC,oBACA,SACA,KAAA/M,EAAAohB,IAAAu2E,oBACApG,EAAAz4E,MAAA8+E,iBAAApqE,EAAAzjB,WAAA6C,MAAAwX,EAAA,GAAAlpB,EAAA8lE,EAAA3qB,EAAAtpC,oBACA,SACA,KAAA/M,EAAAohB,IAAAy2E,aACAhrF,EAAA0kF,EAAAz4E,MAAAw6E,eACAlvE,EAAAvX,EAAA5C,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA02E,gBACA,MACA,KAAA93F,EAAAohB,IAAA22E,eACAlrF,EAAA0kF,EAAAz4E,MAAA8+E,iBACAxzE,EAAAvX,EAAA5C,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA42E,kBACA,MACA,KAAAh4F,EAAAohB,IAAA62E,YACA1G,EAAAz4E,MAAAw6E,eAAA9lE,EAAAzjB,WAAAuD,WAAAC,KACA6W,EAAAoJ,EAAAzjB,WAAAuD,WAAAC,KAAAtD,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA02E,gBACA,MACA,KAAA93F,EAAAohB,IAAA82E,cACA3G,EAAAz4E,MAAA8+E,iBAAApqE,EAAAzjB,WAAAuD,WAAAC,KACA6W,EAAAoJ,EAAAzjB,WAAAuD,WAAAC,KAAAtD,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA42E,kBACA,MACA,KAAAh4F,EAAAohB,IAAA+2E,iBACA5G,EAAAz4E,MAAAw6E,eAAA9lE,EAAAzjB,WAAAuD,WAAAE,KACA4W,EAAAoJ,EAAAzjB,WAAAuD,WAAAE,KAAAvD,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA02E,gBACA,MACA,KAAA93F,EAAAohB,IAAAg3E,mBACA7G,EAAAz4E,MAAA8+E,iBAAApqE,EAAAzjB,WAAAuD,WAAAE,KACA4W,EAAAoJ,EAAAzjB,WAAAuD,WAAAE,KAAAvD,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA42E,kBACA,MACA,KAAAh4F,EAAAohB,IAAA02E,gBACAvG,EAAAz4E,MAAAw6E,eAAA9lE,EAAAzjB,WAAAuD,WAAAlD,IACAga,EAAAoJ,EAAAzjB,WAAAuD,WAAAlD,IAAAH,OAAAma,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAA42E,kBACAzG,EAAAz4E,MAAA8+E,iBAAApqE,EAAAzjB,WAAAuD,WAAAlD,IACAga,EAAAoJ,EAAAzjB,WAAAuD,WAAAlD,IAAAH,OAAAma,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAAi3E,cAEA,gBADAxrF,EAAA0kF,EAAAz4E,MAAAw6E,gBACAh5F,KAEA,YADA4yB,EAAAmpB,EAAAo/C,aAAA7uE,EAAA5mB,EAAAohB,IAAAi3E,cAAAj0E,EAAAvX,EAAAmoE,EAAAhU,EAAAxG,IAGAp2C,EAAAvX,EAAA5C,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA02E,gBACA,MACA,KAAA93F,EAAAohB,IAAAk3E,gBAEA,gBADAzrF,EAAA0kF,EAAAz4E,MAAA8+E,kBACAt9F,KAEA,YADA4yB,EAAAmpB,EAAAo/C,aAAA7uE,EAAA5mB,EAAAohB,IAAAk3E,gBAAAl0E,EAAAvX,EAAAmoE,EAAAhU,EAAAxG,IAGAp2C,EAAAvX,EAAA5C,OAAAma,EAAA,GACA9lB,EAAA0B,EAAAohB,IAAA42E,kBACA,MACA,KAAAh4F,EAAAohB,IAAAm3E,YACA,IAAAC,EAAAx3B,EAAAtmE,IAAA,WACA,IAAA89F,EACA,UAAAx4F,EAAAyD,YAAA,6BAEA,IAAAmyF,EAAA4C,EAAA99F,IAAA0pB,EAAA,GAAA9pB,MACA,IAAAs7F,EACA,UAAA51F,EAAAyD,YAAA,2BAEA,IACAg1F,EADAxL,EAAA4I,QAAAC,aAAAF,EAAA,KAAA16F,EAAA8lE,EAAA3qB,EAAA6iB,QAAA7iB,EAAAtpC,oBACAkT,QACAmE,EAAA,CAAAq0E,GACAn6F,EAAA0B,EAAAohB,IAAAm3E,YACA,MACA,KAAAv4F,EAAAohB,IAAA2yE,UACA,IAAA2E,EAAAt0E,EAAA,GACAu0E,EAAA33B,EAAAtmE,IAAA,aACA,OAAAwF,EAAA3C,QAAAo7F,OAAA57F,IAAA27F,EAAAp+F,MACA,MAEA,IAAA05F,EAAA2E,EAAAj+F,IAAAg+F,EAAAp+F,MAEA,YADA4yB,EAAAmpB,EAAA09C,UAAA/yB,EAAAgzB,EAAAptE,EAAA4zC,EAAA+2B,IAEA,KAAAvxF,EAAAohB,IAAAw3E,OACA,KAAA54F,EAAAohB,IAAAy3E,OACA,KAAA74F,EAAAohB,IAAA03E,QACA,KAAA94F,EAAAohB,IAAA23E,SACA,KAAA/4F,EAAAohB,IAAA43E,SACA,KAAAh5F,EAAAohB,IAAA63E,UAGA,KAAAj5F,EAAAohB,IAAA6iE,UACA5tC,EAAAk9C,UAAA3sE,EAAAtoB,EAAA8lB,GACA,SACA,KAAApkB,EAAAohB,IAAA83E,UACA,KAAAl5F,EAAAohB,IAAA+3E,eACA,KAAAn5F,EAAAohB,IAAAg4E,mBACA,KAAAp5F,EAAAohB,IAAAi4E,wBACA,KAAAr5F,EAAAohB,IAAAk4E,iBACA,KAAAt5F,EAAAohB,IAAAm4E,YACA,KAAAv5F,EAAAohB,IAAAo4E,UACA,SACA,QACA,UAAAp1E,EAAA,CACA,IAAAhoB,EAAA,EAAAC,EAAA+nB,EAAA7nB,OAA6CH,EAAAC,KAC7C+nB,EAAAhoB,aAAA8D,EAAAlF,MADqDoB,KAKrD,GAAAA,EAAAC,EAAA,EACA,EAAA2D,EAAA4O,MAAA,wCAAAtQ,GACA,WAIAsoB,EAAAb,MAAAznB,EAAA8lB,GAEAsyE,EACAxpE,EAAAwhE,IAGA4H,IACAt6F,OACOy/D,MAAA,SAAA3C,GACP,GAAAqxB,EAAA/tD,QAAAwiC,aAIA,OAHAurB,EAAAjxB,QAAAvyC,KAAA,sBAAqDm2C,UAAA98D,EAAA+8D,qBAAAC,WACrD,EAAAh9D,EAAA4O,MAAA,kDAAA4rD,EAAAlgE,WACAg8F,IAGA,MAAAx9B,KAGAuJ,eAAA,SAAAlS,GACA,IAAAw6B,EAAApwF,KAEAsI,EAAAstD,EAAAttD,OACA23D,EAAArK,EAAAqK,KACAwG,EAAA7Q,EAAA6Q,UACAy4B,EAAAtpC,EAAAohC,aACAA,OAAA9zF,IAAAg8F,EAAA,KAAAA,EACAC,EAAAvpC,EAAAsN,oBACAA,OAAAhgE,IAAAi8F,KACAC,EAAAxpC,EAAAuN,iBACAA,OAAAjgE,IAAAk8F,KACAv8B,EAAAjN,EAAAiN,KACAw8B,EAAAzpC,EAAA0pC,WACAA,OAAAp8F,IAAAm8F,EAAAlgG,OAAAe,OAAA,MAAAm/F,EAEA54B,KAAA9gE,EAAAlF,KAAAkC,MACAq0F,KAAA,IAAA2E,EAAA,IAAA4D,GACA,IA8BAC,EA9BAC,EAAA,MACAC,EAAA,CACAprE,MAAA,GACAqrE,OAAAxgG,OAAAe,OAAA,OAEA0/F,EAAA,CACAtyF,aAAA,EACA/J,IAAA,GACAmN,MAAA,EACAC,OAAA,EACAkvF,UAAA,EACAC,iBAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,aAAAC,IACAC,kBAAAD,IACAE,mBAAA,EACAC,qBAAA,EACAr7E,UAAA,KACA+yE,SAAA,MAEAuI,EAAA,GACAC,EAAA,IACAC,EAAA,EACA3kD,EAAA97C,KACAW,EAAAX,KAAAW,KACA+6F,EAAA,KACAgF,EAAAvhG,OAAAe,OAAA,MACA07F,EAAA,IAAAC,EAAAvzF,EAAA3H,EAAAq2F,GAEA,SAAA2J,IACA,GAAAf,EAAAtyF,YACA,OAAAsyF,EAEA,IAAA1H,EAAAsH,EAAAtH,KACAA,EAAAK,cAAA+G,IACAA,EAAApH,EAAAK,aAAA,EACAmH,EAAAC,OAAAzH,EAAAK,YAAA,CACAqI,WAAA1I,EAAA2I,aACAt3C,OAAA2uC,EAAA3uC,OACAC,QAAA0uC,EAAA1uC,QACAq2C,SAAA3H,EAAA2H,WAGAD,EAAA5H,SAAAE,EAAAK,WACA,IAAAuI,EAAA,CAAAtB,EAAAjD,SAAAiD,EAAAuB,WAAA,IAAAvB,EAAAjD,SAAA,EAAAiD,EAAAwB,UACA,GAAA9I,EAAAC,aAAAqH,EAAAp2C,aAAA3jD,EAAAw7F,sBAAA,IAAAzB,EAAAjD,SAAA,CACA,IAAA2E,EAAAhJ,EAAAnN,KAAA,GAAAmN,EAAAnN,KAAA,GACAmW,EAAA,IACAA,GAAA1B,EAAAp2C,WAAA,GACA03C,EAAA,IAAAI,GAGA,IAAAC,EAAA17F,EAAA8C,KAAA0c,UAAAu6E,EAAA4B,IAAA37F,EAAA8C,KAAA0c,UAAAu6E,EAAA6B,WAAAP,IACAlB,EAAA36E,UAAAk8E,EACAjJ,EAAA2H,UAKAD,EAAAlvF,MAAArB,KAAAuM,KAAAulF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvB,EAAAjvF,OAAA,EACAivF,EAAAC,UAAA,IANAD,EAAAlvF,MAAA,EACAkvF,EAAAjvF,OAAAtB,KAAAuM,KAAAulF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvB,EAAAC,UAAA,GAMA,IAAAznF,EAAAonF,EAAA8B,eAAA,GACA/3F,EAAAi2F,EAAA8B,eAAA,GACAC,EAAAlyF,KAAAuM,KAAAxD,IAAA7O,KACA6O,EAAAonF,EAAA4B,IAAA,GACA73F,EAAAi2F,EAAA4B,IAAA,GACA,IAAAI,EAAAnyF,KAAAuM,KAAAxD,IAAA7O,KACAq2F,EAAAI,iBAAAwB,EAAAD,EACA3B,EAAAE,iBAAA,EACAF,EAAAG,kBAAA,EACA,IAAAE,EAAA/H,EAAA+H,WAAA,IAAAT,EAAAjD,SAeA,OAdA0D,GACAL,EAAAK,aACAL,EAAAM,aAAAD,EAAAM,EACAX,EAAAQ,kBAAAH,EAAAO,EACAZ,EAAAS,kBAAAJ,EAAAQ,EACAb,EAAAU,qBAAApI,EAAAuJ,cAEA7B,EAAAK,WAAA,EACAL,EAAAM,aAAAC,IACAP,EAAAQ,kBAAAD,IACAP,EAAAS,kBAAA,EACAT,EAAAU,qBAAA,GAEAV,EAAAtyF,aAAA,EACAsyF,EAWA,SAAA8B,EAAAC,GACA,IAAAp+F,EAAAo+F,EAAAp+F,IAAAsf,KAAA,IACA++E,GAAA,EAAAjP,EAAAkP,MAAAt+F,GAAA,EAAAo+F,EAAA9B,UACA,OACAt8F,IAAA2/D,EAbA,SAAA3/D,GAIA,IAHA,IAEAqG,EAFA/H,EAAA,EACAC,EAAAyB,EAAAvB,OAEAH,EAAAC,IAAA8H,EAAArG,EAAAkS,WAAA5T,KAAA,IAAA+H,GAAA,KACA/H,IAEA,OAAAA,EAAAC,EAAAyB,EAAA88B,QAAAo/D,EAAA,KAAAl8F,EAMAu+F,CAAAF,EAAAr+F,KAAAq+F,EAAAr+F,IACAw+F,IAAAH,EAAAG,IACArxF,MAAAixF,EAAAjxF,MACAC,OAAAgxF,EAAAhxF,OACAsU,UAAA08E,EAAA18E,UACA+yE,SAAA2J,EAAA3J,UAGA,SAAAH,EAAAG,EAAAD,GACA,OAAAj8C,EAAAm8C,SAAAD,EAAAD,EAAAtxB,GAAA52C,KAAA,SAAAqI,GACAsnE,EAAAtH,KAAAhgE,EAAAggE,KACAsH,EAAAp2C,WAAAlxB,EAAAggE,KAAA9uC,YAAA3jD,EAAAw7F,uBAGA,SAAAe,EAAA3uC,GAMA,IALA,IAAA6kC,EAAAsH,EAAAtH,KACAyJ,EAAAhB,IACAjwF,EAAA,EACAC,EAAA,EACA8nF,EAAAP,EAAAQ,cAAArlC,GACAxxD,EAAA,EAAuBA,EAAA42F,EAAAz2F,OAAmBH,IAAA,CAC1C,IAAAy3F,EAAAb,EAAA52F,GACAogG,EAAA,KAEAA,EADA/J,EAAA2H,UAAAvG,EAAA4I,QACA5I,EAAA4I,QAAA,GAEA5I,EAAA5oF,MAEA,IAAAyxF,EAAA7I,EAAA5lC,QACA0uC,GAAA,EAAA5P,EAAAt/B,8BACAhwD,IAAAk/F,EAAAD,KACAA,EAAAC,EAAAD,IAEAA,GAAA,EAAA3P,EAAAp/B,cAAA+uC,GACA,IAAAE,EAAA7C,EAAA6C,YACA,GAAA/I,EAAA7rF,QAAA,CACA,IAAA60F,EAAA9C,EAAA8C,YACAD,GAAAC,EACAA,EAAA,GACAC,EAAAD,EAAAX,EAAAp+F,KAGA,IAAAi/F,EAAA,EACAC,EAAA,EACA,GAAAvK,EAAA2H,SAOAlvF,GADA8xF,EADAR,EAAAzC,EAAAp2C,WAAA,GACAo2C,EAAAjD,SAAA8F,OAHA3xF,GADA8xF,GADAP,EAAAzC,EAAAp2C,WAAA,GACAo2C,EAAAjD,SAAA8F,GAAA7C,EAAAuB,WAOAvB,EAAAkD,oBAAAF,EAAAC,GACAd,EAAAp+F,IAAAya,KAAAmkF,GASA,OAPAjK,EAAA2H,UAIA8B,EAAA5B,kBAAApvF,EACAgxF,EAAAhxF,QAAAtB,KAAAiqD,IAAA3oD,KAJAgxF,EAAA7B,iBAAApvF,EACAixF,EAAAjxF,UAKAixF,EAEA,SAAAY,EAAA7xF,EAAAgR,GACA,KAAAhR,EAAAkvF,EAAAM,cAGA,GAAAxvF,EAAAkvF,EAAAQ,kBACA1+E,EAAA1D,KAAA,UAIA,IADA,IAAA2kF,EAAAtzF,KAAAuL,MAAAlK,EAAAkvF,EAAAK,YACA0C,KAAA,GACAjhF,EAAA1D,KAAA,KAGA,SAAA4kF,IACAhD,EAAAtyF,cAGAsyF,EAAAlvF,OAAAkvF,EAAAI,iBACAJ,EAAAjvF,QAAAivF,EAAAI,iBACAN,EAAAprE,MAAAtW,KAAA0jF,EAAA9B,IACAA,EAAAtyF,aAAA,EACAsyF,EAAAr8F,IAAAvB,OAAA,GAEA,SAAA6gG,IACA,IAAA7gG,EAAA09F,EAAAprE,MAAAtyB,OACAA,EAAA,IACA6gE,EAAAigC,QAAApD,EAAA19F,GACA09F,EAAAprE,MAAA,GACAorE,EAAAC,OAAAxgG,OAAAe,OAAA,OAGA,IAAA47F,EAAA,IAAA9H,EACA,WAAAxyF,QAAA,SAAA06F,EAAAz6F,EAAAkuB,GACA,IAAAgD,EAAA,SAAAzD,GACA2zE,IACArhG,QAAAw2B,IAAA,CAAA9I,EAAA2zC,EAAAkgC,QAAAlzE,KAAA,WACA,IACAqsE,EAAAz6F,EAAAkuB,GACa,MAAAnO,GACbmO,EAAAnO,KAEWmO,IAEXswC,EAAA7C,sBACA0+B,EAAA/0F,QAIA,IAHA,IAAAo1F,EACA3gC,EAAA,GACA3xC,EAAA,KACAsyE,EAAAL,EAAAvwF,WACAse,EAAA7nB,OAAA,EACAw5D,EAAA3xC,OACA+xE,EAAAhsE,KAAA4rC,KAHA,CAMAgkC,EAAAxI,EAAAz4E,MACA,IAEAykF,EAFAj/F,EAAAy3D,EAAAz3D,GAGA,OAFA8lB,EAAA2xC,EAAA3xC,KAEA,EAAA9lB,GACA,KAAA0B,EAAAohB,IAAAmD,QACA,IAAAi5E,EAAAp5E,EAAA,GAAA9pB,KACAmjG,EAAAr5E,EAAA,GACA,GAAA21E,EAAAtH,MAAA+K,IAAAzD,EAAAxH,UAAAkL,IAAA1D,EAAAjD,SACA,MAMA,OAJAqG,IACApD,EAAAxH,SAAAiL,EACAzD,EAAAjD,SAAA2G,OACAvwE,EAAAklE,EAAAoL,EAAA,OAEA,KAAAx9F,EAAAohB,IAAAs8E,YACAP,IACApD,EAAAwB,SAAAn3E,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAAu8E,UACAR,IACApD,EAAAuB,WAAAl3E,EAAA,OACA,MACA,KAAApkB,EAAAohB,IAAAw8E,WACAT,IACApD,EAAA8D,QAAAz5E,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAA08E,SACA,IAAAC,IAAAhE,EAAAtH,MAAA,KAAAsH,EAAAtH,KAAA2H,SAAAh2E,EAAA,GAAAA,EAAA,IAEA,GADAm5E,EAAAn5E,EAAA,GAAAA,EAAA,GACAs5C,GAAAqgC,GAAA5D,EAAAtyF,aAAA01F,EAAA,GAAAA,GAAApD,EAAAS,kBAAA,CACAb,EAAAiE,wBAAA55E,EAAA,GAAAA,EAAA,IACA+1E,EAAAlvF,OAAAmZ,EAAA,GAAA+1E,EAAAE,iBACAF,EAAAjvF,QAAAkZ,EAAA,GAAA+1E,EAAAG,kBAEAwC,EADA14E,EAAA,GAAA+1E,EAAAE,kBAAAj2E,EAAA,GAAA+1E,EAAAG,mBACAH,EAAAr8F,KACA,MAEAq/F,IACApD,EAAAiE,wBAAA55E,EAAA,GAAAA,EAAA,IACA21E,EAAA6B,WAAA7B,EAAA8B,eAAAv/F,QACA,MACA,KAAA0D,EAAAohB,IAAA68E,mBACAd,IACApD,EAAA8D,SAAAz5E,EAAA,GACA21E,EAAAiE,wBAAA55E,EAAA,GAAAA,EAAA,IACA21E,EAAA6B,WAAA7B,EAAA8B,eAAAv/F,QACA,MACA,KAAA0D,EAAAohB,IAAAi2E,SACA8F,IACApD,EAAAmE,iBACA,MACA,KAAAl+F,EAAAohB,IAAAoD,cAEA,GADA+4E,EAAAxD,EAAAoE,0BAAA/5E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAs5C,GAAA,OAAA6/B,GAAApD,EAAAtyF,aAAA01F,EAAA1jG,MAAA,GAAA0jG,EAAA1jG,OAAAsgG,EAAAS,kBAAA,CACAb,EAAAiE,wBAAAT,EAAAtyF,MAAAsyF,EAAAryF,QACAivF,EAAAlvF,OAAAsyF,EAAAtyF,MAAAkvF,EAAAE,iBACAF,EAAAjvF,QAAAqyF,EAAAryF,OAAAivF,EAAAG,kBAEAwC,EADAS,EAAAtyF,MAAAkvF,EAAAE,kBAAAkD,EAAAryF,OAAAivF,EAAAG,mBACAH,EAAAr8F,KACA,MAEAq/F,IACApD,EAAAv1E,cAAAJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA21E,EAAAqE,kBAAAh6E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,KAAApkB,EAAAohB,IAAAo2E,eACAuC,EAAA6C,YAAAx4E,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAAm2E,eACAwC,EAAA8C,YAAAz4E,EAAA,GACA,MACA,KAAApkB,EAAAohB,IAAAkD,UACA64E,IACApD,EAAA6B,WAAA57F,EAAAq+F,gBAAA/hG,QACAy9F,EAAA8B,eAAA77F,EAAAq+F,gBAAA/hG,QACA,MACA,KAAA0D,EAAAohB,IAAA41E,eAGA,IAFA,IACAt0E,EADAmM,EAAAzK,EAAA,GAEAnd,EAAA,EAAAwqB,EAAA5C,EAAAtyB,OAAgD0K,EAAAwqB,EAAQxqB,IACxD,oBAAA4nB,EAAA5nB,GACAs1F,EAAA1tE,EAAA5nB,SACiB,MAAAjH,EAAAqe,OAAAwQ,EAAA5nB,IAAA,CACjBi0F,IACAqC,EAAA1uE,EAAA5nB,GAAA8yF,EAAAjD,SAAA,IACA,IAAAwH,GAAA,EACAvE,EAAAtH,KAAA2H,UACA13E,EAAA66E,EACAxD,EAAAkD,oBAAA,EAAAv6E,IACA47E,EAAAnE,EAAAU,qBAAA0C,EAAApD,EAAAS,qBAEAT,EAAAjvF,QAAAwX,KAIAA,GADA66E,MACAxD,EAAAuB,WACAvB,EAAAkD,oBAAAv6E,EAAA,IACA47E,EAAAnE,EAAAU,qBAAA0C,EAAApD,EAAAS,qBAEAT,EAAAlvF,OAAAyX,IAGA47E,EACAnB,IACmBI,EAAA,GACnBT,EAAAS,EAAApD,EAAAr8F,KAIA,MACA,KAAAkC,EAAAohB,IAAAqD,SACA83E,EAAAn4E,EAAA,IACA,MACA,KAAApkB,EAAAohB,IAAAg2E,iBACA+F,IACApD,EAAAmE,iBACA3B,EAAAn4E,EAAA,IACA,MACA,KAAApkB,EAAAohB,IAAAk2E,2BACA6F,IACApD,EAAA8C,YAAAz4E,EAAA,GACA21E,EAAA6C,YAAAx4E,EAAA,GACA21E,EAAAmE,iBACA3B,EAAAn4E,EAAA,IACA,MACA,KAAApkB,EAAAohB,IAAAu1E,aACAwG,IACAlH,IACAA,EAAAj1B,EAAAtmE,IAAA,YAAAwF,EAAAlF,KAAAkC,OAEA,IAAA5C,EAAA8pB,EAAA,GAAA9pB,KACA,GAAAA,QAAAmD,IAAAw9F,EAAA3gG,GACA,MAqEA,YAnEA4yB,EAAA,IAAAnxB,QAAA,SAAA66F,EAAAC,GACA,IAAAv8F,EACA,UAAA0F,EAAAyD,YAAA,wCAEA,IAAA8rF,EAAA0G,EAAAv7F,IAAAJ,GACA,GAAAi1F,EAAA,CAIA,OAAArvF,EAAAhB,UAAAqwF,GACA,UAAAvvF,EAAAyD,YAAA,8BAEA,IAAA7E,EAAA2wF,EAAAjyF,KAAA5C,IAAA,WACA,OAAAwF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,sCAEA,YAAA7E,EAAAtE,KAGA,OAFA2gG,EAAA3gG,IAAA,OACAs8F,IAGA,IAAA2H,EAAAhN,EAAAz4E,MAAA61E,QACA6P,EAAA,IAAAtI,EAAAqI,GACA7wF,EAAA6hF,EAAAjyF,KAAArB,SAAA,UACAC,MAAAC,QAAAuR,IAAA,IAAAA,EAAAnR,QACAiiG,EAAAh/E,UAAA9R,GAEA0vF,IACA,IAAAqB,EAAA,CACAC,gBAAA,EACArB,QAAA,SAAA56F,EAAAL,GACA7H,KAAAmkG,gBAAA,EACAthC,EAAAigC,QAAA56F,EAAAL,IAGAk7D,kBACA,OAAAF,EAAAE,aAEAggC,YACA,OAAAlgC,EAAAkgC,QAGAjnD,EAAAgsB,eAAA,CACAx/D,OAAA0sF,EACA/0B,OACAwG,UAAAuuB,EAAAjyF,KAAA5C,IAAA,cAAAsmE,EACAuwB,aAAAiN,EACA/gC,sBACAC,mBACAN,KAAAqhC,EACA5E,eACiBzvE,KAAA,WACjBq0E,EAAAC,iBACAzD,EAAA3gG,IAAA,GAEAs8F,KACiBC,QAlDjBD,MAmDen7B,MAAA,SAAA3C,GACf,KAAAA,aAAA94D,EAAA2+F,gBAAA,CAGA,IAAAtoD,EAAAja,QAAAwiC,aAIA,MAAA9F,GAHA,EAAA94D,EAAA4O,MAAA,uCAAAkqD,EAAA,UAMA,KAAA94D,EAAAohB,IAAA2yE,UACAoJ,IACA,IAAAzE,EAAAt0E,EAAA,GACAu0E,EAAA33B,EAAAtmE,IAAA,aACA,OAAAwF,EAAA3C,QAAAo7F,MAAA,EAAAz4F,EAAAxB,QAAAg6F,GACA,MAEA,IAAA1E,EAAA2E,EAAAj+F,IAAAg+F,EAAAp+F,MACA,OAAA4F,EAAA3C,QAAAy2F,GACA,MAEA,IAAA4K,EAAA5K,EAAAt5F,IAAA,QACA,GAAAkkG,EAIA,OAHA7E,EAAAxH,SAAA,KACAwH,EAAAjD,SAAA8H,EAAA,QACA1xE,EAAAklE,EAAA,KAAAwM,EAAA,KAKA,GAAA3E,EAAAprE,MAAAtyB,QAAA6gE,EAAAE,YAAA,CACAo5B,GAAA,EACA,OAGAA,EACAxpE,EAAAwhE,IAGAyO,IACAC,IACAphG,OACOy/D,MAAA,SAAA3C,GACP,KAAAA,aAAA94D,EAAA2+F,gBAAA,CAGA,GAAAhU,EAAAvuD,QAAAwiC,aAIA,OAHA,EAAA5+D,EAAA4O,MAAA,iDAAA4rD,EAAAlgE,MACA6iG,SACAC,IAGA,MAAAtkC,MAIA+lC,sBAAA,SAAAvhG,EAAAwhG,EAAAz8C,GACA,IAAA0oC,EAAAxwF,KAEAW,EAAAX,KAAAW,KACA6jG,EAAAzhG,EAAA5C,IAAA,cAAAokG,EAAApkG,IAAA,aACAskG,EAAAD,EAAAxkG,KAAA0kG,cAAAF,GAAAhjG,QAAAC,aAAAyB,GACA,GAAA4kD,EAAA68C,UAAA,CACA,IAAAC,EAAA7hG,EAAA5C,IAAA,kBACA,EAAAwF,EAAA3C,QAAA4hG,KACA98C,EAAA88C,cAAA,CACAC,SAAAD,EAAAzkG,IAAA,YACA2kG,SAAAF,EAAAzkG,IAAA,YACA4kG,WAAAH,EAAAzkG,IAAA,gBAGA,IAAA6kG,EAAAjiG,EAAA5C,IAAA,gBACA,EAAAwF,EAAAhB,UAAAqgG,KACAl9C,EAAAk9C,YAAAhlG,KAAAilG,gBAAAD,IAGA,IAEAljE,EAFAojE,EAAA,GACAC,EAAA,KAEA,GAAApiG,EAAAP,IAAA,aAEA,GADAs/B,EAAA/+B,EAAA5C,IAAA,aACA,EAAAwF,EAAA3C,QAAA8+B,IAGA,GAFAqjE,EAAArjE,EAAA3hC,IAAA,gBACAglG,GAAA,EAAAx/F,EAAAxB,QAAAghG,KAAAplG,KAAA,KACA+hC,EAAAt/B,IAAA,eAGA,IAFA,IAAA4iG,EAAAtjE,EAAA3hC,IAAA,eACA+jB,EAAA,EACAxX,EAAA,EAAAwqB,EAAAkuE,EAAApjG,OAAqD0K,EAAAwqB,EAAQxqB,IAAA,CAC7D,IAAA4Y,EAAA3kB,EAAAU,WAAA+jG,EAAA14F,IACA,MAAAjH,EAAAqe,OAAAwB,GACApB,EAAAoB,MACe,QAAA3f,EAAAxB,QAAAmhB,GAGf,UAAA7f,EAAAyD,YAAA,yCAAAoc,GAFA4/E,EAAAhhF,KAAAoB,EAAAvlB,WAMS,QAAA4F,EAAAxB,QAAA29B,GAGT,UAAAr8B,EAAAyD,YAAA,qCAFAi8F,EAAArjE,EAAA/hC,KAIA,qBAAAolG,GAAA,sBAAAA,GAAA,oBAAAA,IACAA,EAAA,MAGA,GAAAA,EACAr9C,EAAAu9C,iBAAA,EAAAn+C,EAAA9qC,aAAA+oF,GAAApjG,YACO,CACP,IAAAujG,KAAAx9C,EAAA9yB,MAAAu9D,EAAAgT,UAAAC,UACAC,KAAA39C,EAAA9yB,MAAAu9D,EAAAgT,UAAAG,aACA5jE,EAAAolB,EAAAlrC,iBACA,aAAA8rC,EAAAzjD,MAAAohG,IACA3jE,EAAAolB,EAAAjrC,iBAEAqpF,IACAxjE,EAAAolB,EAAAnrC,iBACA+rC,EAAAD,OACA,UAAA5pB,KAAA6pB,EAAA/nD,MACA+hC,EAAAolB,EAAAhrC,kBACa,YAAA+hB,KAAA6pB,EAAA/nD,QACb+hC,EAAAolB,EAAA/qC,wBAIA2rC,EAAAu9C,gBAAAvjE,EAMA,OAJAgmB,EAAAo9C,cACAp9C,EAAAq9C,mBACAr9C,EAAA69C,cAAAR,GAAAD,EAAAljG,OAAA,EACA8lD,EAAA/kD,OACA0hG,EAAA50E,KAAA,SAAA20E,GAEA,OADA18C,EAAA08C,YACAhU,EAAAoV,eAAA99C,KACOj4B,KAAA,SAAA20E,GAEP,OADA18C,EAAA08C,YACA18C,KAGA+9C,0BAAA,SAAA/9C,IACA,EAAAriD,EAAAgZ,SAAAqpC,EAAA68C,UAAA,0BACA,IAAAH,EAAA,GACAsB,OAAA,EACAC,OAAA,EACAjkE,EAAAgmB,EAAAu9C,gBAAAtjG,QACAojG,EAAAr9C,EAAAq9C,iBACAD,EAAAp9C,EAAAo9C,YACA,IAAAY,KAAAZ,EAEA,aADAa,EAAAb,EAAAY,MAIAhkE,EAAAgkE,GAAAC,GAEA,IAAAtyC,GAAA,EAAAm/B,EAAArmE,oBACA,IAAAu5E,KAAAhkE,EAEA,SADAikE,EAAAjkE,EAAAgkE,IAGS,QAAA5iG,IAAAuwD,EAAAsyC,GAqCTvB,EAAAsB,GAAA3jF,OAAAC,aAAAqxC,EAAAsyC,QArCS,CACT,IAAAn8F,EAAA,EACA,OAAAm8F,EAAA,IACA,QACA,IAAAA,EAAA/jG,SACA4H,EAAAq1B,SAAA8mE,EAAAt0C,OAAA,QAEA,MACA,QACA,IAAAs0C,EAAA/jG,SACA4H,EAAAq1B,SAAA8mE,EAAAt0C,OAAA,QAEA,MACA,QACA,QACAs0C,EAAA/jG,QAAA,IACA4H,GAAAm8F,EAAAt0C,OAAA,IAEA,MACA,QACA,IAAAiC,GAAA,EAAA8+B,EAAAh/B,oBAAAuyC,EAAAtyC,IACA,IAAAC,IACA9pD,EAAA8pD,GAGA,GAAA9pD,EAAA,CACA,GAAAu7F,GAAAv7F,KAAAk8F,EAAA,CACA,IAAA93C,GAAA,EAAA9G,EAAA9qC,aAAA+oF,GACA,GAAAn3C,IAAA+3C,EAAA/3C,EAAA83C,IAAA,CACAtB,EAAAsB,GAAA3jF,OAAAC,aAAAqxC,EAAAsyC,IACA,UAGAvB,EAAAsB,GAAA3jF,OAAAC,aAAAxY,IAMA,WAAA2oF,EAAAyT,aAAAxB,IAEAoB,eAAA,SAAA99C,GAEA,GADAA,EAAAm+C,0BAAAn+C,EAAA08C,WAAA18C,EAAA08C,UAAAxiG,OAAA,EACA8lD,EAAAm+C,wBAIA,OAHAn+C,EAAA68C,WAAA78C,EAAA69C,cACA79C,EAAAo+C,kBAAAlmG,KAAA6lG,0BAAA/9C,IAEAtmD,QAAAC,QAAAqmD,EAAA08C,WAEA,IAAA18C,EAAA68C,UACA,OAAAnjG,QAAAC,QAAAzB,KAAA6lG,0BAAA/9C,IAEA,GAAAA,EAAA68C,YAAA78C,EAAAq+C,KAAAC,eAAAt+C,EAAAq+C,gBAAA7T,EAAA+T,eAAA,UAAAv+C,EAAA88C,cAAAC,WAAA,QAAA/8C,EAAA88C,cAAAE,UAAA,SAAAh9C,EAAA88C,cAAAE,UAAA,WAAAh9C,EAAA88C,cAAAE,UAAA,WAAAh9C,EAAA88C,cAAAE,WAAA,CACA,IAAAD,EAAA/8C,EAAA88C,cAAAC,SACAC,EAAAh9C,EAAA88C,cAAAE,SACAwB,EAAA3gG,EAAA7F,KAAAK,IAAA0kG,EAAA,IAAAC,EAAA,SACA,OAAAxS,EAAAiU,YAAArmG,OAAA,CACA4hC,SAAAwkE,EACAhT,iBAAAtzF,KAAAszF,iBACAkT,QAAA,OACS32E,KAAA,SAAA42E,GACT,IAAAN,EAAAr+C,EAAAq+C,KACA3B,EAAA,GAUA,OATA2B,EAAA1jG,QAAA,SAAAqjG,EAAAz4C,GACA,GAAAA,EAAA,MACA,UAAA5nD,EAAAyD,YAAA,6BAEA,IAAAw9F,EAAAD,EAAAhzF,OAAA45C,GACAq5C,IACAlC,EAAAsB,GAAA3jF,OAAAC,cAAAskF,EAAAjxF,WAAA,OAAAixF,EAAAjxF,WAAA,OAGA,IAAA88E,EAAAyT,aAAAxB,KAGA,OAAAhjG,QAAAC,QAAA,IAAA8wF,EAAAoU,qBAAA7+C,EAAA8+C,UAAA9+C,EAAA++C,YAGAnC,cAAA,SAAAF,GACA,IAAAsC,EAAAtC,EACA,SAAA7+F,EAAAxB,QAAA2iG,GACAxU,EAAAiU,YAAArmG,OAAA,CACA4hC,SAAAglE,EACAxT,iBAAAtzF,KAAAszF,iBACAkT,QAAA,OACS32E,KAAA,SAAAk3E,GACT,OAAAA,aAAAzU,EAAA+T,aACA,IAAA9T,EAAAoU,qBAAA,SAEA,IAAApU,EAAAyT,aAAAe,EAAAC,aAEO,EAAArhG,EAAAhB,UAAAmiG,GACPxU,EAAAiU,YAAArmG,OAAA,CACA4hC,SAAAglE,EACAxT,iBAAAtzF,KAAAszF,iBACAkT,QAAA,OACS32E,KAAA,SAAAk3E,GACT,GAAAA,aAAAzU,EAAA+T,aACA,WAAA9T,EAAAoU,qBAAA,SAEA,IAAAr/E,EAAA,IAAA3lB,MAAAolG,EAAA/kG,QAeA,OAdA+kG,EAAAtkG,QAAA,SAAAwkG,EAAA5pE,GAEA,IADA,IAAA95B,EAAA,GACA8H,EAAA,EAA2BA,EAAAgyB,EAAAr7B,OAAkBqJ,GAAA,GAC7C,IAAAkG,EAAA8rB,EAAA5nB,WAAApK,IAAA,EAAAgyB,EAAA5nB,WAAApK,EAAA,GACA,iBAAAkG,GAAA,CAIAlG,GAAA,EACA,IAAAoG,EAAA4rB,EAAA5nB,WAAApK,IAAA,EAAAgyB,EAAA5nB,WAAApK,EAAA,GACA9H,EAAAya,OAAA,KAAAzM,IAAA,UAAAE,GAAA,YALAlO,EAAAya,KAAAzM,GAOA+V,EAAA2/E,GAAA9kF,OAAAC,aAAA25C,MAAA55C,OAAA5e,KAEA,IAAAgvF,EAAAyT,aAAA1+E,KAGA9lB,QAAAC,QAAA,OAEAwjG,gBAAA,SAAAiC,GAGA,IAFA,IAAAC,EAAAD,EAAAtiG,WACAyT,EAAA,GACA3L,EAAA,EAAAwqB,EAAAiwE,EAAAnlG,OAA6C0K,EAAAwqB,EAAQxqB,IAAA,CACrD,IAAA06F,EAAAD,EAAAz6F,MAAA,EAAAy6F,EAAAz6F,GACA,OAAA06F,EAIA/uF,EADA3L,GAAA,GACA06F,EAEA,OAAA/uF,GAEAgvF,cAAA,SAAAtkG,EAAAw4C,EAAAuM,GACA,IAIAw/C,EACAzlG,EAAAC,EAAA4K,EAAAwqB,EAAArxB,EAAA+D,EAAA6gD,EALA9pD,EAAAX,KAAAW,KACA4mG,EAAA,GACA36C,EAAA,EACA46C,EAAA,GAGA,GAAA1/C,EAAA68C,UAAA,CAGA,GAFA/3C,EAAA7pD,EAAAP,IAAA,MAAAO,EAAA5C,IAAA,UACAsqD,EAAA1nD,EAAA5C,IAAA,KAEA,IAAA0B,EAAA,EAAAC,EAAA2oD,EAAAzoD,OAAyCH,EAAAC,EAAQD,IAGjD,GAFAgE,EAAAlF,EAAAU,WAAAopD,EAAA5oD,MACA+H,EAAAjJ,EAAAU,WAAAopD,EAAA5oD,IACAF,MAAAC,QAAAgI,GACA,IAAA8C,EAAA,EAAAwqB,EAAAttB,EAAA5H,OAA2C0K,EAAAwqB,EAAQxqB,IACnD66F,EAAA1hG,KAAAlF,EAAAU,WAAAuI,EAAA8C,QAEa,CACb,IAAAgE,EAAA/P,EAAAU,WAAAopD,IAAA5oD,IACA,IAAA6K,EAAA7G,EAA6B6G,GAAA9C,EAAW8C,IACxC66F,EAAA76F,GAAAgE,EAKA,GAAAo3C,EAAA+3C,SAAA,CACA,IAAA4H,EAAA1kG,EAAArB,SAAA,mBAGA,GAFA4lG,EAAA,CAAAG,EAAA,MAAA76C,EAAA66C,EAAA,IACAA,EAAA1kG,EAAA5C,IAAA,MAEA,IAAA0B,EAAA,EAAAC,EAAA2lG,EAAAzlG,OAA6CH,EAAAC,EAAQD,IAGrD,GAFAgE,EAAAlF,EAAAU,WAAAomG,EAAA5lG,MACA+H,EAAAjJ,EAAAU,WAAAomG,EAAA5lG,IACAF,MAAAC,QAAAgI,GACA,IAAA8C,EAAA,EAAAwqB,EAAAttB,EAAA5H,OAA6C0K,EAAAwqB,EAAQxqB,IACrD86F,EAAA3hG,KAAA,CAAAlF,EAAAU,WAAAuI,EAAA8C,MAAA/L,EAAAU,WAAAuI,EAAA8C,MAAA/L,EAAAU,WAAAuI,EAAA8C,SAEe,CACf,IAAAw1F,EAAA,CAAAvhG,EAAAU,WAAAomG,IAAA5lG,IAAAlB,EAAAU,WAAAomG,IAAA5lG,IAAAlB,EAAAU,WAAAomG,IAAA5lG,KACA,IAAA6K,EAAA7G,EAA+B6G,GAAA9C,EAAW8C,IAC1C86F,EAAA96F,GAAAw1F,QAMO,CACP,IAAA0E,EAAA9+C,EAAA8+C,UAEA,GADAn8C,EAAA1nD,EAAA5C,IAAA,UACA,CAEA,IADAuM,EAAAk6F,EACA/kG,EAAA,EAAAC,EAAA2oD,EAAAzoD,OAAyCH,EAAAC,EAAQD,IACjD0lG,EAAA76F,KAAA/L,EAAAU,WAAAopD,EAAA5oD,IAEA+qD,EAAA5B,WAAAzP,EAAAp7C,IAAA,wBACS,CACT,IAAAunG,EAAA3kG,EAAA5C,IAAA,YACA,MAAAwF,EAAAxB,QAAAujG,GAAA,CACA,IAAAC,EAAA3nG,KAAA4nG,mBAAAF,EAAA3nG,MACAwnG,EAAAvnG,KAAA6nG,qBAAAF,EAAAl9C,OAAA3C,GACA8E,EAAA+6C,EAAA/6C,eAIA,IAAA60C,GAAA,EACAqG,EAAAl7C,EACA,QAAA0sC,KAAAiO,EAAA,CACA,IAAAtF,EAAAsF,EAAAjO,GACA,GAAA2I,EAGA,GAAA6F,GAIA,GAAAA,IAAA7F,EAAA,CACAR,GAAA,EACA,YALAqG,EAAA7F,EAQAR,IACA35C,EAAA9yB,OAAAu9D,EAAAgT,UAAAwC,YAEAjgD,EAAA8E,eACA9E,EAAA2C,OAAA88C,EACAz/C,EAAAw/C,kBACAx/C,EAAA2/C,SAAAD,GAEAQ,YAAA,SAAAN,GACA,IAAAO,EAAAP,EAAA5tE,MAAA,QACA,OAAAmuE,KAAA,EAAAxV,EAAA5/B,mBAAA,IAAAo1C,EAAAC,OAAA,YAEAN,mBAAA,SAAA7nG,GACA,IAAA6sD,EAAA,EACAnC,EAAA,GACA09C,GAAA,EAEAC,GADA,EAAA3V,EAAA1/B,iBACAhzD,MACAsoG,GAAA,EAAAxV,EAAAyV,cACAF,KAAAC,IAEAD,EADApoG,KAAAgoG,YAAAjoG,GACA,cAEA,aAGA,IAAAwoG,EAAAF,EAAAD,GAOA,OANA,EAAA3iG,EAAAqe,OAAAykF,IACA37C,EAAA27C,EACAJ,GAAA,GAEA19C,EAAA89C,IAEA,CACA37C,eACAu7C,YACA19C,WAGAo9C,qBAAA,SAAAW,EAAA1gD,GAIA,IAHA,IAAA2C,EAAAtrD,OAAAe,OAAA,MACAglG,EAAAp9C,EAAAo9C,YACApjE,EAAAgmB,EAAAu9C,gBACA4B,EAAA,EAA4BA,EAAA,IAAgBA,IAC5CA,KAAA/B,GAAAsD,EAAAtD,EAAA+B,IACAx8C,EAAAw8C,GAAAuB,EAAAtD,EAAA+B,IAGAA,KAAAnlE,GAAA0mE,EAAA1mE,EAAAmlE,MACAx8C,EAAAw8C,GAAAuB,EAAA1mE,EAAAmlE,KAIA,OAAAx8C,GAEA2vC,gBAAA,SAAAr3F,GACA,IAAAwhG,EAAAxhG,EACAsB,EAAAtB,EAAA5C,IAAA,WACA,OAAAwF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,wBAEA,IACAu/F,EADA9D,GAAA,EAEA,aAAAtgG,EAAAtE,KAAA,CACA,IAAA2oG,EAAA3lG,EAAA5C,IAAA,mBACA,IAAAuoG,EACA,UAAAjjG,EAAAyD,YAAA,sCAIA,GADA7E,GADAtB,EAAApB,MAAAC,QAAA8mG,GAAA1oG,KAAAW,KAAAU,WAAAqnG,EAAA,IAAAA,GACAvoG,IAAA,aACA,EAAAwF,EAAAxB,QAAAE,GACA,UAAAoB,EAAAyD,YAAA,wBAEAy7F,GAAA,EAEA,IAAAppD,EAAAx4C,EAAA5C,IAAA,kBACA,GAAAo7C,EAAA,CACA,IAAAqI,EAAA,IAAAkvC,EAAA6V,eACA7mE,EAAAyiE,EAAApiG,OAAA,YACA,MAAAwD,EAAAxB,QAAA29B,GACA8hB,EAAAglD,OAAA9mE,EAAA/hC,WACS,MAAA4F,EAAA1D,OAAA6/B,GACT8hB,EAAAglD,OAAA9mE,EAAAx+B,iBACS,MAAAqC,EAAA3C,QAAA8+B,GAET,IADA,IAAAx/B,EAAAw/B,EAAAz/B,UACAR,EAAA,EAAAC,EAAAQ,EAAAN,OAA2CH,EAAAC,EAAQD,IAAA,CACnD,IAAAu6B,EAAA0F,EAAA3/B,OAAAG,EAAAT,IACA,MAAA8D,EAAAxB,QAAAi4B,GACAwnB,EAAAglD,OAAAxsE,EAAAr8B,WACa,MAAA4F,EAAA1D,OAAAm6B,GACbwnB,EAAAglD,OAAAxsE,EAAA94B,iBACa,GAAA3B,MAAAC,QAAAw6B,GAAA,CAGb,IAFA,IAAAysE,EAAAzsE,EAAAp6B,OACA8mG,EAAA,IAAAnnG,MAAAknG,GACAn8F,EAAA,EAA6BA,EAAAm8F,EAAgBn8F,IAAA,CAC7C,IAAAq8F,EAAA3sE,EAAA1vB,IACA,EAAA/G,EAAAxB,QAAA4kG,GACAD,EAAAp8F,GAAAq8F,EAAAhpG,OACiB,EAAA0F,EAAAqe,OAAAilF,KAAA,EAAApjG,EAAA1D,OAAA8mG,MACjBD,EAAAp8F,GAAAq8F,EAAAzlG,YAGAsgD,EAAAglD,OAAAE,EAAAjmF,SAIA,IAAA2hF,EAAAzhG,EAAA5C,IAAA,cAAAokG,EAAApkG,IAAA,aACA,MAAAwF,EAAAhB,UAAA6/F,GAAA,CACA,IAAAl8F,EAAAk8F,EAAAjhG,KAAAihG,EACAiE,EAAAngG,EAAApB,OAAA,IAAAnB,WAAAuC,EAAApB,cAAA,EAAAoB,EAAAhB,cAAA,IAAAvB,WAAAuC,EAAAxC,MAAAoB,OAAAoB,EAAAzC,MAAAyC,EAAArC,IAAAqC,EAAAzC,OACA+9C,EAAAglD,OAAAH,QACS,EAAA9iG,EAAAxB,QAAAqgG,IACT5gD,EAAAglD,OAAApE,EAAAzkG,MAEA,IAAA0qD,EAAA1nD,EAAA5C,IAAA,WAAAokG,EAAApkG,IAAA,UACAsqD,IACAg+C,EAAA,IAAA1iG,WAAA,IAAAs8B,YAAAooB,GAAAvjD,QACA08C,EAAAglD,OAAAH,IAGA,OACAltD,aACAx4C,OACAwhG,WACAI,YACAtgG,OAAAtE,KACA6jD,SAAAolD,YAAA,KAGAtO,cAAA,SAAAP,GACA,IAQAryC,EARA6oC,EAAA3wF,KAEAukG,EAAApK,EAAAoK,SACAxhG,EAAAo3F,EAAAp3F,KACA4hG,EAAAxK,EAAAwK,UACAppD,EAAA4+C,EAAA5+C,WACAl3C,EAAA81F,EAAA91F,KACA4kG,EAAAtE,EAAA,UAEA,IAAAppD,EAAA,CACA,aAAAl3C,EAIS,CACT,IAAAqjG,EAAA3kG,EAAA5C,IAAA,YACA,OAAAwF,EAAAxB,QAAAujG,GACA,UAAAjiG,EAAAyD,YAAA,8BAEAw+F,IAAA3nG,KAAAsgC,QAAA,aACA,IAAAsnE,EAAA3nG,KAAA4nG,mBAAAF,GACAO,EAAAP,EAAA5tE,MAAA,QACA9E,GAAAh1B,KAAAgoG,YAAAC,GAAA1V,EAAAgT,UAAA2D,MAAA,IAAAvB,EAAAQ,UAAA5V,EAAAgT,UAAAwC,WAAA,OAAAtV,EAAA7/B,mBAAAq1C,GAAA1V,EAAAgT,UAAAC,SAAAjT,EAAAgT,UAAAG,aAUA,OATA59C,EAAA,CACAzjD,OACAtE,KAAA2nG,EACAj9C,OAAAk9C,EAAAl9C,OACAmC,aAAA+6C,EAAA/6C,aACA53B,QACA4xE,UAAA,EACAC,SAAAoC,GAEAjpG,KAAAskG,sBAAAvhG,IAAA+kD,GAAAj4B,KAAA,SAAAi4B,GAEA,OADAA,EAAA2C,OAAAkmC,EAAAkX,qBAAAF,EAAAl9C,OAAA3C,GACA,IAAAyqC,EAAAiI,KAAAkN,EAAA,KAAA5/C,MAvBAvM,EAAA,IAAA51C,EAAAlF,KAAA,OACA8B,IAAA,WAAAoD,EAAA7F,KAAAK,IAAAkE,IACAk3C,EAAAh5C,IAAA,WAAAQ,EAAArB,SAAA,aAyBA,IAAAklG,EAAA7jG,EAAA5C,IAAA,gBACA0mG,EAAA9jG,EAAA5C,IAAA,aAAA8oG,EACAjR,EAAAz8C,EAAAp7C,IAAA,YACAgpG,EAAApmG,EAAA5C,IAAA,YAOA,IANA,EAAAsF,EAAA+P,UAAAwiF,KACAA,EAAAryF,EAAA7F,KAAAK,IAAA63F,KAEA,EAAAvyF,EAAA+P,UAAA2zF,KACAA,EAAAxjG,EAAA7F,KAAAK,IAAAgpG,IAEA,UAAA9kG,EAAA,CACA,IAAA+kG,EAAApR,KAAAj4F,KACAspG,EAAAF,KAAAppG,KACAqpG,IAAAC,KACA,EAAA5jG,EAAAgR,MAAA,sCAAA2yF,EAAA,qDAAAC,EAAA,KACAD,GAAAC,GAAA,IAAAA,EAAA5vE,QAAA2vE,KACApR,EAAAmR,IAKA,GADAnR,KAAAmR,IACA,EAAAxjG,EAAAxB,QAAA6zF,GACA,UAAAvyF,EAAAyD,YAAA,qBAEA,IAoCAogG,EApCAC,EAAAhuD,EAAAp7C,IAAA,oCACA,GAAAopG,GACAA,EAAAxmG,KAAA,CACA,IAAA+wB,EAAAy1E,EAAAxmG,KAAA5C,IAAA,WACA2zB,IACAA,IAAA/zB,MAEA,IAAAypG,EAAAD,EAAAxmG,KAAA5C,IAAA,WACAspG,EAAAF,EAAAxmG,KAAA5C,IAAA,WACAupG,EAAAH,EAAAxmG,KAAA5C,IAAA,WA4BA,GAzBA2nD,EAAA,CACAzjD,OACAtE,KAAAi4F,EAAAj4F,KACA+zB,UACA+zB,KAAA0hD,EACAC,UACAC,UACAC,UACAnR,WAAAgM,EAAAhM,WACAoM,YACAgF,UAAAhF,EACAiF,YAAA,EACAxgD,WAAArmD,EAAArB,SAAA,eAAA+D,EAAAw7F,qBACA2F,aAAA,EACAC,YAAAoC,EACAle,KAAAxvC,EAAA75C,SAAA,YACA6nD,OAAAhO,EAAAp7C,IAAA,UACAqpD,QAAAjO,EAAAp7C,IAAA,WACA0pG,QAAAtuD,EAAAp7C,IAAA,WACA2pG,UAAAvuD,EAAAp7C,IAAA,aACA60B,MAAAumB,EAAAp7C,IAAA,SACA4pG,YAAAxuD,EAAAp7C,IAAA,eACAg4F,aAAA,GAGAwM,EAAA,CACA,IAAAqF,EAAAzF,EAAApkG,IAAA,aACA,EAAAwF,EAAAxB,QAAA6lG,KACAliD,EAAAkiD,cAAAjqG,MAEAupG,EAAAhX,EAAAiU,YAAArmG,OAAA,CACA4hC,SAAAkoE,EACA1W,iBAAAtzF,KAAAszF,iBACAkT,QAAA,OACS32E,KAAA,SAAAs2E,GACTr+C,EAAAq+C,OACAr+C,EAAA+3C,SAAA/3C,EAAAq+C,KAAAtG,gBAGAyJ,EAAA9nG,QAAAC,aAAAyB,GAEA,OAAAomG,EAAAz5E,KAAA,WACA,OAAA8gE,EAAA2T,sBAAAvhG,EAAAwhG,EAAAz8C,KACOj4B,KAAA,SAAAi4B,GAKP,OAJA6oC,EAAA0W,cAAAtkG,EAAAw4C,EAAAuM,GACA,UAAAzjD,IACAyjD,EAAAqwC,aAAA,GAEA,IAAA5F,EAAAiI,KAAAxC,EAAAj4F,KAAAwpG,EAAAzhD,OAIAof,EA1hEA,GA4hEAmxB,EAAA,WACA,SAAAA,EAAAE,EAAAL,EAAAn1F,GACA/C,KAAAu4F,aACAv4F,KAAAk4F,OACAl4F,KAAA+C,OACA/C,KAAAiqG,YAAA,KACAjqG,KAAAkqG,MAAA,EA0DA,OAxDA7R,EAAAz4F,UAAA,CACAwsB,KAAA,SAAAuyC,GACA,IAAA3+D,KAAAkqG,KAAA,CAGA,IAAAC,EAAAnqG,KAAAk4F,KAAAkS,aACAzrC,EAAAvyC,KAAA,aAAApsB,KAAAu4F,WAAA,OAAA4R,IACAnqG,KAAAkqG,MAAA,IAEA9R,cAAA,SAAA3/B,EAAAgO,EAAA4jC,EAAApqC,GACA,IAAAjgE,KAAAk4F,KAAAC,YACA,UAAAl7E,MAAA,yBAEA,GAAAjd,KAAAiqG,YACA,OAAAjqG,KAAAiqG,YAEA,IAAAK,EAAAnrG,OAAAe,OAAAu4D,EAAA52B,SACAyoE,EAAAjmC,cAAA,EA8BA,IA7BA,IAAAkmC,EAAA9xC,EAAA27B,MAAAkW,GACA3P,EAAA36F,KAAAk4F,KACAsS,EAAAhpG,QAAAC,UACAgpG,EAAAzqG,KAAA+C,KAAA5C,IAAA,aACAuqG,EAAA1qG,KAAA+C,KAAA5C,IAAA,cAAAsmE,EACAkkC,EAAAF,EAAApoG,UACAuoG,EAAAzrG,OAAAe,OAAA,MAEA2qG,EAAA,WACA,IAAAzoG,EAAAuoG,EAAA9oG,GACA2oG,IAAA36E,KAAA,WACA,IAAAi7E,EAAAL,EAAAtqG,IAAAiC,GACAiqB,EAAA,IAAAm5C,EAAA3/C,aACA,OAAA0kF,EAAAloC,gBAAA,CACA/5D,OAAAwiG,EACA7qC,OACAwG,UAAAikC,EACAr+E,iBACWwD,KAAA,WACX+6E,EAAAxoG,GAAAiqB,EAAA3G,QACA2kF,EAAAz+E,gBAAAS,EAAAjB,gBACW81C,MAAA,SAAA3C,IACX,EAAA94D,EAAA4O,MAAA,wBAAAjS,EAAA,uBACA,IAAAiqB,EAAA,IAAAm5C,EAAA3/C,aACA+kF,EAAAxoG,GAAAiqB,EAAA3G,aAKA7jB,EAAA,EAAAiF,EAAA6jG,EAAA3oG,OAA8CH,EAAAiF,IAAOjF,EACrDgpG,IAKA,OAHA7qG,KAAAiqG,YAAAO,EAAA36E,KAAA,WACA8qE,EAAAiQ,yBAEA5qG,KAAAiqG,cAGA5R,EAhEA,GAkEAsD,EAAA,WACA,SAAAA,EAAAzG,GACAl1F,KAAAue,MAAA22E,EACAl1F,KAAA+qG,WAAA,GAkBA,OAhBApP,EAAA/7F,UAAA,CACAknB,KAAA,WACA,IAAAkkF,EAAAhrG,KAAAue,MACAve,KAAA+qG,WAAA/sF,KAAAhe,KAAAue,OACAve,KAAAue,MAAAysF,EAAA5W,SAEAptE,QAAA,WACA,IAAA2kD,EAAA3rE,KAAA+qG,WAAAnyE,MACA+yC,IACA3rE,KAAAue,MAAAotD,IAGA1mD,UAAA,SAAA4E,GACA7pB,KAAAue,MAAA6iF,IAAA37F,EAAA8C,KAAA0c,UAAAjlB,KAAAue,MAAA6iF,IAAAv3E,KAGA8xE,EArBA,GAuBA4D,EAAA,WACA,SAAAA,IACAv/F,KAAAohG,IAAA,IAAAtsF,aAAArP,EAAAq+F,iBACA9jG,KAAAg4F,SAAA,KACAh4F,KAAAu8F,SAAA,EACAv8F,KAAAk4F,KAAA,KACAl4F,KAAAopD,WAAA3jD,EAAAw7F,qBACAjhG,KAAAqhG,WAAA57F,EAAAq+F,gBAAA/hG,QACA/B,KAAAshG,eAAA77F,EAAAq+F,gBAAA/hG,QACA/B,KAAAqiG,YAAA,EACAriG,KAAAsiG,YAAA,EACAtiG,KAAAsjG,QAAA,EACAtjG,KAAA+gG,WAAA,EACA/gG,KAAAghG,SAAA,EA6EA,OA3EAzB,EAAA3/F,UAAA,CACAqqB,cAAA,SAAA7R,EAAA7O,EAAA8C,EAAAs4B,EAAAhnB,EAAAs/B,GACA,IAAAjnC,EAAAhW,KAAAqhG,WACArrF,EAAA,GAAAoC,EACApC,EAAA,GAAAzM,EACAyM,EAAA,GAAA3J,EACA2J,EAAA,GAAA2uB,EACA3uB,EAAA,GAAA2H,EACA3H,EAAA,GAAAinC,GAEA4mD,kBAAA,SAAAzrF,EAAA7O,EAAA8C,EAAAs4B,EAAAhnB,EAAAs/B,GACA,IAAAjnC,EAAAhW,KAAAshG,eACAtrF,EAAA,GAAAoC,EACApC,EAAA,GAAAzM,EACAyM,EAAA,GAAA3J,EACA2J,EAAA,GAAA2uB,EACA3uB,EAAA,GAAA2H,EACA3H,EAAA,GAAAinC,GAEAylD,oBAAA,SAAAxnF,EAAAjF,GACA,IAAAD,EAAAhW,KAAAqhG,WACArrF,EAAA,GAAAA,EAAA,GAAAkF,EAAAlF,EAAA,GAAAC,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAkF,EAAAlF,EAAA,GAAAC,EAAAD,EAAA,IAEAytF,wBAAA,SAAAvoF,EAAAjF,GACA,IAAAD,EAAAhW,KAAAshG,eACAtrF,EAAA,GAAAA,EAAA,GAAAkF,EAAAlF,EAAA,GAAAC,EAAAD,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAkF,EAAAlF,EAAA,GAAAC,EAAAD,EAAA,IAEA4tF,0BAAA,SAAAxrF,EAAA7O,EAAA8C,EAAAs4B,EAAAhnB,EAAAs/B,GACA,IAAAi7C,EAAAl4F,KAAAk4F,KACA,IAAAA,EACA,YAEA,IAAAliF,EAAAhW,KAAAshG,eACA,GAAAlpF,IAAApC,EAAA,IAAAzM,IAAAyM,EAAA,IAAA3J,IAAA2J,EAAA,IAAA2uB,IAAA3uB,EAAA,GACA,YAEA,IAAAi1F,EAAAttF,EAAA3H,EAAA,GACAk1F,EAAAjuD,EAAAjnC,EAAA,GACA,GAAAkiF,EAAA2H,UAAA,IAAAoL,IAAA/S,EAAA2H,UAAA,IAAAqL,EACA,YAEA,IAAA1I,EACAC,EACA0I,EAAA/yF,EAAAusB,EAAAp7B,EAAA8C,EAQA,OAPA6rF,EAAA2H,UACA2C,GAAA0I,EAAA7+F,EAAA8+F,EACA1I,EAAAyI,EAAA9yF,EAAA+yF,IAEA3I,EAAAyI,EAAAtmE,EAAAwmE,EACA1I,GAAAwI,EAAA1hG,EAAA4hG,GAEA,CACAz6F,MAAA8xF,EACA7xF,OAAA8xF,EACAnjG,MAAA44F,EAAA2H,SAAA4C,EAAAD,IAGA4I,iBAAA,SAAAhK,GACA,IAAAN,EAAA,CAAA9gG,KAAAu8F,SAAAv8F,KAAA+gG,WAAA,IAAA/gG,KAAAu8F,SAAA,EAAAv8F,KAAAghG,UACA,OAAAv7F,EAAA8C,KAAA0c,UAAAm8E,EAAA37F,EAAA8C,KAAA0c,UAAAjlB,KAAAqhG,WAAAP,KAEA6C,eAAA,WACA3jG,KAAAyjG,wBAAA,GAAAzjG,KAAAsjG,SACAtjG,KAAAqhG,WAAArhG,KAAAshG,eAAAv/F,SAEAqyF,MAAA,WACA,IAAAA,EAAAj1F,OAAAe,OAAAF,MAIA,OAHAo0F,EAAAiN,WAAArhG,KAAAqhG,WAAAt/F,QACAqyF,EAAAkN,eAAAthG,KAAAshG,eAAAv/F,QACAqyF,EAAAhrC,WAAAppD,KAAAopD,WAAArnD,QACAqyF,IAGAmL,EA1FA,GA4FA9D,EAAA,WACA,SAAAA,IACAz7F,KAAAohG,IAAA,IAAAtsF,aAAArP,EAAAq+F,iBACA9jG,KAAAk4F,KAAA,KACAl4F,KAAA44F,kBAAAnzF,EAAAozF,kBAAAwS,KACArrG,KAAA+4F,eAAA9lE,EAAAzjB,WAAAuD,WAAAC,KACAhT,KAAAq9F,iBAAApqE,EAAAzjB,WAAAuD,WAAAC,KAOA,OALAyoF,EAAA77F,UAAA,CACAw0F,MAAA,WACA,OAAAj1F,OAAAe,OAAAF,QAGAy7F,EAbA,GAeAI,EAAA,WACA,IAAAyP,GAAA,EAAA7lG,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA0kF,aACAC,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA6kF,WACAF,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA8kF,YACAH,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA+kF,cACAJ,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAglF,QACAL,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAilF,mBACAN,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAklF,YACAP,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA2yE,UACAgS,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAC,KACA0kF,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAG,QACAwkF,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA5B,UACAumF,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAw3E,OACAmN,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAy3E,OACAkN,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA03E,QACAiN,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA23E,SACAgN,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA43E,SACA+M,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA63E,UACA8M,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA6iE,UACA8hB,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAmlF,OACAR,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAolF,YACAT,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAqlF,KACAV,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAqlF,KACAV,QAAA,EACAC,cAAA,GAEArhG,EAAA,OACAg9C,GAAA3hD,EAAAohB,IAAAslF,OACAX,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAulF,WACAZ,QAAA,EACAC,cAAA,GAEArhG,EAAA,OACAg9C,GAAA3hD,EAAAohB,IAAAwlF,aACAb,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAylF,gBACAd,QAAA,EACAC,cAAA,GAEArhG,EAAA,OACAg9C,GAAA3hD,EAAAohB,IAAA0lF,kBACAf,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA2lF,QACAhB,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAgxC,KACA2zC,QAAA,EACAC,cAAA,GAEArhG,EAAA,OACAg9C,GAAA3hD,EAAAohB,IAAA4lF,OACAjB,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAkD,UACAyhF,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAsD,QACAqhF,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAo2E,eACAuO,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAm2E,eACAwO,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAu8E,UACAoI,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAw8E,WACAmI,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAmD,QACAwhF,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAq2E,qBACAsO,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAs8E,YACAqI,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA08E,SACAiI,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA68E,mBACA8H,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAoD,cACAuhF,QAAA,EACAC,cAAA,GAEArhG,EAAA,OACAg9C,GAAA3hD,EAAAohB,IAAAi2E,SACA0O,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAqD,SACAshF,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA41E,eACA+O,QAAA,EACAC,cAAA,GAEArhG,EAAA,MACAg9C,GAAA3hD,EAAAohB,IAAAg2E,iBACA2O,QAAA,EACAC,cAAA,GAEArhG,EAAA,MACAg9C,GAAA3hD,EAAAohB,IAAAk2E,2BACAyO,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA6lF,aACAlB,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA8lF,sBACAnB,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAu2E,oBACAoO,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAs2E,kBACAqO,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA22E,eACAgO,QAAA,EACAC,cAAA,GAEArhG,EAAA,KACAg9C,GAAA3hD,EAAAohB,IAAAk3E,gBACAyN,QAAA,GACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAy2E,aACAkO,QAAA,EACAC,cAAA,GAEArhG,EAAA,KACAg9C,GAAA3hD,EAAAohB,IAAAi3E,cACA0N,QAAA,GACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA82E,cACA6N,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA62E,YACA8N,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA42E,kBACA+N,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA02E,gBACAiO,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAAg3E,mBACA2N,QAAA,EACAC,cAAA,GAEArhG,EAAA,GACAg9C,GAAA3hD,EAAAohB,IAAA+2E,iBACA4N,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAm3E,YACAwN,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA+lF,iBACApB,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAgmF,eACArB,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA21E,eACAgP,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAu1E,aACAoP,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA83E,UACA6M,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAA+3E,eACA4M,QAAA,EACAC,cAAA,GAEArhG,EAAA,KACAg9C,GAAA3hD,EAAAohB,IAAAg4E,mBACA2M,QAAA,EACAC,cAAA,GAEArhG,EAAA,KACAg9C,GAAA3hD,EAAAohB,IAAAi4E,wBACA0M,QAAA,EACAC,cAAA,GAEArhG,EAAA,KACAg9C,GAAA3hD,EAAAohB,IAAAk4E,iBACAyM,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAm4E,YACAwM,QAAA,EACAC,cAAA,GAEArhG,EAAA,IACAg9C,GAAA3hD,EAAAohB,IAAAo4E,UACAuM,QAAA,EACAC,cAAA,GAEArhG,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,QACAA,EAAA,SACAA,EAAA,YAEA,SAAAyxF,EAAAvzF,EAAA3H,EAAAq2F,GACAh3F,KAAA8sG,MAAAxB,IACAtrG,KAAA0jB,OAAA,IAAAoP,EAAAxW,OAAA,IAAAwW,EAAAtW,MAAAlU,EAAAtI,KAAA8sG,QAAA,EAAAnsG,GACAX,KAAAg3F,eACAh3F,KAAA+sG,iBAAA,GA8EA,OA5EAlR,EAAAj8F,UAAA,CACAq8F,uBACA,OAAAj8F,KAAAg3F,aAAA+T,WAAA/oG,QAEA4tB,KAAA,SAAA4rC,GAEA,IADA,IAAA3xC,EAAA2xC,EAAA3xC,OACA,CACA,IAAAnqB,EAAAM,KAAA0jB,OAAAlG,SACA,MAAA7X,EAAApB,OAAA7E,GAAA,CACA,IAAAY,EAAAZ,EAAAY,IACA0sG,EAAAhtG,KAAA8sG,MAAAxsG,GACA,IAAA0sG,EAAA,EACA,EAAAvnG,EAAA4O,MAAA,oBAAA/T,EAAA,KACA,SAEA,IAAAyD,EAAAipG,EAAA5lD,GACAokD,EAAAwB,EAAAxB,QACAyB,EAAA,OAAApjF,IAAA7nB,OAAA,EACA,GAAAgrG,EAAAvB,aAsBWwB,EAAAzB,IACX,EAAA/lG,EAAAgR,MAAA,WAAA1S,EAAA,iBAAAynG,EAAA,wBAAAyB,EAAA,cAvBA,CACA,GAAAA,IAAAzB,EAAA,CAEA,IADA,IAAAuB,EAAA/sG,KAAA+sG,iBACAE,EAAAzB,GACAuB,EAAA/uF,KAAA6L,EAAA1hB,SACA8kG,IAEA,KAAAA,EAAAzB,GAAA,IAAAuB,EAAA/qG,QACA,OAAA6nB,IACAA,EAAA,IAEAA,EAAAsyC,QAAA4wC,EAAAn0E,OACAq0E,IAGA,GAAAA,EAAAzB,EAAA,EACA,EAAA/lG,EAAA4O,MAAA,oBAAAtQ,EAAA,cAAAynG,EAAA,uBAAAyB,EAAA,UACA,OAAApjF,IACAA,EAAA7nB,OAAA,GAEA,UAQA,OAHAhC,KAAAktG,kBAAAnpG,EAAA8lB,GACA2xC,EAAAz3D,KACAy3D,EAAA3xC,QACA,EAEA,MAAAlkB,EAAArB,OAAA5E,GACA,SAEA,UAAAA,IACA,OAAAmqB,IACAA,EAAA,IAEAA,EAAA7L,KAAAte,GACAmqB,EAAA7nB,OAAA,IACA,UAAAyD,EAAAyD,YAAA,wBAKAgkG,kBAAA,SAAAnpG,EAAA8lB,GACA,SAAA9lB,GACA,KAAA0B,EAAAohB,IAAAC,KACA9mB,KAAAg3F,aAAAlwE,OACA,MACA,KAAArhB,EAAAohB,IAAAG,QACAhnB,KAAAg3F,aAAAhwE,UACA,MACA,KAAAvhB,EAAAohB,IAAA5B,UACAjlB,KAAAg3F,aAAA/xE,UAAA4E,MAKAgyE,EA5cA,GA8cAx8F,EAAA6nE,qDCztFA/nE,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAknG,YAAAlnG,EAAAgnG,aAAAhnG,EAAA8tG,UAAAjqG,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1BotB,EAAcptB,EAAQ,KAEtB+W,EAAc/W,EAAQ,KAEtB0nG,EAAA,gyEACAD,EAAA,WACA,SAAAA,EAAA/G,GACApmG,KAAAqtG,gBAAA,cACArtG,KAAAstG,mBAAA,EACAttG,KAAAY,KAAA,GACAZ,KAAAD,KAAA,GACAC,KAAA6/F,UAAA,EACA7/F,KAAAwmG,QAAA,KACAxmG,KAAAomG,cAyGA,OAvGA+G,EAAAvtG,UAAA,CACA2tG,kBAAA,SAAAzmG,EAAA02C,EAAAD,GACAv9C,KAAAqtG,gBAAAvmG,EAAA,GAAAkX,KAAAw/B,EAAAD,GACAv9C,KAAAstG,sBAEAE,YAAA,SAAAhwD,EAAAD,EAAAkwD,GACA,KAAAjwD,GAAAD,GACAv9C,KAAAY,KAAA48C,KAAAiwD,KAGAC,WAAA,SAAAlwD,EAAAD,EAAAkwD,GAEA,IADA,IAAAE,EAAAF,EAAAzrG,OAAA,EACAw7C,GAAAD,GACAv9C,KAAAY,KAAA48C,KAAAiwD,EACAA,IAAAh8C,OAAA,EAAAk8C,GAAAxrF,OAAAC,aAAAqrF,EAAAh4F,WAAAk4F,GAAA,IAGAC,kBAAA,SAAApwD,EAAAD,EAAAx/B,GAGA,IAFA,IAAAlc,EAAA,EACAC,EAAAic,EAAA/b,OACAw7C,GAAAD,GAAA17C,EAAAC,GACA9B,KAAAY,KAAA48C,GAAAz/B,EAAAlc,OACA27C,GAGAqwD,OAAA,SAAAl+F,EAAAm+F,GACA9tG,KAAAY,KAAA+O,GAAAm+F,GAEAr6F,OAAA,SAAA7J,GACA,OAAA5J,KAAAY,KAAAgJ,IAEAmkG,SAAA,SAAAnkG,GACA,YAAA1G,IAAAlD,KAAAY,KAAAgJ,IAEAnH,QAAA,SAAAC,GACA,IAAA4kB,EAAAtnB,KAAAY,KACAoB,EAAAslB,EAAAtlB,OACA,GAAAA,GAAA,MACA,QAAAH,EAAA,EAAuBA,EAAAG,EAAYH,SACnCqB,IAAAokB,EAAAzlB,IACAa,EAAAb,EAAAylB,EAAAzlB,SAIA,QAAA6wB,KAAApL,EACA5kB,EAAAgwB,EAAApL,EAAAoL,KAIAs7E,WAAA,SAAA1uG,GACA,IAAAgoB,EAAAtnB,KAAAY,KACA,GAAA0mB,EAAAtlB,QAAA,MACA,OAAAslB,EAAAmS,QAAAn6B,GAEA,QAAA2nG,KAAA3/E,EACA,GAAAA,EAAA2/E,KAAA3nG,EACA,SAAA2nG,EAGA,UAEAD,OAAA,WACA,OAAAhnG,KAAAY,MAEAqtG,aAAA,SAAA1qG,EAAA4kB,EAAAguB,GAIA,IAHA,IAAA9pC,EAAA,EACAghG,EAAArtG,KAAAqtG,gBACAa,EAAAluG,KAAAqtG,gBAAArrG,OACA8E,EAAA,EAAqBA,EAAAonG,EAAwBpnG,IAAA,CAC7CuF,MAAA,EAAA9I,EAAAkS,WAAA0S,EAAArhB,MAAA,EAEA,IADA,IAAAqnG,EAAAd,EAAAvmG,GACAuE,EAAA,EAAAsB,EAAAwhG,EAAAnsG,OAAmDqJ,EAAAsB,GAAQ,CAC3D,IAAA6wC,EAAA2wD,EAAA9iG,KACAkyC,EAAA4wD,EAAA9iG,KACA,GAAAgB,GAAAmxC,GAAAnxC,GAAAkxC,EAGA,OAFApH,EAAA2vD,SAAAz5F,OACA8pC,EAAAn0C,OAAA8E,EAAA,IAKAqvC,EAAA2vD,SAAA,EACA3vD,EAAAn0C,OAAA,GAGAA,aACA,OAAAhC,KAAAY,KAAAoB,QAEAosG,qBACA,kBAAApuG,KAAAD,MAAA,eAAAC,KAAAD,KACA,SAEA,WAAAC,KAAAY,KAAAoB,OACA,SAEA,QAAAH,EAAA,EAAqBA,EAAA,MAAaA,IAClC,GAAA7B,KAAAY,KAAAiB,OACA,SAGA,WAGAsrG,EAjHA,GAmHA9G,EAAA,WACA,SAAAA,EAAAxG,EAAA/4F,GACAqmG,EAAAlpG,KAAAjE,MACAA,KAAA6/F,WACA7/F,KAAAutG,kBAAAzmG,EAAA,SA+CA,OA7CArB,EAAA8C,KAAAw3B,QAAAsmE,EAAA8G,EAAA,IACA9G,EAAAzmG,UAAA,CACA2tG,kBAAAJ,EAAAvtG,UAAA2tG,kBACAC,YAAA,SAAAhwD,EAAAD,EAAAkwD,IACA,EAAAhoG,EAAAgK,aAAA,gCAEAi+F,WAAA,SAAAlwD,EAAAD,EAAAkwD,IACA,EAAAhoG,EAAAgK,aAAA,+BAEAm+F,kBAAA,SAAApwD,EAAAD,EAAAx/B,IACA,EAAAtY,EAAAgK,aAAA,sCAEAo+F,OAAA,SAAAl+F,EAAAm+F,IACA,EAAAroG,EAAAgK,aAAA,8BAEAgE,OAAA,SAAA7J,GACA,OAAAsU,OAAAC,UAAAvU,OAAA,MAAAA,OAAA1G,GAEA6qG,SAAA,SAAAnkG,GACA,OAAAsU,OAAAC,UAAAvU,OAAA,OAEAnH,QAAA,SAAAC,GACA,QAAAb,EAAA,EAAqBA,GAAA,MAAaA,IAClCa,EAAAb,MAGAmsG,WAAA,SAAA1uG,GACA,OAAA4e,OAAAC,UAAA7e,OAAA,MAAAA,GAAA,GAEA0nG,OAAA,WAEA,IADA,IAAA1/E,EAAA,IAAA3lB,MAAA,OACAE,EAAA,EAAqBA,GAAA,MAAaA,IAClCylB,EAAAzlB,KAEA,OAAAylB,GAGA2mF,aAAAd,EAAAvtG,UAAAquG,aACAjsG,aACA,cAEAosG,sBACA,EAAA3oG,EAAAgK,aAAA,uCAGA42F,EAnDA,GAqDAgI,EAAA,WACA,SAAAC,EAAAl2F,EAAAvQ,GAEA,IADA,IAAAf,EAAA,EACAjF,EAAA,EAAmBA,GAAAgG,EAAWhG,IAC9BiF,KAAA,EAAAsR,EAAAvW,GAEA,OAAAiF,IAAA,EAEA,SAAAynG,EAAAn2F,EAAAvQ,GACA,WAAAA,EACAsa,OAAAC,aAAAhK,EAAA,GAAAA,EAAA,IAEA,IAAAvQ,EACAsa,OAAAC,aAAAhK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA+J,OAAAC,aAAA25C,MAAA,KAAA3jD,EAAA3R,SAAA,EAAAoB,EAAA,IAEA,SAAA2mG,EAAAp2F,EAAA7O,EAAA1B,GAEA,IADA,IAAAwE,EAAA,EACAxK,EAAAgG,EAAsBhG,GAAA,EAAQA,IAC9BwK,GAAA+L,EAAAvW,GAAA0H,EAAA1H,GACAuW,EAAAvW,GAAA,IAAAwK,EACAA,IAAA,EAGA,SAAAoiG,EAAAr2F,EAAAvQ,GAEA,IADA,IAAAwE,EAAA,EACAxK,EAAAgG,EAAsBhG,GAAA,GAAAwK,EAAA,EAAiBxK,IACvCwK,GAAA+L,EAAAvW,GACAuW,EAAAvW,GAAA,IAAAwK,EACAA,IAAA,EAGA,IAAAqiG,EAAA,GACAC,EAAA,GACA,SAAAC,EAAAtpF,GACAtlB,KAAAkH,OAAAoe,EACAtlB,KAAAgG,IAAA,EACAhG,KAAAiG,IAAAqf,EAAAtjB,OACAhC,KAAA+U,OAAA,IAAAhP,WAAA4oG,GA2NA,SAAAN,KAEA,OA3NAO,EAAAhvG,UAAA,CACAivG,SAAA,WACA,OAAA7uG,KAAAgG,KAAAhG,KAAAiG,KACA,EAEAjG,KAAAkH,OAAAlH,KAAAgG,QAEA8oG,WAAA,WACA,IACA/1E,EADAjyB,EAAA,EAEA,GACA,IAAAyC,EAAAvJ,KAAA6uG,WACA,GAAAtlG,EAAA,EACA,UAAA9D,EAAAyD,YAAA,2BAEA6vB,IAAA,IAAAxvB,GACAzC,KAAA,MAAAyC,SACOwvB,GACP,OAAAjyB,GAEAioG,WAAA,WACA,IAAAjoG,EAAA9G,KAAA8uG,aACA,SAAAhoG,QAAA,GAAAA,IAAA,GAEAkoG,QAAA,SAAA5rG,EAAAyE,GACAzE,EAAAb,IAAAvC,KAAAkH,OAAAT,SAAAzG,KAAAgG,IAAAhG,KAAAgG,IAAA6B,EAAA,IACA7H,KAAAgG,KAAA6B,EAAA,GAEAonG,cAAA,SAAA7rG,EAAAyE,GACA,IAAAkxB,EACA6uB,EAAA5nD,KAAA+U,OACAm6F,EAAA,EACA,GACA,IAAA3lG,EAAAvJ,KAAA6uG,WACA,GAAAtlG,EAAA,EACA,UAAA9D,EAAAyD,YAAA,2BAEA6vB,IAAA,IAAAxvB,GACAq+C,EAAAsnD,KAAA,IAAA3lG,SACOwvB,GAIP,IAHA,IAAAl3B,EAAAgG,EACAX,EAAA,EACA2nC,EAAA,EACAhtC,GAAA,IACA,KAAAgtC,EAAA,GAAA+Y,EAAA5lD,OAAA,GACAkF,EAAA0gD,IAAAsnD,IAAArgE,EAAA3nC,EACA2nC,GAAA,EAEAzrC,EAAAvB,GAAA,IAAAqF,EACArF,IACAqF,IAAA,EACA2nC,GAAA,IAGAsgE,cAAA,SAAA/rG,EAAAyE,GACA7H,KAAAivG,cAAA7rG,EAAAyE,GAGA,IAFA,IAAAqa,EAAA,EAAA9e,EAAAyE,GAAA,MACAwE,EAAA,EACAxK,EAAA,EAAqBA,GAAAgG,EAAWhG,IAChCwK,GAAA,EAAAA,IAAA,EAAAjJ,EAAAvB,GACAuB,EAAAvB,GAAAwK,GAAA,EAAA6V,GAGAktF,WAAA,WAGA,IAFA,IAAAnlG,EAAAjK,KAAA8uG,aACAn4E,EAAA,GACA90B,EAAA,EAAqBA,EAAAoI,EAASpI,IAC9B80B,GAAAxU,OAAAC,aAAApiB,KAAA8uG,cAEA,OAAAn4E,IAqJA03E,EAAAzuG,UAAA,CAAgCyvG,QAlJhC,SAAA/pF,EAAA6gF,EAAAzsD,GACA,WAAAl4C,QAAA,SAAAC,EAAAkuB,GACA,IAAArnB,EAAA,IAAAsmG,EAAAtpF,GACA2iC,EAAA3/C,EAAAumG,WACA1I,EAAAtG,YAAA,EAAA53C,GASA,IARA,IAMAr+C,EACAL,EAPAi9F,EAAA,KACA3gG,EAAA,IAAAE,WAAA2oG,GACAzoG,EAAA,IAAAF,WAAA2oG,GACA/8C,EAAA,IAAA5rD,WAAA2oG,GACAzH,EAAA,IAAAlhG,WAAA2oG,GACAnyD,EAAA,IAAAx2C,WAAA2oG,IAGAnlG,EAAAjB,EAAAumG,aAAA,IACA,IAAAxqG,EAAAkF,GAAA,EACA,OAAAlF,EAAA,CAWA,IAAAirG,KAAA,GAAA/lG,GACAgmG,EAAA,GAAAhmG,EACA,GAAAgmG,EAAA,EAAAb,EACA,UAAAzxF,MAAA,wCAEA,IAEApb,EADA2tG,EAAAlnG,EAAAwmG,aAEA,OAAAzqG,GACA,OAKA,IAJAiE,EAAA0mG,QAAAnpG,EAAA0pG,GACAjnG,EAAA2mG,cAAAhpG,EAAAspG,GACAf,EAAAvoG,EAAAJ,EAAA0pG,GACApJ,EAAAoH,kBAAAgC,EAAA,EAAAjB,EAAAzoG,EAAA0pG,GAAAjB,EAAAroG,EAAAspG,IACA1tG,EAAA,EAAuBA,EAAA2tG,EAAmB3tG,IAC1C4sG,EAAAxoG,EAAAspG,GACAjnG,EAAA2mG,cAAAppG,EAAA0pG,GACAf,EAAA3oG,EAAAI,EAAAspG,GACAjnG,EAAA2mG,cAAAhpG,EAAAspG,GACAf,EAAAvoG,EAAAJ,EAAA0pG,GACApJ,EAAAoH,kBAAAgC,EAAA,EAAAjB,EAAAzoG,EAAA0pG,GAAAjB,EAAAroG,EAAAspG,IAEA,MACA,OAKA,IAJAjnG,EAAA0mG,QAAAnpG,EAAA0pG,GACAjnG,EAAA2mG,cAAAhpG,EAAAspG,GACAf,EAAAvoG,EAAAJ,EAAA0pG,GACAjnG,EAAAwmG,aACAjtG,EAAA,EAAuBA,EAAA2tG,EAAmB3tG,IAC1C4sG,EAAAxoG,EAAAspG,GACAjnG,EAAA2mG,cAAAppG,EAAA0pG,GACAf,EAAA3oG,EAAAI,EAAAspG,GACAjnG,EAAA2mG,cAAAhpG,EAAAspG,GACAf,EAAAvoG,EAAAJ,EAAA0pG,GACAjnG,EAAAwmG,aAEA,MACA,OAIA,IAHAxmG,EAAA0mG,QAAAr9C,EAAA49C,GACA3lG,EAAAtB,EAAAwmG,aACA3I,EAAA0H,OAAAS,EAAA38C,EAAA49C,GAAA3lG,GACA/H,EAAA,EAAuBA,EAAA2tG,EAAmB3tG,IAC1C4sG,EAAA98C,EAAA49C,GACAD,IACAhnG,EAAA2mG,cAAA1yD,EAAAgzD,GACAf,EAAA78C,EAAApV,EAAAgzD,IAEA3lG,EAAAtB,EAAAymG,cAAAnlG,EAAA,GACAu8F,EAAA0H,OAAAS,EAAA38C,EAAA49C,GAAA3lG,GAEA,MACA,OAMA,IALAtB,EAAA0mG,QAAAnpG,EAAA0pG,GACAjnG,EAAA2mG,cAAAhpG,EAAAspG,GACAf,EAAAvoG,EAAAJ,EAAA0pG,GACA3lG,EAAAtB,EAAAwmG,aACA3I,EAAAqH,YAAAc,EAAAzoG,EAAA0pG,GAAAjB,EAAAroG,EAAAspG,GAAA3lG,GACA/H,EAAA,EAAuBA,EAAA2tG,EAAmB3tG,IAC1C4sG,EAAAxoG,EAAAspG,GACAD,EAIAzpG,EAAAtD,IAAA0D,IAHAqC,EAAA2mG,cAAAppG,EAAA0pG,GACAf,EAAA3oG,EAAAI,EAAAspG,IAIAjnG,EAAA2mG,cAAAhpG,EAAAspG,GACAf,EAAAvoG,EAAAJ,EAAA0pG,GACA3lG,EAAAtB,EAAAwmG,aACA3I,EAAAqH,YAAAc,EAAAzoG,EAAA0pG,GAAAjB,EAAAroG,EAAAspG,GAAA3lG,GAEA,MACA,OAIA,IAHAtB,EAAA0mG,QAAAr9C,EAnEA,GAoEArpD,EAAA0mG,QAAA/H,EAAAsI,GACApJ,EAAA0H,OAAAS,EAAA38C,EArEA,GAqEA48C,EAAAtH,EAAAsI,IACA1tG,EAAA,EAAuBA,EAAA2tG,EAAmB3tG,IAC1C4sG,EAAA98C,EAvEA,GAwEA29C,IACAhnG,EAAA2mG,cAAA1yD,EAzEA,GA0EAiyD,EAAA78C,EAAApV,EA1EA,IA4EAkyD,EAAAxH,EAAAsI,GACAjnG,EAAA6mG,cAAA5yD,EAAAgzD,GACAf,EAAAvH,EAAA1qD,EAAAgzD,GACApJ,EAAA0H,OAAAS,EAAA38C,EA/EA,GA+EA48C,EAAAtH,EAAAsI,IAEA,MACA,OAMA,IALAjnG,EAAA0mG,QAAAnpG,EAnFA,GAoFAyC,EAAA2mG,cAAAhpG,EApFA,GAqFAuoG,EAAAvoG,EAAAJ,EArFA,GAsFAyC,EAAA0mG,QAAA/H,EAAAsI,GACApJ,EAAAuH,WAAAY,EAAAzoG,EAvFA,GAuFAyoG,EAAAroG,EAvFA,GAuFAsoG,EAAAtH,EAAAsI,IACA1tG,EAAA,EAAuBA,EAAA2tG,EAAmB3tG,IAC1C4sG,EAAAxoG,EAzFA,GA0FAqpG,EAIAzpG,EAAAtD,IAAA0D,IAHAqC,EAAA2mG,cAAAppG,EA3FA,GA4FA2oG,EAAA3oG,EAAAI,EA5FA,IAgGAqC,EAAA2mG,cAAAhpG,EAhGA,GAiGAuoG,EAAAvoG,EAAAJ,EAjGA,GAkGAyC,EAAA0mG,QAAA/H,EAAAsI,GACApJ,EAAAuH,WAAAY,EAAAzoG,EAnGA,GAmGAyoG,EAAAroG,EAnGA,GAmGAsoG,EAAAtH,EAAAsI,IAEA,MACA,QAEA,YADA5/E,EAAA,IAAA1S,MAAA,oCAAA5Y,UAtHA,UAAAkF,GACA,OACAjB,EAAA8mG,aACA,MACA,OACA5I,EAAAl+F,EAAA8mG,cAsHA3tG,EADA+kG,EACA9sD,EAAA8sD,GAGAL,OAKAkI,EApQA,GAsQA9H,EAAA,WACA,SAAAkJ,EAAAlsG,GAEA,IADA,IAAA6U,EAAA,EACAvW,EAAA,EAAmBA,EAAA0B,EAAAvB,OAAgBH,IACnCuW,KAAA,EAAA7U,EAAAkS,WAAA5T,GAEA,OAAAuW,IAAA,EAEA,SAAAs3F,EAAAhwG,GACA,OAAA+F,EAAA+P,UAAA9V,GACA,UAAA+F,EAAAyD,YAAA,oCAGA,SAAAymG,EAAAjwG,GACA,IAAAwe,OAAAC,UAAAze,GACA,UAAA+F,EAAAyD,YAAA,iCAGA,SAAA0mG,EAAAzJ,EAAAjpF,GACA,QACA,IAAAxd,EAAAwd,EAAAM,SACA,MAAA7X,EAAArB,OAAA5E,GACA,MAEA,MAAAiG,EAAApB,OAAA7E,EAAA,aACA,OAEAgwG,EAAAhwG,GACA,IAAAiQ,EAAA8/F,EAAA/vG,GAEAgwG,EADAhwG,EAAAwd,EAAAM,UAEA,IAAAswF,EAAApuG,EACAymG,EAAA0H,OAAAl+F,EAAAm+F,IAGA,SAAA+B,EAAA1J,EAAAjpF,GACA,QACA,IAAAxd,EAAAwd,EAAAM,SACA,MAAA7X,EAAArB,OAAA5E,GACA,MAEA,MAAAiG,EAAApB,OAAA7E,EAAA,cACA,OAEAgwG,EAAAhwG,GACA,IAAA89C,EAAAiyD,EAAA/vG,GAEAgwG,EADAhwG,EAAAwd,EAAAM,UAEA,IAAA+/B,EAAAkyD,EAAA/vG,GAEA,GADAA,EAAAwd,EAAAM,SACAU,OAAAC,UAAAze,KAAA,EAAA+F,EAAA+P,UAAA9V,GAAA,CACA,IAAA+tG,EAAAvvF,OAAAC,UAAAze,GAAAyiB,OAAAC,aAAA1iB,KACAymG,EAAAuH,WAAAlwD,EAAAD,EAAAkwD,OACO,QAAA9nG,EAAApB,OAAA7E,EAAA,KASP,MARAA,EAAAwd,EAAAM,SAEA,IADA,IAAAO,EAAA,KACA,EAAApY,EAAApB,OAAA7E,EAAA,UAAAiG,EAAArB,OAAA5E,IACAqe,EAAAC,KAAAte,GACAA,EAAAwd,EAAAM,SAEA2oF,EAAAyH,kBAAApwD,EAAAD,EAAAx/B,IAKA,UAAAtY,EAAAyD,YAAA,qBAEA,SAAA4mG,EAAA3J,EAAAjpF,GACA,QACA,IAAAxd,EAAAwd,EAAAM,SACA,MAAA7X,EAAArB,OAAA5E,GACA,MAEA,MAAAiG,EAAApB,OAAA7E,EAAA,cACA,OAEAgwG,EAAAhwG,GACA,IAAAiQ,EAAA8/F,EAAA/vG,GAEAiwG,EADAjwG,EAAAwd,EAAAM,UAEA,IAAAswF,EAAApuG,EACAymG,EAAA0H,OAAAl+F,EAAAm+F,IAGA,SAAAiC,EAAA5J,EAAAjpF,GACA,QACA,IAAAxd,EAAAwd,EAAAM,SACA,MAAA7X,EAAArB,OAAA5E,GACA,MAEA,MAAAiG,EAAApB,OAAA7E,EAAA,eACA,OAEAgwG,EAAAhwG,GACA,IAAA89C,EAAAiyD,EAAA/vG,GAEAgwG,EADAhwG,EAAAwd,EAAAM,UAEA,IAAA+/B,EAAAkyD,EAAA/vG,GAEAiwG,EADAjwG,EAAAwd,EAAAM,UAEA,IAAAiwF,EAAA/tG,EACAymG,EAAAqH,YAAAhwD,EAAAD,EAAAkwD,IAGA,SAAAuC,EAAA7J,EAAAjpF,GACA,QACA,IAAAxd,EAAAwd,EAAAM,SACA,MAAA7X,EAAArB,OAAA5E,GACA,MAEA,MAAAiG,EAAApB,OAAA7E,EAAA,qBACA,OAEA,OAAA+F,EAAA+P,UAAA9V,GACA,MAEA,IAAA89C,EAAAiyD,EAAA/vG,GAEA,GADAA,EAAAwd,EAAAM,WACA,EAAA/X,EAAA+P,UAAA9V,GACA,MAEA,IAAA69C,EAAAkyD,EAAA/vG,GACAymG,EAAAoH,kBAAA7tG,EAAAsC,OAAAw7C,EAAAD,GAEA,UAAA93C,EAAAyD,YAAA,4BAEA,SAAA+mG,EAAA9J,EAAAjpF,GACA,IAAAxd,EAAAwd,EAAAM,SACAU,OAAAC,UAAAze,KACAymG,EAAAtG,WAAAngG,GAGA,SAAAwwG,EAAA/J,EAAAjpF,GACA,IAAAxd,EAAAwd,EAAAM,UACA,EAAA7X,EAAAxB,QAAAzE,KAAA,EAAA+F,EAAA+P,UAAA9V,EAAAK,QACAomG,EAAApmG,KAAAL,EAAAK,MAGA,SAAAowG,EAAAhK,EAAAjpF,EAAAo2E,EAAAkT,GACA,IAAA4J,EACAC,EACAC,EAAA,OACA,IACA,IAAA5wG,EAAAwd,EAAAM,SACA,MAAA7X,EAAArB,OAAA5E,GACA,MACS,MAAAiG,EAAAxB,QAAAzE,GACT,UAAAA,EAAAK,KACAkwG,EAAA9J,EAAAjpF,GACW,aAAAxd,EAAAK,MACXmwG,EAAA/J,EAAAjpF,GAEAkzF,EAAA1wG,OACS,MAAAiG,EAAApB,OAAA7E,GACT,OAAAA,EAAAY,KACA,cACA,MAAAgwG,EACA,eACA,EAAA3qG,EAAAxB,QAAAisG,KACAC,EAAAD,EAAArwG,MAEA,MACA,0BACAiwG,EAAA7J,EAAAjpF,GACA,MACA,kBACA0yF,EAAAzJ,EAAAjpF,GACA,MACA,mBACA4yF,EAAA3J,EAAAjpF,GACA,MACA,mBACA2yF,EAAA1J,EAAAjpF,GACA,MACA,oBACA6yF,EAAA5J,EAAAjpF,IAIO,MAAAsE,GACP,GAAAA,aAAA/b,EAAAmY,qBACA,MAAA4D,GAEA,EAAA/b,EAAA4O,MAAA,sBAAAmN,GACA,SAMA,OAHAglF,GAAA6J,IACA7J,EAAA6J,GAEA7J,EACA+J,EAAApK,EAAA7S,EAAAkT,GAEAhlG,QAAAC,QAAA0kG,GAEA,SAAAoK,EAAApK,EAAA7S,EAAAkT,GACA,OAAAgK,EAAAhK,EAAAlT,GAAAzjE,KAAA,SAAA4gF,GAEA,GADAtK,EAAAK,QAAAiK,EACA,IAAAtK,EAAAmH,mBAAA,CAEA,IADA,IAAAoD,EAAAvK,EAAAK,QAAA6G,gBACAxrG,EAAA,EAAuBA,EAAA6uG,EAAA1uG,OAA+BH,IACtDskG,EAAAkH,gBAAAxrG,GAAA6uG,EAAA7uG,GAAAE,QAEAokG,EAAAmH,mBAAAnH,EAAAK,QAAA8G,mBAOA,OALAnH,EAAAK,QAAA/jG,QAAA,SAAAL,EAAA9C,GACA6mG,EAAA4H,SAAA3rG,IACA+jG,EAAA0H,OAAAzrG,EAAA+jG,EAAAK,QAAA/yF,OAAArR,MAGA+jG,IAGA,SAAAqK,EAAAzwG,EAAAuzF,GACA,qBAAAvzF,EACAyB,QAAAC,QAAA,IAAA4kG,GAAA,MACK,eAAAtmG,EACLyB,QAAAC,QAAA,IAAA4kG,GAAA,MAEA+G,EAAAl8E,SAAAnxB,GAGAuzF,EAGAA,EAAAvzF,GAAA8vB,KAAA,SAAAvK,GACA,IAAAqrF,EAAArrF,EAAAqrF,SACAnd,EAAAluE,EAAAkuE,gBACA2S,EAAA,IAAAgH,GAAA,GACA,GAAA3Z,IAAA/tF,EAAAguF,oBAAAmd,OACA,WAAAvC,GAAAgB,QAAAsB,EAAAxK,EAAA,SAAAK,GACA,OAAA+J,EAAApK,EAAA7S,EAAAkT,KAGA,GAAAhT,IAAA/tF,EAAAguF,oBAAAC,KAAA,CACA,IAAAx2E,EAAA,IAAA4V,EAAAtW,MAAA,IAAAC,EAAAzX,OAAA2rG,IACA,OAAAR,EAAAhK,EAAAjpF,EAAAo2E,EAAA,MAEA,OAAA9xF,QAAAmuB,OAAA,IAAA1S,MAAA,sEAfAzb,QAAAmuB,OAAA,IAAA1S,MAAA,+CAHAzb,QAAAmuB,OAAA,IAAA1S,MAAA,sBAAAld,IAqBA,OACAG,OAAA,SAAAsL,GACA,IAAAs2B,EAAAt2B,EAAAs2B,SACAwxD,EAAA9nF,EAAA8nF,iBACAkT,EAAAh7F,EAAAg7F,QACA,SAAA7gG,EAAAxB,QAAA29B,GACA0uE,EAAA1uE,EAAA/hC,KAAAuzF,IACO,EAAA3tF,EAAAhB,UAAAm9B,GAGPquE,EAFA,IAAAhD,EACA,IAAAr6E,EAAAtW,MAAAslB,GACAwxD,EAAAkT,GAAA32E,KAAA,SAAAghF,GACA,OAAAA,EAAAzC,eACAoC,EAAAK,EAAA9wG,KAAAuzF,GAEAud,IAGArvG,QAAAmuB,OAAA,IAAA1S,MAAA,yBAlQA,GAsQA5d,EAAA8tG,OACA9tG,EAAAgnG,eACAhnG,EAAAknG,gDCpsBApnG,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAy7F,YAAAz7F,EAAAyxG,sBAAAzxG,EAAAsnG,qBAAAtnG,EAAA2mG,aAAA3mG,EAAAkmG,UAAAlmG,EAAAm7F,KAAAn7F,EAAAi5F,UAAAj5F,EAAA0xG,uBAAA1xG,EAAA2xG,yBAAA3xG,EAAA4xG,2BAAA/tG,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBwrG,EAAkBxrG,EAAQ,KAE1BktF,EAAiBltF,EAAQ,KAEzBwhD,EAAiBxhD,EAAQ,KAEzB+sF,EAAsB/sF,EAAQ,KAE9B8sF,EAAe9sF,EAAQ,KAEvByrG,EAAqBzrG,EAAQ,KAE7B+W,EAAc/W,EAAQ,KAEtB0rG,EAAoB1rG,EAAQ,KAE5BsrG,EAAA,MACAD,EAAA,MACAM,GAAA,EACAC,EAAA,IACAL,GAAA,EACA1L,EAAA,CACAwC,WAAA,EACAmB,MAAA,EACA1D,SAAA,EACA+L,OAAA,EACA7L,YAAA,GACA8L,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,EAAA,g0EACA,SAAAC,EAAA/pD,GACA,GAAAA,EAAAsB,YAGAtB,EAAAsB,WAAA,KAAA3jD,EAAAw7F,qBAAA,IAGA,IAAAjsF,EAAA,KAAA8yC,EAAAsB,WAAA,GACAm+C,EAAAz/C,EAAA2C,OACA,QAAA6uC,KAAAiO,EACAA,EAAAjO,IAAAtkF,EAEA8yC,EAAA8E,cAAA53C,GA0BA,SAAA8lF,EAAAz2F,EAAAyvB,GACA,OAAAzvB,GACA,YACA,iBAAAyvB,EAAAruB,EAAAqsG,SAAAC,OAAAtsG,EAAAqsG,SAAAE,MACA,mBACA,wBAAAl+E,EAAAruB,EAAAqsG,SAAAG,cAAAxsG,EAAAqsG,SAAAI,aACA,eACA,OAAAzsG,EAAAqsG,SAAAK,SACA,eACA,OAAA1sG,EAAAqsG,SAAAM,SACA,mBACA,OAAA3sG,EAAAqsG,SAAAO,aACA,cACA,OAAA5sG,EAAAqsG,SAAAQ,QACA,YACA,OAAA7sG,EAAAqsG,SAAAS,MACA,QACA,OAAA9sG,EAAAqsG,SAAAU,SAGA,SAAAC,EAAA1yG,EAAA0zD,GACA,QAAAvwD,IAAAuwD,EAAA1zD,GACA,OAAAA,EAEA,IAAA2zD,GAAA,EAAA8+B,EAAAh/B,oBAAAzzD,EAAA0zD,GACA,QAAAC,EACA,QAAAtxD,KAAAqxD,EACA,GAAAA,EAAArxD,KAAAsxD,EACA,OAAAtxD,EAKA,OADA,EAAAqD,EAAAgR,MAAA,gDAAA1W,GACAA,EAEA,IAAA2yG,EAAA,WACA,SAAAA,EAAAzZ,EAAAvlC,EAAA6lC,EAAA7oF,EAAAwxF,EAAAyQ,EAAAllG,EAAAmlG,GACA5yG,KAAAi5F,WACAj5F,KAAA0zD,UACA1zD,KAAAu5F,SACAv5F,KAAA0Q,QACA1Q,KAAAkiG,UACAliG,KAAA2yG,iBACA3yG,KAAAyN,UACAzN,KAAA4yG,WAKA,OAHAF,EAAA9yG,UAAAizG,gBAAA,SAAA5Z,EAAAvlC,EAAA6lC,EAAA7oF,EAAAwxF,EAAAyQ,EAAAllG,EAAAmlG,GACA,OAAA5yG,KAAAi5F,cAAAj5F,KAAA0zD,aAAA1zD,KAAAu5F,YAAAv5F,KAAA0Q,WAAA1Q,KAAAkiG,aAAAliG,KAAA2yG,oBAAA3yG,KAAAyN,aAAAzN,KAAA4yG,cAEAF,EAdA,GAgBA1M,EAAA,WACA,SAAAA,IACA,IAAAe,EAAA/yF,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,GAAAA,UAAA,MAEAhU,KAAAY,KAAAmmG,EAmCA,OAjCAf,EAAApmG,UAAA,CACAoC,aACA,OAAAhC,KAAAY,KAAAoB,QAEAS,QAAA,SAAAC,GACA,QAAAukG,KAAAjnG,KAAAY,KACA8B,EAAAukG,EAAAjnG,KAAAY,KAAAqmG,GAAAxxF,WAAA,KAGAjT,IAAA,SAAAX,GACA,YAAAqB,IAAAlD,KAAAY,KAAAiB,IAEA1B,IAAA,SAAA0B,GACA,OAAA7B,KAAAY,KAAAiB,IAEAmsG,WAAA,SAAA1uG,GACA,IAAAgoB,EAAAtnB,KAAAY,KACA,GAAA0mB,EAAAtlB,QAAA,MACA,OAAAslB,EAAAmS,QAAAn6B,GAEA,QAAA2nG,KAAA3/E,EACA,GAAAA,EAAA2/E,KAAA3nG,EACA,SAAA2nG,EAGA,UAEA6L,MAAA,SAAAxrF,GACA,QAAA2/E,KAAA3/E,EACAtnB,KAAAY,KAAAqmG,GAAA3/E,EAAA2/E,KAIAjB,EAvCA,GAyCAW,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACA7mG,KAAA4mG,YACA5mG,KAAA6mG,WA2BA,OAzBAF,EAAA/mG,UAAA,CACAoC,aACA,OAAAhC,KAAA6mG,SAAA,EAAA7mG,KAAA4mG,WAEAnkG,QAAA,SAAAC,GACA,QAAAb,EAAA7B,KAAA4mG,UAAA9kG,EAAA9B,KAAA6mG,SAAsDhlG,GAAAC,EAASD,IAC/Da,EAAAb,MAGAW,IAAA,SAAAX,GACA,OAAA7B,KAAA4mG,WAAA/kG,MAAA7B,KAAA6mG,UAEA1mG,IAAA,SAAA0B,GACA,GAAA7B,KAAA4mG,WAAA/kG,MAAA7B,KAAA6mG,SACA,OAAA1kF,OAAAC,aAAAvgB,IAIAmsG,WAAA,SAAA5pG,GACA,OAAA8Z,OAAAC,UAAA/Z,OAAApE,KAAA4mG,WAAAxiG,GAAApE,KAAA6mG,SAAAziG,GAAA,GAEA0uG,MAAA,SAAAxrF,IACA,EAAA7hB,EAAAgK,aAAA,6BAGAk3F,EA9BA,GAgCAoM,EAAA,WACA,SAAAC,EAAAjjG,EAAAoY,EAAA/kB,GACA2M,EAAAoY,GAAA/kB,GAAA,MACA2M,EAAAoY,EAAA,OAAA/kB,EAEA,SAAA6vG,EAAAljG,EAAAoY,EAAA/kB,GACA2M,EAAAoY,GAAA/kB,GAAA,OACA2M,EAAAoY,EAAA,GAAA/kB,GAAA,OACA2M,EAAAoY,EAAA,GAAA/kB,GAAA,MACA2M,EAAAoY,EAAA,OAAA/kB,EAEA,SAAA8vG,EAAAnjG,EAAAoY,EAAA7C,GACA,IAAAzjB,EAAAC,EACA,GAAAwjB,aAAAvf,WACAgK,EAAAxN,IAAA+iB,EAAA6C,QACK,oBAAA7C,EACL,IAAAzjB,EAAA,EAAAC,EAAAwjB,EAAAtjB,OAAmCH,EAAAC,EAAQD,IAC3CkO,EAAAoY,KAAA,IAAA7C,EAAA7P,WAAA5T,QAGA,IAAAA,EAAA,EAAAC,EAAAwjB,EAAAtjB,OAAmCH,EAAAC,EAAQD,IAC3CkO,EAAAoY,KAAA,IAAA7C,EAAAzjB,GAIA,SAAAkxG,EAAAI,GACAnzG,KAAAmzG,OACAnzG,KAAA6uD,OAAA1vD,OAAAe,OAAA,MAEA6yG,EAAAK,gBAAA,SAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,EACAnjE,EAAA,GACAmjE,EAAAF,GAAAE,GACAA,IAAA,EACAnjE,IAEA,IAAAojE,EAAAD,EAAAD,EACA,OACAx/F,MAAA0/F,EACAp3E,MAAAgU,EACAqjE,WAAAH,EAAAD,EAAAG,IAgEA,OA3DAT,EAAAnzG,UAAA,CACA8zG,QAAA,WACA,IAAAP,EAAAnzG,KAAAmzG,KACAtkD,EAAA7uD,KAAA6uD,OACA8kD,EAAAx0G,OAAAmD,KAAAusD,GACA8kD,EAAAxiF,OACA,IACAtvB,EAAA6K,EAAAwqB,EAAAztB,EAAAmqG,EADAC,EAAAF,EAAA3xG,OAEAmmB,EAVA,GACA,GASA0rF,EACAC,EAAA,CAAA3rF,GACA,IAAAtmB,EAAA,EAAiBA,EAAAgyG,EAAehyG,IAAA,CAGhCsmB,KAFA1e,EAAAolD,EAAA8kD,EAAA9xG,KACAG,OAAA,UAEA8xG,EAAA91F,KAAAmK,GAEA,IAAA0/B,EAAA,IAAA9hD,WAAAoiB,GACA,IAAAtmB,EAAA,EAAiBA,EAAAgyG,EAAehyG,IAChC4H,EAAAolD,EAAA8kD,EAAA9xG,IACAqxG,EAAArrD,EAAAisD,EAAAjyG,GAAA4H,GAEA,SAAA0pG,IACAA,GAAA,EAAA1tG,EAAAsuG,UAAA,QAEAlsD,EAAA,OAAAsrD,EAAA19F,WAAA,GACAoyC,EAAA,OAAAsrD,EAAA19F,WAAA,GACAoyC,EAAA,OAAAsrD,EAAA19F,WAAA,GACAoyC,EAAA,OAAAsrD,EAAA19F,WAAA,GACAu9F,EAAAnrD,EAAA,EAAAgsD,GACA,IAAAG,EAAAjB,EAAAK,gBAAAS,EAAA,IAKA,IAJAb,EAAAnrD,EAAA,EAAAmsD,EAAAlgG,OACAk/F,EAAAnrD,EAAA,EAAAmsD,EAAA53E,OACA42E,EAAAnrD,EAAA,GAAAmsD,EAAAP,YACAtrF,EAnCA,GAoCAtmB,EAAA,EAAiBA,EAAAgyG,EAAehyG,IAAA,CAChC+xG,EAAAD,EAAA9xG,GACAgmD,EAAA1/B,GAAA,IAAAyrF,EAAAn+F,WAAA,GACAoyC,EAAA1/B,EAAA,OAAAyrF,EAAAn+F,WAAA,GACAoyC,EAAA1/B,EAAA,OAAAyrF,EAAAn+F,WAAA,GACAoyC,EAAA1/B,EAAA,OAAAyrF,EAAAn+F,WAAA,GACA,IAAAw+F,EAAA,EACA,IAAAvnG,EAAAonG,EAAAjyG,GAAAq1B,EAAA48E,EAAAjyG,EAAA,GAA2D6K,EAAAwqB,EAAQxqB,GAAA,GAEnEunG,KADA,EAAAxuG,EAAAsuC,YAAA8T,EAAAn7C,KACA,EAEAumG,EAAAprD,EAAA1/B,EAAA,EAAA8rF,GACAhB,EAAAprD,EAAA1/B,EAAA,EAAA2rF,EAAAjyG,IACAoxG,EAAAprD,EAAA1/B,EAAA,GAAA0mC,EAAA+kD,GAAA5xG,QACAmmB,GAjDA,GAmDA,OAAA0/B,GAEAqsD,SAAA,SAAAC,EAAA7uF,GACA,GAAA6uF,KAAAn0G,KAAA6uD,OACA,UAAA5xC,MAAA,SAAAk3F,EAAA,mBAEAn0G,KAAA6uD,OAAAslD,GAAA7uF,IAGAytF,EAxGA,GA0GAjC,EAAA,IAAApoG,WAAA,8KACA8xF,EAAA,WACA,SAAAA,EAAAz6F,EAAA8nD,EAAAC,GACA,IAAAm/C,EACAjnG,KAAAD,OACAC,KAAAu4F,WAAAzwC,EAAAywC,WACAv4F,KAAAm4F,YAAArwC,EAAAqwC,YACAn4F,KAAAo0G,MAAA,GACAp0G,KAAAq0G,aAAA,EACAr0G,KAAAs0G,WAAAn1G,OAAAe,OAAA,MACAF,KAAAgoG,eAAAlgD,EAAA9yB,MAAAuwE,EAAA2D,OACAlpG,KAAAslG,kBAAAx9C,EAAA9yB,MAAAuwE,EAAAC,UACAxlG,KAAAyhG,eAAA35C,EAAA9yB,MAAAuwE,EAAAwC,YACA,IAAA1jG,EAAAyjD,EAAAzjD,KACAyvB,EAAAg0B,EAAAh0B,QAkBA,GAjBA9zB,KAAAqE,OACArE,KAAA8zB,UACA9zB,KAAA6gG,aAAA7gG,KAAAyhG,YAAA,YAAAzhG,KAAAgoG,YAAA,qBACAhoG,KAAAklG,YAAAp9C,EAAAo9C,YACAllG,KAAAyqD,OAAA3C,EAAA2C,OACAzqD,KAAA4sD,aAAA9E,EAAA8E,aACA5sD,KAAA2kG,UAAA78C,EAAA68C,UACA3kG,KAAA2pG,UAAA7hD,EAAA6hD,UACA3pG,KAAAmmG,KAAAr+C,EAAAq+C,KACAnmG,KAAAupD,OAAAzB,EAAAyB,OAAA+nD,EACAtxG,KAAAwpD,QAAA1B,EAAA0B,QAAA8nD,EACAtxG,KAAAopD,WAAAtB,EAAAsB,WACAppD,KAAA+qF,KAAAjjC,EAAAijC,KACA/qF,KAAAqlG,gBAAAv9C,EAAAu9C,gBACArlG,KAAAwkG,UAAA18C,EAAA08C,UACAxkG,KAAAkmG,kBAAAp+C,EAAAo+C,mBAAA,IAAAF,EACAhmG,KAAAu0G,WAAA,GACA,UAAAzsD,EAAAzjD,KAAA,CAaA,GANArE,KAAAgqG,YAAAliD,EAAAkiD,YACAhqG,KAAA6/F,SAAA/3C,EAAA+3C,SACA7/F,KAAA6/F,WACA7/F,KAAAynG,SAAA3/C,EAAA2/C,SACAznG,KAAAsnG,gBAAAx/C,EAAAw/C,kBAEAz/C,KAAA3hD,QAKA,OAJA2hD,IACA,EAAApiD,EAAA4O,MAAA,0BAAAtU,EAAA,MAAAC,KAAAu4F,WAAA,UAEAv4F,KAAAw0G,uBAGA,WAAA1gF,IACA,UAAAzvB,GAAA,YAAAA,GA+FA,SAAAwjD,GACA,IAAAI,EAAAJ,EAAAjhD,UAAA,GACA,kBAAAnB,EAAAsuC,YAAAkU,EAAA,GAhGAwsD,CAAA5sD,GAGAxjD,EAAA,QAFAyvB,EAAA,WAIO4gF,EAAA7sD,KACP/zB,EAAA,aAGA,kBAAAA,GAAA,iBAAAzvB,IACAA,EAAA,gBAEA,iBAAAA,IAIAyvB,EA0FA,SAAA+zB,GACA,IAAAI,EAAAJ,EAAAjhD,UAAA,GACA,QAAAqhD,EAAA,SAAAA,EAAA,GACA,SAEA,SAAAA,EAAA,QAAAA,EAAA,GACA,SAEA,SArGA0sD,CAAA9sD,GACA,eACO6sD,EAAA7sD,GACP,WAEA,iBAGA,aAAA/zB,GAAA,aAAAzvB,IACAA,EAAA,YAEA,IACA,IAAAihB,EACA,OAAAjhB,GACA,eACA,EAAAoB,EAAAgR,MAAA,iBAAA1W,EAAA,6BACA,YACA,mBACAC,KAAA40G,SAAA,gBACA,IAAA5sD,EAAA,WAAAl0B,GAAA,kBAAAA,EAAA,IAAA+gF,EAAAhtD,EAAAC,GAAA,IAAAgtD,EAAA/0G,EAAA8nD,EAAAC,GACA+pD,EAAA/pD,GACAxiC,EAAAtlB,KAAA+0G,QAAAh1G,EAAAioD,EAAAF,GACA,MACA,eACA,eACA,mBACA9nD,KAAA40G,SAAA,gBACAtvF,EAAAtlB,KAAAg1G,eAAAj1G,EAAA8nD,EAAAC,GACA9nD,KAAAi1G,aACApD,EAAA/pD,GACAzjD,EAAA,YAEA,MACA,QACA,UAAAoB,EAAAyD,YAAA,QAAA7E,EAAA,sBAEK,MAAAsZ,GACL,KAAAA,aAAAlY,EAAAyD,aACA,MAAAyU,EAIA,OAFA,EAAAlY,EAAA4O,MAAAsJ,QACA3d,KAAAw0G,uBAGAx0G,KAAAslB,OACAtlB,KAAA46F,SAAAE,EAAAz2F,EAAAyvB,GACA9zB,KAAAopD,WAAAtB,EAAAsB,WACAppD,KAAAyqD,OAAA3C,EAAA2C,OACAzqD,KAAA4sD,aAAA9E,EAAA8E,aACA5sD,KAAAwkG,UAAA18C,EAAA08C,UACAxkG,KAAA8hC,SAAAgmB,EAAAkG,aACAhuD,KAAAk1G,QAAAptD,EAAAotD,QACAl1G,KAAAm1G,SAAA,MAvFA,CACA,IAAAlO,EAAA,EAAwBA,EAAA,IAAgBA,IACxCjnG,KAAAu0G,WAAAtN,GAAAjnG,KAAAklG,YAAA+B,IAAAn/C,EAAAu9C,gBAAA4B,GAEAjnG,KAAA46F,SAAAn1F,EAAAqsG,SAAAsD,OAqFA,IACAC,EAKA,SAAAC,EAAAjvG,EAAAC,GACA,OAAAD,GAAA,GAAAC,EAMA,SAAAivG,EAAAlvG,EAAAC,GACA,IAAAhH,GAAA+G,GAAA,GAAAC,EACA,aAAAhH,IAAA,MAAAA,EAKA,SAAAk2G,EAAAl2G,GACA,OAAA6iB,OAAAC,aAAA9iB,GAAA,UAAAA,GAEA,SAAAm2G,EAAAn2G,GAEA,OADAA,IAAA,YAAAA,GAAA,aAAAA,EACA6iB,OAAAC,aAAA9iB,GAAA,UAAAA,GAUA,SAAAo1G,EAAA7sD,GACA,IAAAI,EAAAJ,EAAAjhD,UAAA,GACA,kBAAAnB,EAAAuuB,eAAAi0B,GAYA,SAAAytD,EAAA5zE,EAAA2xB,EAAAyxC,GAGA,IAFA,IACAxxC,EADA6gD,EAAA,GAEA1yG,EAAA,EAAAC,EAAAggC,EAAA9/B,OAAyCH,EAAAC,EAAQD,KAEjD,KADA6xD,GAAA,EAAA8+B,EAAAh/B,oBAAA1xB,EAAAjgC,GAAA4xD,MAEA8gD,EAAA1yG,GAAA6xD,GAGA,QAAAuzC,KAAA/B,GAEA,KADAxxC,GAAA,EAAA8+B,EAAAh/B,oBAAA0xC,EAAA+B,GAAAxzC,MAEA8gD,GAAAtN,GAAAvzC,GAGA,OAAA6gD,EAEA,SAAAoB,EAAA/rG,GAGA,IAFA,IAAA/H,EAAA,EACA6K,EAAAokG,EAAA9uG,OAAA,EACAH,EAAA6K,GAAA,CACA,IAAAL,EAAAxK,EAAA6K,EAAA,KACA9C,EAAAknG,EAAAzkG,GACAK,EAAAL,EAAA,EAEAxK,EAAAwK,EAGA,UAAAxK,GAEA,SAAA+zG,EAAAC,EAAA/tD,EAAAguD,GACA,IAAAtR,EAAA18C,EAAA08C,UACAuR,KAAAjuD,EAAA9yB,MAAAuwE,EAAAC,UACAwQ,EAAAluD,EAAA08C,qBAAAmC,EACAsP,EAAA92G,OAAAe,OAAA,MACAq0G,EAAA,GACA2B,EAAA,GACAC,EAAAnF,EACA,QAAAoF,KAAAP,EAAA,CAEA,IAAAQ,EAAAR,EADAO,GAAA,GAEA,IAAAN,EAAAO,GAAA,CAGA,IAAAC,EAAAF,EACAG,GAAA,EACA,IAAAP,GAAAxR,EAAAhiG,IAAA4zG,GAAA,CACAG,GAAA,EACA,IAAA7iD,EAAA8wC,EAAArkG,IAAAm2G,GACA,IAAA5iD,EAAA1xD,SACAs0G,EAAA5iD,EAAAj+C,WAAA,IAGA,QAAAvS,IAAAgzG,EAAAI,IAAAX,EAAAW,IAAAP,IAAAQ,EACA,GACA,GAAAJ,EAAApF,EAAA,EACA,EAAAtrG,EAAA4O,MAAA,8CACA,MAEAiiG,EAAAH,IACA9E,GAAA,QAAAiF,IAEAH,GADAG,EAAA,OACA,cAESpzG,IAAAgzG,EAAAI,IAETL,EAAAK,GAAAD,EACA9B,EAAA6B,GAAAE,EACAJ,EAAAI,IAAA,GAEA,OACA/B,aACAsB,kBAAAI,EACAE,6BA0CA,SAAAK,EAAA/d,EAAAge,GACA,IAGA50G,EAAAC,EAAA4K,EAAAwqB,EAHAjG,EAxCA,SAAAwnE,EAAAge,GACA,IAAA/sG,EAAA,GACA,QAAAu9F,KAAAxO,EACAA,EAAAwO,IAAAwP,GAGA/sG,EAAAsU,KAAA,CACAs4F,aAAA,EAAArP,EACAoP,QAAA5d,EAAAwO,KAGA,IAAAv9F,EAAA1H,QACA0H,EAAAsU,KAAA,CACAs4F,aAAA,EACAD,QAAA,IAGA3sG,EAAAynB,KAAA,SAAA/Y,EAAA7O,GACA,OAAA6O,EAAAk+F,aAAA/sG,EAAA+sG,eAIA,IAFA,IAAArlF,EAAA,GACAjvB,EAAA0H,EAAA1H,OACA8E,EAAA,EAAmBA,EAAA9E,GAAY,CAC/B,IAAA6D,EAAA6D,EAAA5C,GAAAwvG,aACAI,EAAA,CAAAhtG,EAAA5C,GAAAuvG,WACAvvG,EAEA,IADA,IAAAb,EAAAJ,EACAiB,EAAA9E,GAAAiE,EAAA,IAAAyD,EAAA5C,GAAAwvG,eACAI,EAAA14F,KAAAtU,EAAA5C,GAAAuvG,WAEAvvG,EACA,SAFAb,KAMAgrB,EAAAjT,KAAA,CAAAnY,EAAAI,EAAAywG,IAEA,OAAAzlF,EAGA0lF,CAAAle,EAAAge,GACA5C,EAAA5iF,IAAAjvB,OAAA,gBACA+kG,EAAA,OAAAyO,EAAA3B,GAAA,YAAApuG,EAAAsuG,UAAA,IAAAF,GAEA,IAAAhyG,EAAAovB,EAAAjvB,OAAA,EAA+BH,GAAA,KAC/BovB,EAAApvB,GAAA,aADuCA,GAKvC,IAAA+0G,EAAA/0G,EAAA,EACAovB,EAAApvB,GAAA,kBAAAovB,EAAApvB,GAAA,KACAovB,EAAApvB,GAAA,UAEA,IASAiS,EAAAjO,EAAAI,EAAAyD,EATAmtG,EAAA5lF,EAAApvB,GAAA,aACAi1G,EAAAF,EAAAC,EACA7C,EAAAjB,EAAAK,gBAAA0D,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAjrD,EAAA,EAEA,IAAArqD,EAAA,EAAAC,EAAA80G,EAA+B/0G,EAAAC,EAAQD,IAAA,CAEvCgE,GADAiO,EAAAmd,EAAApvB,IACA,GACAoE,EAAA6N,EAAA,GACAijG,GAAAvB,EAAA3vG,GACAmxG,GAAAxB,EAAAvvG,GAEA,IAAAmxG,GAAA,EACA,IAAA1qG,EAAA,EAAAwqB,GAFAxtB,EAAAoK,EAAA,IAEA9R,OAAoC0K,EAAAwqB,IAAQxqB,EAC5C,GAAAhD,EAAAgD,KAAAhD,EAAAgD,EAAA,MACA0qG,GAAA,EACA,MAGA,GAAAA,EAQO,CAEPH,GAAAzB,EADA9rG,EAAA,GACA7D,EAAA,OACAqxG,GAAA1B,EAAA,OAXA,CACA,IAAArtF,EAAA,GAAA2uF,EAAAj1G,GAAA,EAAAqqD,EAIA,IAHAA,GAAAjmD,EAAAJ,EAAA,EACAoxG,GAAAzB,EAAA,GACA0B,GAAA1B,EAAArtF,GACAzb,EAAA,EAAAwqB,EAAAxtB,EAAA1H,OAAsC0K,EAAAwqB,IAAQxqB,EAC9CyqG,GAAA3B,EAAA9rG,EAAAgD,KAQAmqG,EAAA,IACAG,GAAA,KACAD,GAAA,KACAE,GAAA,MACAC,GAAA,QAEA,IAAAG,EAAA,OAAA7B,EAAA,EAAAsB,GAAAtB,EAAAxB,EAAAlgG,OAAA0hG,EAAAxB,EAAA53E,OAAAo5E,EAAAxB,EAAAP,YAAAuD,EAAA,OAAAD,EAAAE,EAAAC,EAAAC,EACAG,EAAA,GACAC,EAAA,GACA,GAAA1D,EAAA,GAGA,IAFA9M,GAAA,aAAAthG,EAAAsuG,UAAA,IAAAF,EAAA,EAAAwD,EAAAr1G,QACAs1G,EAAA,GACAz1G,EAAA,EAAAC,EAAAmvB,EAAAjvB,OAAqCH,EAAAC,EAAQD,IAAA,CAE7CgE,GADAiO,EAAAmd,EAAApvB,IACA,GAEA,IAAA+H,GADAF,EAAAoK,EAAA,IACA,GACA,IAAApH,EAAA,EAAAwqB,EAAAxtB,EAAA1H,OAAsC0K,EAAAwqB,IAAQxqB,EAC9ChD,EAAAgD,KAAAhD,EAAAgD,EAAA,OACAzG,EAAA6N,EAAA,GAAApH,EAAA,EACA4qG,IAAA,EAAA7xG,EAAAsuG,UAAAluG,IAAA,EAAAJ,EAAAsuG,UAAA9tG,IAAA,EAAAR,EAAAsuG,UAAAnqG,GACA/D,EAAAI,EAAA,EACA2D,EAAAF,EAAAgD,IAGA4qG,IAAA,EAAA7xG,EAAAsuG,UAAAluG,IAAA,EAAAJ,EAAAsuG,UAAAjgG,EAAA,OAAArO,EAAAsuG,UAAAnqG,GAEA2tG,EAAA,cAAA9xG,EAAAsuG,UAAAuD,EAAAt1G,OAAA,kBAAAyD,EAAAsuG,UAAAuD,EAAAt1G,OAAA,IAEA,OAAA+kG,EAAA,MAAAyO,EAAA6B,EAAAr1G,OAAA,GAAAq1G,EAAAE,EAAAD,EAuBA,SAAAE,EAAA1vD,EAAA2vD,EAAAC,GACAA,KAAA,CACAC,WAAA,EACAC,KAAA,EACAC,KAAA,EACAtuD,OAAA,EACAC,QAAA,GAEA,IAAAsuD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,EACA,GAAAV,EACA,QAAA7tG,KAAA6tG,EAAA,EAEAS,GADAtuG,GAAA,KACAsuG,KACAA,EAAAtuG,GAEAuuG,EAAAvuG,IACAuuG,EAAAvuG,GAEA,IAAAgkB,GAAA,EAAA4kE,EAAAj/B,oBAAA3pD,GACA,GAAAgkB,EAAA,GACAkqF,GAAA,GAAAlqF,OACS,GAAAA,EAAA,GACTmqF,GAAA,GAAAnqF,EAAA,QACS,GAAAA,EAAA,GACToqF,GAAA,GAAApqF,EAAA,OACS,MAAAA,EAAA,KAGT,UAAAnoB,EAAAyD,YAAA,6DAFA+uG,GAAA,GAAArqF,EAAA,SAMAsqF,EAAA,EACAC,EAAA,IAEA,IAAAptB,EAAAjjC,EAAAijC,MAAA,UACA4sB,EAAAD,EAAAC,YAAA,GAAA7vD,EAAAsB,YAAA3jD,EAAAw7F,sBAAA,GACAjsF,EAAA8yC,EAAA2B,aAAA,EAAAkuD,EAAArG,EACA8G,EAAAV,EAAAnuD,QAAAl6C,KAAAuL,MAAA5F,GAAA8yC,EAAAyB,QAAAwhC,EAAA,KACAstB,EAAAX,EAAAluD,SAAAn6C,KAAAuL,MAAA5F,GAAA8yC,EAAA0B,SAAAuhC,EAAA,KACAstB,EAAA,GAAAvwD,EAAA0B,QAAA,GAAAuhC,EAAA,OACAstB,MAEA,IAAAC,EAAAZ,EAAAE,MAAAQ,EACAG,GAAAb,EAAAG,OAAAQ,EACA,4DAAAl2F,OAAAC,aAAA0lC,EAAA8hD,WAAA,uBAAAnkG,EAAAsuG,UAAA+D,IAAA,EAAAryG,EAAAsuG,UAAAgE,IAAA,EAAAtyG,EAAAsuG,UAAAiE,IAAA,EAAAvyG,EAAAsuG,UAAAkE,GAAA,OAAAzC,EAAA1tD,EAAAiiD,YAAA,KAAAyL,EAAA0C,GAAApwD,EAAA8+C,WAAA4O,EAAA2C,GAAArwD,EAAA++C,UAAA2O,EAAA4C,GAAA5C,EAAA6C,GAAA,MAAA7C,EAAA8C,GAAA9C,EAAA+C,GAAA,mBAAA/C,EAAA1tD,EAAA+hD,SAAA2L,EAAA1tD,EAAAgiD,WAAA0L,EAAA,GAAAA,EAAA0C,GAAApwD,EAAA8+C,WAAA,MAEA,SAAA4R,EAAA1wD,GACA,IAAA2wD,EAAAppG,KAAA6C,MAAA41C,EAAAiiD,YAAA16F,KAAAuH,IAAA,OACA,mBAAAnR,EAAAsuG,UAAA0E,GAAA,cAAAhzG,EAAAsuG,UAAAjsD,EAAA8hD,YAAA,mCAEA,SAAA8O,EAAA34G,EAAA44G,GACAA,IACAA,EAAA,SAEA,IAEA92G,EAAAC,EAAA4K,EAAAwqB,EAAA3zB,EAFAolD,EAAA,CAAAgwD,EAAA,0BAAAA,EAAA,OAAA54G,EAAA44G,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,OAAA54G,EAAA44G,EAAA,sBAAAA,EAAA,UAAAA,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBACAC,EAAA,GAEA,IAAA/2G,EAAA,EAAAC,EAAA6mD,EAAA3mD,OAAoCH,EAAAC,EAAQD,IAAA,CAE5C,IAAAg3G,EAAA,GACA,IAAAnsG,EAAA,EAAAwqB,GAFA3zB,EAAAo1G,EAAA,GAAA92G,IAAA8mD,EAAA9mD,IAEAG,OAAkC0K,EAAAwqB,EAAQxqB,IAC1CmsG,EAAA76F,KAAAw3F,EAAAjyG,EAAAkS,WAAA/I,KAEAksG,EAAA56F,KAAA66F,EAAAh2F,KAAA,KAEA,IAAAgT,EAAA,CAAA8yB,EAAAiwD,GACAE,EAAA,cACAC,EAAA,eACAC,EAAA,eACAC,EAAAtwD,EAAA3mD,OAAA82G,EAAA92G,OACAk3G,EAAA,OAAA1D,EAAAyD,GAAAzD,EAAA,GAAAyD,EAAA,GACAE,EAAA,EACA,IAAAt3G,EAAA,EAAAC,EAAAg3G,EAAA92G,OAAsCH,EAAAC,EAAQD,IAAA,CAC9C,IAAAu3G,EAAAvjF,EAAAh0B,GACA,IAAA6K,EAAA,EAAAwqB,EAAAkiF,EAAAp3G,OAAmC0K,EAAAwqB,EAAQxqB,IAAA,CAC3CnJ,EAAA61G,EAAA1sG,GAEAwsG,GADAJ,EAAAj3G,GAAAk3G,EAAAl3G,GAAAm3G,EAAAn3G,GAAA2zG,EAAA9oG,GAAA8oG,EAAAjyG,EAAAvB,QAAAwzG,EAAA2D,GAEAA,GAAA51G,EAAAvB,QAIA,OADAk3G,GAAAvwD,EAAA9lC,KAAA,IAAA+1F,EAAA/1F,KAAA,IAq1CA,OAxrDA23E,EAAAC,WACA4a,EAAA,EACA,WACA,OAAAlzF,OAAAkzF,OAmWA7a,EAAA56F,UAAA,CACAG,KAAA,KACAm4F,KAAA,KACA0c,SAAA,KACA9yE,SAAA,KACAo3D,eACA,IAAAA,EAAAiY,EAAAkI,oBAAAn5G,OAAAF,KAAAixG,GACA,SAAAxrG,EAAA+O,QAAAxU,KAAA,WAAAk5F,IAEAkR,WAAA,WACA,IAAA9kF,EAAA,GACA,QAAAzjB,KAAA7B,KACAA,KAAAs5G,eAAAz3G,KACAyjB,EAAAzjB,GAAA7B,KAAA6B,IAGA,OAAAyjB,GAEAkvF,qBAAA,WACA,IAGAvN,EAAAvzC,EAHAtkC,EAAApvB,KAEAA,KAAAq0G,aAAA,EAEA,IAAAt0G,EAAAC,KAAAD,KACAsE,EAAArE,KAAAqE,KACAyvB,EAAA9zB,KAAA8zB,QACAkkE,EAAAj4F,EAAAsgC,QAAA,aACAk5E,GAAA,EAAA9mB,EAAA1/B,iBACAymD,GAAA,EAAA/mB,EAAA3/B,oBACA2mD,IAAAF,EAAAvhB,OAAAwhB,EAAAxhB,KAAAuhB,EAAAC,EAAAxhB,KAMA,GALAA,EAAAuhB,EAAAvhB,IAAAwhB,EAAAxhB,MACAh4F,KAAAs1B,MAAA,IAAA0iE,EAAAkQ,OAAA,UACAloG,KAAAu1B,QAAA,IAAAyiE,EAAAkQ,OAAA,mBAAAlQ,EAAAkQ,OAAA,YACAloG,KAAAmiC,OAAA,IAAApiC,EAAAmoG,OAAA,UACAloG,KAAA05G,UAAAv6G,OAAAmD,KAAAtC,KAAAyqD,QAAAzoD,OAAA,EACAy3G,GAAA,iBAAAp1G,GAAA,IAAArE,KAAAgqG,YAAAvwE,QAAA,cACA,IAAAkgF,GAAA,EAAAlnB,EAAA9/B,+BACArrC,EAAA,GACA,IAAA2/E,KAAA0S,EACAryF,GAAA2/E,GAAA0S,EAAA1S,GAEA,mBAAAhpE,KAAAl+B,GAAA,CACA,IAAA65G,GAAA,EAAAnnB,EAAA//B,wCACA,IAAAu0C,KAAA2S,EACAtyF,GAAA2/E,GAAA2S,EAAA3S,QAES,cAAAhpE,KAAAl+B,GAAA,CACT,IAAA85G,GAAA,EAAApnB,EAAAhgC,qCACA,IAAAw0C,KAAA4S,EACAvyF,GAAA2/E,GAAA4S,EAAA5S,GAGAjnG,KAAAwkG,qBAAAmC,GAEA3mG,KAAAwkG,UAAA/hG,QAAA,SAAAwkG,EAAA6S,GACAxyF,GAAA2/E,GAAA6S,IAGA95G,KAAAu0G,WAAAjtF,EACAtnB,KAAAwkG,UAAA,IAAAwB,EAAA1+E,QACO,aAAA2W,KAAA+5D,GACPh4F,KAAAu0G,WAAAmB,EAAAxuD,EAAAhrC,mBAAA,EAAA02E,EAAArmE,oBAAAvsB,KAAAklG,kBACO,eAAAjnE,KAAA+5D,GACP,aAAA/5D,KAAAl+B,KACA,EAAA0F,EAAA4O,MAAA,8DAEArU,KAAAu0G,WAAAmB,EAAAxuD,EAAA/qC,sBAAA,EAAAy2E,EAAApmE,4BAAAxsB,KAAAklG,kBACO,GAAAuU,EACPz5G,KAAAu0G,WAAAmB,EAAA11G,KAAAqlG,iBAAA,EAAAzS,EAAArmE,oBAAAvsB,KAAAklG,iBACO,CACP,IAAAzxC,GAAA,EAAAm/B,EAAArmE,oBACAvsB,KAAAwkG,UAAA/hG,QAAA,SAAAwkG,EAAA6S,GACA,IAAA1qF,EAAAu1E,UAAA,CACA,IAAAoB,EAAA32E,EAAA81E,YAAA+B,IAAA73E,EAAAi2E,gBAAA4B,IAEA,KADAvzC,GAAA,EAAA8+B,EAAAh/B,oBAAAuyC,EAAAtyC,MAEAqmD,EAAApmD,GAGAtkC,EAAAmlF,WAAAtN,GAAA6S,IAGA95G,KAAAu4F,WAAAP,EAAAl+D,MAAA,QACA95B,KAAAm1G,SAAA,EACAn1G,KAAA46F,SAAAE,EAAAz2F,EAAAyvB,IAEAkhF,eAAA,SAAAj1G,EAAAm4F,EAAApwC,GACA,IAAAiyD,EAAA,oGACA,SAAAC,EAAAnyD,EAAAgsD,GACA,IAAAhlD,EAAA1vD,OAAAe,OAAA,MACA2uD,EAAA,aACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACA,QAAAhtD,EAAA,EAAuBA,EAAAgyG,EAAehyG,IAAA,CACtC,IAAA4H,EAAAwwG,EAAA/hB,GACA6hB,EAAA7oF,SAAAznB,EAAA0qG,OAGA,IAAA1qG,EAAAzH,SAGA6sD,EAAAplD,EAAA0qG,KAAA1qG,IAEA,OAAAolD,EAEA,SAAAorD,EAAApyD,GACA,IAAAssD,GAAA,EAAA1uG,EAAAuuB,eAAA6zB,EAAAjjD,SAAA,IACAqvG,EAAApsD,EAAAthD,aAAA,EACA4hB,EAAA0/B,EAAAthD,aAAA,EACAvE,EAAA6lD,EAAAthD,aAAA,EACA2zG,EAAAryD,EAAA7hD,IACA6hD,EAAA7hD,IAAA6hD,EAAAhiD,MAAAgiD,EAAAhiD,MAAA,EACAgiD,EAAAhhD,KAAAshB,GACA,IAAA7C,EAAAuiC,EAAAjjD,SAAA5C,GAMA,OALA6lD,EAAA7hD,IAAAk0G,EACA,SAAA/F,IACA7uF,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,MACAA,EAAA,SAEA,CACA6uF,MACAF,WACAjyG,SACAmmB,SACA7C,QAGA,SAAA60F,EAAAC,GACA,OACAjxC,SAAA,EAAA1jE,EAAAuuB,eAAAomF,EAAAx1G,SAAA,IACAivG,UAAAuG,EAAAh0G,YACAotG,YAAA4G,EAAAh0G,YACAi0G,cAAAD,EAAAh0G,YACAqtG,WAAA2G,EAAAh0G,aAsPA,SAAAk0G,EAAAvsG,EAAAwsG,EAAAC,EAAAzqG,EAAA0qG,EAAAC,GACA,IAAAC,EAAA,CACA34G,OAAA,EACA44G,mBAAA,GAEA,GAAAJ,EAAAD,GAAA,GACA,OAAAI,EAEA,IAruBA70G,EAAAoe,EAAA5kB,EAquBAu7G,EAAA9sG,EAAAtH,SAAA8zG,EAAAC,GACAM,EAAAvF,EAAAsF,EAAA,GAAAA,EAAA,IACA,GAAAC,EAAA,EAKA,OA5uBAx7G,EAwuBAw7G,GAAA,GAxuBAh1G,EAyuBA+0G,IAzuBA32F,EAyuBA,GAxuBA,GAAA5kB,EACAwG,EAAAoe,GAAA5kB,IAAA,EAwuBAyQ,EAAAxN,IAAAs4G,EAAAJ,GACAE,EAAA34G,OAAA64G,EAAA74G,OACA24G,EAEA,IAAA94G,EACA6K,EAAA,GACAquG,EAAA,EACA,IAAAl5G,EAAA,EAAmBA,EAAAi5G,EAAmBj5G,IAAA,CAEtCk5G,GADAF,EAAAnuG,IAAA,EAAAmuG,EAAAnuG,EAAA,IACA,EACAA,GAAA,EAEA,IAAAsuG,EAAAtuG,EACAuuG,EAAAJ,EAAAnuG,IAAA,EAAAmuG,EAAAnuG,EAAA,GACAiuG,EAAAC,mBAAAK,EAEA,IAAAC,EADAxuG,GAAA,EAAAuuG,EAEAE,EAAA,EACA,IAAAt5G,EAAA,EAAmBA,EAAAk5G,EAAgBl5G,IAAA,CACnC,IAAA8nF,EAAAkxB,EAAAnuG,KACA,IAAAi9E,IACAkxB,EAAAnuG,EAAA,MAAAi9E,GAEA,IAAAyxB,GAAA,EAAAzxB,EAAA,KAAAA,EAAA,QAAAA,EAAA,KAAAA,EAAA,KAEA,GADAwxB,GAAAC,EACA,EAAAzxB,EAAA,CACA,IAAA0xB,EAAAR,EAAAnuG,KACA7K,GAAAw5G,EACAF,GAAAE,EAAAD,GAGA,OAAAD,EACA,OAAAR,EAEA,IAAAW,EAAA5uG,EAAAyuG,EACA,OAAAG,EAAAT,EAAA74G,OACA24G,GAEAD,GAAAO,EAAA,GACAlrG,EAAAxN,IAAAs4G,EAAAp0G,SAAA,EAAAu0G,GAAAP,GACA1qG,EAAAxN,IAAA,MAAAk4G,EAAAO,GACAjrG,EAAAxN,IAAAs4G,EAAAp0G,SAAAy0G,EAAAI,GAAAb,EAAAO,EAAA,GACAM,GAAAL,EACAJ,EAAA74G,OAAAs5G,EAAA,IACAA,IAAA,MAEAX,EAAA34G,OAAAs5G,EACAX,GAEAE,EAAA74G,OAAAs5G,EAAA,GACAA,IAAA,KACAvrG,EAAAxN,IAAAs4G,EAAAp0G,SAAA,EAAA60G,GAAAb,GACAE,EAAA34G,OAAAs5G,EACAX,IAEA5qG,EAAAxN,IAAAs4G,EAAAJ,GACAE,EAAA34G,OAAA64G,EAAA74G,OACA24G,GAkLA,SAAAY,EAAArC,GACA,IAAArzG,GAAAqyF,EAAAryF,MAAAqyF,EAAAryF,MAAA,GAAAqzG,EAAA/wF,OACA+vE,EAAAlyF,IAAAH,EACA,IAAAgwB,EAAA,QACA7zB,EAAAk3G,EAAAl3G,OACAiE,EAAAJ,EAAA7D,EAGA,OAFAk2F,EAAA9xF,aAEApE,EADA,EAEA,OAAA6zB,EAEA,IAIAh0B,EAAAC,EAJA05G,EAAAtjB,EAAA9xF,YACAq1G,EAAAvjB,EAAA9xF,YACAs1G,EAAA,GAGA,IAAA75G,EAAA,EAAmBA,EAAA25G,GAAAtjB,EAAAlyF,IAFnB,IAEmBC,EAAwDpE,IAAA,CAC3E,IAAA+T,EAAA,CACA+lG,SAAAzjB,EAAA9xF,YACA07B,SAAAo2D,EAAA9xF,YACAw1G,SAAA1jB,EAAA9xF,YACArG,KAAAm4F,EAAA9xF,YACApE,OAAAk2F,EAAA9xF,YACA+hB,OAAA+vE,EAAA9xF,cAEA,IAAAwP,EAAA+lG,UAAA,IAAA/lG,EAAAksB,UAAA,IAAAlsB,EAAAgmG,UAAA,IAAAhmG,EAAA+lG,UAAA,IAAA/lG,EAAAksB,UAAA,OAAAlsB,EAAAgmG,WACAF,EAAA19F,KAAApI,GAGA,IAAA/T,EAAA,EAAAC,EAAA45G,EAAA15G,OAAwCH,EAAAC,EAAQD,IAAA,CAChD,IAAAg6G,EAAAH,EAAA75G,GACA,KAAAg6G,EAAA75G,QAAA,IAGA,IAAAgE,EAAAH,EAAA41G,EAAAI,EAAA1zF,OACA,KAAAniB,EAAA61G,EAAA75G,OAAAiE,GAAA,CAGAiyF,EAAAlyF,MACA,IAAAmiD,EAAA0zD,EAAA97G,KACA,GAAA87G,EAAA/5E,SAAA,CAEA,IADA,IAAAv+B,EAAA,GACAmJ,EAAA,EAAAwqB,EAAA2kF,EAAA75G,OAA+C0K,EAAAwqB,EAAQxqB,GAAA,EACvDnJ,GAAA4e,OAAAC,aAAA81E,EAAA9xF,aAEAyvB,EAAA,GAAAsyB,GAAA5kD,OAEAsyB,EAAA,GAAAsyB,IAAA,EAAA1iD,EAAAuuB,eAAAkkE,EAAAtzF,SAAAi3G,EAAA75G,WAGA,OAAA6zB,EAEA,IAAAimF,EAAA,8YACA,SAAAC,EAAAtyG,EAAAuyG,GAiBA,IAhBA,IAEAtvG,EACA5F,EACAyC,EACA0yG,EACA9uG,EANAmY,EAAA7b,EAAA6b,KACAzjB,EAAA,EAMAq6G,EAAA,EACAC,EAAA,EACAv0D,EAAA,GACAw0D,EAAA,GACAC,EAAA,GACAC,EAAAN,EAAAM,4BACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACA36G,EAAAwjB,EAAAtjB,OAAkCH,EAAAC,GAAQ,CAC1C,IAAAk4D,EAAA10C,EAAAzjB,KACA,QAAAm4D,EAEA,GADAlzD,EAAAwe,EAAAzjB,KACA06G,GAAAE,EACA56G,GAAAiF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCk7C,EAAA5pC,KAAAsH,EAAAzjB,WAGW,QAAAm4D,EAEX,GADAlzD,EAAAwe,EAAAzjB,KACA06G,GAAAE,EACA56G,GAAA,EAAAiF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCnD,EAAA+b,EAAAzjB,KACA+lD,EAAA5pC,KAAAzU,GAAA,EAAA+b,EAAAzjB,WAGW,aAAAm4D,GAEX,GADAlzD,EAAAkzD,EAAA,MACAuiD,GAAAE,EACA56G,GAAAiF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCk7C,EAAA5pC,KAAAsH,EAAAzjB,WAGW,aAAAm4D,GAEX,GADAlzD,EAAAkzD,EAAA,MACAuiD,GAAAE,EACA56G,GAAA,EAAAiF,OAEA,IAAA4F,EAAA,EAAyBA,EAAA5F,EAAO4F,IAChCnD,EAAA+b,EAAAzjB,KACA+lD,EAAA5pC,KAAAzU,GAAA,EAAA+b,EAAAzjB,WAGW,QAAAm4D,GAAAsiD,EAuBA,QAAAtiD,GAAAsiD,GAYA,QAAAtiD,EACX,GAAAuiD,EACAA,GAAA,EACAL,EAAAr6G,MACa,CAEb,KADAsL,EAAAivG,EAAAxjF,OAIA,OAFA,EAAAnzB,EAAA4O,MAAA,2BACA2nG,EAAAtB,YAAA,GAGAuB,EAAAI,EAAAzjF,MACAtT,EAAAnY,EAAAmY,KACAzjB,EAAAsL,EAAAtL,EACAm6G,EAAAU,qBAAAT,GAAAr0D,EAAA5lD,OAAAmL,EAAAwvG,cAEW,SAAA3iD,GACXuiD,GAAAE,MACA,EAAAh3G,EAAA4O,MAAA,gCACAioG,GAAA,GAEAC,GAAA,EACAJ,EAAAt6G,OACW,QAAAm4D,IACXwiD,OACW,QAAAxiD,EACXyiD,EAAAD,OACW,QAAAxiD,EACXyiD,IAAAD,IACAC,EAAA,KAEAD,OACW,QAAAxiD,IACXuiD,IAAAE,EAAA,CACA,IAAAt0F,EAAAy/B,IAAA5lD,OAAA,GACAmmB,EAAA,IACAtmB,GAAAsmB,EAAA,SA/CAo0F,GAAAE,MACA,EAAAh3G,EAAA4O,MAAA,gCACAioG,GAAA,GAEAC,GAAA,EACAJ,EAAAt6G,EACAo6G,EAAAr0D,EAAAhvB,MACAojF,EAAAY,iBAAAX,GAAA,CACA32F,OACAzjB,UAhCA,IAAA06G,IAAAE,EAGA,GAFAR,EAAAr0D,IAAA5lD,OAAA,GACAg6G,EAAAa,cAAAZ,IAAA,EACAA,KAAAD,EAAAU,qBACA90D,EAAA5lD,QAAAg6G,EAAAU,qBAAAT,QACe,GAAAA,KAAAD,EAAAY,mBAAAP,EAAAnrF,SAAA+qF,GAAA,CAQf,GAPAG,EAAAp+F,KAAA,CACAsH,OACAzjB,IACA86G,SAAA/0D,EAAA5lD,OAAA,IAEAq6G,EAAAr+F,KAAAi+F,KACA9uG,EAAA6uG,EAAAY,iBAAAX,IAIA,OAFA,EAAAx2G,EAAA4O,MAAA,uCACA2nG,EAAAtB,YAAA,GAGAp1F,EAAAnY,EAAAmY,KACAzjB,EAAAsL,EAAAtL,EAuDA,IAAA06G,IAAAE,EAAA,CACA,IAAA/0D,EAAAsS,GAAA,IAAA8hD,EAAA9hD,MAAA,KAAAA,GAAA,OAAAA,GAAA,SAOA,IANAA,GAAA,KAAAA,GAAA,MACAlzD,EAAA8gD,EAAAhvB,MACAuG,MAAAr4B,KACA4gD,EAAA,GAAA5gD,IAGA4gD,EAAA,GAAAE,EAAA5lD,OAAA,GACA4lD,EAAAhvB,MACA8uB,IAEA,KAAAA,EAAA,GACAE,EAAA5pC,KAAAktC,KACAxD,KAIAs0D,EAAAM,8BACA,IAAA/9E,EAAA,CAAAjZ,GACAzjB,EAAAyjB,EAAAtjB,QACAu8B,EAAAvgB,KAAA,IAAAjY,WAAAlE,EAAAyjB,EAAAtjB,SAEAm6G,EAAAD,KACA,EAAAz2G,EAAA4O,MAAA,6CACAkqB,EAAAvgB,KAAA,IAAAjY,WAAA,WA0BA,SAAA0D,EAAA80B,GACA,GAAAA,EAAAv8B,OAAA,GACA,IACA0K,EAAAwqB,EADA9uB,EAAA,EAEA,IAAAsE,EAAA,EAAAwqB,EAAAqH,EAAAv8B,OAA0C0K,EAAAwqB,EAAQxqB,IAClDtE,GAAAm2B,EAAA7xB,GAAA1K,OAEAoG,IAAA,KACA,IAAAiQ,EAAA,IAAAtS,WAAAqC,GACApC,EAAA,EACA,IAAA0G,EAAA,EAAAwqB,EAAAqH,EAAAv8B,OAA0C0K,EAAAwqB,EAAQxqB,IAClD2L,EAAA9V,IAAAg8B,EAAA7xB,GAAA1G,GACAA,GAAAu4B,EAAA7xB,GAAA1K,OAEAyH,EAAA6b,KAAAjN,EACA5O,EAAAzH,OAAAoG,GAvCA00G,CAAArzG,EAAA80B,GAmEA,IAAA0pB,OAAA,EACA4G,OAAA,EACA,GAxtCA,SAAAhH,GACA,IAAAI,EAAAJ,EAAAjhD,UAAA,GACA,kBAAAnB,EAAAuuB,eAAAi0B,GAstCA80D,CAHA7kB,EAAA,IAAAz7E,EAAAzX,OAAA,IAAAe,WAAAmyF,EAAAtzF,cAGA,CACA,IAAAo4G,EAzuBA,SAAAC,EAAAjlB,GAKA,IAJA,IAAAklB,EA7BA,SAAAD,GACA,IAAAE,GAAA,EAAA13G,EAAAuuB,eAAAipF,EAAAr4G,SAAA,KACA,EAAAa,EAAAgZ,QAAA,SAAA0+F,EAAA,uCAKA,IAJA,IAAAC,EAAAH,EAAA72G,YACAi3G,EAAAJ,EAAA72G,YACAk3G,EAAAL,EAAA12G,aAAA,EACAg3G,EAAA,GACA17G,EAAA,EAAuBA,EAAAy7G,EAAcz7G,IACrC07G,EAAAv/F,KAAAi/F,EAAA12G,aAAA,GAEA,IAAA0hD,EAAA,CACAk1D,SACAC,eACAC,eACAC,WACAC,eAEA,OAAAH,GACA,OACA,OAAAn1D,EACA,OAIA,OAHAA,EAAAu1D,QAAAP,EAAA12G,aAAA,EACA0hD,EAAAw1D,WAAAR,EAAA12G,aAAA,EACA0hD,EAAAy1D,WAAAT,EAAA12G,aAAA,EACA0hD,EAEA,UAAAxiD,EAAAyD,YAAA,6CAAAk0G,EAAA,KAGAO,CAAAV,GACAK,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,YAEA17G,EAAA,EAAuBA,EAAAy7G,EAAcz7G,IAAA,CACrCo7G,EAAAj3G,KAAAi3G,EAAAp3G,OAAA,GAAA03G,EAAA17G,GACA,IAAA+7G,EAAAzD,EAAA8C,GACAY,EAAA7D,EAAAiD,EAAAW,EAAA/J,WACA,IAAAgK,EAAA,KACA,UAAAp4G,EAAAyD,YAAA,yDAGA,IADA,IAAAgwG,EAAAqC,EAAAsC,EAAA,MACAnxG,EAAA,EAAAwqB,EAAAgiF,EAAAl3G,OAAgD0K,EAAAwqB,EAAQxqB,IACxD,QAAArB,EAAA,EAAAsB,EAAAusG,EAAAxsG,GAAA1K,OAAqDqJ,EAAAsB,EAAQtB,IAAA,CAC7D,IAAAyyG,EAAA5E,EAAAxsG,GAAArB,GACA,GAAAyyG,KAAAz9E,QAAA,YAAA23D,EACA,OACA/vC,OAAA21D,EACA/uD,OAAAgvD,IAMA,UAAAp4G,EAAAyD,YAAA,yCAAA8uF,EAAA,WAgtBA+lB,CAAA7lB,EAAAl4F,KAAAD,MACAkoD,EAAA+0D,EAAA/0D,OACA4G,EAAAmuD,EAAAnuD,YAGAA,EAAAmrD,EAAA9hB,GADAjwC,EAAAkyD,EAAAjiB,IACA2b,WAEA,IAAA7rD,OAAA,EACAg2D,OAAA,EACAC,GAAApvD,EAAA,QACA,GAAAovD,EAaO,CACP,IAAApvD,EAAA,KACA,UAAAppD,EAAAyD,YAAA,sCAEA2lD,EAAA,QACA,EAAAppD,EAAA4O,MAAA,4DACAw6C,EAAA,MACAslD,IAAA,OACA7uF,KAAA,IAAAvf,WAAA,KAGA/F,KAAAi1G,YAAA,MAxBA,CACA,eAAAhtD,EAAAkhB,SAAArhB,EAAA68C,WAAA78C,EAAAk9C,cAAAn2C,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAIA,OAHAmvD,EAAA,IAAAvhG,EAAAzX,OAAA6pD,EAAA,QAAAvpC,MACA0iC,EAAA,IAAA6sD,EAAAmJ,EAAAl2D,GACA+pD,EAAA/pD,GACA9nD,KAAA+0G,QAAAh1G,EAAAioD,EAAAF,UAEA+G,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,QACA7uD,KAAAi1G,YAAA,EAcA,IAAApmD,EAAA,KACA,UAAAppD,EAAAyD,YAAA,sCAEAgvF,EAAAlyF,KAAAkyF,EAAAryF,OAAA,GAAAgpD,EAAA,KAAA1mC,OACA,IAAAghD,EAAA+uB,EAAA3xF,WACAkwG,EAAAve,EAAA9xF,YACA83G,EAAA,EACAC,EAAA,EACAh1C,GAAA,OAAAta,EAAA,KAAA7sD,QAAA,KACAk2F,EAAAlyF,KAAA,EACAkyF,EAAA9xF,YACA,IACAyoD,EAAA,KAAAvpC,KAAA,MACAupC,EAAA,KAAAvpC,KAAA,OAEA4yE,EAAAlyF,KAAA,EACAk4G,EAAAhmB,EAAA9xF,YACA8xF,EAAAlyF,KAAA,EACAm4G,EAAAjmB,EAAA9xF,aAEA,IAAAg4G,GAAA,EACA,iBAAAt2D,EAAAzjD,MAAAyjD,EAAA08C,WAAA18C,EAAA08C,UAAArkG,IAAA,UACAi+G,GAAA,EACA3H,IACA5nD,EAAA,KAAAvpC,KAAA,GAAAmxF,GAAA,EACA5nD,EAAA,KAAAvpC,KAAA,OAAAmxF,GAEA,IAAAiE,EA3FA,SAAA2D,EAAAC,EAAAC,EAAAL,GACA,IAAAlC,EAAA,CACAY,iBAAA,GACAC,cAAA,GACAH,qBAAA,GACAJ,6BAAA,EACA5B,YAAA,GAWA,GATA2D,GACAtC,EAAAsC,EAAArC,GAEAsC,GACAvC,EAAAuC,EAAAtC,GAEAqC,GAtDA,SAAArC,EAAAkC,GACA,IAAAlC,EAAAM,4BAAA,CAGA,GAAAN,EAAAY,iBAAA56G,OAAAk8G,EAGA,OAFA,EAAAz4G,EAAA4O,MAAA,iDACA2nG,EAAAtB,YAAA,GAGA,QAAAhuG,EAAA,EAAAwqB,EAAA8kF,EAAAa,cAAA76G,OAA4D0K,EAAAwqB,EAAQxqB,IAAA,CACpE,GAAAA,EAAAwxG,EAGA,OAFA,EAAAz4G,EAAA4O,MAAA,4BAAA3H,QACAsvG,EAAAtB,YAAA,GAGA,GAAAsB,EAAAa,cAAAnwG,KAAAsvG,EAAAY,iBAAAlwG,GAGA,OAFA,EAAAjH,EAAA4O,MAAA,2BAAA3H,QACAsvG,EAAAtB,YAAA,KAsCA8D,CAAAxC,EAAAkC,GAEAK,GAAA,EAAAA,EAAAv8G,OAAA,CACA,IAAAy8G,EAAA,IAAA14G,WAAAw4G,EAAAv8G,OAAA,GACAy8G,EAAAl8G,IAAAg8G,EAAAj5F,MACAi5F,EAAAj5F,KAAAm5F,EAEA,OAAAzC,EAAAtB,WAqEAgE,CAAA7vD,EAAA,KAAAA,EAAA,KAAAA,EAAA,QAAAqvD,GAOA,GANAxD,WACA7rD,EAAA,YACAA,EAAA,YACAA,EAAA,SA7mBA,SAAAqpC,EAAAjwC,EAAA0/C,EAAA8O,GACA,GAAAxuD,EAAA,CAMAiwC,EAAAlyF,KAAAkyF,EAAAryF,MAAAqyF,EAAAryF,MAAA,GAAAoiD,EAAA9/B,OACA+vE,EAAAlyF,KAAAiiD,EAAAjmD,OAAA,EACA,IAAA28G,EAAAzmB,EAAA9xF,YACAu4G,EAAAlI,KACA,EAAAhxG,EAAAgR,MAAA,qBAAAkoG,EAAA,+CAAAlI,EAAA,KACAkI,EAAAlI,EACAxuD,EAAA3iC,KAAA,WAAAq5F,IAAA,EACA12D,EAAA3iC,KAAA,QAAAq5F,GAEA,IACAC,EADAnI,EAAAkI,GACAhX,EAAA3lG,OAAA,EAAA28G,GAAA,GACA,GAAAC,EAAA,GACA,IAAAjkF,EAAA,IAAA50B,WAAA4hG,EAAA3lG,OAAA,EAAA48G,GACAjkF,EAAAp4B,IAAAolG,EAAAriF,MACAqiF,EAAAriF,KAAAqV,QAnBAgtE,IACAA,EAAAriF,KAAA,MA4mBAu5F,CAAA3mB,EAAArpC,EAAA,KAAAA,EAAA,KAAA4nD,IACA5nD,EAAA,KACA,UAAAppD,EAAAyD,YAAA,uCAjhBA,SAAA41G,EAAArI,EAAAsI,GACA,IA9xBA14G,EAAAC,EAAAykD,EAAAi0D,EA8xBA15F,EAAAw5F,EAAAx5F,KACA6jD,GA/xBA9iE,EA+xBAif,EAAA,GA/xBAhf,EA+xBAgf,EAAA,GA/xBAylC,EA+xBAzlC,EAAA,GA/xBA05F,EA+xBA15F,EAAA,IA9xBAjf,GAAA,KAAAC,GAAA,KAAAykD,GAAA,GAAAi0D,GA+xBA71C,GAAA,SACA,EAAA1jE,EAAAgR,MAAA,oDAAA0yD,GACA7jD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEA,IAAA25F,EAAA3J,EAAAhwF,EAAA,IAAAA,EAAA,KACA,GAAA25F,EAAA,GAAAA,EAAA,IACA,EAAAx5G,EAAAgR,MAAA,6DAAAwoG,GACA,IAAAC,EAAAzI,EAAA,EACA,GAAAsI,IAAAG,GAAA,EACA55F,EAAA,MACAA,EAAA,UACW,IAAAy5F,IAAAG,GAAA,EAIX,UAAAz5G,EAAAyD,YAAA,mCAAA+1G,GAHA35F,EAAA,MACAA,EAAA,QAggBA65F,CAAAtwD,EAAA,KAAA4nD,EAAAwH,EAAApvD,EAAA,KAAA7sD,OAAA,GACA,IAAA8zG,EAAA32G,OAAAe,OAAA,MACA,GAAA+9G,EAAA,CACA,IAAAmB,EAAA9J,EAAAzmD,EAAA,KAAAvpC,KAAA,IAAAupC,EAAA,KAAAvpC,KAAA,KACA+5F,EA9fA,SAAAC,EAAAzE,EAAApE,EAAA2I,EAAA1E,EAAA0D,EAAAD,GACA,IAAAoB,EAAAC,EAAAC,EACAL,GACAG,EAAA,EACAC,EAAA,SAAAl6F,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,IAEAs3F,EAAA,SAAAn6F,EAAA6C,EAAA7oB,GACAgmB,EAAA6C,GAAA7oB,IAAA,OACAgmB,EAAA6C,EAAA,GAAA7oB,GAAA,OACAgmB,EAAA6C,EAAA,GAAA7oB,GAAA,MACAgmB,EAAA6C,EAAA,OAAA7oB,KAGAigH,EAAA,EACAC,EAAA,SAAAl6F,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,OAEAs3F,EAAA,SAAAn6F,EAAA6C,EAAA7oB,GACAgmB,EAAA6C,GAAA7oB,GAAA,MACAgmB,EAAA6C,EAAA,GAAA7oB,GAAA,QAGA,IAAAogH,EAAAJ,EAAAh6F,KACAq6F,EAAAJ,GAAA,EAAA9I,GACAiJ,EAAA19G,SAAA29G,KACAD,EAAA,IAAA35G,WAAA45G,IACAp9G,IAAA+8G,EAAAh6F,KAAA7e,SAAA,EAAAk5G,IACAL,EAAAh6F,KAAAo6F,GAEA,IAOA79G,EAAA6K,EAPAkzG,EAAA/E,EAAAv1F,KACAu6F,EAAAD,EAAA59G,OACA89G,EAAA,IAAA/5G,WAAA85G,GACA/gC,EAAA0gC,EAAAE,EAAA,GACAK,EAAA,EACAjK,EAAA32G,OAAAe,OAAA,MACAu/G,EAAAC,EAAA,EAAAK,GAEA,IAAAC,EAAA5B,EAAA3H,EAAA,EAAAA,EACA,IAAA50G,EAAA,EAAA6K,EAAA6yG,EAAiC19G,EAAAm+G,EAAen+G,IAAA6K,GAAA6yG,EAAA,CAChD,IAAA38B,EAAA48B,EAAAE,EAAAhzG,GACA,IAAAk2E,IACAA,EAAA9D,GAEA8D,EAAAi9B,MAAA,QAAAj9B,IACAA,EAAAi9B,GAEAj9B,EAAAi9B,IACA/gC,EAAA8D,GAEA,IAAA+3B,EAAAL,EAAAsF,EAAA9gC,EAAA8D,EAAAk9B,EAAAC,EAAArF,GACAtyG,EAAAuyG,EAAA34G,OACA,IAAAoG,IACA0tG,EAAAj0G,IAAA,GAEA84G,EAAAC,mBAAAuD,IACAA,EAAAxD,EAAAC,oBAGA6E,EAAAC,EAAAhzG,EADAqzG,GAAA33G,GAEA02E,EAAA8D,EAEA,OAAAm9B,EAAA,CACA,IAAAE,EAAA,IAAAl6G,WAAA,oCACA,IAAAlE,EAAA,EAAA6K,EAAA6yG,EAAmC19G,EAAA40G,EAAe50G,IAAA6K,GAAA6yG,EAClDE,EAAAC,EAAAhzG,EAAAuzG,EAAAj+G,QAEA64G,EAAAv1F,KAAA26F,OACS,GAAA7B,EAAA,CACT,IAAA8B,EAAAV,EAAAE,EAAAH,GACAO,EAAA99G,OAAAk+G,EAAAH,EACAlF,EAAAv1F,KAAAw6F,EAAAr5G,SAAA,EAAAy5G,EAAAH,IAEAlF,EAAAv1F,KAAA,IAAAvf,WAAAm6G,EAAAH,GACAlF,EAAAv1F,KAAA/iB,IAAAu9G,EAAAr5G,SAAA,EAAAs5G,KAEAlF,EAAAv1F,KAAA/iB,IAAAu9G,EAAAr5G,SAAA,EAAAy5G,GAAAH,GACAN,EAAAH,EAAAh6F,KAAAo6F,EAAA19G,OAAAu9G,EAAAQ,EAAAG,QAEArF,EAAAv1F,KAAAw6F,EAAAr5G,SAAA,EAAAs5G,GAEA,OACAjK,gBACAqI,yBA2aAgC,CAAAtxD,EAAA,KAAAA,EAAA,KAAA4nD,EAAA2I,EAAA1E,EAAA0D,EAAAD,GACArI,EAAAuJ,EAAAvJ,cACA3sC,GAAA,OAAAta,EAAA,KAAA7sD,QAAA,KACA6sD,EAAA,KAAAvpC,KAAA,IAAA+5F,EAAAlB,uBAAA,EACAtvD,EAAA,KAAAvpC,KAAA,QAAA+5F,EAAAlB,uBAGA,IAAAtvD,EAAA,KACA,UAAAppD,EAAAyD,YAAA,sCAEA,IAAA2lD,EAAA,KAAAvpC,KAAA,SAAAupC,EAAA,KAAAvpC,KAAA,MACAupC,EAAA,KAAAvpC,KAAA,QACAupC,EAAA,KAAAvpC,KAAA,SAEA,IAAA86F,EAAA,CACAzI,WAAArC,EAAAzmD,EAAA,KAAAvpC,KAAA,IAAAupC,EAAA,KAAAvpC,KAAA,KACAsyF,KAAAtC,EAAAzmD,EAAA,KAAAvpC,KAAA,IAAAupC,EAAA,KAAAvpC,KAAA,KACAuyF,KAAAtC,EAAA1mD,EAAA,KAAAvpC,KAAA,IAAAupC,EAAA,KAAAvpC,KAAA,KACAikC,OAAA+rD,EAAAzmD,EAAA,KAAAvpC,KAAA,GAAAupC,EAAA,KAAAvpC,KAAA,IACAkkC,QAAA+rD,EAAA1mD,EAAA,KAAAvpC,KAAA,GAAAupC,EAAA,KAAAvpC,KAAA,MAEAtlB,KAAAupD,OAAA62D,EAAA72D,OAAA62D,EAAAzI,WACA33G,KAAAwpD,QAAA42D,EAAA52D,QAAA42D,EAAAzI,WACA9oD,EAAA,QA/bA,SAAAwxD,EAAAv4D,EAAAw4D,GACA,IAAAz6G,GAAAqyF,EAAAryF,MAAAqyF,EAAAryF,MAAA,GAAAw6G,EAAAl4F,OACA+vE,EAAAlyF,IAAAH,EACA,IAIA06G,EAHAt6G,EAAAJ,EADAw6G,EAAAr+G,OAEAmnE,EAAA+uB,EAAA3xF,WACA2xF,EAAAtzF,SAAA,IAEA,IACA/C,EADAyqD,GAAA,EAEA,OAAA6c,GACA,WACAo3C,EAAA3O,EACA,MACA,YACA,IAAA6E,EAAAve,EAAA9xF,YACA,GAAAqwG,IAAA6J,EAAA,CACAh0D,GAAA,EACA,MAEA,IAAAk0D,EAAA,GACA,IAAA3+G,EAAA,EAAuBA,EAAA40G,IAAe50G,EAAA,CACtC,IAAAqiB,EAAAg0E,EAAA9xF,YACA,GAAA8d,GAAA,OACAooC,GAAA,EACA,MAEAk0D,EAAAxiG,KAAAkG,GAEA,IAAAooC,EACA,MAIA,IAFA,IAAAm0D,EAAA,GACA/+F,EAAA,GACAw2E,EAAAlyF,IAAAC,GAAA,CACA,IAAAy6G,EAAAxoB,EAAA/xF,UAEA,IADAub,EAAA1f,OAAA0+G,EACA7+G,EAAA,EAAyBA,EAAA6+G,IAAkB7+G,EAC3C6f,EAAA7f,GAAAsgB,OAAAC,aAAA81E,EAAA/xF,WAEAs6G,EAAAziG,KAAA0D,EAAAmB,KAAA,KAGA,IADA09F,EAAA,GACA1+G,EAAA,EAAuBA,EAAA40G,IAAe50G,EAAA,CACtC,IAAA6K,EAAA8zG,EAAA3+G,GACA6K,EAAA,IACA6zG,EAAAviG,KAAA4zF,EAAAllG,IAGA6zG,EAAAviG,KAAAyiG,EAAA/zG,EAAA,MAEA,MACA,YACA,MACA,SACA,EAAAjH,EAAA4O,MAAA,0CAAA80D,GACA7c,GAAA,EACAxE,EAAAu9C,kBACAkb,EAAAz4D,EAAAu9C,iBAKA,OADAv9C,EAAAy4D,aACAj0D,EAiYAq0D,CAAA9xD,EAAA,KAAA/G,EAAA2uD,KAEA5nD,EAAA,YAGA,IACAo4C,EADA4O,EAAA,GAEA,SAAA+K,EAAAvK,GACA,OAAAP,EAAAO,GAEA,GAAAvuD,EAAA68C,UAAA,CACA,IAAAK,EAAAl9C,EAAAk9C,aAAA,GACA6b,EAAA,IAAA7b,EAAAhjG,OACA8lD,EAAAq+C,KAAA1jG,QAAA,SAAAwkG,EAAA55C,GACA,GAAAA,EAAA,MACA,UAAA5nD,EAAAyD,YAAA,6BAEA,IAAAmtG,GAAA,EACAwK,EACAxK,EAAAhpD,OACWnqD,IAAA8hG,EAAA33C,KACXgpD,EAAArR,EAAA33C,IAEAgpD,GAAA,GAAAA,EAAAI,GAAAmK,EAAAvK,KACAR,EAAA5O,GAAAoP,MAGA+H,IAAAyC,GAAAhL,EAAA,KACAA,EAAA,GAAAY,EAAA,OAEO,CACP,IAAAqK,EAl1BA,SAAA/Z,EAAA7O,EAAAoN,EAAAK,GACA,IAAAoB,EAEA,OADA,EAAAthG,EAAA4O,MAAA,4BACA,CACA0sG,YAAA,EACAC,YAAA,EACAC,SAAA,GACAC,cAAA,GAGA,IAAAvuC,EACA9sE,GAAAqyF,EAAAryF,MAAAqyF,EAAAryF,MAAA,GAAAkhG,EAAA5+E,OACA+vE,EAAAlyF,IAAAH,EACAqyF,EAAA9xF,YAIA,IAHA,IACA+6G,EADAtN,EAAA3b,EAAA9xF,YAEAg7G,GAAA,EACAv/G,EAAA,EAAuBA,EAAAgyG,EAAehyG,IAAA,CACtC,IAAAk/G,EAAA7oB,EAAA9xF,YACA46G,EAAA9oB,EAAA9xF,YACA+hB,EAAA+vE,EAAA3xF,aAAA,EACA86G,GAAA,EACA,KAAAF,KAAAJ,gBAAAI,EAAAH,kBAGA,IAAAD,GAAA,IAAAC,EACAK,GAAA,EACW,IAAAN,GAAA,IAAAC,EACXK,GAAA,EACW,IAAAN,GAAA,IAAAC,IAAArb,GAAAwb,EAKA7b,GAAA,IAAAyb,GAAA,IAAAC,IACXK,GAAA,EACAD,GAAA,IANAC,GAAA,EACA/b,IACA8b,GAAA,IAMAC,IACAF,EAAA,CACAJ,aACAC,aACA74F,WAGAi5F,GACA,MAMA,GAHAD,IACAjpB,EAAAlyF,IAAAH,EAAAs7G,EAAAh5F,SAEAg5F,IAAA,IAAAjpB,EAAAxxF,WAEA,OADA,EAAAjB,EAAA4O,MAAA,0CACA,CACA0sG,YAAA,EACAC,YAAA,EACAC,SAAA,GACAC,cAAA,GAGA,IAAArzD,EAAAqqC,EAAA9xF,YACA8xF,EAAA9xF,YACA8xF,EAAA9xF,YACA,IAEAsG,EAAA2pG,EAFA6K,GAAA,EACAD,EAAA,GAEA,OAAApzD,EAAA,CACA,IAAAnhD,EAAA,EAAqBA,EAAA,IAASA,IAAA,CAC9B,IAAAwX,EAAAg0E,EAAA/xF,UACA+d,GAGA+8F,EAAAjjG,KAAA,CACAipF,SAAAv6F,EACA2pG,QAAAnyF,IAGAg9F,GAAA,OACS,OAAArzD,EAAA,CACT,IAAAipD,EAAA5e,EAAA9xF,aAAA,EACA8xF,EAAAtzF,SAAA,GACA,IAAA08G,EACA5uC,EAAA,GACA,IAAA4uC,EAAA,EAA4BA,EAAAxK,EAAqBwK,IACjD5uC,EAAA10D,KAAA,CAA2B/X,IAAAiyF,EAAA9xF,cAG3B,IADA8xF,EAAA9xF,YACAk7G,EAAA,EAA4BA,EAAAxK,EAAqBwK,IACjD5uC,EAAA4uC,GAAAz7G,MAAAqyF,EAAA9xF,YAEA,IAAAk7G,EAAA,EAA4BA,EAAAxK,EAAqBwK,IACjD5uC,EAAA4uC,GAAA3wE,MAAAunD,EAAA9xF,YAEA,IAAAm7G,EAAA,EACA,IAAAD,EAAA,EAA4BA,EAAAxK,EAAqBwK,IAAA,CACjD3uC,EAAAD,EAAA4uC,GACA,IAAAE,EAAAtpB,EAAA9xF,YACA,GAAAo7G,EAAA,CAIA,IAAAC,GAAAD,GAAA,IAAA1K,EAAAwK,GACA3uC,EAAA8uC,cACAF,EAAAlyG,KAAAyH,IAAAyqG,EAAAE,EAAA9uC,EAAA1sE,IAAA0sE,EAAA9sE,MAAA,QALA8sE,EAAA8uC,aAAA,EAOA,IAAAp2D,EAAA,GACA,IAAA3+C,EAAA,EAAqBA,EAAA60G,EAAkB70G,IACvC2+C,EAAArtC,KAAAk6E,EAAA9xF,aAEA,IAAAk7G,EAAA,EAA4BA,EAAAxK,EAAqBwK,IAAA,CAEjDz7G,GADA8sE,EAAAD,EAAA4uC,IACAz7G,MACA,IAAAI,EAAA0sE,EAAA1sE,IACA0qC,EAAAgiC,EAAAhiC,MAEA,IADA8wE,EAAA9uC,EAAA8uC,YACA/0G,EAAA7G,EAA2B6G,GAAAzG,EAAUyG,IACrC,QAAAA,IAIA2pG,GADAA,EAAAoL,EAAA,EAAA/0G,EAAA2+C,EAAAo2D,EAAA/0G,EAAA7G,IACA8qC,EAAA,MACAswE,EAAAjjG,KAAA,CACAipF,SAAAv6F,EACA2pG,kBAIS,QAAAxoD,EAaT,OADA,EAAApoD,EAAA4O,MAAA,sCAAAw5C,GACA,CACAkzD,YAAA,EACAC,YAAA,EACAC,SAAA,GACAC,cAAA,GAhBA,IAAAvkC,EAAAub,EAAA9xF,YACA81B,EAAAg8D,EAAA9xF,YACA,IAAAsG,EAAA,EAAqBA,EAAAwvB,EAAgBxvB,IAAA,CACrC2pG,EAAAne,EAAA9xF,YACA,IAAA6gG,EAAAtqB,EAAAjwE,EACAu0G,EAAAjjG,KAAA,CACAipF,WACAoP,aAeA,IAHA4K,EAAA9vF,KAAA,SAAA/Y,EAAA7O,GACA,OAAA6O,EAAA6uF,SAAA19F,EAAA09F,WAEAplG,EAAA,EAAmBA,EAAAo/G,EAAAj/G,OAAqBH,IACxCo/G,EAAAp/G,EAAA,GAAAolG,WAAAga,EAAAp/G,GAAAolG,WACAga,EAAA74F,OAAAvmB,EAAA,GACAA,KAGA,OACAk/G,WAAAI,EAAAJ,WACAC,WAAAG,EAAAH,WACAC,WACAC,gBAirBAQ,CAAA7yD,EAAA,KAAAqpC,EAAAl4F,KAAAslG,eAAAx9C,EAAA69C,aACAgc,EAAAb,EAAAC,WACAa,EAAAd,EAAAE,WACAa,EAAAf,EAAAG,SACAa,GAAAD,EAAA7/G,OACA,GAAA8lD,EAAA69C,cAAA,IAAAgc,GAAA,IAAAC,GAAA,IAAAD,GAAA,IAAAC,KAAA,IAAAD,IAAA,IAAAC,IAAA,EAAA16D,EAAA9qC,aAAA0rC,EAAAq9C,kBAAA,CACA,IAAAn3C,GAAA,GACA,qBAAAlG,EAAAq9C,kBAAA,oBAAAr9C,EAAAq9C,mBACAn3C,IAAA,EAAA9G,EAAA9qC,aAAA0rC,EAAAq9C,mBAEA,IAAA1xC,IAAA,EAAAm/B,EAAArmE,oBACA,IAAA06E,EAAA,EAA4BA,EAAA,IAAgBA,IAAA,CAC5C,IAAAlB,GAAAgc,GAQA,GANAhc,GADA/lG,KAAAklG,aAAA+B,KAAAjnG,KAAAklG,YACAllG,KAAAklG,YAAA+B,GACaA,KAAAj5C,IAAA,KAAAA,GAAAi5C,GACbj5C,GAAAi5C,GAEA//C,EAAAlrC,iBAAAirF,GAEA,CAIA,IAAA+a,GADAD,GAAAtP,EAAA1M,GAAAtyC,IAEA,IAAAkuD,GAAA,IAAAC,EACAI,GAAAvuD,GAAAsuD,IACa,IAAAJ,GAAA,IAAAC,IACbI,GAAA96D,EAAAnrC,iBAAA0d,QAAAsoF,KAGA,IADA,IAAA9hG,IAAA,EACApe,GAAA,EAA2BA,GAAAigH,KAAwBjgH,GACnD,GAAAggH,EAAAhgH,IAAAolG,WAAA+a,GAAA,CAGAnM,EAAA5O,GAAA4a,EAAAhgH,IAAAw0G,QACAp2F,IAAA,EACA,MAEA,IAAAA,IAAA6nC,EAAAy4D,WAAA,CACA,IAAAlK,GAAAvuD,EAAAy4D,WAAA9mF,QAAAssE,KACA,IAAAsQ,IAAA0L,KAAAhc,KACAsQ,GAAAvuD,EAAAy4D,WAAA9mF,QAAAsoF,KAEA1L,GAAA,GAAAuK,EAAAvK,MACAR,EAAA5O,GAAAoP,YAIS,OAAAsL,GAAA,IAAAC,EACT,QAAAlvF,GAAA,EAA0BA,GAAAovF,KAAyBpvF,GACnDmjF,EAAAgM,EAAAnvF,IAAAu0E,UAAA4a,EAAAnvF,IAAA2jF,aAGA,QAAAj1E,GAAA,EAA2BA,GAAA0gF,KAA0B1gF,GACrD6lE,EAAA4a,EAAAzgF,IAAA6lE,SACA,IAAA0a,GAAA1a,GAAA,OAAAA,GAAA,QACAA,GAAA,KAEA4O,EAAA5O,GAAA4a,EAAAzgF,IAAAi1E,QAIA,IAAAR,EAAA7zG,SACA6zG,EAAA,MAEA,IAAAoM,GAAArM,EAAAC,EAAA/tD,EAAAguD,GAkBA,GAjBA91G,KAAAu0G,WAAA0N,GAAA1N,WACA1lD,EAAA,MACAslD,IAAA,OACA7uF,KAAAkxF,EAAAyL,GAAApM,kBAAAY,IAEA5nD,EAAA,SA7sCA,SAAAqzD,GACA,IAAA55G,EAAA,IAAAmU,EAAAzX,OAAAk9G,EAAA58F,MACA6jD,EAAA7gE,EAAAlC,YACAkC,EAAA1D,SAAA,IACA,IAAAu9G,EAAA75G,EAAAlC,YACA,QAAA+iE,EAAA,OAAAg5C,GAGA75G,EAAAlC,YACAkC,EAAAlC,cAIAkC,EAAA1D,SAAA,GAEA,IADA0D,EAAAlC,cAIA87G,EAAA58F,KAAA,GAAA48F,EAAA58F,KAAA,KACA,KA0rCA88F,CAAAvzD,EAAA,WACAA,EAAA,SACAslD,IAAA,OACA7uF,KAAAkyF,EAAA1vD,EAAAm6D,GAAApM,kBAAAuK,KAGAvxD,EAAA,OACAA,EAAA,MACAslD,IAAA,OACA7uF,KAAAkzF,EAAA1wD,MAGAm2D,EACA,IACAD,EAAA,IAAAvhG,EAAAzX,OAAA6pD,EAAA,QAAAvpC,MAEA0iC,EADA,IAAAkpD,EAAAnqD,UAAAi3D,EAAAl2D,EAAAmpD,GACA5+F,QACA,IAAAgwG,GAAA,IAAAnR,EAAA3qD,YAAAyB,GACA6G,EAAA,QAAAvpC,KAAA+8F,GAAAjyD,UACS,MAAAzyC,IACT,EAAAlY,EAAA4O,MAAA,0BAAAyzC,EAAAywC,YAGA,GAAA1pC,EAAA,KAKO,CACP,IAAAyzD,GAAA/G,EAAA1sD,EAAA,MACAA,EAAA,KAAAvpC,KAAAozF,EAAA34G,EAAAuiH,SANAzzD,EAAA,MACAslD,IAAA,OACA7uF,KAAAozF,EAAA14G,KAAAD,OAMA,IAAAwiH,GAAA,IAAAxP,EAAA9qD,EAAAkhB,SACA,QAAAq5C,MAAA3zD,EACA0zD,GAAArO,SAAAsO,GAAA3zD,EAAA2zD,IAAAl9F,MAEA,OAAAi9F,GAAA7O,WAEAqB,QAAA,SAAA/c,EAAAE,EAAApwC,GACAA,EAAA8hD,YAAA,EACA9hD,EAAA26D,iBAn2DA,SAAA36D,EAAA26D,GACA,IAAA36D,EAAAm+C,2BAGAn+C,EAAA69C,aAGA8c,IAAA36D,EAAAu9C,iBAGAv9C,EAAA08C,qBAAAmC,GAAA,CAGA,IAAAnC,EAAA,GACA/wC,GAAA,EAAAm/B,EAAArmE,oBACA,QAAA06E,KAAAwb,EAAA,CACA,IAAA1c,EAAA0c,EAAAxb,GACAvzC,GAAA,EAAA8+B,EAAAh/B,oBAAAuyC,EAAAtyC,IACA,IAAAC,IACA8wC,EAAAyC,GAAA9kF,OAAAC,aAAAsxC,IAGA5L,EAAA08C,UAAAsO,MAAAtO,IA80DAke,CAAA56D,IAAA26D,iBAEA,IAAAE,EAAAzqB,EAAA0qB,gBAAA96D,GACAm6D,EAAArM,EAAA+M,EAAA76D,EAAA3oD,OAAAe,OAAA,OACAF,KAAAu0G,WAAA0N,EAAA1N,WACA,IAAAkC,EAAAve,EAAAue,UACA,SAAAoM,EAAAhN,EAAAQ,GACA,IAAAyM,EAAA,KACA,QAAA7b,KAAA4O,EACAQ,IAAAR,EAAA5O,KACA6b,IACAA,EAAA,IAEAA,EAAA9kG,KAAA,EAAAipF,IAGA,OAAA6b,EAEA,SAAAC,EAAAlN,EAAAQ,GACA,QAAApP,KAAA4O,EACA,GAAAQ,IAAAR,EAAA5O,GACA,SAAAA,EAIA,OADAgb,EAAApM,kBAAAoM,EAAA9L,2BAAAE,EACA4L,EAAA9L,4BAEA,IAAA3rD,EAAA0tC,EAAA1tC,MACA,GAAAymD,GAAAzmD,KAAAxoD,OAAA,CACA,IAAAmR,EAAA20C,EAAAsB,YAAA3jD,EAAAw7F,qBACA53C,EAAA6uC,EAAA8qB,aACA9N,EAAA/1G,OAAAe,OAAA,MACA,QAAAm2G,KAAA7rD,EAAA,CAEA,IAAAyB,EAAAzB,EADA6rD,GAAA,GAEA4M,EAAA/7D,EAAAlrC,iBAAAiwC,EAAA,IACAi3D,EAAAh8D,EAAAlrC,iBAAAiwC,EAAA,IACAk3D,EAAA95D,EAAA5vB,QAAAwpF,GACAG,EAAA/5D,EAAA5vB,QAAAypF,GACA,KAAAC,EAAA,GAAAC,EAAA,IAGA,IAAAC,EAAA,CACAnoG,EAAA+wC,EAAA,GAAA94C,EAAA,GAAA84C,EAAA,GAAA94C,EAAA,GAAAA,EAAA,GACA8C,EAAAg2C,EAAA,GAAA94C,EAAA,GAAA84C,EAAA,GAAA94C,EAAA,GAAAA,EAAA,IAEA2vG,EAAAD,EAAAF,EAAAtM,GACA,GAAAyM,EAGA,QAAAjhH,EAAA,EAAAC,EAAAghH,EAAA9gH,OAAgDH,EAAAC,EAAQD,IAAA,CACxD,IAAAolG,EAAA6b,EAAAjhH,GACAg0G,EAAAoM,EAAApM,kBACAyN,EAAAP,EAAAlN,EAAAsN,GACAI,EAAAR,EAAAlN,EAAAuN,GACAlO,EAAAjO,GAAA,CACAqc,mBACAC,qBACAF,kBAIAv7D,EAAAotD,UAEA,IAAAyC,EAAA,GAAA7vD,EAAAsB,YAAA3jD,EAAAw7F,sBAAA,GACAshB,EAAA,IAAAxP,EAAA,QAyBA,OAxBAwP,EAAArO,SAAA,OAAAhc,EAAA5yE,MACAi9F,EAAArO,SAAA,OAAAsD,EAAA1vD,EAAAm6D,EAAApM,oBACA0M,EAAArO,SAAA,OAAAsC,EAAAyL,EAAApM,kBAAAY,IACA8L,EAAArO,SAAA,wCAAAuB,EAAAkC,GAAA,iCAAAlC,EAAA3tD,EAAA0B,SAAA,KAAAisD,EAAA3tD,EAAAyB,QAAAisD,EAAA1tD,EAAAiiD,YAAA,wBACAwY,EAAArO,SAAA,iBAAAuB,EAAA3tD,EAAAyB,QAAAksD,EAAA3tD,EAAA0B,SAAA,qBAAAisD,EAAA3tD,EAAAgiD,WAAA2L,EAAApmG,KAAAm0G,IAAA17D,EAAAiiD,aAAAjiD,EAAA+hD,SAAA,2BAAA2L,EAAAiB,IACA8L,EAAArO,SAAA,kBAIA,IAHA,IAAAuD,EAAAvf,EAAAuf,YACAgM,EAAAvrB,EAAAlwC,IAAAkwC,EAAAlwC,IAAAyC,OAAA,KACAi5D,EAAA,WACA7hH,EAAA,EAAAC,EAAA20G,EAAuC50G,EAAAC,EAAQD,IAAA,CAC/C,IAAA6O,EAAA,EACA,GAAA+mG,EAAA,CACA,IAAAprD,EAAAorD,EAAA51G,EAAA,GACA6O,EAAA,UAAA27C,IAAA37C,MAAA,OACW+yG,IACX/yG,EAAArB,KAAA2d,KAAAy2F,EAAA5hH,IAAA,IAEA6hH,GAAAlO,EAAA9kG,GAAA8kG,EAAA,GAEA,OAAAkO,EAdA,IAgBAnB,EAAArO,SAAA,iBAAAsB,EAAAiB,IACA8L,EAAArO,SAAA,OAAAwE,EAAA1gB,IACAuqB,EAAArO,SAAA,OAAAsE,EAAA1wD,IACAy6D,EAAA7O,WAEAzT,iBACA,oBAAAjgG,KACA,OAAAA,KAAA2jH,aAIA,IAFA,IACAjzG,EADAkzG,EAAA,gCAEA/hH,EAAA,EAAAC,EAAA8hH,EAAA5hH,OAA4DH,EAAAC,EAAQD,IAAA,CACpE,IAAAkkG,EAAA6d,EAAA/hH,GACA,GAAAkkG,KAAA/lG,KAAAyqD,OAAA,CACA/5C,EAAA1Q,KAAAyqD,OAAAs7C,GACA,MAEA,IACA5D,GADA,EAAAvP,EAAArmE,oBACAw5E,GACAD,EAAA,EAaA,GAZA9lG,KAAA2kG,WACA3kG,KAAAmmG,KAAA4H,SAAA5L,KACA2D,EAAA9lG,KAAAmmG,KAAA1yF,OAAA0uF,KAGA2D,GAAA9lG,KAAAwkG,YACAsB,EAAA9lG,KAAAwkG,UAAAwJ,WAAA7L,IAEA2D,GAAA,IACAA,EAAA3D,GAEAzxF,EAAA1Q,KAAAyqD,OAAAq7C,GAEA,MAKA,OAFAp1F,KAAA1Q,KAAA4sD,aACA5sD,KAAA2jH,aAAAjzG,EACAA,GAEAmzG,YAAA,SAAA/d,EAAAr4F,GACA,IAAA6oG,EAAA5lG,EAAAiiG,EACAmR,EAAAhe,EACA9lG,KAAAmmG,MAAAnmG,KAAAmmG,KAAA4H,SAAAjI,KACAge,EAAA9jH,KAAAmmG,KAAA1yF,OAAAqyF,IAEAp1F,EAAA1Q,KAAAyqD,OAAAq5D,GACApzG,GAAA,EAAAjL,EAAAqe,OAAApT,KAAA1Q,KAAA4sD,aACA,IAAAs1C,EAAAliG,KAAAynG,UAAAznG,KAAAynG,SAAAqc,GACApwD,EAAA1zD,KAAAwkG,UAAArkG,IAAA2lG,IAAA9lG,KAAAkmG,kBAAA/lG,IAAA2lG,MACA,iBAAApyC,IACAA,EAAAvxC,OAAAC,aAAAsxC,IAEA,IAAAk/C,EAAA9M,KAAA9lG,KAAAu0G,WACA+B,EAAAt2G,KAAAu0G,WAAAzO,MACA9lG,KAAAq0G,cACAiC,GAAA,EAAA9jB,EAAAr/B,yBAAAmjD,IAEAt2G,KAAAm4F,cACAwa,EAAA2D,GAEA,IAAA/c,EAAA,KACA,GAAAv5F,KAAAk1G,SAAAl1G,KAAAk1G,QAAApP,GAAA,CACA8M,GAAA,EACA,IAAA3mD,EAAAjsD,KAAAk1G,QAAApP,GACAwQ,EAAArqD,EAAAq3D,iBACA/pB,EAAA,CACAN,SAAA92E,OAAAC,aAAA6pC,EAAAs3D,oBACAp7F,OAAA8jC,EAAAo3D,cAGA,IAAApqB,EAAA92E,OAAAC,aAAAk0F,GACAhd,EAAAt5F,KAAAs0G,WAAAxO,GAKA,OAJAxM,KAAAuZ,gBAAA5Z,EAAAvlC,EAAA6lC,EAAA7oF,EAAAwxF,EAAAyQ,EAAAllG,EAAAmlG,KACAtZ,EAAA,IAAAoZ,EAAAzZ,EAAAvlC,EAAA6lC,EAAA7oF,EAAAwxF,EAAAyQ,EAAAllG,EAAAmlG,GACA5yG,KAAAs0G,WAAAxO,GAAAxM,GAEAA,GAEAZ,cAAA,SAAArlC,GACA,IACAolC,EAAAa,EAAAwM,EADAie,EAAA/jH,KAAA+jH,WAEA,GAAAA,IACAtrB,EAAAsrB,EAAA1wD,IAEA,OAAAolC,EAGAsrB,IACAA,EAAA/jH,KAAA+jH,WAAA5kH,OAAAe,OAAA,OAEAu4F,EAAA,GACA,IAEA32F,EAFAkiH,EAAA3wD,EACAxxD,EAAA,EAEA,GAAA7B,KAAAmmG,KAEA,IADA,IAAA95F,EAAAlN,OAAAe,OAAA,MACA2B,EAAAwxD,EAAArxD,QAAA,CACAhC,KAAAmmG,KAAA8H,aAAA56C,EAAAxxD,EAAAwK,GACAy5F,EAAAz5F,EAAAy5F,SACA,IAAA9jG,EAAAqK,EAAArK,OACAH,GAAAG,EACA,IAAAyL,EAAA,IAAAzL,GAAA,KAAAqxD,EAAA59C,WAAA5T,EAAA,GACAy3F,EAAAt5F,KAAA6jH,YAAA/d,EAAAr4F,GACAgrF,EAAAz6E,KAAAs7E,QAGA,IAAAz3F,EAAA,EAAAC,EAAAuxD,EAAArxD,OAAsCH,EAAAC,IAAQD,EAC9CikG,EAAAzyC,EAAA59C,WAAA5T,GACAy3F,EAAAt5F,KAAA6jH,YAAA/d,EAAA,KAAAA,GACArN,EAAAz6E,KAAAs7E,GAGA,OAAAyqB,EAAAC,GAAAvrB,IAGA+B,EAhzDA,GAkzDAlC,EAAA,WACA,SAAAA,EAAA11B,GACA5iE,KAAA4iE,QACA5iE,KAAAu4F,WAAA,eACAv4F,KAAAm1G,SAAA,EAUA,OARA7c,EAAA14F,UAAA,CACA84F,cAAA,WACA,UAEA0R,WAAA,WACA,OAAcxnC,MAAA5iE,KAAA4iE,SAGd01B,EAdA,GAgBA,SAAA2rB,EAAAn8D,EAAA26D,EAAAlC,GACA,IACAlK,EAAApP,EAAAj5C,EADA6nD,EAAA12G,OAAAe,OAAA,MAEAolG,KAAAx9C,EAAA9yB,MAAAuwE,EAAAC,UACA,GAAA19C,EAAAq9C,iBAEA,IADAn3C,GAAA,EAAA9G,EAAA9qC,aAAA0rC,EAAAq9C,kBACA8B,EAAA,EAAsBA,EAAAj5C,EAAAhsD,OAAgCilG,IACtDoP,EAAAkK,EAAA9mF,QAAAu0B,EAAAi5C,IAEA4O,EAAA5O,GADAoP,GAAA,EACAA,EAEA,OAGG,GAAA/Q,EACH,IAAA2B,KAAAwb,EACA5M,EAAA5O,GAAAwb,EAAAxb,QAIA,IADAj5C,EAAA9G,EAAAlrC,iBACAirF,EAAA,EAAsBA,EAAAj5C,EAAAhsD,OAAgCilG,IACtDoP,EAAAkK,EAAA9mF,QAAAu0B,EAAAi5C,IAEA4O,EAAA5O,GADAoP,GAAA,EACAA,EAEA,EAIA,IACA5iD,EADAyxC,EAAAp9C,EAAAo9C,YAEA,GAAAA,EACA,IAAA+B,KAAA/B,EAAA,CACA,IAAAa,EAAAb,EAAA+B,GAEA,SADAoP,EAAAkK,EAAA9mF,QAAAssE,IACA,CACAtyC,IACAA,GAAA,EAAAm/B,EAAArmE,qBAEA,IAAAw1F,EAAAtP,EAAA1M,EAAAtyC,GACAsuD,IAAAhc,IACAsQ,EAAAkK,EAAA9mF,QAAAsoF,IAIAlM,EAAA5O,GADAoP,GAAA,EACAA,EAEA,EAIA,OAAAR,EAEA,IAAAf,EAAA,WACA,SAAAoP,EAAAC,EAAAC,EAAAC,GAOA,IANA,IAIA33G,EAJA43G,EAAAH,EAAAniH,OACAuiH,EAAAH,EAAApiH,OACAme,EAAAmkG,EAAAC,EACA1iH,EAAAwiH,EAEApkG,GAAA,EACApe,EAAAse,GAAA,CAEA,IADAzT,EAAA,EACAA,EAAA63G,GAAAJ,EAAAtiH,EAAA6K,KAAA03G,EAAA13G,IACAA,IAEA,GAAAA,GAAA63G,EAAA,CAEA,IADA1iH,GAAA6K,EACA7K,EAAAyiH,IAAA,EAAA7+G,EAAAgI,SAAA02G,EAAAtiH,KACAA,IAEAoe,GAAA,EACA,MAEApe,IAEA,OACAoe,QACAje,OAAAH,GA4DA,SAAAizG,EAAA/0G,EAAA8nD,EAAAC,GACA,IACA08D,EAAA18D,EAAA0hD,QAEAib,GADA38D,EAAA2hD,QACA5hD,EAAAjhD,UAHA,IAIA89G,EAAA,MAAAD,EAAA,QAAAA,EAAA,GACAC,IACA78D,EAAAhhD,KANA,GAOA29G,EAAAC,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAE,EAnEA,SAAAr8G,EAAAs8G,GACA,IAEAC,EAAAC,EAAAC,EAqBAC,EAvBAC,EAAA,qBACAC,EAAA58G,EAAAtC,IAEA,IAEA8+G,GADAD,EAAAv8G,EAAA1D,SAAAggH,IACA5iH,OACK,MAAAwf,GACL,GAAAA,aAAA/b,EAAAmY,qBACA,MAAA4D,EAGA,GAAAsjG,IAAAF,IACAG,EAAAb,EAAAW,EAAAI,EAAAL,EAAA,EAAAK,EAAAjjH,SACAie,OAAA8kG,EAAA/iH,SAAA4iH,EACA,OACAt8G,OAAA,IAAAmU,EAAAzX,OAAA6/G,GACA7iH,OAAA4iH,GAQA,KAJA,EAAAn/G,EAAA4O,MAAA,kEACA/L,EAAAtC,IAAAk/G,EAMA,KADAH,EAAAb,EADA57G,EAAA1B,UAHA,MAIAq+G,EAAA,IACAjjH,QAIA,GADAsG,EAAAtC,KAAA++G,EAAA/iH,OACA+iH,EAAA9kG,MAAA,CACA+kG,EAAA18G,EAAAtC,IAAAk/G,EACA,MAIA,OADA58G,EAAAtC,IAAAk/G,EACAF,EACA,CACA18G,OAAA,IAAAmU,EAAAzX,OAAAsD,EAAA1D,SAAAogH,IACAhjH,OAAAgjH,KAGA,EAAAv/G,EAAA4O,MAAA,sEACA,CACA/L,OAAA,IAAAmU,EAAAzX,OAAAsD,EAAA1D,SAAAggH,IACA5iH,OAAA4iH,IAoBAO,CAAAt9D,EAAA28D,GACA,IAAApT,EAAAgU,YAAAT,EAAAr8G,QAAA,EAAA2oG,GACAoU,kBAAAv9D,GACA48D,KACAD,EAAA58D,EAAAjjD,SAbA,IAcA,GAAA6/G,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAvBAa,EAuBAC,GAvBAD,EAuBAz9D,EAvBAjjD,WACA,CACA0D,OAAA,IAAAmU,EAAAzX,OAAAsgH,GACAtjH,OAAAsjH,EAAAtjH,SAsBAsjB,EADA,IAAA8rF,EAAAgU,YAAAG,EAAAj9G,QAAA,EAAA2oG,GACAuU,qBACA,QAAA/uG,KAAA6O,EAAAwiC,WACAA,EAAArxC,GAAA6O,EAAAwiC,WAAArxC,GAEA,IAAAghG,EAAAnyF,EAAAmyF,YACAgO,EAAAzlH,KAAA0lH,oBAAAjO,GACAtlD,EAAAnyD,KAAA2lH,cAAArgG,EAAA6sC,OACAnyD,KAAAy3G,cACAz3G,KAAAslB,KAAAtlB,KAAA4lH,KAAA7lH,EAAA0lH,EAAAzlH,KAAAy3G,YAAAtlD,EAAArK,GACA9nD,KAAAwqD,MAAAxqD,KAAA6lH,SAAAvgG,EAAAmyF,aAgJA,OA9IA3C,EAAAl1G,UAAA,CACA62G,gBACA,OAAAz2G,KAAAy3G,YAAAz1G,OAAA,GAEAghH,WAAA,WAGA,IAFA,IAAA35D,EAAA,YACAouD,EAAAz3G,KAAAy3G,YACApB,EAAA,EAA2BA,EAAAoB,EAAAz1G,OAA8Bq0G,IACzDhtD,EAAArrC,KAAAy5F,EAAApB,GAAAtQ,WAEA,OAAA18C,GAEAu5D,gBAAA,SAAA96D,GACA,IAEAuuD,EAFAoB,EAAAz3G,KAAAy3G,YACA8I,EAAA,YAEA,IAAAlK,EAAA,EAAuBA,EAAAoB,EAAAz1G,OAA8Bq0G,IACrDkK,EAAAviG,KAAAy5F,EAAApB,GAAAtQ,WAEA,IAAAjkE,EAAAgmB,EAAA26D,gBACA,GAAA3gF,EAAA,CACA,IAAA2gF,EAAAtjH,OAAAe,OAAA,MACA,QAAA+mG,KAAAnlE,GACAu0E,EAAAkK,EAAA9mF,QAAAqI,EAAAmlE,MACA,IACAwb,EAAAxb,GAAAoP,GAIA,OAAA4N,EAAAn8D,EAAA26D,EAAAlC,IAEAsF,SAAA,SAAApO,GACA,IAAA51G,EAAAC,EACAozG,EAAA,GACA,IAAArzG,EAAA,EAAAC,EAAA21G,EAAAz1G,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAwqD,EAAAorD,EAAA51G,GACAwqD,EAAAJ,OACAipD,EAAArzG,EAAA,GAAAwqD,EAAAJ,MAGA,OAAAipD,GAEAwQ,oBAAA,SAAAI,GAEA,IADA,IAAAL,EAAA,GACA5jH,EAAA,EAAAC,EAAAgkH,EAAA9jH,OAAmDH,EAAAC,EAAQD,IAC3D4jH,EAAAznG,KAAA8nG,EAAAjkH,GAAAwqD,YAEA,OAAAo5D,GAEAE,cAAA,SAAAI,GACA,IAAA75D,EAAA,EACAh8C,EAAA61G,EAAA/jH,OAEAkqD,EADAh8C,EAAA,KACA,IACOA,EAAA,MACP,KAEA,MAEA,IACArO,EADAmkH,EAAA,GAEA,IAAAnkH,EAAA,EAAiBA,EAAAqqD,EAAUrqD,IAC3BmkH,EAAAhoG,KAAA,MAEA,IAAAnc,EAAA,EAAiBA,EAAAqO,EAAWrO,IAC5BmkH,EAAAhoG,KAAA+nG,EAAAlkH,IAEA,OAAAmkH,GAEAJ,KAAA,SAAA7lH,EAAA04F,EAAAgf,EAAAtlD,EAAArK,GACA,IAAAE,EAAA,IAAAkpD,EAAApqD,IACAkB,EAAAC,OAAA,IAAAipD,EAAArqD,UAAA,SACAmB,EAAAnyB,MAAA,CAAA91B,GACA,IAAA4+B,EAAA,IAAAuyE,EAAAzqD,WACA9nB,EAAA2wB,UAAA,eACA3wB,EAAA2wB,UAAA,cACA3wB,EAAA2wB,UAAA,gBACA3wB,EAAA2wB,UAAA,kBACA3wB,EAAA2wB,UAAA,cACA3wB,EAAA2wB,UAAA,iBACA3wB,EAAA2wB,UAAA,aAAAxH,EAAAsB,YACAzqB,EAAA2wB,UAAA,WAAAxH,EAAAijC,MACApsD,EAAA2wB,UAAA,gBACA3wB,EAAA2wB,UAAA,oBACA3wB,EAAA2wB,UAAA,gBACAtH,EAAArpB,UACA,IAAAgqB,EAAA,IAAAuoD,EAAAtqD,WACA+B,EAAAzK,IAAA,gBACAyK,EAAAzK,IAAA,uBACAyK,EAAAzK,IAAAn+C,GACA4oD,EAAAzK,IAAAn+C,GACA4oD,EAAAzK,IAAA,UACA8J,EAAAW,UACAX,EAAAO,gBAAA,IAAA2oD,EAAAvqD,SACA,IAEA9kD,EAAAC,EAFAoO,EAAAuoF,EAAAz2F,OACAikH,EAAA,IAEA,IAAApkH,EAAA,EAAiBA,EAAAqO,EAAWrO,IAAA,CAC5B,IAAAqiB,EAAAgtF,EAAAlqD,mBAAAvtB,QAAAg+E,EAAA51G,GAAAkkG,YACA,IAAA7hF,IACAA,EAAA,GAEA+hG,EAAAjoG,KAAAkG,GAAA,UAAAA,GAEA8jC,EAAAqB,QAAA,IAAA6nD,EAAAxqD,YAAA,OAAAu/D,GACA,IAAAC,EAAA,IAAAhV,EAAAvqD,SAEA,IADAu/D,EAAAhoE,IAAA,UACAr8C,EAAA,EAAiBA,EAAAqO,EAAWrO,IAAA,CAC5B,IAAAy3F,EAAAb,EAAA52F,GACA,IAAAy3F,EAAAt3F,OAIAkkH,EAAAhoE,IAAAo7C,GAHA4sB,EAAAhoE,IAAA,UAKA8J,EAAAoC,YAAA87D,EACA,IAAA57D,EAAA,IAAA4mD,EAAA1qD,eACA8D,EAAAgF,UAAA,cACA,IAAAia,EAAA,sLACA,IAAA1nE,EAAA,EAAAC,EAAAynE,EAAAvnE,OAAqCH,EAAAC,EAAQD,IAAA,CAC7C,IAAAskH,EAAA58C,EAAA1nE,GACA,GAAAskH,KAAAr+D,EAAAs+D,YAAA,CAGA,IAAA9mH,EAAAwoD,EAAAs+D,YAAAD,GACA,GAAAxkH,MAAAC,QAAAtC,GACA,QAAAoN,EAAApN,EAAA0C,OAAA,EAAwC0K,EAAA,EAAOA,IAC/CpN,EAAAoN,IAAApN,EAAAoN,EAAA,GAGA49C,EAAAgF,UAAA62D,EAAA7mH,IAEA0oD,EAAArpB,QAAA2rB,cACA,IAAA+7D,EAAA,IAAAnV,EAAAvqD,SACA,IAAA9kD,EAAA,EAAAC,EAAAqwD,EAAAnwD,OAAoCH,EAAAC,EAAQD,IAC5CwkH,EAAAnoE,IAAAiU,EAAAtwD,IAIA,OAFAyoD,EAAAC,WAAA87D,EACA,IAAAnV,EAAA3qD,YAAAyB,GACAoI,YAGA0kD,EAjQA,GAmQAD,EAAA,WACA,SAAAA,EAAAhtD,EAAAC,GACA9nD,KAAA8nD,aACA,IAAApkC,EAAA,IAAAwtF,EAAAnqD,UAAAc,EAAAC,EAAAmpD,GACAjxG,KAAAgoD,IAAAtkC,EAAArR,QACA,IAAAgwG,EAAA,IAAAnR,EAAA3qD,YAAAvmD,KAAAgoD,KACAhoD,KAAAwqD,MAAAxqD,KAAAgoD,IAAAwC,MACA,IACAxqD,KAAAslB,KAAA+8F,EAAAjyD,UACK,MAAAzyC,IACL,EAAAlY,EAAA4O,MAAA,0BAAAyzC,EAAAywC,YACAv4F,KAAAslB,KAAAuiC,GAoCA,OAjCAgtD,EAAAj1G,UAAA,CACA62G,gBACA,OAAAz2G,KAAAgoD,IAAAoC,YAAAl6C,OAEA8yG,WAAA,WACA,OAAAhjH,KAAAgoD,IAAAqB,iBAEAu5D,gBAAA,WACA,IAGA/M,EACAQ,EAJAruD,EAAAhoD,KAAAgoD,IACAF,EAAA9nD,KAAA8nD,WACAw+D,EAAAt+D,EAAAqB,gBAGA,GAAAvB,EAAA68C,UAAA,CAEA,GADAkR,EAAA12G,OAAAe,OAAA,MACA8nD,EAAAe,UACA,IAAAstD,EAAA,EAA2BA,EAAAiQ,EAAAtkH,OAA2Bq0G,IAAA,CACtD,IAAAhpD,EAAAi5D,EAAAjQ,GAEAR,EADA/tD,EAAAq+C,KAAA6H,WAAA3gD,IACAgpD,OAGA,IAAAA,EAAA,EAA2BA,EAAAruD,EAAAoC,YAAAl6C,MAAiCmmG,IAC5DR,EAAAQ,KAGA,OAAAR,EAIA,OADAA,EAAAoO,EAAAn8D,EADAE,EAAAlmB,SAAAkmB,EAAAlmB,kBAAA,KACAwkF,KAIAzR,EA/CA,GAkDA,oBAAA0R,WAAA,UAAAtoF,KAAAsoF,UAAAC,aACAnnH,EAAA4xG,yBAAA,GAIA,oBAAAsV,WAAA,kBAAAtoF,KAAAsoF,UAAAC,aACAnV,GAAA,GAGAhyG,EAAA4xG,wBACA5xG,EAAA2xG,2BACA3xG,EAAA0xG,yBACA1xG,EAAAi5F,YACAj5F,EAAAm7F,OACAn7F,EAAAkmG,YACAlmG,EAAA2mG,eACA3mG,EAAAsnG,uBACAtnG,EAAAyxG,wBACAzxG,EAAAy7F,gDCn/EA37F,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAKAD,EAAAmuD,gBAHA,ygEAIAnuD,EAAAquD,cAHA,wrEAIAruD,EAAAuuD,oBAHA,ktCCLAzuD,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAg6G,yBAAAn2G,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBwrG,EAAkBxrG,EAAQ,KAE1BktF,EAAiBltF,EAAQ,KAEzBwhD,EAAiBxhD,EAAQ,KAEzB+W,EAAc/W,EAAQ,KAEtB2zG,EAAA,WACA,SAAAoN,EAAAnhG,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,GAEA,SAAAu+F,EAAAphG,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,GAEA,SAAAw+F,EAAArhG,EAAAzf,EAAAI,GACA,IAEAgrB,EAAAjkB,EAAAnL,EAFAsmB,EAAA,IAAAu+F,EAAAphG,EAAAzf,EAAA,GAAA4gH,EAAAnhG,EAAAzf,EAAA,GAAA4gH,EAAAnhG,EAAAzf,EAAA,IACAgoD,EAAA64D,EAAAphG,EAAAzf,EAAAsiB,GAEA,OAAA0lC,EAAA,CACA64D,EAAAphG,EAAAzf,EAAAsiB,EAAA,GACA,IAAA2uF,EAAA4P,EAAAphG,EAAAzf,EAAAsiB,EAAA,MAGA,IAFAnb,EAAAnH,EAAAsiB,EAAA,GACA8I,EAAA,GACApvB,EAAA,EAAiBA,EAAAi1G,EAAcj1G,IAAAmL,GAAA,EAC/BikB,EAAApvB,GAAA,CAAqBoE,IAAAygH,EAAAphG,EAAAtY,IAGrB,IADAA,GAAA,EACAnL,EAAA,EAAiBA,EAAAi1G,EAAcj1G,IAAAmL,GAAA,EAC/BikB,EAAApvB,GAAAgE,MAAA6gH,EAAAphG,EAAAtY,GAEA,IAAAnL,EAAA,EAAiBA,EAAAi1G,EAAcj1G,IAAAmL,GAAA,EAC/BikB,EAAApvB,GAAA+kH,QAAAF,EAAAphG,EAAAtY,GAEA,IAAAnL,EAAA,EAAiBA,EAAAi1G,EAAcj1G,IAAAmL,GAAA,GAC/B,IAAA65G,EAAAH,EAAAphG,EAAAtY,GACA,OAAA65G,EAAA,CAGA51F,EAAApvB,GAAAy5B,IAAA,GACA,QAAA5uB,EAAA,EAAAwqB,EAAAjG,EAAApvB,GAAAoE,IAAAgrB,EAAApvB,GAAAgE,MAAA,EAAiE6G,EAAAwqB,EAAQxqB,IACzEukB,EAAApvB,GAAAy5B,IAAA5uB,GAAAg6G,EAAAphG,EAAAtY,EAAA65G,GACAA,GAAA,GAGA,OAAA51F,EACK,QAAA48B,EAAA,CACL44D,EAAAnhG,EAAAzf,EAAAsiB,EAAA,GACA,IAAA2+F,EAAAL,EAAAnhG,EAAAzf,EAAAsiB,EAAA,IAGA,IAFAnb,EAAAnH,EAAAsiB,EAAA,GACA8I,EAAA,GACApvB,EAAA,EAAiBA,EAAAilH,EAAYjlH,IAC7BovB,EAAAjT,KAAA,CACAnY,MAAA4gH,EAAAnhG,EAAAtY,GACA/G,IAAAwgH,EAAAnhG,EAAAtY,EAAA,GACA45G,QAAAH,EAAAnhG,EAAAtY,EAAA,GAAAy5G,EAAAnhG,EAAAtY,KAEAA,GAAA,GAEA,OAAAikB,EAEA,UAAAxrB,EAAAyD,YAAA,qBAAA2kD,GAEA,SAAAk5D,EAAAzhG,EAAAzf,EAAAI,EAAA8hD,GACA,IAEAC,EADA,IAAAkpD,EAAAnqD,UAAA,IAAAtqC,EAAAzX,OAAAsgB,EAAAzf,EAAAI,EAAAJ,GADA,GACAkiD,GACA11C,QACA,OACAomF,OAAAzwC,EAAAoC,YAAAuE,QACAwD,MAAAnK,EAAArpB,QAAA2rB,aAAAtC,EAAArpB,QAAA2rB,YAAAC,YAAAvC,EAAArpB,QAAA2rB,YAAAC,WAAAoE,QACAq4D,OAAAh/D,EAAAO,iBAAAP,EAAAO,gBAAAoG,QACAs4D,aAAAj/D,EAAAe,UACAgB,SAAA/B,EAAA+B,SACAF,QAAA7B,EAAA6B,SAyBA,SAAAq9D,EAAAj2F,EAAAyiC,GAKA,IAJA,IAAA9pD,EAAA8pD,EAAAj+C,WAAA,GACA24C,EAAA,EACA1uB,EAAA,EACA9pB,EAAAqb,EAAAjvB,OAAA,EACA09B,EAAA9pB,GAAA,CACA,IAAAvJ,EAAAqzB,EAAA9pB,EAAA,KACAhM,EAAAqnB,EAAA5kB,GAAAxG,MACA+P,EAAAvJ,EAAA,EAEAqzB,EAAArzB,EAMA,OAHA4kB,EAAAyO,GAAA75B,OAAA+D,MAAAqnB,EAAAyO,GAAAz5B,MACAmoD,EAAAn9B,EAAAyO,GAAAknF,SAAA31F,EAAAyO,GAAApE,IAAArK,EAAAyO,GAAApE,IAAA1xB,EAAAqnB,EAAAyO,GAAA75B,OAAA+D,GAAA,OAEA,CACAq9F,SAAAr9F,EACAysG,QAAAjoD,GA2gBA,SAAA+4D,EAAA/9D,GACAppD,KAAAonH,eAAAjoH,OAAAe,OAAA,MACAF,KAAAqnH,0BAAAloH,OAAAe,OAAA,MACAF,KAAAopD,aAmDA,SAAAk+D,EAAA7uB,EAAAsO,EAAA39C,GACAA,KAAA,wBACA+9D,EAAAljH,KAAAjE,KAAAopD,GACAppD,KAAAy4F,SACAz4F,KAAA+mG,OAOA,SAAAwgB,EAAAC,EAAAzgB,EAAA39C,EAAAq+D,GACAr+D,KAAA,oBACA+9D,EAAAljH,KAAAjE,KAAAopD,GACAppD,KAAAy4F,OAAA+uB,EAAA/uB,OACAz4F,KAAAgnH,OAAAQ,EAAAR,QAAA,GACAhnH,KAAAmyD,MAAAq1D,EAAAr1D,OAAA,GACAnyD,KAAA+mG,OACA/mG,KAAAynH,iBAAA,EAAA70B,EAAArmE,oBACAvsB,KAAA0nH,WAAA1nH,KAAAgnH,OAAAhlH,OAAA,SAAAhC,KAAAgnH,OAAAhlH,OAAA,iBACAhC,KAAA2nH,UAAA3nH,KAAAmyD,MAAAnwD,OAAA,SAAAhC,KAAAmyD,MAAAnwD,OAAA,iBACAhC,KAAAinH,aAAAO,EAAAP,aACAjnH,KAAA+pD,SAAAy9D,EAAAz9D,SACA/pD,KAAA6pD,QAAA29D,EAAA39D,QAOA,OA/EAs9D,EAAAvnH,UAAA,CACAy5F,UAAA,SAAA3lC,GACA,IAAAqzC,EAAAmgB,EAAAlnH,KAAA+mG,KAAArzC,GACA3vD,EAAA/D,KAAAonH,eAAArgB,EAAAsP,SAQA,OAPAtyG,IACAA,EAAA/D,KAAA4nH,aAAA5nH,KAAAy4F,OAAAsO,EAAAsP,SAAAtP,EAAAsP,SACAr2G,KAAAonH,eAAArgB,EAAAsP,SAAAtyG,QAEAb,IAAAlD,KAAAqnH,0BAAAtgB,EAAAE,YACAjnG,KAAAqnH,0BAAAtgB,EAAAE,UAAAF,EAAAsP,SAEAtyG,GAEA6jH,aAAA,SAAAh+G,EAAAysG,GACA,IAAAzsG,GAAA,IAAAA,EAAA5H,QAAA,KAAA4H,EAAA,GACA,MArBA,GAuBA,IAAAw/C,EAAAppD,KAAAopD,WACA,GAAAppD,KAAAinH,aAAA,CACA,IAAAx6D,EAAAzsD,KAAA+pD,SAAA2C,WAAA2pD,GACA,GAAA5pD,GAAA,GAAAA,EAAAzsD,KAAA6pD,QAAA7nD,OAEAonD,EADAppD,KAAA6pD,QAAA4C,GACAvD,UAAA,eAAAzjD,EAAAw7F,0BAEA,EAAAx7F,EAAA4O,MAAA,qCAGA,IAAAwzG,EAAA,GAYA,OAXAA,EAAA7pG,KAAA,CAAiB1d,IAAA,SACjBunH,EAAA7pG,KAAA,CACA1d,IAAA,YACAupB,KAAAu/B,EAAArnD,UAEA8lH,EAAA7pG,KAAA,CACA1d,IAAA,QACAupB,KAAA,mBAEA7pB,KAAA8nH,iBAAAl+G,EAAAi+G,EAAAxR,GACAwR,EAAA7pG,KAAA,CAAiB1d,IAAA,YACjBunH,GAEAC,iBAAA,YACA,EAAAriH,EAAAgK,aAAA,4CAEA0pF,aAAA,SAAAzlC,GACA,IAAAqzC,EAAAmgB,EAAAlnH,KAAA+mG,KAAArzC,GACA,YAAAxwD,IAAAlD,KAAAonH,eAAArgB,EAAAsP,eAAAnzG,IAAAlD,KAAAqnH,0BAAAtgB,EAAAE,YASAxhG,EAAA8C,KAAAw3B,QAAAunF,EAAAH,EAAA,CACAW,iBAAA,SAAAl+G,EAAAi+G,IArkBA,SAAAE,EAAAn+G,EAAAi+G,EAAA3vB,GACA,SAAAmG,EAAAnjF,EAAAjF,GACA4xG,EAAA7pG,KAAA,CACA1d,IAAA,SACAupB,KAAA,CAAA3O,EAAAjF,KAGA,SAAAqoF,EAAApjF,EAAAjF,GACA4xG,EAAA7pG,KAAA,CACA1d,IAAA,SACAupB,KAAA,CAAA3O,EAAAjF,KAGA,SAAA+xG,EAAAC,EAAAC,EAAAhtG,EAAAjF,GACA4xG,EAAA7pG,KAAA,CACA1d,IAAA,mBACAupB,KAAA,CAAAo+F,EAAAC,EAAAhtG,EAAAjF,KAGA,IAEA+e,EAFAnzB,EAAA,EACAsmH,GAAAv+G,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,YAEAqZ,EAAA,EACAjF,EAAA,EAEA,GADApU,GAAA,GACAsmH,EAAA,EACA,GACAnzF,EAAAprB,EAAA/H,IAAA,EAAA+H,EAAA/H,EAAA,GACA,IAEAo4D,EAAAC,EAFAzK,EAAA7lD,EAAA/H,EAAA,MAAA+H,EAAA/H,EAAA,GACAA,GAAA,EAEA,EAAAmzB,GACAilC,GAAArwD,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,YACAq4D,GAAAtwD,EAAA/H,EAAA,OAAA+H,EAAA/H,EAAA,YACAA,GAAA,IAEAo4D,EAAArwD,EAAA/H,KACAq4D,EAAAtwD,EAAA/H,MAEA,EAAAmzB,GACA9Z,EAAA++C,EACAhkD,EAAAikD,IAEAh/C,EAAA,EACAjF,EAAA,GAEA,IAAAqvE,EAAA,EACAC,EAAA,EACA6iC,EAAA,EACAC,EAAA,EACA,EAAArzF,GACAswD,EAAAC,GAAA37E,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,mBACAA,GAAA,GACS,GAAAmzB,GACTswD,GAAA17E,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,mBACA0jF,GAAA37E,EAAA/H,EAAA,OAAA+H,EAAA/H,EAAA,mBACAA,GAAA,GACS,IAAAmzB,IACTswD,GAAA17E,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,mBACAumH,GAAAx+G,EAAA/H,EAAA,OAAA+H,EAAA/H,EAAA,mBACAwmH,GAAAz+G,EAAA/H,EAAA,OAAA+H,EAAA/H,EAAA,mBACA0jF,GAAA37E,EAAA/H,EAAA,OAAA+H,EAAA/H,EAAA,mBACAA,GAAA,GAEA,IAAAymH,EAAApwB,EAAAO,OAAAhpC,GACA64D,IACAT,EAAA7pG,KAAA,CAAqB1d,IAAA,SACrBunH,EAAA7pG,KAAA,CACA1d,IAAA,YACAupB,KAAA,CAAAy7D,EAAA8iC,EAAAC,EAAA9iC,EAAArqE,EAAAjF,KAEA8xG,EAAAO,EAAAT,EAAA3vB,GACA2vB,EAAA7pG,KAAA,CAAqB1d,IAAA,mBAEd,GAAA00B,OACF,CACL,IACAtoB,EAAAwqB,EADAqxF,EAAA,GAEA,IAAA77G,EAAA,EAAiBA,EAAAy7G,EAAsBz7G,IACvC67G,EAAAvqG,KAAApU,EAAA/H,IAAA,EAAA+H,EAAA/H,EAAA,IACAA,GAAA,EAGAA,GAAA,GADA+H,EAAA/H,IAAA,EAAA+H,EAAA/H,EAAA,IAIA,IAFA,IAAA2mH,EAAAD,IAAAvmH,OAAA,KACAymH,EAAA,GACAA,EAAAzmH,OAAAwmH,GAAA,CAEA,IAAAnN,EAAA,EAIA,IAHA,GAFArmF,EAAAprB,EAAA/H,QAGAw5G,GAAAzxG,EAAA/H,MAEAw5G,KAAA,GACAoN,EAAAzqG,KAAA,CAAuBgX,UAGvB,IAAAtoB,EAAA,EAAiBA,EAAA87G,EAAoB97G,IAAA,CACrC,UAAA+7G,EAAA/7G,GAAAsoB,OACA,OACA9Z,IAAAtR,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,YACAA,GAAA,EACA,MACA,OACAqZ,GAAAtR,EAAA/H,KACA,MACA,QACAqZ,GAAAtR,EAAA/H,KAGA4mH,EAAA/7G,GAAAwO,IAEA,IAAAxO,EAAA,EAAiBA,EAAA87G,EAAoB97G,IAAA,CACrC,UAAA+7G,EAAA/7G,GAAAsoB,OACA,OACA/e,IAAArM,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,YACAA,GAAA,EACA,MACA,OACAoU,GAAArM,EAAA/H,KACA,MACA,QACAoU,GAAArM,EAAA/H,KAGA4mH,EAAA/7G,GAAAuJ,IAEA,IAAAyyG,EAAA,EACA,IAAA7mH,EAAA,EAAiBA,EAAAsmH,EAAsBtmH,IAAA,CACvC,IAAA8mH,EAAAJ,EAAA1mH,GACA+mH,EAAAH,EAAA1mH,MAAA2mH,EAAAC,EAAA,GACA,KAAAC,EAAA,GAAA5zF,MACA4zF,EAAA5qG,KAAA4qG,EAAA,SACS,KAAAA,IAAA5mH,OAAA,GAAAgzB,MACT4zF,EAAAzsD,QAAAysD,IAAA5mH,OAAA,QACS,CACT,IAAAgL,EAAA,CACAgoB,MAAA,EACA9Z,GAAA0tG,EAAA,GAAA1tG,EAAA0tG,IAAA5mH,OAAA,GAAAkZ,GAAA,EACAjF,GAAA2yG,EAAA,GAAA3yG,EAAA2yG,IAAA5mH,OAAA,GAAAiU,GAAA,GAEA2yG,EAAAzsD,QAAAnvD,GACA47G,EAAA5qG,KAAAhR,GAGA,IADAqxF,EAAAuqB,EAAA,GAAA1tG,EAAA0tG,EAAA,GAAA3yG,GACAvJ,EAAA,EAAAwqB,EAAA0xF,EAAA5mH,OAAwC0K,EAAAwqB,EAAQxqB,IAChD,EAAAk8G,EAAAl8G,GAAAsoB,MACAspE,EAAAsqB,EAAAl8G,GAAAwO,EAAA0tG,EAAAl8G,GAAAuJ,GACW,EAAA2yG,EAAAl8G,EAAA,GAAAsoB,OACXgzF,EAAAY,EAAAl8G,GAAAwO,EAAA0tG,EAAAl8G,GAAAuJ,EAAA2yG,EAAAl8G,EAAA,GAAAwO,EAAA0tG,EAAAl8G,EAAA,GAAAuJ,GACAvJ,KAEAs7G,EAAAY,EAAAl8G,GAAAwO,EAAA0tG,EAAAl8G,GAAAuJ,GAAA2yG,EAAAl8G,GAAAwO,EAAA0tG,EAAAl8G,EAAA,GAAAwO,GAAA,GAAA0tG,EAAAl8G,GAAAuJ,EAAA2yG,EAAAl8G,EAAA,GAAAuJ,GAAA,GAGAyyG,EAAAC,EAAA,IA4aAZ,CAAAn+G,EAAAi+G,EAAA7nH,SAiBAyF,EAAA8C,KAAAw3B,QAAAwnF,EAAAJ,EAAA,CACAW,iBAAA,SAAAl+G,EAAAi+G,EAAAxR,IA1bA,SAAAwS,EAAAj/G,EAAAi+G,EAAA3vB,EAAAme,GACA,IAAAzuD,EAAA,GACA1sC,EAAA,EACAjF,EAAA,EACA6yG,EAAA,EACA,SAAAzqB,EAAAnjF,EAAAjF,GACA4xG,EAAA7pG,KAAA,CACA1d,IAAA,SACAupB,KAAA,CAAA3O,EAAAjF,KAGA,SAAAqoF,EAAApjF,EAAAjF,GACA4xG,EAAA7pG,KAAA,CACA1d,IAAA,SACAupB,KAAA,CAAA3O,EAAAjF,KAGA,SAAA8yG,EAAA9iF,EAAAK,EAAAtjB,EAAAizB,EAAA/6B,EAAAjF,GACA4xG,EAAA7pG,KAAA,CACA1d,IAAA,gBACAupB,KAAA,CAAAoc,EAAAK,EAAAtjB,EAAAizB,EAAA/6B,EAAAjF,MAGA,SAAA5D,EAAAzI,GAEA,IADA,IAAA/H,EAAA,EACAA,EAAA+H,EAAA5H,QAAA,CACA,IAEAimH,EAAAe,EAAAd,EAAAe,EAAA3iF,EAAA2P,EAAAnvC,EAAAoiH,EAFAC,GAAA,EACA/kH,EAAAwF,EAAA/H,KAEA,OAAAuC,GACA,OAIA,OACA0kH,GAAAlhE,EAAA5lD,QAAA,EACAmnH,GAAA,EACA,MACA,OACAlzG,GAAA2xC,EAAAhvB,MACAylE,EAAAnjF,EAAAjF,GACAkzG,GAAA,EACA,MACA,OACA,KAAAvhE,EAAA5lD,OAAA,GACAkZ,GAAA0sC,EAAAz/C,QACA8N,GAAA2xC,EAAAz/C,QACAm2F,EAAApjF,EAAAjF,GAEA,MACA,OACA,KAAA2xC,EAAA5lD,OAAA,IAEAs8F,EADApjF,GAAA0sC,EAAAz/C,QACA8N,GACA,IAAA2xC,EAAA5lD,SAGAiU,GAAA2xC,EAAAz/C,QACAm2F,EAAApjF,EAAAjF,GAEA,MACA,OACA,KAAA2xC,EAAA5lD,OAAA,IACAiU,GAAA2xC,EAAAz/C,QACAm2F,EAAApjF,EAAAjF,GACA,IAAA2xC,EAAA5lD,SAIAs8F,EADApjF,GAAA0sC,EAAAz/C,QACA8N,GAEA,MACA,OACA,KAAA2xC,EAAA5lD,OAAA,GACAimH,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GAEA,MACA,QAGA,GAFAnP,EAAA8gD,EAAAhvB,MACAswF,EAAA,KACAhxB,EAAA+uB,aAAA,CACA,IAAAx6D,EAAAyrC,EAAAnuC,SAAA2C,WAAA2pD,GACA,GAAA5pD,GAAA,GAAAA,EAAAyrC,EAAAruC,QAAA7nD,OAAA,CACA,IAAA4nD,EAAAsuC,EAAAruC,QAAA4C,GACA0F,OAAA,EAIA,GAHAvI,EAAAU,aAAAV,EAAAU,YAAAC,aACA4H,EAAAvI,EAAAU,YAAAC,WAAAoE,SAEAwD,EAAA,CACA,IAAAi3D,EAAAj3D,EAAAnwD,OAEAknH,EAAA/2D,EADArrD,GAAAsiH,EAAA,SAAAA,EAAA,wBAIA,EAAA3jH,EAAA4O,MAAA,0CAGA60G,EAAAhxB,EAAA/lC,MAAArrD,EAAAoxF,EAAAyvB,WAEAuB,GACA72G,EAAA62G,GAEA,MACA,QACA,OACA,QAEA,OADA9kH,EAAAwF,EAAA/H,MAEA,QAEAmnH,GADAf,EAAA/sG,EAAA0sC,EAAAz/C,SACAy/C,EAAAz/C,QACAm+B,EAAArwB,EAAA2xC,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA4gH,EAAAd,EAAAhyG,EAAA+yG,EAAA1iF,EAAAprB,EAAAorB,GAEA0iF,GADAf,EAAA/sG,EAAA0sC,EAAAz/C,SACAy/C,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA4gH,EAAAd,EAAA3hF,EAAA0iF,EAAA/yG,EAAAiF,EAAAjF,GACA,MACA,QACAgyG,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GACAgyG,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GACA2xC,EAAAhvB,MACA,MACA,QAMAmwF,EALAd,EAAA/sG,EAAA0sC,EAAAz/C,QACAm+B,EAAArwB,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8tC,EAAA3P,EAAAshB,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8tC,GAKA8yE,EAJAd,EAAA/sG,EAAA0sC,EAAAz/C,QAIA8tC,EAHA+yE,EAAAf,EAAArgE,EAAAz/C,QACA8tC,EAAA2R,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,GACA,MACA,QACA,IAAA6vB,EAAA5qB,EACAirB,EAAAlwB,EACAgyG,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GACAgyG,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EACA/yG,EAAAgzG,EACA55G,KAAAiqD,IAAAp+C,EAAA4qB,GAAAz2B,KAAAiqD,IAAArjD,EAAAkwB,GACAjrB,GAAA0sC,EAAAz/C,QAEA8N,GAAA2xC,EAAAz/C,QAEA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GACA,MACA,QACA,UAAAxQ,EAAAyD,YAAA,wBAAA9E,GAEA,MACA,QACA,GAAAwjD,EAAA5lD,QAAA,GACA,IAAAqnH,EAAAzhE,EAAAhvB,MACA0wF,EAAA1hE,EAAAhvB,MACA3iB,EAAA2xC,EAAAhvB,MACA1d,EAAA0sC,EAAAhvB,MACAivF,EAAA7pG,KAAA,CAAyB1d,IAAA,SACzBunH,EAAA7pG,KAAA,CACA1d,IAAA,YACAupB,KAAA,CAAA3O,EAAAjF,KAEA,IAAA8wF,EAAAmgB,EAAAhvB,EAAA6O,KAAA5kF,OAAAC,aAAA81E,EAAAuvB,aAAAvgE,EAAAlrC,iBAAAqtG,MACAR,EAAA3wB,EAAAO,OAAAsO,EAAAsP,SAAAwR,EAAA3vB,EAAA6O,EAAAsP,SACAwR,EAAA7pG,KAAA,CAAyB1d,IAAA,YACzBymG,EAAAmgB,EAAAhvB,EAAA6O,KAAA5kF,OAAAC,aAAA81E,EAAAuvB,aAAAvgE,EAAAlrC,iBAAAstG,MACAT,EAAA3wB,EAAAO,OAAAsO,EAAAsP,SAAAwR,EAAA3vB,EAAA6O,EAAAsP,SAEA,OACA,QACAyS,GAAAlhE,EAAA5lD,QAAA,EACAmnH,GAAA,EACA,MACA,QAKA,QAEAtnH,IADAinH,GAAAlhE,EAAA5lD,QAAA,GACA,KACAmnH,GAAA,EACA,MACA,QACAlzG,GAAA2xC,EAAAhvB,MAEAylE,EADAnjF,GAAA0sC,EAAAhvB,MACA3iB,GACAkzG,GAAA,EACA,MACA,QAEA9qB,EADAnjF,GAAA0sC,EAAAhvB,MACA3iB,GACAkzG,GAAA,EACA,MACA,QACAL,GAAAlhE,EAAA5lD,QAAA,EACAmnH,GAAA,EACA,MACA,QACA,KAAAvhE,EAAA5lD,OAAA,GACAimH,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GAEAiF,GAAA0sC,EAAAz/C,QACA8N,GAAA2xC,EAAAz/C,QACAm2F,EAAApjF,EAAAjF,GACA,MACA,QACA,KAAA2xC,EAAA5lD,OAAA,GACAkZ,GAAA0sC,EAAAz/C,QACA8N,GAAA2xC,EAAAz/C,QACAm2F,EAAApjF,EAAAjF,GAEAgyG,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GACA,MACA,QAIA,IAHA2xC,EAAA5lD,OAAA,IACAkZ,GAAA0sC,EAAAz/C,SAEAy/C,EAAA5lD,OAAA,GACAimH,EAAA/sG,EACAgtG,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EACA/yG,EAAAgzG,EAAArhE,EAAAz/C,QACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GAEA,MACA,QAIA,IAHA2xC,EAAA5lD,OAAA,IACAiU,GAAA2xC,EAAAz/C,SAEAy/C,EAAA5lD,OAAA,GAOA+mH,EANAd,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EACA+yG,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,GAGA,MACA,QACArhE,EAAA5pC,MAAApU,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,aACAA,GAAA,EACA,MACA,QACAiF,EAAA8gD,EAAAhvB,MAAAs/D,EAAAwvB,YACAwB,EAAAhxB,EAAA8uB,OAAAlgH,KAEAuL,EAAA62G,GAEA,MACA,QACA,KAAAthE,EAAA5lD,OAAA,IACAimH,EAAA/sG,EACAgtG,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,GAAA,IAAArhE,EAAA5lD,OAAA4lD,EAAAz/C,QAAA,GACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GACA,IAAA2xC,EAAA5lD,SAGAimH,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EACA+yG,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QAEA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EADA/tG,EAAA8tG,GAAA,IAAAphE,EAAA5lD,OAAA4lD,EAAAz/C,QAAA,GACA8N,GAEA,MACA,QACA,KAAA2xC,EAAA5lD,OAAA,IACAimH,EAAA/sG,EAAA0sC,EAAAz/C,QACA+/G,EAAAjyG,EACA+yG,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA8N,EAAAgzG,EAAArhE,EAAAz/C,QAEA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EADA/tG,EAAA8tG,GAAA,IAAAphE,EAAA5lD,OAAA4lD,EAAAz/C,QAAA,GACA8N,GACA,IAAA2xC,EAAA5lD,SAGAimH,EAAA/sG,EACAgtG,EAAAjyG,EAAA2xC,EAAAz/C,QACA6gH,EAAAf,EAAArgE,EAAAz/C,QACA8gH,EAAAf,EAAAtgE,EAAAz/C,QACA+S,EAAA8tG,EAAAphE,EAAAz/C,QACA8N,EAAAgzG,GAAA,IAAArhE,EAAA5lD,OAAA4lD,EAAAz/C,QAAA,GACA4gH,EAAAd,EAAAC,EAAAc,EAAAC,EAAA/tG,EAAAjF,GAEA,MACA,QACA,GAAA7R,EAAA,GACA,UAAAqB,EAAAyD,YAAA,qBAAA9E,GAEAA,EAAA,IACAwjD,EAAA5pC,KAAA5Z,EAAA,KACaA,EAAA,IACbwjD,EAAA5pC,KAAA,KAAA5Z,EAAA,KAAAwF,EAAA/H,KAAA,KACauC,EAAA,IACbwjD,EAAA5pC,KAAA,MAAA5Z,EAAA,KAAAwF,EAAA/H,KAAA,MAEA+lD,EAAA5pC,MAAApU,EAAA/H,IAAA,GAAA+H,EAAA/H,EAAA,OAAA+H,EAAA/H,EAAA,MAAA+H,EAAA/H,EAAA,WACAA,GAAA,GAIAsnH,IACAvhE,EAAA5lD,OAAA,IAIAqQ,CAAAzI,GAoFAi/G,CAAAj/G,EAAAi+G,EAAA7nH,KAAAq2G,MAGA,CACAn2G,OAAA,SAAAg4F,EAAAnwC,GAIA,IAHA,IACAg/C,EAAA8T,EAAAyE,EAAAt3D,EAAAi3D,EAAAtH,EADAryF,EAAA,IAAAvf,WAAAmyF,EAAA5yE,MAEAuuF,EAAA6S,EAAAphG,EAAA,GACAzjB,EAAA,EAAAmL,EAAA,GAA6BnL,EAAAgyG,EAAehyG,IAAAmL,GAAA,IAC5C,IAAAmnG,GAAA,EAAA1uG,EAAAuuB,eAAA1O,EAAA7e,SAAAuG,IAAA,IACAmb,EAAAs+F,EAAAnhG,EAAAtY,EAAA,GACAhL,EAAAykH,EAAAnhG,EAAAtY,EAAA,IACA,OAAAmnG,GACA,WACApN,EAAA4f,EAAArhG,EAAA6C,GACA,MACA,WACA0yF,EAAAv1F,EAAA7e,SAAA0hB,IAAAnmB,GACA,MACA,WACAs9G,EAAAh6F,EAAA7e,SAAA0hB,IAAAnmB,GACA,MACA,WACA21G,EAAA+O,EAAAphG,EAAA6C,EAAA,IACA82F,EAAAyH,EAAAphG,EAAA6C,EAAA,IACA,MACA,WACA6/B,EAAA++D,EAAAzhG,EAAA6C,IAAAnmB,EAAA+lD,IAIA,GAAA8yD,EAAA,CACA,IAAAzxD,EAAAuuD,EAAA,GAAAA,EAAA,MAAAA,EAAA,KAAAzf,EAAA9uC,WACA,WAAAk+D,EArqBA,SAAAzM,EAAAyE,EAAAF,GACA,IAAAG,EAAAC,EACAJ,GACAG,EAAA,EACAC,EAAA,SAAAl6F,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,GAAA7C,EAAA6C,EAAA,OAAA7C,EAAA6C,EAAA,MAAA7C,EAAA6C,EAAA,MAGAo3F,EAAA,EACAC,EAAA,SAAAl6F,EAAA6C,GACA,OAAA7C,EAAA6C,IAAA,EAAA7C,EAAA6C,EAAA,QAKA,IAFA,IAAAswE,EAAA,GACA3Z,EAAA0gC,EAAAF,EAAA,GACA5yG,EAAA6yG,EAA0B7yG,EAAA4yG,EAAAt9G,OAAiB0K,GAAA6yG,EAAA,CAC3C,IAAA38B,EAAA48B,EAAAF,EAAA5yG,GACA+rF,EAAAz6E,KAAA68F,EAAAp0G,SAAAq4E,EAAA8D,IACA9D,EAAA8D,EAEA,OAAA6V,EAipBA8wB,CAAA1O,EAAAyE,EAAAL,GAAAlY,EAAA39C,GAEA,WAAAm+D,EAAAv/D,EAAA++C,EAAA7O,EAAA9uC,WAAA8uC,EAAAuvB,gBA3uBA,GA+uBApoH,EAAAg6G,wDC9vBAl6G,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA+lH,iBAAAliH,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBwhD,EAAiBxhD,EAAQ,KAEzB+W,EAAc/W,EAAQ,KAGtB8jH,EAAA,WACA,IAAAC,EAGA,IAHAA,EAIA,IAJAA,EAKA,IALAA,EAMA,IANAA,EAOA,IAPAA,EASA,QATAA,EAWA,KAXAA,EAYA,KAZAA,EAaA,KAbAA,EAcA,KAdAA,EAeA,KAEA,SAAAD,IACAxpH,KAAA0Q,MAAA,EACA1Q,KAAA0pH,IAAA,EACA1pH,KAAA2pH,SAAA,EACA3pH,KAAA28C,OAAA,GACA38C,KAAA4nD,MAAA,GA0NA,OAxNA4hE,EAAA5pH,UAAA,CACAm1G,QAAA,SAAA6U,EAAAz3D,EAAApK,GAIA,IAHA,IAEA8hE,EAAAC,EAAA39D,EAFAj8C,EAAA05G,EAAA5nH,OACA4gE,GAAA,EAEA/gE,EAAA,EAAqBA,EAAAqO,EAAWrO,IAAA,CAChC,IAAAvC,EAAAsqH,EAAA/nH,GACA,GAAAvC,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAAsqH,IAAA/nH,IAEAvC,GACA,OAOA,OAEAU,KAAA4nD,MAAA,GACA,MAIA,OACA,GAAA5nD,KAAA2pH,QAAA,CACA,GAAA3pH,KAAA4nD,MAAA5lD,OAAA,GACA4gE,GAAA,EACA,MAEA,IAAAmnD,EAAA/pH,KAAA4nD,MAAAhvB,MACA54B,KAAA4nD,MAAA5pC,KAAA,EAAA+rG,GACA,MAEAnnD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,OACA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,OACA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,OACA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,OACA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,OACAzpH,KAAA4nD,MAAA,GACA,MACA,QACA,GAAA5nD,KAAA4nD,MAAA5lD,OAAA,GACA4gE,GAAA,EACA,MAGA,IAAAzQ,EADAhG,EAAAnsD,KAAA4nD,MAAAhvB,OACA,CACAgqC,GAAA,EACA,MAEAA,EAAA5iE,KAAA+0G,QAAA5iD,EAAAhG,GAAAgG,EAAApK,GACA,MACA,QACA,OAAA6a,EACA,QACA,GAAA5iE,KAAA4nD,MAAA5lD,OAAA,GACA4gE,GAAA,EACA,MAEAinD,EAAA7pH,KAAA4nD,MAAAhvB,MACAkxF,EAAA9pH,KAAA4nD,MAAAhvB,MACA54B,KAAA0pH,IAAAI,EACA9pH,KAAA0Q,MAAAm5G,EACA7pH,KAAA4nD,MAAA5pC,KAAA6rG,EAAAC,GACAlnD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,QACAzpH,KAAA28C,OAAA3+B,KAAAyrG,EAAA,IACA,MACA,QACA,GAAAzpH,KAAA2pH,QACA,MAEA/mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,QACA,GAAAzpH,KAAA2pH,QAAA,CACA3pH,KAAA4nD,MAAA5pC,KAAA,GACA,MAEA4kD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,QACA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,QACA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,UAGA,UAOA,UAEAzpH,KAAA4nD,MAAA,GACA,MAIA,UACAG,GACA/nD,KAAAisD,KAAAjsD,KAAA4nD,MAAAx/B,QAAA,KACAw6C,EAAA5iE,KAAAgqH,eAAA,EAAAP,IAEA7mD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GAEA,MACA,UACA,GAAAzpH,KAAA4nD,MAAA5lD,OAAA,GACA4gE,GAAA,EACA,MAEA5iE,KAAA4nD,MAAAhvB,MACAixF,EAAA7pH,KAAA4nD,MAAAhvB,MACA,IAAAqxF,EAAAjqH,KAAA4nD,MAAAhvB,MACAkxF,EAAA9pH,KAAA4nD,MAAAhvB,MACA54B,KAAA0pH,IAAAI,EACA9pH,KAAA0Q,MAAAm5G,EACA7pH,KAAA4nD,MAAA5pC,KAAA6rG,EAAAC,EAAAG,GACArnD,EAAA5iE,KAAAgqH,eAAA,EAAAP,GACA,MACA,UACA,GAAAzpH,KAAA4nD,MAAA5lD,OAAA,GACA4gE,GAAA,EACA,MAEA,IAAAjI,EAAA36D,KAAA4nD,MAAAhvB,MACA8hC,EAAA16D,KAAA4nD,MAAAhvB,MACA54B,KAAA4nD,MAAA5pC,KAAA08C,EAAAC,GACA,MACA,UACA,GAAA36D,KAAA4nD,MAAA5lD,OAAA,GACA4gE,GAAA,EACA,MAEAzW,EAAAnsD,KAAA4nD,MAAAhvB,MACA,IAAA4yE,EAAAxrG,KAAA4nD,MAAAhvB,MACA,OAAAuzB,GAAA,IAAAq/C,EAAA,CACA,IAAA0e,EAAAlqH,KAAA4nD,MAAAx/B,OAAApoB,KAAA4nD,MAAA5lD,OAAA,OACAhC,KAAA4nD,MAAA5pC,KAAAksG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAtnD,EAAA5iE,KAAAgqH,eAAA,GAAAP,GAAA,GACAzpH,KAAA2pH,SAAA,EACA3pH,KAAA4nD,MAAA5pC,KAAAksG,EAAA,IAAAA,EAAA,UACe,IAAA/9D,GAAA,IAAAq/C,IACfxrG,KAAA2pH,SAAA,GAEA,MACA,UACA,MACA,UACA3pH,KAAA4nD,MAAA,GACA,MACA,SACA,EAAAniD,EAAA4O,MAAA,yCAAA/U,EAAA,KAGA,GAAAsjE,EACA,WAGStjE,GAAA,IACTA,GAAA,IAEAA,EADSA,GAAA,IACT,KAAAA,EAAA,KAAAsqH,IAAA/nH,GAAA,IACSvC,GAAA,KACT,KAAAA,EAAA,KAAAsqH,IAAA/nH,GAAA,KAEA,IAAA+nH,IAAA/nH,KAAA,QAAA+nH,IAAA/nH,KAAA,QAAA+nH,IAAA/nH,KAAA,OAAA+nH,IAAA/nH,KAAA,EAEA7B,KAAA4nD,MAAA5pC,KAAA1e,GAEA,OAAAsjE,GAEAonD,eAAA,SAAAG,EAAAC,EAAAC,GACA,IAAAC,EAAAtqH,KAAA4nD,MAAA5lD,OACA,GAAAmoH,EAAAG,EACA,SAGA,IADA,IAAAzkH,EAAAykH,EAAAH,EACAtoH,EAAAgE,EAAyBhE,EAAAyoH,EAAiBzoH,IAAA,CAC1C,IAAAvC,EAAAU,KAAA4nD,MAAA/lD,GACAqc,OAAAC,UAAA7e,GACAU,KAAA28C,OAAA3+B,KAAA,GAAA1e,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACAU,KAAA28C,OAAA3+B,KAAA,IAAA1e,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,OANAU,KAAA28C,OAAA3+B,KAAA+9C,MAAA/7D,KAAA28C,OAAAytE,GACAC,EACArqH,KAAA4nD,MAAAx/B,OAAAviB,EAAAskH,GAEAnqH,KAAA4nD,MAAA5lD,OAAA,GAEA,IAGAwnH,EAjPA,GAmPApE,EAAA,WACA,IAAAmF,EAAA,MAEA,SAAAC,EAAA5gH,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,SAAAwD,EAAAkY,EAAAljB,EAAAqoH,GACA,GAAAA,GAAAnlG,EAAAtjB,OACA,WAAA+D,WAAA,GAEA,IAGAlE,EACA6K,EAJAkJ,EAAA,EAAAxT,EAKA,IAAAP,EAAA,EAAeA,EAAA4oH,EAAmB5oH,IAClC+T,EALA,OAKA0P,EAAAzjB,GAAA+T,GAJA,MAIA,MAEA,IAAA1F,EAAAoV,EAAAtjB,OAAAyoH,EACAC,EAAA,IAAA3kH,WAAAmK,GACA,IAAArO,EAAA4oH,EAAA/9G,EAAA,EAAkCA,EAAAwD,EAAWrO,IAAA6K,IAAA,CAC7C,IAAApN,EAAAgmB,EAAAzjB,GACA6oH,EAAAh+G,GAAApN,EAAAsW,GAAA,EACAA,EAZA,OAYAtW,EAAAsW,GAXA,MAWA,MAEA,OAAA80G,EA4BA,SAAAC,EAAAt+G,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,SAAA+4G,EAAA98G,EAAAsiH,EAAA7iE,GACA,GAAA6iE,EAAA,CACA,IAAAtlG,EAAAhd,EAAA1D,WACAimH,IAAAL,EAAAllG,EAAA,KAAAklG,EAAAllG,EAAA,KAAAklG,EAAAllG,EAAA,KAAAklG,EAAAllG,EAAA,KACAhd,EAAA,IAAAmU,EAAAzX,OAAA6lH,EAAAz9G,EAAAkY,EAAAilG,EAAA,GAjCA,SAAAjlG,EAAAljB,EAAAqoH,GACA,IAMA5oH,EAAA6K,EANAkJ,EAAA,EAAAxT,EAGA8N,EAAAoV,EAAAtjB,OAEA0oH,EAAA,IAAA3kH,WADAmK,IAAA,GAGA,IAAArO,EAAA,EAAA6K,EAAA,EAAsB7K,EAAAqO,EAAWrO,IAAA,CACjC,IAAAipH,EAAAxlG,EAAAzjB,GACA,GAAA2oH,EAAAM,GAAA,CAIA,IAAAC,EACA,IAFAlpH,IAEAA,EAAAqO,IAAAs6G,EAAAO,EAAAzlG,EAAAzjB,KACAA,IAEA,GAAAA,EAAAqO,EAAA,CACA,IAAA5Q,EAAA2/B,SAAA9c,OAAAC,aAAA0oG,EAAAC,GAAA,IACAL,EAAAh+G,KAAApN,EAAAsW,GAAA,EACAA,EAnBA,OAmBAtW,EAAAsW,GAlBA,MAkBA,QAGA,OAAAjU,MAAA/B,UAAAmC,MAAAkC,KAAAymH,EAAAD,EAAA/9G,GASAs+G,CAAA1lG,EAAAilG,EAAA,IAEAvqH,KAAA+nD,wBACA/nD,KAAAsI,SACAtI,KAAA8f,WAuOA,OArOAslG,EAAAxlH,UAAA,CACAqrH,gBAAA,WACAjrH,KAAAkrH,WAEA,IADA,IAAAntG,EAAA,KACA,CACA,IAAAsf,EAAAr9B,KAAAkrH,WACA,UAAA7tF,GAAA,MAAAA,GAAA,MAAAA,EACA,MAEAtf,EAAAC,KAAAgtC,WAAA3tB,GAAA,IAEA,OAAAtf,GAEA+wF,WAAA,WACA,IAAAzxE,EAAAr9B,KAAAkrH,WACA,OAAAlgE,WAAA3tB,GAAA,IAEA8tF,QAAA,WACA,IAAA9tF,EAAAr9B,KAAAkrH,WACA,SAAAjsF,SAAA5B,GAAA,OAEA+tF,YAAA,WAEA,eADAprH,KAAAkrH,WACA,KAEAprG,SAAA,WACA,OAAA9f,KAAA6hB,YAAA7hB,KAAAsI,OAAAnC,WAEA+kH,SAAA,WAGA,IAFA,IAAA9nG,GAAA,EACAvV,EAAA7N,KAAA6hB,cACA,CACA,QAAAhU,EACA,YAEA,GAAAuV,EACA,KAAAvV,GAAA,KAAAA,IACAuV,GAAA,QAES,QAAAvV,EACTuV,GAAA,OACS,OAAA3d,EAAAgI,SAAAI,GACT,MAEAA,EAAA7N,KAAA8f,WAEA,GAAA6qG,EAAA98G,GAEA,OADA7N,KAAA8f,WACAqC,OAAAC,aAAAvU,GAEA,IAAAwvB,EAAA,GACA,GACAA,GAAAlb,OAAAC,aAAAvU,GACAA,EAAA7N,KAAA8f,iBACOjS,GAAA,OAAApI,EAAAgI,SAAAI,KAAA88G,EAAA98G,IACP,OAAAwvB,GAEAguF,gBAAA,SAAAvlH,EAAAwlH,GACA,WAAAA,EACAxlH,EAEAsH,EAAAtH,EA7HA,KA6HAwlH,IAEA9F,mBAAA,WACA,IAAAl9G,EAAAtI,KAAAsI,OACA6pD,EAAA,GACAslD,EAAA,GACA2O,EAAAjnH,OAAAe,OAAA,MACAkmH,EAAA,QAOA,IANA,IAKA/oF,EAAAr7B,EAAAsjB,EAAAgmG,EAAA1B,EALA2B,EAAA,CACAp5D,MAAA,GACAslD,YAAA,GACA3vD,WAAA,CAAqBs+D,gBAGrB,QAAA/oF,EAAAr9B,KAAAkrH,aACA,SAAA7tF,EAIA,OADAA,EAAAr9B,KAAAkrH,YAEA,kBAKA,IAJAlrH,KAAAkrH,WACAlrH,KAAAkrH,WACAlrH,KAAAkrH,WACAlrH,KAAAkrH,WAGA,QADA7tF,EAAAr9B,KAAAkrH,aACA,QAAA7tF,GAGA,SAAAA,EAAA,CAGA,IAAAi8D,EAAAt5F,KAAAkrH,WACAlpH,EAAAhC,KAAAmrH,UACAnrH,KAAAkrH,WACA5lG,EAAAtjB,EAAA,EAAAsG,EAAA1D,SAAA5C,GAAA,IAAA+D,WAAA,GACAulH,EAAAC,EAAAzjE,WAAAs+D,YAAA,MACAwD,EAAA5pH,KAAAqrH,gBAAA/lG,EAAAgmG,GACAtrH,KAAA8f,WAEA,cADAud,EAAAr9B,KAAAkrH,aAEAlrH,KAAAkrH,WAEAzT,EAAAz5F,KAAA,CACAs7E,QACAswB,YAGA,MACA,YAGA,IAFA5pH,KAAAmrH,UACAnrH,KAAAkrH,WACA,QAAAlrH,KAAAkrH,YAAA,CACA,IAAAhnG,EAAAlkB,KAAAmrH,UACAnpH,EAAAhC,KAAAmrH,UACAnrH,KAAAkrH,WACA5lG,EAAAtjB,EAAA,EAAAsG,EAAA1D,SAAA5C,GAAA,IAAA+D,WAAA,GACAulH,EAAAC,EAAAzjE,WAAAs+D,YAAA,MACAwD,EAAA5pH,KAAAqrH,gBAAA/lG,EAAAgmG,GACAtrH,KAAA8f,WAEA,cADAud,EAAAr9B,KAAAkrH,aAEAlrH,KAAAkrH,WAEA/4D,EAAAjuC,GAAA0lG,EAEA,MACA,iBACA,iBACA,kBACA,uBACA,IAAA4B,EAAAxrH,KAAAirH,kBACAO,EAAAxpH,OAAA,GAAAwpH,EAAAxpH,OAAAwpH,EAGA,MACA,gBACA,gBACAD,EAAAzjE,WAAAs+D,YAAA/oF,GAAAr9B,KAAAirH,kBACA,MACA,YACA,YACAM,EAAAzjE,WAAAs+D,YAAA/oF,GAAAr9B,KAAAirH,kBAAA,GACA,MACA,gBACA,YACA,eACA,gBACA,oBACA,sBACAM,EAAAzjE,WAAAs+D,YAAA/oF,GAAAr9B,KAAA8uG,aACA,MACA,gBACAyc,EAAAzjE,WAAAs+D,YAAA/oF,GAAAr9B,KAAAorH,cAIA,QAAAvpH,EAAA,EAAqBA,EAAA41G,EAAAz1G,OAAwBH,IAAA,CAC7Cy3F,EAAAme,EAAA51G,GAAAy3F,MACAswB,EAAAnS,EAAA51G,GAAA+nH,QACA,IAAA6B,EAAA,IAAAjC,EACA5mD,EAAA6oD,EAAA1W,QAAA6U,EAAAz3D,EAAAnyD,KAAA+nD,qBACApL,EAAA8uE,EAAA9uE,OACAimB,IACAjmB,EAAA,MAEA4uE,EAAA9T,YAAAz5F,KAAA,CACA+nF,UAAAzM,EACAjtC,WAAA1P,EACAjsC,MAAA+6G,EAAA/6G,MACAg5G,IAAA+B,EAAA/B,IACAz9D,KAAAw/D,EAAAx/D,OAGA,OAAAs/D,GAEAlG,kBAAA,SAAAv9D,GAEA,IADA,IAAAzqB,EACA,QAAAA,EAAAr9B,KAAAkrH,aACA,SAAA7tF,EAIA,OADAA,EAAAr9B,KAAAkrH,YAEA,iBACA,IAAA/3G,EAAAnT,KAAAirH,kBACAnjE,EAAAsB,WAAAj2C,EACA,MACA,eACA,IACA2uB,EADA4pF,EAAA1rH,KAAAkrH,WAEA,WAAAjtF,KAAAytF,GAEa,CACb5pF,EAAA,GACA,IAAAj6B,EAAA,EAAAo3B,SAAAysF,EAAA,IACA1rH,KAAAkrH,WACA,QAAAx+G,EAAA,EAA6BA,EAAA7E,EAAU6E,IAAA,CAEvC,IADA2wB,EAAAr9B,KAAAkrH,WACA,QAAA7tF,GAAA,QAAAA,GAEA,WADAA,EAAAr9B,KAAAkrH,YAEA,OAGA,WAAA7tF,EACA,MAEA,IAAAnZ,EAAAlkB,KAAAmrH,UACAnrH,KAAAkrH,WACA,IAAA5xB,EAAAt5F,KAAAkrH,WACAppF,EAAA5d,GAAAo1E,EACAt5F,KAAAkrH,iBApBAppF,GAAA,EAAAolB,EAAA9qC,aAAAsvG,GAuBA5jE,EAAA26D,gBAAA3gF,EACA,MACA,eACA,IAAAwnB,EAAAtpD,KAAAirH,kBACAnjE,EAAAyB,OAAAl6C,KAAAyH,IAAAwyC,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAAn6C,KAAAC,IAAAg6C,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,cAAA,KAMA27D,EAvSA,GAySA/lH,EAAA+lH,gDCxiBAjmH,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAs4F,mBAAAt4F,EAAAi8F,aAAAp4F,EAEA,IAAAuC,EAAYC,EAAQ,KAEpButB,EAAkBvtB,EAAQ,KAE1BC,EAAkBD,EAAQ,KAE1BimH,EAAA,CACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEA5wB,EAAA,WACA,SAAAA,KACA,EAAA71F,EAAAgK,aAAA,uCAgCA,OA9BA6rF,EAAA17F,UAAA,CACAusH,WAAA,SAAAC,IACA,EAAA3mH,EAAAgK,aAAA,qCAAA28G,KAGA9wB,EAAAC,aAAA,SAAAF,EAAAloF,EAAAxS,EAAA4R,EAAAosD,EAAAnsD,GACA,IAAAzP,GAAA,EAAA4C,EAAAhB,UAAA02F,KAAAt4F,KAAAs4F,EACAh3F,EAAAtB,EAAA5C,IAAA,eACA,IACA,OAAAkE,GACA,KAAAsnH,EAAAE,MACA,KAAAF,EAAAG,OACA,WAAAO,EAAAC,YAAAvpH,EAAAoQ,EAAAxS,EAAA4R,EAAAC,GACA,KAAAm5G,EAAAI,eACA,KAAAJ,EAAAK,kBACA,KAAAL,EAAAM,iBACA,KAAAN,EAAAO,kBACA,WAAAG,EAAAE,KAAAlxB,EAAAloF,EAAAxS,EAAA4R,EAAAC,GACA,QACA,UAAA/M,EAAAyD,YAAA,4BAAA7E,IAEK,MAAAmd,GACL,GAAAA,aAAA/b,EAAAmY,qBACA,MAAA4D,EAIA,OAFAm9C,EAAAvyC,KAAA,sBAA0Cm2C,UAAA98D,EAAA+8D,qBAAAgqD,kBAC1C,EAAA/mH,EAAA4O,MAAAmN,GACA,IAAA6qG,EAAAI,QAGAnxB,EAlCA,GAoCA+wB,EAAA,GACAA,EAAAK,aAAA,KACAL,EAAAC,YAAA,WACA,SAAAA,EAAAvpH,EAAAoQ,EAAAxS,EAAA4R,EAAAC,GACAxS,KAAAmT,SACAnT,KAAA2sH,UAAA5pH,EAAArB,SAAA,UACA1B,KAAA4sH,YAAA7pH,EAAA5C,IAAA,eACAH,KAAAqE,KAAA,UACA,IAAAiO,EAAAvP,EAAA5C,IAAA,mBACAmS,EAAA2gB,EAAAzjB,WAAA6C,MAAAC,EAAA3R,EAAA4R,EAAAC,GACAxS,KAAAsS,KACA,IAAAu6G,EAAA,EACA5tE,EAAA,EACA,GAAAl8C,EAAAP,IAAA,WACA,IAAAsqH,EAAA/pH,EAAArB,SAAA,UACAmrH,EAAAC,EAAA,GACA7tE,EAAA6tE,EAAA,GAEA,IAAAC,GAAA,EACAC,GAAA,EACA,GAAAjqH,EAAAP,IAAA,WACA,IAAAyqH,EAAAlqH,EAAArB,SAAA,UACAqrH,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,KAAAjtH,KAAA4sH,cAAAjB,EAAAG,QAAAiB,GAAAC,GAAA,CACA,IAAA/mF,EAAAjmC,KAAA2sH,UAAA,GACArmF,EAAAtmC,KAAA2sH,UAAA,GACAO,EAAAltH,KAAA2sH,UAAA,GACA3pG,EAAAhjB,KAAA2sH,UAAA,GACA12E,EAAAj2C,KAAA2sH,UAAA,GACAQ,EAAAntH,KAAA2sH,UAAA,GACAS,EAAA/9G,KAAAuM,MAAAqqB,EAAAjjB,IAAAijB,EAAAjjB,IAAAsjB,EAAA2P,IAAA3P,EAAA2P,IACAi3E,GAAAC,EAAAC,GAAAD,GAAAD,EAAAE,IACA,EAAA3nH,EAAA4O,MAAA,gCAGArU,KAAA+sH,cACA/sH,KAAAgtH,YACA,IAAAz4D,EAAAxxD,EAAA5C,IAAA,YACA4D,EAAAyO,EAAA66G,gBAAA94D,GACA+C,EAAArY,EAAA4tE,EACAS,EAAAh2D,EAAA,GACAi2D,EAAAvtH,KAAAutH,WAAA,GACA,GAAAV,GAAA5tE,GAAAquE,GAAA,GACA,EAAA7nH,EAAAgR,MAAA,2BADA,CAOA,IAHA,IAEAwe,EAFA1c,EAAA,IAAAzD,aAAAxC,EAAApB,UACAs8G,EAAA,IAAA14G,aAAA,GAEAjT,EAAAgrH,EAAoBhrH,GAAAo9C,EAASp9C,GAAAyrH,EAAA,CAC7BE,EAAA,GAAA3rH,EACAkC,EAAAypH,EAAA,EAAAj1G,EAAA,GACA0c,EAAA3iB,EAAA5C,OAAA6I,EAAA,GACA,IAAAk1G,EAAAhoH,EAAA8C,KAAAmlH,WAAAz4F,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAs4F,EAAAvvG,KAAA,EAAAnc,EAAAgrH,GAAAv1D,EAAAm2D,IAEA,IAAAE,EAAA,cACA5qH,EAAAP,IAAA,gBACAyyB,EAAA3iB,EAAA5C,OAAA3M,EAAA5C,IAAA,iBACAwtH,EAAAloH,EAAA8C,KAAAmlH,WAAAz4F,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA83F,IACAQ,EAAApxD,QAAA,GAAAwxD,IACAJ,EAAA,OAAAlB,EAAAK,cAEAM,IACAO,IAAAvrH,OAAA,OAAAqqH,EAAAK,aACAa,EAAAvvG,KAAA,GAAA2vG,KAEA3tH,KAAAutH,cAmCA,OAjCAjB,EAAA1sH,UAAA,CACA8lB,MAAA,WACA,IAEArhB,EAAA+8E,EAAAC,EAAAusC,EAAAV,EAFAP,EAAA3sH,KAAA2sH,UACAC,EAAA5sH,KAAA4sH,YAEAA,IAAAjB,EAAAE,OACAzqC,EAAA,CAAAurC,EAAA,GAAAA,EAAA,IACAtrC,EAAA,CAAAsrC,EAAA,GAAAA,EAAA,IACAiB,EAAA,KACAV,EAAA,KACA7oH,EAAA,SACOuoH,IAAAjB,EAAAG,QACP1qC,EAAA,CAAAurC,EAAA,GAAAA,EAAA,IACAtrC,EAAA,CAAAsrC,EAAA,GAAAA,EAAA,IACAiB,EAAAjB,EAAA,GACAO,EAAAP,EAAA,GACAtoH,EAAA,WAEA,EAAAoB,EAAAgK,aAAA,4BAAAm9G,GAEA,IAAAz5G,EAAAnT,KAAAmT,OACA,GAAAA,IACAiuE,EAAA37E,EAAA8C,KAAAslH,eAAAzsC,EAAAjuE,GACAkuE,EAAA57E,EAAA8C,KAAAslH,eAAAxsC,EAAAluE,GACAy5G,IAAAjB,EAAAG,QAAA,CACA,IAAA92G,EAAAvP,EAAA8C,KAAAulH,8BAAA36G,GACAy6G,GAAA54G,EAAA,GACAk4G,GAAAl4G,EAAA,GAGA,qBAAA3Q,EAAArE,KAAAutH,WAAAnsC,EAAAC,EAAAusC,EAAAV,KAGAZ,EAxGA,GA0GAD,EAAAE,KAAA,WACA,SAAAwB,EAAAzlH,EAAAie,GACAvmB,KAAAsI,SACAtI,KAAAumB,UACAvmB,KAAAkH,OAAA,EACAlH,KAAAsH,aAAA,EACA,IAAA4J,EAAAqV,EAAArV,SACAlR,KAAAguH,YAAA,IAAAl5G,aAAA5D,GACA,IAAA+8G,EAAA1nG,EAAAutE,WAAA5iF,SACAlR,KAAAkuH,cAAA3nG,EAAA4nG,QAAA,IAAAr5G,aAAAm5G,GAAAjuH,KAAAguH,YAEAD,EAAAnuH,UAAA,CACAwuH,cACA,GAAApuH,KAAAsI,OAAArC,IACA,OAAAjG,KAAAsI,OAAAtC,IAAAhG,KAAAsI,OAAArC,IAEA,GAAAjG,KAAAsH,aAAA,EACA,SAEA,IAAA23E,EAAAj/E,KAAAsI,OAAAnC,UACA,QAAA84E,EAAA,KAGAj/E,KAAAkH,OAAA+3E,EACAj/E,KAAAsH,aAAA,GACA,IAEAsH,SAAA,SAAA9H,GACA,IAAAI,EAAAlH,KAAAkH,OACAI,EAAAtH,KAAAsH,aACA,QAAAR,EAAA,CACA,OAAAQ,EACA,OAAAtH,KAAAsI,OAAAnC,WAAA,GAAAnG,KAAAsI,OAAAnC,WAAA,GAAAnG,KAAAsI,OAAAnC,WAAA,EAAAnG,KAAAsI,OAAAnC,aAAA,EAEAe,KAAA,GAAAlH,KAAAsI,OAAAnC,WAAA,GAAAnG,KAAAsI,OAAAnC,WAAA,EAAAnG,KAAAsI,OAAAnC,UACA,IAAA84E,EAAAj/E,KAAAsI,OAAAnC,UAEA,OADAnG,KAAAkH,OAAA+3E,GAAA,GAAA33E,GAAA,GACAJ,GAAA,EAAAI,GAAA,IAAA23E,IAAA33E,KAAA,EAEA,OAAAR,GAAA,IAAAQ,EACA,OAAAtH,KAAAsI,OAAAnC,UAEA,KAAAmB,EAAAR,GACAI,KAAA,EAAAlH,KAAAsI,OAAAnC,UACAmB,GAAA,EAKA,OAHAA,GAAAR,EACA9G,KAAAsH,eACAtH,KAAAkH,UAAA,GAAAI,GAAA,EACAJ,GAAAI,GAEA+mH,MAAA,WACAruH,KAAAkH,OAAA,EACAlH,KAAAsH,aAAA,GAEAgnH,SAAA,WACA,OAAAtuH,KAAA4O,SAAA5O,KAAAumB,QAAAgoG,cAEAC,eAAA,WACA,IAAAC,EAAAzuH,KAAAumB,QAAAkoG,kBACAC,EAAA1uH,KAAA4O,SAAA6/G,GACAE,EAAA3uH,KAAA4O,SAAA6/G,GACAl6G,EAAAvU,KAAAumB,QAAAhS,OACAS,EAAAy5G,EAAA,UAAAA,GAAA,0BACA,OAAAC,EAAA15G,GAAAT,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAo6G,EAAA35G,GAAAT,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAEAq6G,eAAA,WAMA,IALA,IAAA19G,EAAAlR,KAAAumB,QAAArV,SACA6T,EAAA/kB,KAAAumB,QAAAxB,iBACA/P,EAAA+P,EAAA,UAAAA,GAAA,0BACAxQ,EAAAvU,KAAAumB,QAAAhS,OACAkyB,EAAAzmC,KAAAguH,YACAnsH,EAAA,EAAA6K,EAAA,EAA4B7K,EAAAqP,EAAcrP,IAAA6K,GAAA,GAC1C,IAAAmiH,EAAA7uH,KAAA4O,SAAAmW,GACA0hB,EAAA5kC,GAAAgtH,EAAA75G,GAAAT,EAAA7H,EAAA,GAAA6H,EAAA7H,IAAA6H,EAAA7H,GAEA,IAAA6L,EAAAvY,KAAAkuH,cAIA,OAHAluH,KAAAumB,QAAA4nG,SACAnuH,KAAAumB,QAAA4nG,QAAA1nF,EAAA,EAAAluB,EAAA,GAEAvY,KAAAumB,QAAAutE,WAAApkF,OAAA6I,EAAA,KA8DA,IAAAu2G,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,WAUA,IAAAp0F,EAAA,GACA,gBAAA3qB,GAIA,OAHA2qB,EAAA3qB,KACA2qB,EAAA3qB,GAZA,SAAAA,GAEA,IADA,IAAAg/G,EAAA,GACArtH,EAAA,EAAqBA,GAAAqO,EAAYrO,IAAA,CACjC,IAAAuI,EAAAvI,EAAAqO,EACAi/G,EAAA,EAAA/kH,EACA8kH,EAAAlxG,KAAA,IAAAlJ,aAAA,CAAAq6G,MAAA,EAAA/kH,EAAA+kH,IAAA,EAAA/kH,IAAA+kH,EAAA/kH,SAEA,OAAA8kH,EAKAE,CAAAl/G,IAEA2qB,EAAA3qB,IAfA,GAkBA,SAAAm/G,EAAAC,EAAAprG,GACA,IAAAqrG,EAAAD,EAAAE,QAAAtrG,IACA,EAAAze,EAAAgZ,QAAA,UAAA8wG,EAAAlrH,KAAA,gCACA,IAAAorH,EAAAH,EAAAG,OACA7jH,EAAA0jH,EAAA1jH,OACA8jH,EAAAH,EAAAE,OACAZ,EAAAU,EAAA3jH,OACA+jH,EAAAtgH,KAAAC,IAAAmgH,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAE,EAAAvgH,KAAAC,IAAAmgH,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAG,EAAAxgH,KAAAyH,IAAA24G,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAI,EAAAzgH,KAAAyH,IAAA24G,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAK,EAAA1gH,KAAA2d,MAAA6iG,EAAAF,GAAAX,GAAAM,EAAA13D,OAAA,GAAA03D,EAAA13D,OAAA,KACAm4D,EAAA1gH,KAAAyH,IAAAg4G,EAAAz/G,KAAAC,IAAAy/G,EAAAgB,IACA,IAAAC,EAAA3gH,KAAA2d,MAAA8iG,EAAAF,GAAAZ,GAAAM,EAAA13D,OAAA,GAAA03D,EAAA13D,OAAA,KACAo4D,EAAA3gH,KAAAyH,IAAAg4G,EAAAz/G,KAAAC,IAAAy/G,EAAAiB,IAaA,IAZA,IAAAC,EAAAF,EAAA,EACAG,EAAA,IAAAxnH,YAAAsnH,EAAA,GAAAC,GACAE,EAAA,IAAAznH,YAAAsnH,EAAA,GAAAC,GACA5kH,EAAA,EACA+kH,EAAA,IAAArqH,WAAA,GACAsqH,EAAA,IAAAtqH,WAAA,GACAqxD,EAAAxrD,EAAAijH,EAAA,IACAx3D,EAAAzrD,EAAAijH,EAAA,IACAyB,EAAA1kH,EAAAijH,EAAA,IACA0B,EAAA3kH,EAAAijH,EAAA,IACA2B,EAAAvB,EAAAe,GACAS,EAAAxB,EAAAc,GACAvtF,EAAA,EAAqBA,GAAAwtF,EAAiBxtF,IAAA,CACtC4tF,EAAA,IAAAh5D,EAAA,IAAA44D,EAAAxtF,GAAA8tF,EAAA,GAAA9tF,GAAAwtF,EAAA,EACAI,EAAA,IAAAh5D,EAAA,IAAA44D,EAAAxtF,GAAA8tF,EAAA,GAAA9tF,GAAAwtF,EAAA,EACAI,EAAA,IAAAh5D,EAAA,IAAA44D,EAAAxtF,GAAA8tF,EAAA,GAAA9tF,GAAAwtF,EAAA,EACAK,EAAA,IAAAh5D,EAAA,IAAA24D,EAAAxtF,GAAA+tF,EAAA,GAAA/tF,GAAAwtF,EAAA,EACAK,EAAA,IAAAh5D,EAAA,IAAA24D,EAAAxtF,GAAA+tF,EAAA,GAAA/tF,GAAAwtF,EAAA,EACAK,EAAA,IAAAh5D,EAAA,IAAA24D,EAAAxtF,GAAA+tF,EAAA,GAAA/tF,GAAAwtF,EAAA,EACA,QAAA9xC,EAAA,EAAuBA,GAAA6xC,EAAiB7xC,IAAA7yE,IACxC,OAAAm3B,OAAAwtF,GAAA,IAAA9xC,OAAA6xC,EAAA,CAMA,IAHA,IAAA70G,EAAA,EACAjF,EAAA,EACAnH,EAAA,EACAjN,EAAA,EAAuBA,GAAA,EAAQA,IAC/B,QAAA6K,EAAA,EAAyBA,GAAA,EAAQA,IAAAoC,IAAA,CACjC,IAAAkH,EAAAw6G,EAAAhuF,GAAA3gC,GAAA4uH,EAAAvyC,GAAAxxE,GACAwO,GAAAu0G,EAAAC,EAAA5gH,IAAA,GAAAkH,EACAC,GAAAw5G,EAAAC,EAAA5gH,IAAA,GAAAkH,EAGAk6G,EAAA7kH,GAAAokH,EAAAztH,OACAytH,EAAAzxG,KAAA,CAAA9C,EAAAjF,IACAk6G,EAAA9kH,GAAAO,EAAA5J,OACA,IAAA0uH,EAAA,IAAA3qH,WAAA,GACA2qH,EAAA,IAAAN,EAAA,IAAAL,EAAA7xC,GAAAmyC,EAAA,GAAAnyC,GAAA6xC,EAAA,EACAW,EAAA,IAAAN,EAAA,IAAAL,EAAA7xC,GAAAmyC,EAAA,GAAAnyC,GAAA6xC,EAAA,EACAW,EAAA,IAAAN,EAAA,IAAAL,EAAA7xC,GAAAmyC,EAAA,GAAAnyC,GAAA6xC,EAAA,EACAnkH,EAAAoS,KAAA0yG,IAGAR,EAAA,GAAAR,EAAA,GACAS,EAAA,GAAAtB,EAAA,GACAqB,EAAAH,GAAAL,EAAA,GACAS,EAAAJ,GAAAlB,EAAA,GACAqB,EAAAD,EAAAD,GAAAN,EAAA,IACAS,EAAAF,EAAAD,GAAAnB,EAAA,GACAqB,EAAAD,EAAAD,EAAAD,GAAAL,EAAA,IACAS,EAAAF,EAAAD,EAAAD,GAAAlB,EAAA,GACAS,EAAAE,QAAAtrG,GAAA,CACA7f,KAAA,UACAorH,OAAAS,EACAtkH,OAAAukH,EACAF,kBAuPA,SAAAU,EAAArB,GAKA,IAJA,IAAA9hD,EAAA8hD,EAAAG,OAAA,MACAhiD,EAAA6hD,EAAAG,OAAA,MACApoG,EAAAmmD,EACAyd,EAAAxd,EACA5rE,EAAA,EAAAC,EAAAwtH,EAAAG,OAAAztH,OAA4CH,EAAAC,EAAQD,IAAA,CACpD,IAAAqZ,EAAAo0G,EAAAG,OAAA5tH,GAAA,GACAoU,EAAAq5G,EAAAG,OAAA5tH,GAAA,GACA2rE,IAAAtyD,IAAAsyD,EACAC,IAAAx3D,IAAAw3D,EACApmD,IAAAnM,IAAAmM,EACA4jE,IAAAh1E,IAAAg1E,EAEAqkC,EAAA13D,OAAA,CAAA4V,EAAAC,EAAApmD,EAAA4jE,GAgCA,SAAAshC,EAAAjkH,EAAA6K,EAAAxS,EAAA4R,EAAAC,GACA,OAAA7M,EAAAhB,UAAA2D,GACA,UAAA7C,EAAAyD,YAAA,6BAEA,IAAAnG,EAAAuF,EAAAvF,KACA/C,KAAAmT,SACAnT,KAAA4sH,YAAA7pH,EAAA5C,IAAA,eACAH,KAAAqE,KAAA,UACArE,KAAA+qF,KAAAhoF,EAAArB,SAAA,QACA,IAAA4Q,EAAAvP,EAAA5C,IAAA,mBACAmS,EAAA2gB,EAAAzjB,WAAA6C,MAAAC,EAAA3R,EAAA4R,EAAAC,GACAxS,KAAAsS,KACAtS,KAAA2tH,WAAA5qH,EAAAP,IAAA,cAAA8P,EAAA5C,OAAA3M,EAAA5C,IAAA,sBACA,IAAAo0D,EAAAxxD,EAAA5C,IAAA,YACA4D,EAAAwwD,EAAA/hD,EAAA66G,gBAAA94D,GAAA,KACAv0D,KAAAyvH,OAAA,GACAzvH,KAAA4L,OAAA,GACA5L,KAAAwvH,QAAA,GACA,IASAlxD,EAAA,IAAAyvD,EAAAzlH,EATA,CACAmmH,kBAAA1rH,EAAA5C,IAAA,qBACA4kB,iBAAAhiB,EAAA5C,IAAA,oBACAouH,YAAAxrH,EAAA5C,IAAA,eACAoU,OAAAxR,EAAArB,SAAA,UACAysH,QAAApqH,EACA+vF,WAAAxhF,EACApB,SAAAnN,EAAA,EAAAuO,EAAApB,WAGA0/G,GAAA,EACA,OAAA5wH,KAAA4sH,aACA,KAAAjB,EAAAI,gBAxdA,SAAAuD,EAAAhxD,GAMA,IALA,IAAAmxD,EAAAH,EAAAG,OACA7jH,EAAA0jH,EAAA1jH,OACAutD,EAAA,GACA03D,EAAA,GACAC,EAAA,EACAxyD,EAAA8vD,SAAA,CACA,IAAAnxE,EAAAqhB,EAAAgwD,WACAyC,EAAAzyD,EAAAkwD,iBACAj2G,EAAA+lD,EAAAswD,iBACA,OAAAkC,EAAA,CACA,QAAA7zE,MAAA,GACA,UAAAx3C,EAAAyD,YAAA,sBAEA,OAAA+zC,GACA,OACA6zE,EAAA,EACA,MACA,OACAD,EAAA7yG,KAAA6yG,IAAA7uH,OAAA,GAAA6uH,IAAA7uH,OAAA,IACA8uH,EAAA,EACA,MACA,OACAD,EAAA7yG,KAAA6yG,IAAA7uH,OAAA,GAAA6uH,IAAA7uH,OAAA,IACA8uH,EAAA,EAGA33D,EAAAn7C,KAAAi/B,GAEA4zE,EAAA7yG,KAAAyxG,EAAAztH,QACAytH,EAAAzxG,KAAA+yG,GACAnlH,EAAAoS,KAAAzF,GACAu4G,IACAxyD,EAAA+vD,QAEAiB,EAAAE,QAAAxxG,KAAA,CACA3Z,KAAA,YACAorH,OAAA,IAAA/mH,WAAAmoH,GACAjlH,OAAA,IAAAlD,WAAAmoH,KAmbAG,CAAAhxH,KAAAs+D,GACA,MACA,KAAAqtD,EAAAK,kBACA,IAAAiE,EAAA,EAAAltH,EAAA5C,IAAA,kBACA,GAAA8vH,EAAA,EACA,UAAAxqH,EAAAyD,YAAA,2BArbA,SAAAomH,EAAAhxD,EAAA2xD,GAIA,IAHA,IAAAR,EAAAH,EAAAG,OACA7jH,EAAA0jH,EAAA1jH,OACAilH,EAAA,GACAvyD,EAAA8vD,SAAA,CACA,IAAA2C,EAAAzyD,EAAAkwD,iBACAj2G,EAAA+lD,EAAAswD,iBACAiC,EAAA7yG,KAAAyxG,EAAAztH,QACAytH,EAAAzxG,KAAA+yG,GACAnlH,EAAAoS,KAAAzF,GAEA+2G,EAAAE,QAAAxxG,KAAA,CACA3Z,KAAA,UACAorH,OAAA,IAAA/mH,WAAAmoH,GACAjlH,OAAA,IAAAlD,WAAAmoH,GACAZ,mBAwaAgB,CAAAjxH,KAAAs+D,EAAA2xD,GACA,MACA,KAAAtE,EAAAM,kBAzUA,SAAAqD,EAAAhxD,GAKA,IAJA,IAAAmxD,EAAAH,EAAAG,OACA7jH,EAAA0jH,EAAA1jH,OACAilH,EAAA,IAAAnoH,WAAA,IACA4J,EAAA,IAAA5J,WAAA,GACA41D,EAAA8vD,SAAA,CACA,IAIAvsH,EAAAC,EAJAm7C,EAAAqhB,EAAAgwD,WACA,QAAArxE,MAAA,GACA,UAAAx3C,EAAAyD,YAAA,sBAGA,IAAAwmH,EAAAD,EAAAztH,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAm7C,EAAA,KAAwCp7C,EAAAC,EAAQD,IAChD4tH,EAAAzxG,KAAAsgD,EAAAkwD,kBAEA,IAIAlvE,EAAA5C,EAAA2C,EAAA6xE,EAJArC,EAAAjjH,EAAA5J,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAm7C,EAAA,IAAuCp7C,EAAAC,EAAQD,IAC/C+J,EAAAoS,KAAAsgD,EAAAswD,kBAGA,OAAA3xE,GACA,OACA4zE,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,EACAp9G,EAAA,GAAAu8G,EAAA,EACAv8G,EAAA,GAAAu8G,EAAA,EACAv8G,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAu8G,EAAA,EACA,MACA,OACAvvE,EAAAuxE,EAAA,IACAn0E,EAAAm0E,EAAA,IACAxxE,EAAAwxE,EAAA,IACAK,EAAAL,EAAA,IACAA,EAAA,IAAAK,EACAL,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAxxE,EACAwxE,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAn0E,EACAm0E,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAvxE,EACAuxE,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACApwE,EAAAhtC,EAAA,GACAoqC,EAAApqC,EAAA,GACAA,EAAA,GAAAoqC,EACApqC,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAgtC,EACAhtC,EAAA,GAAAu8G,EAAA,EACA,MACA,OACAvvE,EAAAuxE,EAAA,IACAn0E,EAAAm0E,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAn0E,EACAm0E,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAvxE,EACAuxE,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACApwE,EAAAhtC,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAgtC,EACAhtC,EAAA,GAAAu8G,EAAA,EACA,MACA,OACAgC,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAp9G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAu8G,EAAA,EAGAgC,EAAA,GAAApB,EAAAztH,OACAytH,EAAAzxG,KAAA,KAAAyxG,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,eAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,aACAA,EAAA,GAAApB,EAAAztH,OACAytH,EAAAzxG,KAAA,KAAAyxG,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,gBAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,cACAA,EAAA,GAAApB,EAAAztH,OACAytH,EAAAzxG,KAAA,KAAAyxG,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,UAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,eAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,UAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,aACAA,EAAA,IAAApB,EAAAztH,OACAytH,EAAAzxG,KAAA,KAAAyxG,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,UAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,eAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,UAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,YAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,WAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,aACAvB,EAAAE,QAAAxxG,KAAA,CACA3Z,KAAA,QACAorH,OAAA,IAAA/mH,WAAAmoH,GACAjlH,OAAA,IAAAlD,WAAA4J,MAwNA6+G,CAAAnxH,KAAAs+D,GACAsyD,GAAA,EACA,MACA,KAAAjF,EAAAO,mBAvNA,SAAAoD,EAAAhxD,GAKA,IAJA,IAAAmxD,EAAAH,EAAAG,OACA7jH,EAAA0jH,EAAA1jH,OACAilH,EAAA,IAAAnoH,WAAA,IACA4J,EAAA,IAAA5J,WAAA,GACA41D,EAAA8vD,SAAA,CACA,IAIAvsH,EAAAC,EAJAm7C,EAAAqhB,EAAAgwD,WACA,QAAArxE,MAAA,GACA,UAAAx3C,EAAAyD,YAAA,sBAGA,IAAAwmH,EAAAD,EAAAztH,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAm7C,EAAA,MAAyCp7C,EAAAC,EAAQD,IACjD4tH,EAAAzxG,KAAAsgD,EAAAkwD,kBAEA,IAIAlvE,EAAA5C,EAAA2C,EAAA6xE,EAJArC,EAAAjjH,EAAA5J,OACA,IAAAH,EAAA,EAAAC,EAAA,IAAAm7C,EAAA,IAAuCp7C,EAAAC,EAAQD,IAC/C+J,EAAAoS,KAAAsgD,EAAAswD,kBAGA,OAAA3xE,GACA,OACA4zE,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,IAAAnB,EAAA,GACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,EACAp9G,EAAA,GAAAu8G,EAAA,EACAv8G,EAAA,GAAAu8G,EAAA,EACAv8G,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAu8G,EAAA,EACA,MACA,OACAvvE,EAAAuxE,EAAA,IACAn0E,EAAAm0E,EAAA,IACAxxE,EAAAwxE,EAAA,IACAK,EAAAL,EAAA,IACAA,EAAA,IAAAK,EACAL,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAxxE,EACAwxE,EAAA,GAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,GACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAn0E,EACAm0E,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAvxE,EACAuxE,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACApwE,EAAAhtC,EAAA,GACAoqC,EAAApqC,EAAA,GACAA,EAAA,GAAAoqC,EACApqC,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAgtC,EACAhtC,EAAA,GAAAu8G,EAAA,EACA,MACA,OACAvvE,EAAAuxE,EAAA,IACAn0E,EAAAm0E,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,GACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAn0E,EACAm0E,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAvxE,EACAuxE,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACApwE,EAAAhtC,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAgtC,EACAhtC,EAAA,GAAAu8G,EAAA,EACA,MACA,OACAgC,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAnB,EAAA,EACAmB,EAAA,IAAAnB,EAAA,GACAmB,EAAA,IAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAmB,EAAA,GAAAnB,EAAA,EACAp9G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAu8G,EACAv8G,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAu8G,EAAA,EAGAS,EAAAE,QAAAxxG,KAAA,CACA3Z,KAAA,QACAorH,OAAA,IAAA/mH,WAAAmoH,GACAjlH,OAAA,IAAAlD,WAAA4J,MA8FA8+G,CAAApxH,KAAAs+D,GACAsyD,GAAA,EACA,MACA,SACA,EAAAnrH,EAAAgK,aAAA,0BAGA,GAAAmhH,EAAA,CACAD,EAAA3wH,MACA,QAAA6B,EAAA,EAAAC,EAAA9B,KAAAwvH,QAAAxtH,OAA+CH,EAAAC,EAAQD,IACvDwtH,EAAArvH,KAAA6B,GAGA8uH,EAAA3wH,MAxFA,SAAAsvH,GACA,IAAAztH,EAAAC,EAAA4K,EAAAwqB,EACAu4F,EAAAH,EAAAG,OACA4B,EAAA,IAAAv8G,aAAA,EAAA26G,EAAAztH,QACA,IAAAH,EAAA,EAAA6K,EAAA,EAAA5K,EAAA2tH,EAAAztH,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAyvH,EAAA7B,EAAA5tH,GACAwvH,EAAA3kH,KAAA4kH,EAAA,GACAD,EAAA3kH,KAAA4kH,EAAA,GAEAhC,EAAAG,OAAA4B,EACA,IAAAzlH,EAAA0jH,EAAA1jH,OACA2lH,EAAA,IAAAxrH,WAAA,EAAA6F,EAAA5J,QACA,IAAAH,EAAA,EAAA6K,EAAA,EAAA5K,EAAA8J,EAAA5J,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAAwK,EAAAT,EAAA/J,GACA0vH,EAAA7kH,KAAAL,EAAA,GACAklH,EAAA7kH,KAAAL,EAAA,GACAklH,EAAA7kH,KAAAL,EAAA,GAEAijH,EAAA1jH,OAAA2lH,EACA,IAAA/B,EAAAF,EAAAE,QACA,IAAA3tH,EAAA,EAAAC,EAAA0tH,EAAAxtH,OAAoCH,EAAAC,EAAQD,IAAA,CAC5C,IAAA0tH,EAAAC,EAAA3tH,GACAgvH,EAAAtB,EAAAE,OACAn9G,EAAAi9G,EAAA3jH,OACA,IAAAc,EAAA,EAAAwqB,EAAA25F,EAAA7uH,OAAiC0K,EAAAwqB,EAAQxqB,IACzCmkH,EAAAnkH,IAAA,EACA4F,EAAA5F,IAAA,GA+DA8kH,CAAAxxH,MAOA,OALAusH,EAAA3sH,UAAA,CACA8lB,MAAA,WACA,cAAA1lB,KAAA4sH,YAAA5sH,KAAAyvH,OAAAzvH,KAAA4L,OAAA5L,KAAAwvH,QAAAxvH,KAAA43D,OAAA53D,KAAAmT,OAAAnT,KAAA+qF,KAAA/qF,KAAA2tH,cAGApB,EA/kBA,GAilBAF,EAAAI,MAAA,WACA,SAAAA,IACAzsH,KAAAqE,KAAA,UAOA,OALAooH,EAAA7sH,UAAA,CACA8lB,MAAA,WACA,kBAGA+mG,EATA,GAuBAptH,EAAAi8F,UACAj8F,EAAAs4F,mBAbA,SAAAtrE,EAAAtpB,EAAA8mB,GACA,IAAA1W,EAAApQ,EAAArB,SAAA,UACAqpF,EAAAtlF,EAAA8C,KAAA2hF,cAAAnnF,EAAArB,SAAA,SACA+vH,EAAA1uH,EAAA5C,IAAA,SACAuxH,EAAA3uH,EAAA5C,IAAA,SACAwxH,EAAA5uH,EAAA5C,IAAA,aACAyxH,EAAA7uH,EAAA5C,IAAA,cACA,GAAA4qF,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,MACA,UAAAtlF,EAAAyD,YAAA,4CAAA6hF,EAAA,MAEA,uBAAAlhE,EAAAwC,EAAAlZ,EAAA43E,EAAA0mC,EAAAC,EAAAC,EAAAC,sCC1wBAzyH,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAwiG,UAAA3+F,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBmsH,EAAA,ooCACAC,EAAA,ozCACA,SAAAC,EAAAlwH,GACA,aAAAA,GAEA,SAAAmwH,EAAAnwH,GACA,aAAAA,GAEA,SAAAowH,EAAA7/F,EAAAvsB,EAAAvG,GACA,QAAAoN,EAAA7G,EAAAqxB,EAAA9E,EAAApwB,OAAsC0K,EAAAwqB,IAAQxqB,EAC9C,GAAA0lB,EAAA1lB,KAAApN,EACA,OAAAoN,EAGA,OAAAA,EAEA,SAAAwlH,EAAA9/F,EAAAvsB,EAAAI,EAAA3G,GACA,QAAAoN,EAAA7G,EAAqB6G,EAAAzG,IAASyG,EAC9B0lB,EAAA1lB,GAAApN,EAGA,SAAA6yH,EAAA//F,EAAAvsB,EAAAI,GACA,QAAApE,EAAAgE,EAAA6G,EAAAzG,EAAA,EAAkCpE,EAAA6K,IAAO7K,IAAA6K,EAAA,CACzC,IAAA0lH,EAAAhgG,EAAAvwB,GACAuwB,EAAAvwB,GAAAuwB,EAAA1lB,GACA0lB,EAAA1lB,GAAA0lH,GAGA,SAAAC,EAAA9uH,EAAA+uH,EAAAzyB,GACA,OACAt8F,MACAw+F,IAAAlC,EAAA,MAAAyyB,EAAA,aAGA,IAAAj/D,EAAA,GACApE,EAAA,GAkMA5vD,EAAAwiG,KAjMA,SAAAt+F,EAAAgvH,EAAA1yB,GACA,IAAAyyB,GAAA,EACAE,EAAAjvH,EAAAvB,OACA,OAAAwwH,GAAA3yB,EACA,OAAAwyB,EAAA9uH,EAAA+uH,EAAAzyB,GAEAxsC,EAAArxD,OAAAwwH,EACAvjE,EAAAjtD,OAAAwwH,EACA,IACA3wH,EAAAC,EADA2wH,EAAA,EAEA,IAAA5wH,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAAA,CAC5BwxD,EAAAxxD,GAAA0B,EAAAytC,OAAAnvC,GACA,IAAAolG,EAAA1jG,EAAAkS,WAAA5T,GACA6wH,EAAA,IACAzrB,GAAA,IACAyrB,EAAAb,EAAA5qB,GACK,MAAAA,MAAA,KACLyrB,EAAA,IACK,MAAAzrB,MAAA,MACLyrB,EAAAZ,EAAA,IAAA7qB,MAEA,EAAAxhG,EAAA4O,MAAA,mCAAA4yF,EAAA3jG,SAAA,KAEK,MAAA2jG,MAAA,OACLyrB,EAAA,MAEA,MAAAA,GAAA,OAAAA,GAAA,OAAAA,GACAD,IAEAxjE,EAAAptD,GAAA6wH,EAEA,OAAAD,EAEA,OAAAJ,EAAA9uH,EADA+uH,GAAA,IAGA,IAAAC,IACAE,EAAAD,EAAA,IACAF,GAAA,EACAC,EAAA,IAEAD,GAAA,EACAC,EAAA,IAGA,IAAA17E,EAAA,GACA,IAAAh1C,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAC5Bg1C,EAAAh1C,GAAA0wH,EAEA,IAYAnoH,EAZAuT,EAAAo0G,EAAAQ,GAAA,QACAI,EAAAh1G,EACAi1G,EAAAD,EACAE,EAAAF,EACA,IAAA9wH,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAC5B,QAAAotD,EAAAptD,GACAotD,EAAAptD,GAAAgxH,EAEAA,EAAA5jE,EAAAptD,GAKA,IAFAgxH,EAAAF,EAEA9wH,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAE5B,QADAuI,EAAA6kD,EAAAptD,IAEAotD,EAAAptD,GAAA,OAAAgxH,EAAA,UACK,MAAAzoH,GAAA,MAAAA,GAAA,OAAAA,IACLyoH,EAAAzoH,GAGA,IAAAvI,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAE5B,QADAuI,EAAA6kD,EAAAptD,MAEAotD,EAAAptD,GAAA,KAGA,IAAAA,EAAA,EAAaA,EAAA2wH,EAAA,IAAmB3wH,EAChC,OAAAotD,EAAAptD,IAAA,OAAAotD,EAAAptD,EAAA,WAAAotD,EAAAptD,EAAA,KACAotD,EAAAptD,GAAA,MAEA,OAAAotD,EAAAptD,IAAA,OAAAotD,EAAAptD,EAAA,WAAAotD,EAAAptD,EAAA,IAAAotD,EAAAptD,EAAA,KAAAotD,EAAAptD,EAAA,KACAotD,EAAAptD,GAAAotD,EAAAptD,EAAA,IAGA,IAAAA,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAC5B,UAAAotD,EAAAptD,GAAA,CACA,IAAA6K,EACA,IAAAA,EAAA7K,EAAA,EAAqB6K,GAAA,GACrB,OAAAuiD,EAAAviD,KAD6BA,EAI7BuiD,EAAAviD,GAAA,KAEA,IAAAA,EAAA7K,EAAA,EAAqB6K,EAAA8lH,GACrB,OAAAvjE,EAAAviD,KADoCA,EAIpCuiD,EAAAviD,GAAA,KAIA,IAAA7K,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAE5B,QADAuI,EAAA6kD,EAAAptD,KACA,OAAAuI,GAAA,OAAAA,GAAA,OAAAA,IACA6kD,EAAAptD,GAAA,MAIA,IADAgxH,EAAAF,EACA9wH,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAE5B,QADAuI,EAAA6kD,EAAAptD,IAEAotD,EAAAptD,GAAA,MAAAgxH,EAAA,SACK,MAAAzoH,GAAA,MAAAA,IACLyoH,EAAAzoH,GAGA,IAAAvI,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAC5B,UAAAotD,EAAAptD,GAAA,CACA,IAAAoE,EAAAgsH,EAAAhjE,EAAAptD,EAAA,QACAixH,EAAAH,EACA9wH,EAAA,IACAixH,EAAA7jE,EAAAptD,EAAA,IAEA,IAAAkxH,EAAAH,EACA3sH,EAAA,EAAAusH,IACAO,EAAA9jE,EAAAhpD,EAAA,IAEA,MAAA6sH,IACAA,EAAA,KAEA,MAAAC,IACAA,EAAA,KAEAD,IAAAC,GACAb,EAAAjjE,EAAAptD,EAAAoE,EAAA6sH,GAEAjxH,EAAAoE,EAAA,EAGA,IAAApE,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAC5B,OAAAotD,EAAAptD,KACAotD,EAAAptD,GAAA8b,GAGA,IAAA9b,EAAA,EAAaA,EAAA2wH,IAAe3wH,EAC5BuI,EAAA6kD,EAAAptD,GACAmwH,EAAAn7E,EAAAh1C,IACA,MAAAuI,EACAysC,EAAAh1C,IAAA,EACO,OAAAuI,GAAA,OAAAA,IACPysC,EAAAh1C,IAAA,GAGA,MAAAuI,GAAA,OAAAA,GAAA,OAAAA,IACAysC,EAAAh1C,IAAA,GAIA,IAEAi1C,EAFAk8E,GAAA,EACAC,EAAA,GAEA,IAAApxH,EAAA,EAAAC,EAAA+0C,EAAA70C,OAAiCH,EAAAC,IAAQD,EAEzCmxH,GADAl8E,EAAAD,EAAAh1C,MAEAmxH,EAAAl8E,GAEAm8E,EAAAn8E,GAAAi7E,EAAAj7E,KACAm8E,EAAAn8E,GAGA,IAAAA,EAAAk8E,EAA4Bl8E,GAAAm8E,IAAyBn8E,EAAA,CACrD,IAAAjxC,GAAA,EACA,IAAAhE,EAAA,EAAAC,EAAA+0C,EAAA70C,OAAmCH,EAAAC,IAAQD,EAC3Cg1C,EAAAh1C,GAAAi1C,EACAjxC,GAAA,IACAssH,EAAA9+D,EAAAxtD,EAAAhE,GACAgE,GAAA,GAEOA,EAAA,IACPA,EAAAhE,GAGAgE,GAAA,GACAssH,EAAA9+D,EAAAxtD,EAAAgxC,EAAA70C,QAGA,IAAAH,EAAA,EAAAC,EAAAuxD,EAAArxD,OAAgCH,EAAAC,IAAQD,EAAA,CACxC,IAAAgM,EAAAwlD,EAAAxxD,GACA,MAAAgM,GAAA,MAAAA,IACAwlD,EAAAxxD,GAAA,IAGA,OAAAwwH,EAAAh/D,EAAAxwC,KAAA,IAAAyvG,sCC1OAnzH,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAipG,gBAAAplG,EAEA,IAAAuC,EAAYC,EAAQ,KAEpB4iG,GAAA,EAAA7iG,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,YACAA,EAAA,oBACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA,aAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,QACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,qBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,4BAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,wBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,QACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,UAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,YACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,YACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,OACAA,EAAA,QACAA,EAAA,SACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,YACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,YACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,OACAA,EAAA,QACAA,EAAA,SACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,YACAA,EAAA,SACAA,EAAA,aACAA,EAAA,WACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,WACAA,EAAA,SACAA,EAAA,YACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,cACAA,EAAA,YACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,UACAA,EAAA,aACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,UACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,YAEAA,EAAA,kBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,iBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,uBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,mBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,gBAAA3E,EAAA6mB,uBAAA,SAAAliB,GACAA,EAAA,UACAA,EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,aAGA/K,EAAAipG,+CCj4FAnpG,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA+4D,iBAAA/4D,EAAA84D,qBAAAj1D,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1B0yD,EAAA,WACA,SAAAA,EAAAl7C,GACAld,KAAAkd,QACAld,KAAAm5D,UAAA,GACAn5D,KAAAq9B,MAAA,KACAr9B,KAAA2rE,KAAA,KAgEA,OA9DAvT,EAAAx4D,UAAA,CACAszH,UAAA,WACAlzH,KAAA2rE,KAAA3rE,KAAAq9B,MACAr9B,KAAAq9B,MAAAr9B,KAAAkd,MAAAguG,YAEAiI,OAAA,SAAA9uH,GACA,OAAArE,KAAAq9B,MAAAh5B,WACArE,KAAAkzH,aACA,IAIAE,OAAA,SAAA/uH,GACA,GAAArE,KAAAmzH,OAAA9uH,GACA,SAEA,UAAAoB,EAAAyD,YAAA,4BAAAlJ,KAAAq9B,MAAAh5B,KAAA,aAAAA,EAAA,MAEAgO,MAAA,WAKA,OAJArS,KAAAkzH,YACAlzH,KAAAozH,OAAAC,EAAAC,QACAtzH,KAAAuzH,aACAvzH,KAAAozH,OAAAC,EAAAG,QACAxzH,KAAAm5D,WAEAo6D,WAAA,WACA,OACA,GAAAvzH,KAAAmzH,OAAAE,EAAAI,QACAzzH,KAAAm5D,UAAAn7C,KAAAhe,KAAA2rE,KAAArsE,YACS,GAAAU,KAAAmzH,OAAAE,EAAAK,UACT1zH,KAAAm5D,UAAAn7C,KAAAhe,KAAA2rE,KAAArsE,WACS,KAAAU,KAAAmzH,OAAAE,EAAAC,QAGT,OAFAtzH,KAAA2zH,mBAMAA,eAAA,WACA,IAAAC,EAAA5zH,KAAAm5D,UAAAn3D,OAIA,GAHAhC,KAAAm5D,UAAAn7C,KAAA,WACAhe,KAAAuzH,aACAvzH,KAAAozH,OAAAC,EAAAG,QACAxzH,KAAAmzH,OAAAE,EAAAQ,IACA7zH,KAAAm5D,UAAAy6D,GAAA5zH,KAAAm5D,UAAAn3D,OACAhC,KAAAm5D,UAAAy6D,EAAA,YACO,KAAA5zH,KAAAmzH,OAAAE,EAAAC,QAYP,UAAA7tH,EAAAyD,YAAA,2CAXA,IAAA4qH,EAAA9zH,KAAAm5D,UAAAn3D,OACAhC,KAAAm5D,UAAAn7C,KAAA,WACA,IAAA+1G,EAAA/zH,KAAAm5D,UAAAn3D,OACAhC,KAAAuzH,aACAvzH,KAAAozH,OAAAC,EAAAG,QACAxzH,KAAAozH,OAAAC,EAAAW,QACAh0H,KAAAm5D,UAAA26D,GAAA9zH,KAAAm5D,UAAAn3D,OACAhC,KAAAm5D,UAAA26D,EAAA,OACA9zH,KAAAm5D,UAAAy6D,GAAAG,EACA/zH,KAAAm5D,UAAAy6D,EAAA,WAMAx7D,EArEA,GAuEAi7D,EAAA,CACAC,OAAA,EACAE,OAAA,EACAC,OAAA,EACAC,SAAA,EACAG,GAAA,EACAG,OAAA,GAEAC,EAAA,WACA,SAAAA,EAAA5vH,EAAA/E,GACAU,KAAAqE,OACArE,KAAAV,QAEA,IAAA40H,EAAA/0H,OAAAe,OAAA,MAYA,OAXA+zH,EAAAE,YAAA,SAAAn6D,GACA,IAAAo6D,EAAAF,EAAAl6D,GACA,OAAAo6D,IAGAF,EAAAl6D,GAAA,IAAAi6D,EAAAZ,EAAAK,SAAA15D,KAEAi6D,EAAAX,OAAA,IAAAW,EAAAZ,EAAAC,OAAA,KACAW,EAAAT,OAAA,IAAAS,EAAAZ,EAAAG,OAAA,KACAS,EAAAJ,GAAA,IAAAI,EAAAZ,EAAAQ,GAAA,MACAI,EAAAD,OAAA,IAAAC,EAAAZ,EAAAW,OAAA,UACAC,EAjBA,GAmBA97D,EAAA,WACA,SAAAA,EAAA7vD,GACAtI,KAAAsI,SACAtI,KAAA8f,WACA9f,KAAA0hB,OAAA,GAiFA,OA/EAy2C,EAAAv4D,UAAA,CACAkgB,SAAA,WACA,OAAA9f,KAAA6hB,YAAA7hB,KAAAsI,OAAAnC,WAEA+kH,SAAA,WAGA,IAFA,IAAA9nG,GAAA,EACAvV,EAAA7N,KAAA6hB,cACA,CACA,GAAAhU,EAAA,EACA,OAAAlI,EAAA9F,IAEA,GAAAujB,EACA,KAAAvV,GAAA,KAAAA,IACAuV,GAAA,QAES,QAAAvV,EACTuV,GAAA,OACS,OAAA3d,EAAAgI,SAAAI,GACT,MAEAA,EAAA7N,KAAA8f,WAEA,SAAAjS,GACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WAAAomH,EAAAZ,EAAAI,OAAAzzH,KAAA+hB,aACA,SAEA,OADA/hB,KAAA8f,WACAm0G,EAAAX,OACA,SAEA,OADAtzH,KAAA8f,WACAm0G,EAAAT,OAEA,IAAA9xG,EAAA1hB,KAAA0hB,OAGA,IAFAA,EAAA1f,OAAA,EACA0f,EAAA,GAAAS,OAAAC,aAAAvU,IACAA,EAAA7N,KAAA8f,aAAA,IAAAjS,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACA6T,EAAA1D,KAAAmE,OAAAC,aAAAvU,IAEA,IAAAtK,EAAAme,EAAAmB,KAAA,IACA,OAAAtf,EAAA8wH,eACA,SACA,OAAAJ,EAAAJ,GACA,aACA,OAAAI,EAAAD,OACA,QACA,OAAAC,EAAAE,YAAA5wH,KAGAwe,UAAA,WACA,IAAAlU,EAAA7N,KAAA6hB,YACAH,EAAA1hB,KAAA0hB,OAGA,IAFAA,EAAA1f,OAAA,EACA0f,EAAA,GAAAS,OAAAC,aAAAvU,IACAA,EAAA7N,KAAA8f,aAAA,IACAjS,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,IACA6T,EAAA1D,KAAAmE,OAAAC,aAAAvU,IAKA,IAAAvO,EAAA0rD,WAAAtpC,EAAAmB,KAAA,KACA,GAAAsc,MAAA7/B,GACA,UAAAmG,EAAAyD,YAAA,kCAAA5J,GAEA,OAAAA,IAGA64D,EArFA,GAuFA94D,EAAA84D,kBACA94D,EAAA+4D,qDCnMAj5D,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAspG,oBAAAzlG,EAEA,IAAAuC,EAAYC,EAAQ,KAEpBijG,EAAA,SAAA2rB,GAGA,SAAA3rB,EAAA2rB,GAEAt0H,KAAAwR,GAAA8iH,EAAA,WAAAA,EADA,WAEAt0H,KAAA0R,GAAA4iH,EAAA,WAAAA,EAFA,WAiGA,OA7FA3rB,EAAA/oG,UAAA,CACAgpG,OAAA,SAAAp7F,GACA,IAAA8X,OAAA,EACAtjB,OAAA,EACA,MAAAyD,EAAA+P,UAAAhI,GAAA,CACA8X,EAAA,IAAAvf,WAAA,EAAAyH,EAAAxL,QACAA,EAAA,EACA,QAAAH,EAAA,EAAAC,EAAA0L,EAAAxL,OAA0CH,EAAAC,EAAQD,IAAA,CAClD,IAAA+H,EAAA4D,EAAAiI,WAAA5T,GACA+H,GAAA,IACA0b,EAAAtjB,KAAA4H,GAEA0b,EAAAtjB,KAAA4H,IAAA,EACA0b,EAAAtjB,KAAA,IAAA4H,QAGO,QAAAnE,EAAA2iE,eAAA56D,GAIP,UAAAyP,MAAA,gFAFAjb,GADAsjB,EAAA9X,GACA5F,WAeA,IAXA,IAAA2sH,EAAAvyH,GAAA,EACAwyH,EAAAxyH,EAAA,EAAAuyH,EACAE,EAAA,IAAApyF,YAAA/c,EAAApe,OAAA,EAAAqtH,GACA7wE,EAAA,EACAgxE,EAAA,EACAljH,EAAAxR,KAAAwR,GACAE,EAAA1R,KAAA0R,GACAijH,EAAA,WACAC,EAAA,UAGAliG,EAAA,EAAsBA,EAAA6hG,EAAkB7hG,IACxC,EAAAA,EAOAlhB,EAAA,GADAA,GADAA,GADAkyC,GADAA,GADAA,GADAA,EAAA+wE,EAAA/hG,IACAiiG,EA3CA,WAsCAA,MAKAjxE,EA1CA,QA2CA,GAAAA,IAAA,IACAkxE,EA7CA,WAuCAA,MAMAlxE,EA5CA,QA8CA,GAAAlyC,IAAA,IACA,WAQAE,EAAA,GADAA,GADAA,GADAgjH,GADAA,GADAA,GADAA,EAAAD,EAAA/hG,IACAiiG,EAnDA,WAsCAA,MAaAD,EAlDA,QAmDA,GAAAA,IAAA,IACAE,EArDA,WAuCAA,MAcAF,EApDA,QAsDA,GAAAhjH,IAAA,IACA,WAIA,OADAgyC,EAAA,EACA8wE,GACA,OACA9wE,GAAAp+B,EAAA,EAAAivG,EAAA,OACA,OACA7wE,GAAAp+B,EAAA,EAAAivG,EAAA,MACA,OAIA7wE,GADAA,GADAA,GADAA,GAAAp+B,EAAA,EAAAivG,IACAI,EAnEA,WAsCAA,MA6BAjxE,EAlEA,QAmEA,GAAAA,IAAA,IACAkxE,EArEA,WAuCAA,MA8BAlxE,EApEA,MAqEA,EAAA6wE,EACA/iH,GAAAkyC,EAEAhyC,GAAAgyC,EAKA,OAFA1jD,KAAAwR,KACAxR,KAAA0R,KACA1R,MAEAgpG,UAAA,WACA,IAAAx3F,EAAAxR,KAAAwR,GACAE,EAAA1R,KAAA0R,GAEAF,EAAA,YADAA,GAAAE,IAAA,GAnFA,WAoFA,MAAAF,EAnFA,MAsFAA,EAAA,WADAA,IADAE,EAAA,WAAAA,EArFA,YAqFA,YAAAA,GAAA,GAAAF,IAAA,IArFA,cAqFA,MACA,GAtFA,WAuFA,MAAAA,EAtFA,MAyFA,QAAA3P,EAAA,EAAAuwB,EAAA,CADA5gB,IADAE,EAAA,WAAAA,EAxFA,YAwFA,YAAAA,GAAA,GAAAF,IAAA,IAxFA,cAwFA,MACA,EACAE,GAAAnO,EAAA,GAA+C1B,EAAAuwB,EAAApwB,OAAgBH,IAAA,CAE/D,IADA,IAAAwoE,GAAAj4C,EAAAvwB,KAAA,GAAAyB,SAAA,IACA+mE,EAAAroE,OAAA,GACAqoE,EAAA,IAAAA,EAEA9mE,GAAA8mE,EAEA,OAAA9mE,IAGAolG,EArGA,GAuGAtpG,EAAAspG,mDC9GAxpG,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA+2F,cAAAlzF,EAEA,IAAAivB,EAAA,WAA4a,gBAAAC,EAAAvwB,GAA2B,GAAAF,MAAAC,QAAAwwB,GAA0B,OAAAA,EAAc,GAAA5yB,OAAAC,YAAAN,OAAAizB,GAA2C,OAAxf,SAAAA,EAAAvwB,GAAiC,IAAAwwB,EAAA,GAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAtvB,EAAoB,IAAM,QAAAuvB,EAAAC,EAAAN,EAAA5yB,OAAAC,cAA0C6yB,GAAAG,EAAAC,EAAAC,QAAAhQ,QAA4C0P,EAAArU,KAAAyU,EAAAnzB,QAAqBuC,GAAAwwB,EAAArwB,SAAAH,GAAlCywB,GAAA,IAAyE,MAAAV,GAAcW,GAAA,EAAWC,EAAAZ,EAAY,QAAU,KAAMU,GAAAI,EAAA,QAAAA,EAAA,SAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAA6HO,CAAAR,EAAAvwB,GAAuC,UAAAgxB,UAAA,yDAAjkB,GAEAptB,EAAYC,EAAQ,KAEpBC,EAAkBD,EAAQ,KAE1ButB,EAAkBvtB,EAAQ,KAE1B+W,EAAc/W,EAAQ,KAEtBkX,EAAmBlX,EAAQ,KAE3B8gF,EAAW9gF,EAAQ,KAEnB0wF,EAAA,WACA,SAAAy+B,EAAAjhC,EAAAiD,GACA,OAAAA,KAAAlD,UAAAC,GACAiD,EAAAtiF,OAAAq/E,GAAA1yB,MAAA,SAAA3C,GAEA,OADA,EAAA94D,EAAA4O,MAAA,uDAAAkqD,KAAAn5B,UACAwuD,IAGApyF,QAAAC,QAAAmyF,GAEA,SAAAkhC,EAAAx1H,EAAAy1H,EAAAC,EAAAl+G,GAEA,OADAxX,EAAAy1H,EAAAz1H,EAAA01H,GACA,IAAA11H,EAAAwX,IAAAxX,EAEA,SAAA21H,EAAAtlH,EAAAkB,EAAAU,EAAAC,EAAAC,EAAAC,GACA,IAIA7P,EACA6K,EACAiF,EAEAC,EARA5P,EAAAyP,EAAAC,EACA3B,EAAAc,GAAA,MAAA9K,WAAA/D,GAAA6O,GAAA,OAAArC,YAAAxM,GAAA,IAAAqgC,YAAArgC,GACA6P,EAAAN,EAAAE,EACAK,EAAAN,EAAAE,EAIAK,EAAA,EAEAC,EAAA,IAAAxD,YAAAiD,GACAQ,EAAAV,EACA,IAAA1P,EAAA,EAAeA,EAAA4P,EAAQ5P,IACvBmQ,EAAAnQ,GAAAwN,KAAA6C,MAAArQ,EAAAgQ,GAEA,IAAAhQ,EAAA,EAAeA,EAAA6P,EAAQ7P,IAEvB,IADA8P,EAAAtC,KAAA6C,MAAArQ,EAAAiQ,GAAAG,EACAvF,EAAA,EAAiBA,EAAA+E,EAAQ/E,IACzBkF,EAAAD,EAAAK,EAAAtF,GACAqD,EAAAgC,KAAApC,EAAAiC,GAGA,OAAA7B,EAEA,SAAAqmF,EAAA99D,GACA,IAAA33B,EAAA23B,EAAA33B,KACA4R,EAAA+lB,EAAA/lB,IACAqhF,EAAAt7D,EAAAs7D,MACAshC,EAAA58F,EAAAy9D,SACAA,OAAA7yF,IAAAgyH,KACAC,EAAA78F,EAAA28D,MACAA,OAAA/xF,IAAAiyH,EAAA,KAAAA,EACAC,EAAA98F,EAAAg/C,KACAA,OAAAp0E,IAAAkyH,EAAA,KAAAA,EACAC,EAAA/8F,EAAAg9F,OACAA,OAAApyH,IAAAmyH,KACA7iH,EAAA8lB,EAAA9lB,mBAEAxS,KAAA4zF,QACA,IAAA7wF,EAAA6wF,EAAA7wF,KACA,GAAAA,EAAAP,IAAA,WACA,IAAA4c,EAAArc,EAAA5C,IAAA,UAAAJ,KACA,iBAAAqf,EAAA,CACA,IAAAqnE,EAAA,IAAAD,EAAAxhD,SACAyhD,EAAAnyC,qBAAAs/C,EAAAtrF,QACAsrF,EAAAtrF,OAAAvB,QACA6sF,EAAA7uE,iBAAA0hE,EAAA1hE,iBACA6uE,EAAA1iF,SAAAu1E,EAAAv6C,oBACO,gBAAA9sB,IACPw0E,EAAA7uE,iBAAA,EACA6uE,EAAA1iF,SAAA,GAKA,GAFAlR,KAAA0Q,MAAA3N,EAAA5C,IAAA,aACAH,KAAA2Q,OAAA5N,EAAA5C,IAAA,cACAH,KAAA0Q,MAAA,GAAA1Q,KAAA2Q,OAAA,EACA,UAAAlL,EAAAyD,YAAA,wBAAAlJ,KAAA0Q,MAAA,eAAA1Q,KAAA2Q,QAEA3Q,KAAAk2D,YAAAnzD,EAAA5C,IAAA,uBACAH,KAAA4oB,UAAA7lB,EAAA5C,IAAA,sBACAH,KAAAu1H,MAAAxyH,EAAA5C,IAAA,aACA,IAAA4kB,EAAA6uE,EAAA7uE,iBACA,IAAAA,KACAA,EAAAhiB,EAAA5C,IAAA,2BACA,CACA,IAAAH,KAAA4oB,UAGA,UAAAnjB,EAAAyD,YAAA,wCAAAlJ,KAAA4oB,WAFA7D,EAAA,EAOA,GADA/kB,KAAA6Q,IAAAkU,GACA/kB,KAAA4oB,UAAA,CACA,IAAAkrE,EAAA/wF,EAAA5C,IAAA,mBACA,IAAA2zF,EAEA,QADA,EAAAruF,EAAAgR,MAAA,kDACAm9E,EAAA1iF,UACA,OACA4iF,EAAAnuF,EAAA7F,KAAAK,IAAA,cACA,MACA,OACA2zF,EAAAnuF,EAAA7F,KAAAK,IAAA,aACA,MACA,OACA2zF,EAAAnuF,EAAA7F,KAAAK,IAAA,cACA,MACA,QACA,UAAA8c,MAAA,mBAAAjd,KAAAkR,SAAA,oCAGA,IAAAu1D,EAAAsvB,EAAAxjF,EAAA,KACAvS,KAAA8zF,WAAA7gE,EAAAzjB,WAAA6C,MAAAyhF,EAAAnzF,EAAA8lE,EAAAj0D,GACAxS,KAAAkR,SAAAlR,KAAA8zF,WAAA5iF,SAIA,GAFAlR,KAAAuU,OAAAxR,EAAArB,SAAA,cACA1B,KAAAw1H,aAAA,EACAx1H,KAAAuU,SAAAvU,KAAA8zF,aAAA9zF,KAAA8zF,WAAAx/E,gBAAAtU,KAAAuU,SAAA+gH,IAAAriG,EAAAzjB,WAAA8E,gBAAAtU,KAAAuU,OAAA,KACAvU,KAAAw1H,aAAA,EACA,IAAA1+G,GAAA,GAAAiO,GAAA,EACA/kB,KAAAy1H,mBAAA,GACAz1H,KAAA01H,cAAA,GACA,QAAA7zH,EAAA,EAAA6K,EAAA,EAA4B7K,EAAA7B,KAAAuU,OAAAvS,OAAwBH,GAAA,IAAA6K,EAAA,CACpD,IAAAorD,EAAA93D,KAAAuU,OAAA1S,GACAk2D,EAAA/3D,KAAAuU,OAAA1S,EAAA,GACA7B,KAAAy1H,mBAAA/oH,GAAAqrD,EAAAD,EACA93D,KAAA01H,cAAAhpH,GAAAoK,EAAAghD,GAGA,GAAAm9B,EACAj1F,KAAAi1F,MAAA,IAAAmB,EAAA,CACAz1F,OACA4R,MACAqhF,MAAAqB,EACAc,WACAvjF,4BAEK,GAAA8kE,EAAA,CACL,MAAA3xE,EAAAhB,UAAA2yE,GACAA,EAAAv0E,KACA5C,IAAA,kBAIAH,KAAAs3E,KAAA,IAAA8e,EAAA,CACAz1F,OACA4R,MACAqhF,MAAAtc,EACAye,WACAu/B,QAAA,EACA9iH,wBARA,EAAA/M,EAAA4O,MAAA,oDAYArU,KAAAs3E,QAkYA,OA9XA8e,EAAAQ,WAAA,SAAAr+D,GACAA,EAAAomC,QAAA,IAWAg3D,EACAC,EAXAj1H,EAAA43B,EAAA53B,KACA4R,EAAAgmB,EAAAhmB,IACAqhF,EAAAr7D,EAAAq7D,MACAiiC,EAAAt9F,EAAAw9D,SACAA,OAAA7yF,IAAA2yH,KACAC,EAAAv9F,EAAAs+D,cACAA,OAAA3zF,IAAA4yH,EAAA,KAAAA,EACAtjH,EAAA+lB,EAAA/lB,mBAEAujH,EAAAlB,EAAAjhC,EAAAiD,GAGA5B,EAAArB,EAAA7wF,KAAA5C,IAAA,SACAm3E,EAAAsc,EAAA7wF,KAAA5C,IAAA,QAmBA,OAlBA80F,GACA0gC,EAAAd,EAAA5/B,EAAA4B,GACA++B,EAAAp0H,QAAAC,QAAA,QAEAk0H,EAAAn0H,QAAAC,QAAA,MACA61E,GACA,EAAA3xE,EAAAhB,UAAA2yE,GACAs+C,EAAAf,EAAAv9C,EAAAuf,GACSl1F,MAAAC,QAAA01E,GACTs+C,EAAAp0H,QAAAC,QAAA61E,KAEA,EAAA7xE,EAAA4O,MAAA,4BACAuhH,EAAAp0H,QAAAC,QAAA,OAGAm0H,EAAAp0H,QAAAC,QAAA,OAGAD,QAAAw2B,IAAA,CAAA+9F,EAAAJ,EAAAC,IAAA/lG,KAAA,SAAAwlC,GACA,IAAAK,EAAAvjC,EAAAkjC,EAAA,GACA2gE,EAAAtgE,EAAA,GACAugE,EAAAvgE,EAAA,GACAwgE,EAAAxgE,EAAA,GAEA,WAAA0gC,EAAA,CACAz1F,OACA4R,MACAqhF,MAAAoiC,EACAjgC,WACAd,MAAAghC,EACA3+C,KAAA4+C,EACA1jH,0BAIA4jF,EAAAC,WAAA,SAAA1gC,GACA,IASArwC,EAAAzjB,EATAs0F,EAAAxgC,EAAAwgC,SACAzlF,EAAAilD,EAAAjlD,MACAC,EAAAglD,EAAAhlD,OACA2lF,EAAA3gC,EAAA2gC,wBACAC,EAAA5gC,EAAA4gC,cAEA4/B,GAAAzlH,EAAA,MAAAC,EACAq0G,EAAA7uB,EAAAvuF,WAGA,IAAA0uF,GAAAC,KAFA4/B,IAAAnR,GAIK,GAAAzuB,EAML,KAFAjxE,EAAA,IAAAvf,WAAAowH,IACA5zH,IAAA4zF,GACAt0F,EAAAmjH,EAA4BnjH,EAAAs0H,EAAoBt0H,IAChDyjB,EAAAzjB,GAAA,SANAyjB,EAAA,IAAAvf,WAAAi/G,IACAziH,IAAA4zF,QAHA7wE,EAAA6wE,EAWA,GAAAI,EACA,IAAA10F,EAAA,EAAiBA,EAAAmjH,EAAkBnjH,IACnCyjB,EAAAzjB,IAAA,IAGA,OACAyjB,OACA5U,QACAC,WAGAylF,EAAAx2F,UAAA,CACA4lB,gBACA,OAAAnW,KAAAyH,IAAA9W,KAAA0Q,MAAA1Q,KAAAi1F,OAAAj1F,KAAAi1F,MAAAvkF,OAAA,EAAA1Q,KAAAs3E,MAAAt3E,KAAAs3E,KAAA5mE,OAAA,IAEA+U,iBACA,OAAApW,KAAAyH,IAAA9W,KAAA2Q,OAAA3Q,KAAAi1F,OAAAj1F,KAAAi1F,MAAAtkF,QAAA,EAAA3Q,KAAAs3E,MAAAt3E,KAAAs3E,KAAA3mE,QAAA,IAEAylH,aAAA,SAAAlvH,GACA,IAKArF,EAAAC,EALA+O,EAAA7Q,KAAA6Q,IACAK,EAAAlR,KAAAkR,SACAwkH,EAAA11H,KAAA01H,cACAD,EAAAz1H,KAAAy1H,mBACA3+G,GAAA,GAAAjG,GAAA,EAEA,OAAAA,EAAA,CAMA,IAAAqT,EAAA,EACA,IAAAriB,EAAA,EAAAC,EAAA9B,KAAA0Q,MAAA1Q,KAAA2Q,OAAgD9O,EAAAC,EAAQD,IACxD,QAAA6K,EAAA,EAAuBA,EAAAwE,EAAcxE,IACrCxF,EAAAgd,GAAA4wG,EAAA5tH,EAAAgd,GAAAwxG,EAAAhpH,GAAA+oH,EAAA/oH,GAAAoK,GACAoN,SATA,IAAAriB,EAAA,EAAAC,EAAAoF,EAAAlF,OAAuCH,EAAAC,EAAQD,IAC/CqF,EAAArF,KAAAqF,EAAArF,IAYAw0H,cAAA,SAAAnvH,GACA,IAAA2J,EAAA7Q,KAAA6Q,IACA,OAAAA,EACA,OAAA3J,EAEA,IASApF,EACAw0H,EAVA5lH,EAAA1Q,KAAA0Q,MACAC,EAAA3Q,KAAA2Q,OACAO,EAAAlR,KAAAkR,SACAlP,EAAA0O,EAAAC,EAAAO,EACAqlH,EAAA,EACA55E,EAAA9rC,GAAA,MAAA9K,WAAA/D,GAAA6O,GAAA,OAAArC,YAAAxM,GAAA,IAAAqgC,YAAArgC,GACAw0H,EAAA9lH,EAAAQ,EACA4F,GAAA,GAAAjG,GAAA,EACAhP,EAAA,EAGA,OAAAgP,EAEA,IADA,IAAAymE,EAAAm/C,EAAAC,EACAhqH,EAAA,EAAuBA,EAAAiE,EAAYjE,IAAA,CAGnC,IAFA+pH,EAAA50H,IAAA,EAAA20H,GACAE,EAAA70H,EAAA20H,EACA30H,EAAA40H,GACAH,EAAApvH,EAAAqvH,KACA55E,EAAA96C,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,GAAAy0H,GAAA,IACA35E,EAAA96C,EAAA,KAAAy0H,EACAz0H,GAAA,EAEA,GAAAA,EAAA60H,EAGA,IAFAJ,EAAApvH,EAAAqvH,KACAj/C,EAAA,IACAz1E,EAAA60H,GACA/5E,EAAA96C,SAAAy0H,EAAAh/C,GACAA,IAAA,MAIO,CACP,IAAAhuE,EAAA,EAEA,IADAgtH,EAAA,EACAz0H,EAAA,EAAAC,EAAAE,EAAgCH,EAAAC,IAAQD,EAAA,CAKxC,IAJAA,EAAA20H,GAAA,IACAF,EAAA,EACAhtH,EAAA,GAEAA,EAAAuH,GACAylH,KAAA,EAAApvH,EAAAqvH,KACAjtH,GAAA,EAEA,IAAAqtH,EAAArtH,EAAAuH,EACAvR,EAAAg3H,GAAAK,EACAh6E,EAAA96C,GAAAvC,EAAA,IAAAA,EAAAwX,IAAAxX,EACAg3H,IAAA,GAAAK,GAAA,EACArtH,EAAAqtH,GAGA,OAAAh6E,GAEAi6E,YAAA,SAAAC,EAAAnmH,EAAAC,EAAAC,EAAAgjF,GACA,IAEAkjC,EAAAC,EAAAC,EAAAn1H,EAAAC,EAAA4K,EAFAuoF,EAAAj1F,KAAAi1F,MACA3d,EAAAt3E,KAAAs3E,KAEA,GAAA2d,EACA8hC,EAAA9hC,EAAAvkF,MACAsmH,EAAA/hC,EAAAtkF,OACAmmH,EAAA,IAAA/wH,WAAAgxH,EAAAC,GACA/hC,EAAAgiC,eAAAH,GACAC,IAAArmH,GAAAsmH,IAAArmH,IACAmmH,EAAA7B,EAAA6B,EAAA7hC,EAAApkF,IAAAkmH,EAAAC,EAAAtmH,EAAAC,SAEO,GAAA2mE,EACP,GAAAA,aAAA8e,EAAA,CAMA,IALA2gC,EAAAz/C,EAAA5mE,MACAsmH,EAAA1/C,EAAA3mE,OACAmmH,EAAA,IAAA/wH,WAAAgxH,EAAAC,GACA1/C,EAAApmE,SAAA,EACAomE,EAAA2/C,eAAAH,GACAj1H,EAAA,EAAAC,EAAAi1H,EAAAC,EAAmCn1H,EAAAC,IAAQD,EAC3Ci1H,EAAAj1H,GAAA,IAAAi1H,EAAAj1H,GAEAk1H,IAAArmH,GAAAsmH,IAAArmH,IACAmmH,EAAA7B,EAAA6B,EAAAx/C,EAAAzmE,IAAAkmH,EAAAC,EAAAtmH,EAAAC,QAES,KAAAhP,MAAAC,QAAA01E,GAiBT,UAAA7xE,EAAAyD,YAAA,wBAhBA4tH,EAAA,IAAA/wH,WAAA2K,EAAAC,GACA,IAAAO,EAAAlR,KAAAkR,SACA,IAAArP,EAAA,EAAAC,EAAA4O,EAAAC,EAA0C9O,EAAAC,IAAQD,EAAA,CAClD,IAAAq1H,EAAA,EACAC,EAAAt1H,EAAAqP,EACA,IAAAxE,EAAA,EAAuBA,EAAAwE,IAAcxE,EAAA,CACrC,IAAA6L,EAAAq7E,EAAAujC,EAAAzqH,GACA0qH,EAAA,EAAA1qH,EACA,GAAA6L,EAAA++D,EAAA8/C,IAAA7+G,EAAA++D,EAAA8/C,EAAA,IACAF,EAAA,IACA,OAGAJ,EAAAj1H,GAAAq1H,GAMA,GAAAJ,EACA,IAAAj1H,EAAA,EAAA6K,EAAA,EAAA5K,EAAA4O,EAAAE,EAAqD/O,EAAAC,IAAQD,EAAA6K,GAAA,EAC7DmqH,EAAAnqH,GAAAoqH,EAAAj1H,QAGA,IAAAA,EAAA,EAAA6K,EAAA,EAAA5K,EAAA4O,EAAAE,EAAqD/O,EAAAC,IAAQD,EAAA6K,GAAA,EAC7DmqH,EAAAnqH,GAAA,KAIA2qH,aAAA,SAAAnwH,EAAAwJ,EAAAC,GACA,IAAA4kH,EAAAv1H,KAAAi1F,OAAAj1F,KAAAi1F,MAAAsgC,MACA,GAAAA,EASA,IANA,IAKA3/G,EAAAC,EAAAtM,EALA+tH,EAAAt3H,KAAA8zF,WAAApkF,OAAA6lH,EAAA,GACAgC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAt1H,EAAA0O,EAAAC,EAAA,EAEA9O,EAAA,EAAqBA,EAAAG,EAAYH,GAAA,GACjC,IAAA04C,EAAArzC,EAAArF,EAAA,GACA,OAAA04C,EAAA,CAMA,IAAAlvC,EAAA,IAAAkvC,EACA3kC,GAAA1O,EAAArF,GAAA01H,GAAAlsH,EAAAksH,EACA1hH,GAAA3O,EAAArF,EAAA,GAAA21H,GAAAnsH,EAAAmsH,EACAjuH,GAAArC,EAAArF,EAAA,GAAA41H,GAAApsH,EAAAosH,EACAvwH,EAAArF,GAAA+T,GAAA,IAAAA,GAAA,UAAAA,EACA1O,EAAArF,EAAA,GAAAgU,GAAA,IAAAA,GAAA,UAAAA,EACA3O,EAAArF,EAAA,GAAA0H,GAAA,IAAAA,GAAA,UAAAA,OAXArC,EAAArF,GAAA,IACAqF,EAAArF,EAAA,OACAqF,EAAArF,EAAA,SAYA40F,gBAAA,WACA,IAaAN,EAbAuhC,EAAA1jH,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,IAAAA,UAAA,GAEAwR,EAAAxlB,KAAAwlB,UACAC,EAAAzlB,KAAAylB,WACAsC,EAAA,CACArX,MAAA8U,EACA7U,OAAA8U,GAEAvU,EAAAlR,KAAAkR,SACAV,EAAAxQ,KAAA0Q,MACAD,EAAAzQ,KAAA2Q,OACAE,EAAA7Q,KAAA6Q,IACA9E,EAAAyE,EAAAU,EAAAL,EAAA,KAEA,IAAA6mH,EAAA,CACA,IAAApvG,EAMA,GALA,eAAAtoB,KAAA8zF,WAAA/zF,MAAA,IAAA8Q,EACAyX,EAAA7iB,EAAA8iB,UAAAovG,eACS,cAAA33H,KAAA8zF,WAAA/zF,MAAA,IAAA8Q,GAAA7Q,KAAAw1H,cACTltG,EAAA7iB,EAAA8iB,UAAAqvG,WAEAtvG,IAAAtoB,KAAAi1F,QAAAj1F,KAAAs3E,MAAA9xD,IAAAhV,GAAAiV,IAAAhV,EAAA,CAGA,GAFAsX,EAAAO,OACA6tE,EAAAn2F,KAAA63H,cAAApnH,EAAA1E,GACA/L,KAAA4zF,iBAAAn3E,EAAApX,aACA0iB,EAAAzC,KAAA6wE,MACW,CACX,IAAA2hC,EAAA,IAAA/xH,WAAAowF,EAAAn0F,QACA81H,EAAAv1H,IAAA4zF,GACApuE,EAAAzC,KAAAwyG,EAEA,GAAA93H,KAAAw1H,YAAA,EACA,EAAA/vH,EAAAgZ,QAAA6J,IAAA7iB,EAAA8iB,UAAAovG,gBAEA,IADA,IAAAzwH,EAAA6gB,EAAAzC,KACAzjB,EAAA,EAAAC,EAAAoF,EAAAlF,OAA+CH,EAAAC,EAAQD,IACvDqF,EAAArF,IAAA,IAGA,OAAAkmB,EAEA,GAAA/nB,KAAA4zF,iBAAAh3E,EAAAkE,aAAA9gB,KAAAi1F,QAAAj1F,KAAAs3E,KAAA,CACA,IAAAygD,EAAAtnH,EAAA1E,EACA,OAAA/L,KAAA8zF,WAAA/zF,MACA,iBACAg4H,GAAA,EACA,gBACA,iBAGA,OAFAhwG,EAAAO,KAAA7iB,EAAA8iB,UAAAqvG,UACA7vG,EAAAzC,KAAAtlB,KAAA63H,cAAAE,EAAAvyG,EAAAC,GAAA,GACAsC,IAKA,IAEA5X,EAAA6nH,EAFApnH,EAAA,GADAulF,EAAAn2F,KAAA63H,cAAApnH,EAAA1E,IACA/J,OAAA+J,EAAA0Z,EAAAhV,EACAK,EAAA9Q,KAAAq2H,cAAAlgC,GAqBA,OAnBAuhC,GAAA13H,KAAAi1F,OAAAj1F,KAAAs3E,MAMAvvD,EAAAO,KAAA7iB,EAAA8iB,UAAAC,WACAT,EAAAzC,KAAA,IAAAvf,WAAAyf,EAAAC,EAAA,GACAtV,EAAA,EACA6nH,GAAA,EACAh4H,KAAA42H,YAAA7uG,EAAAzC,KAAAE,EAAAC,EAAA7U,EAAAE,KATAiX,EAAAO,KAAA7iB,EAAA8iB,UAAAqvG,UACA7vG,EAAAzC,KAAA,IAAAvf,WAAAyf,EAAAC,EAAA,GACAtV,EAAA,EACA6nH,GAAA,GAQAh4H,KAAAw1H,aACAx1H,KAAAo2H,aAAAtlH,GAEA9Q,KAAA8zF,WAAAvjF,QAAAwX,EAAAzC,KAAA9U,EAAAC,EAAA+U,EAAAC,EAAA7U,EAAAC,EAAAC,EAAAX,GACA6nH,GACAh4H,KAAAq3H,aAAAtvG,EAAAzC,KAAAE,EAAA5U,GAEAmX,GAEAkvG,eAAA,SAAA/vH,GACA,IAAAgK,EAAAlR,KAAAkR,SACA,OAAAA,EACA,UAAAzL,EAAAyD,YAAA,0CAAAgI,GAEA,IAMArP,EAAAG,EANA0O,EAAA1Q,KAAA0Q,MACAC,EAAA3Q,KAAA2Q,OACAE,EAAA7Q,KAAA6Q,IACA9E,EAAA2E,EAAAQ,EAAAL,EAAA,KACAslF,EAAAn2F,KAAA63H,cAAAlnH,EAAA5E,GACA+E,EAAA9Q,KAAAq2H,cAAAlgC,GAEA,OAAAtlF,EAAA,CAaA7Q,KAAAw1H,aACAx1H,KAAAo2H,aAAAtlH,GAEA9O,EAAA0O,EAAAC,EACA,IAAAqE,EAAA,SAAAnE,GAAA,GACA,IAAAhP,EAAA,EAAiBA,EAAAG,IAAYH,EAC7BqF,EAAArF,GAAAmT,EAAAlE,EAAAjP,GAAA,OAjBA,GADAG,EAAA0O,EAAAC,EACA3Q,KAAAw1H,YACA,IAAA3zH,EAAA,EAAqBA,EAAAG,IAAYH,EACjCqF,EAAArF,GAAAiP,EAAAjP,GAAA,WAGA,IAAAA,EAAA,EAAqBA,EAAAG,IAAYH,EACjCqF,EAAArF,GAAA,KAAAiP,EAAAjP,IAcAg2H,cAAA,SAAA71H,EAAAwjB,EAAAC,GACA,IAAAX,EAAA9Q,UAAAhS,OAAA,QAAAkB,IAAA8Q,UAAA,IAAAA,UAAA,GAMA,OAJAhU,KAAA4zF,MAAA7sF,QACA/G,KAAA4zF,MAAApuE,aAAAxlB,KAAA0Q,MACA1Q,KAAA4zF,MAAAnuE,cAAAzlB,KAAA2Q,OACA3Q,KAAA4zF,MAAA9uE,aACA9kB,KAAA4zF,MAAAhvF,SAAA5C,KAGAo0F,EAthBA,GAwhBA/2F,EAAA+2F","file":"15-e5301d94c8ac04d5452e.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR);\n  };\n  ColorSpace.fromIR = function (IR) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFn = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFn];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nfunction toNumberArray(arr) {\n  if (!Array.isArray(arr)) {\n    return null;\n  }\n  var length = arr.length;\n  for (var i = 0; i < length; i++) {\n    if (typeof arr[i] !== 'number') {\n      var result = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        result[_i] = +arr[_i];\n      }\n      return result;\n    }\n  }\n  return arr;\n}\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = toNumberArray(dict.getArray('Size'));\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = toNumberArray(dict.getArray('Encode'));\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push([0, size[i] - 1]);\n        }\n      } else {\n        encode = toMultiArray(encode);\n      }\n      var decode = toNumberArray(dict.getArray('Decode'));\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = toNumberArray(dict.getArray('C0')) || [0];\n      var c1 = toNumberArray(dict.getArray('C1')) || [1];\n      var n = dict.get('N');\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = toNumberArray(dict.getArray('Bounds'));\n      var encode = toNumberArray(dict.getArray('Encode'));\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fns = IR[4];\n      var tmpBuf = new Float32Array(1);\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.550';\nvar pdfjsBuild = '76337fdc';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _message_handler = require('../shared/message_handler');\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.550';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _message_handler.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (boundException) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', boundException);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _message_handler.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar EOIMarkerError = function EOIMarkerErrorClosure() {\n  function EOIMarkerError(message) {\n    this.message = message;\n  }\n  EOIMarkerError.prototype = new Error();\n  EOIMarkerError.prototype.name = 'EOIMarkerError';\n  EOIMarkerError.constructor = EOIMarkerError;\n  return EOIMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          } else if (nextByte === 0xD9) {\n            throw new EOIMarkerError('Found EOI marker (0xFFD9) while parsing scan data');\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      markerLoop: while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)(ex.message + ' -- attempting to re-parse the JPEG image.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              } else if (ex instanceof EOIMarkerError) {\n                (0, _util.warn)(ex.message + ' -- ignoring the rest of the image data.');\n                break markerLoop;\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;"],"sourceRoot":""}