{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js","webpack:///./src/components/lazyImage.js","webpack:///./src/components/menuPreviewItem.js","webpack:///./src/pages/experiences.js","webpack:///./src/utils/typography.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["CardDescription","props","children","className","content","textAlign","classes","classnames_default","Object","classNameBuilders","d","rest","getUnhandledProps","a","ElementType","getElementType","react_default","createElement","extends_default","lib","isNil","handledProps","propTypes","Card_CardDescription","A","CardHeader","Card_CardHeader","S","CardMeta","Card_CardMeta","D","CardContent","description","extra","header","meta","factories","val","autoGenerateKey","Card_CardContent","M","I","n","U","CardGroup","centered","doubling","items","itemsPerRow","stackable","g","itemsJSX","map_default","item","key","join","Card_Card","Card_CardGroup","Q","_Component","Card","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","e","onClick","inherits_default","createClass_default","value","_this$props","color","fluid","href","image","link","raised","handleClick","Image","create","react","Component","lazyImage_LazyImage","state","show","t","showImage","setState","r","prototype","render","size","Dimmer","Dimmable","blurring","dimmed","active","Loader","assign","onLoad","menuPreviewItem_CodeCard","hover","setHover","bool","_this2","_ref","_temp","PageLink","Type","ButtonTitle","ImgSrc","style","width","onMouseEnter","onMouseLeave","Button","inverted","gatsby_browser_entry","navigate","dispatchPostState","height","padding","objectFit","src","__webpack_exports__","es","b","dispatch","dispatchPageState","type","redux_actions","c","page","default","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","StaticQuery","query","data","allMarkdownRemark","edges","map","node","title","lodash_get__WEBPACK_IMPORTED_MODULE_4___default","fields","slug","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","Column","mobile","tablet","computer","_components_menuPreviewItem__WEBPACK_IMPORTED_MODULE_9__","frontmatter","linkImage","publicURL","_utils_pageType__WEBPACK_IMPORTED_MODULE_6__","experiences","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","margin","_public_static_d_1085314448_json__WEBPACK_IMPORTED_MODULE_1__","typography__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lawton__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lawton__WEBPACK_IMPORTED_MODULE_1___default","typography","rhythm","scale","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","disabled","indeterminate","inline","m","51","graphql","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","withPrefix","push","replace","navigateTo","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","Error","object","string","isRequired","func","module","exports","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","getResourcesForPathname","pathname","shape","l"],"mappings":"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","file":"component---src-pages-experiences-js-151b09fa27da399ffd4a.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Visibility, Image, Loader, Dimmer, Button } from 'semantic-ui-react';\n\nexport default class LazyImage extends React.Component {\n  state = {\n    show: false,\n  };\n\n  showImage = () => {\n    this.setState({\n      show: true,\n    });\n  };\n\n  render() {\n    const { size } = this.props;\n    return (\n      <div>\n        <Dimmer.Dimmable blurring dimmed={!this.state.show}>\n          <Dimmer active={!this.state.show}>\n            <Loader />\n          </Dimmer>\n          <Image onLoad={this.showImage} {...this.props} />\n        </Dimmer.Dimmable>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, Dimmer, Button } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { navigate } from \"gatsby\"\nimport { updatePostState, updatePageState } from '../redux-actions'\nimport PageType from '../utils/pageType'\nimport LazyImage from './lazyImage'\n\nclass CodeCard extends Component {\n  state = {\n    hover: false,\n  }\n\n  setHover = bool => this.setState({ hover: bool })\n\n  render({ Type, PageLink, ButtonTitle, ImgSrc } = this.props) {\n    return (\n      <Card style={{ width: '100%' }}>\n        <Dimmer.Dimmable\n          onMouseEnter={() => this.setHover(true)}\n          onMouseLeave={() => this.setHover(false)}\n          onClick={() => this.setHover(!this.state.hover)}\n          blurring\n          dimmed={this.state.hover}\n        >\n          <Dimmer active={this.state.hover}>\n            <Button\n              inverted\n              content={ButtonTitle}\n              onClick={() => {\n                navigate(PageLink);\n                this.props.dispatchPostState(ButtonTitle);\n                }}\n            />\n          </Dimmer>\n          <LazyImage\n            centered\n            style={{ height: '180px', padding: '20px', objectFit: 'contain' }}\n            src={ImgSrc}\n          />\n        </Dimmer.Dimmable>\n      </Card>\n    )\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return { \n    dispatchPageState: type => dispatch(updatePageState(type)),\n    dispatchPostState: page => dispatch(updatePostState(page)) \n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CodeCard) // passes dispatch to component.","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport get from 'lodash/get'\nimport { rhythm } from '../utils/typography'\nimport PageType from '../utils/pageType'\nimport { Grid, Container } from 'semantic-ui-react'\nimport PreviewItem from '../components/menuPreviewItem'\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        allMarkdownRemark(\n          filter: { frontmatter: { type: { eq: \"Experience\" } } }\n          sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n          edges {\n            node {\n              excerpt\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"DD MMMM, YYYY\")\n                title\n                linkImage {\n                  absolutePath\n                  relativePath\n                  publicURL\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const content = data.allMarkdownRemark.edges.map(({ node }) => {\n        const title = get(node, 'frontmatter.title') || node.fields.slug\n        return (\n          <Grid.Column\n            mobile={16}\n            tablet={8}\n            computer={5}\n            textAlign=\"center\"\n            key={node.fields.slug}\n          >\n            <PreviewItem\n              ButtonTitle={title}\n              ImgSrc={node.frontmatter.linkImage.publicURL}\n              PageLink={node.fields.slug}\n              type={PageType['experiences']}\n            />\n          </Grid.Column>\n        )\n      })\n\n      return (\n        <Container style={{ margin: '20px 0' }}>\n          <Grid centered>{content}</Grid>\n        </Container>\n      )\n    }}\n  />\n)\n","import Typography from 'typography';\nimport lawtonTheme from 'typography-theme-lawton';\n\nconst typography = new Typography(lawtonTheme);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles()\n  }\n\nexport default typography;\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}