{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./node_modules/gatsby-link/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js","webpack:///./src/components/lazyImage.js","webpack:///./src/components/menuPreviewItem.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_3__","StaticQuery","query","render","data","content","allMarkdownRemark","edges","map","_ref","node","title","lodash_get__WEBPACK_IMPORTED_MODULE_4___default","fields","slug","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","Column","mobile","tablet","computer","textAlign","key","_components_menuPreviewItem__WEBPACK_IMPORTED_MODULE_8__","ButtonTitle","ImgSrc","frontmatter","linkImage","publicURL","PageLink","type","_utils_pageType__WEBPACK_IMPORTED_MODULE_5__","projects","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","style","margin","centered","_public_static_d_3377166164_json__WEBPACK_IMPORTED_MODULE_1__","_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","path","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","isCurrent","className","filter","Boolean","join","IOSupported","window","IntersectionObserver","location","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","_parsePath","hash","element","document","getElementById","substr","scrollIntoView","scrollTo","Component","propTypes","func","isRequired","Comp","_default","Location","_ref2","options","___navigate","console","warn","___push","___replace","r","d","graphql","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","c","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","children","Error","m","module","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","pageResources","getResourcesForPathname","shape","s","227","t","i","o","l","u","p","h","f","b","v","g","j","O","y","w","N","E","P","k","x","A","C","R","CardDescription","classes","classnames_default","Object","classNameBuilders","getUnhandledProps","ElementType","getElementType","react_default","extends_default","lib","isNil","handledProps","Card_CardDescription","S","CardHeader","Card_CardHeader","_","CardMeta","Card_CardMeta","I","CardContent","description","extra","header","meta","factories","val","autoGenerateKey","Card_CardContent","q","K","D","CardGroup","doubling","items","itemsPerRow","stackable","itemsJSX","map_default","item","Card_Card","Card_CardGroup","U","_Component","Card","_getPrototypeOf2","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","apply","concat","defineProperty_default","assertThisInitialized_default","inherits_default","createClass_default","value","color","fluid","href","image","link","raised","handleClick","Image","create","react","lazyImage_LazyImage","show","showImage","setState","size","Dimmer","Dimmable","blurring","dimmed","active","Loader","assign","onLoad","menuPreviewItem_CodeCard","hover","setHover","bool","_temp","Type","width","onMouseLeave","Button","inverted","gatsby_browser_entry","dispatchPostState","height","padding","objectFit","src","es","dispatch","dispatchPageState","redux_actions","page","source","excluded","sourceKeys","keys","indexOf","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","disabled","indeterminate","inline","458","GridColumn","floated","largeScreen","only","stretched","verticalAlign","widescreen","Grid_GridColumn","GridRow","columns","divided","reversed","Grid_GridRow","Grid","celled","container","padded","relaxed","Row"],"mappings":"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","file":"component---src-pages-projects-js-f7ba206422f51226376e.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport get from 'lodash/get'\nimport PageType from '../utils/pageType'\nimport { Grid, Container } from 'semantic-ui-react'\nimport PreviewItem from '../components/menuPreviewItem'\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        allMarkdownRemark(\n          filter: { frontmatter: { type: { eq: \"Project\" } } }\n          sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n          edges {\n            node {\n              excerpt\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"DD MMMM, YYYY\")\n                title\n                linkImage {\n                  absolutePath\n                  relativePath\n                  publicURL\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const content = data.allMarkdownRemark.edges.map(({ node }) => {\n        const title = get(node, 'frontmatter.title') || node.fields.slug\n        return (\n          <Grid.Column\n            mobile={16}\n            tablet={8}\n            computer={5}\n            textAlign=\"center\"\n            key={node.fields.slug}\n          >\n            <PreviewItem\n              ButtonTitle={title}\n              ImgSrc={node.frontmatter.linkImage.publicURL}\n              PageLink={node.fields.slug}\n              type={PageType['projects']}\n            />\n        </Grid.Column>\n        )\n      })\n\n      return (\n        <Container style={{ margin: '20px 0' }}>\n          <Grid centered>{content}</Grid>\n        </Container>\n      )\n    }}\n  />\n)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    var location = props.location;\n    _this.state = {\n      IOSupported: IOSupported,\n      location: location\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        location = _this$props.location,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"location\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Is this link pointing to a hash on the same page? If so,\n          // just scroll there.\n\n          var _parsePath = (0, _gatsby.parsePath)(prefixedTo),\n              pathname = _parsePath.pathname,\n              hash = _parsePath.hash;\n\n          if (pathname === location.pathname || !pathname) {\n            var element = hash ? document.getElementById(hash.substr(1)) : null;\n\n            if (element !== null) {\n              element.scrollIntoView();\n            } else {\n              // This is just a normal link to the current page so let's emulate default\n              // browser behavior by scrolling now to the top of the page.\n              window.scrollTo(0, 0);\n            }\n          } // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n\n          navigate(prefixedTo, {\n            state: state\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired // eslint-disable-next-line react/display-name\n\n});\n\nvar withLocation = function withLocation(Comp) {\n  return function (props) {\n    return _react.default.createElement(_router.Location, null, function (_ref2) {\n      var location = _ref2.location;\n      return _react.default.createElement(Comp, (0, _extends2.default)({\n        location: location\n      }, props));\n    });\n  };\n};\n\nvar _default = withLocation(GatsbyLink);\n\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(to, options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(to);\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(to);\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"push\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Visibility, Image, Loader, Dimmer, Button } from 'semantic-ui-react';\n\nexport default class LazyImage extends React.Component {\n  state = {\n    show: false,\n  };\n\n  showImage = () => {\n    this.setState({\n      show: true,\n    });\n  };\n\n  render() {\n    const { size } = this.props;\n    return (\n      <div>\n        <Dimmer.Dimmable blurring dimmed={!this.state.show}>\n          <Dimmer active={!this.state.show}>\n            <Loader />\n          </Dimmer>\n          <Image onLoad={this.showImage} {...this.props} />\n        </Dimmer.Dimmable>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, Dimmer, Button } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { navigate } from \"gatsby\"\nimport { updatePostState, updatePageState } from '../redux-actions'\nimport PageType from '../utils/pageType'\nimport LazyImage from './lazyImage'\n\nclass CodeCard extends Component {\n  state = {\n    hover: false,\n  }\n\n  setHover = bool => this.setState({ hover: bool })\n\n  render({ Type, PageLink, ButtonTitle, ImgSrc } = this.props) {\n    return (\n      <Card style={{ width: '100%' }}>\n        <Dimmer.Dimmable\n          onMouseEnter={() => this.setHover(true)}\n          onMouseLeave={() => this.setHover(false)}\n          onClick={() => this.setHover(!this.state.hover)}\n          blurring\n          dimmed={this.state.hover}\n        >\n          <Dimmer active={this.state.hover}>\n            <Button\n              inverted\n              content={ButtonTitle}\n              onClick={() => {\n                navigate(PageLink);\n                this.props.dispatchPostState(ButtonTitle);\n                }}\n            />\n          </Dimmer>\n          <LazyImage\n            centered\n            style={{ height: '180px', padding: '20px', objectFit: 'contain' }}\n            src={ImgSrc}\n          />\n        </Dimmer.Dimmable>\n      </Card>\n    )\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return { \n    dispatchPageState: type => dispatch(updatePageState(type)),\n    dispatchPostState: page => dispatch(updatePostState(page)) \n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CodeCard) // passes dispatch to component.","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}