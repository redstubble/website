{"version":3,"sources":["webpack:///./src/pages/resume.js","webpack:///./src/assets/resume.pdf","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["NoDecorationLink","textDecoration","color","ResumeViewer","state","numPages","pageNumber","t","onDocumentLoadSuccess","_ref","_this","setState","componentDidMount","window","reactPdf","__webpack_require__","docPdf","this","document","Document","page","Page","e","console","error","elWidth","getElementById","clientWidth","render","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","active","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","id","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","centered","style","margin","file","_assets_resume_pdf__WEBPACK_IMPORTED_MODULE_8___default","loading","onLoadSuccess","width","textAlign","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","onClick","labelPosition","icon","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","name","href","download","height","react__WEBPACK_IMPORTED_MODULE_1__","Component","__webpack_exports__","default","p","312","n","module","exports","397","398","406","407","408","437","438","439","458","c","r","i","l","d","o","s","u","m","GridColumn","props","children","className","computer","floated","largeScreen","mobile","only","stretched","tablet","verticalAlign","widescreen","classes","classnames_default","Object","classNameBuilders","f","g","rest","getUnhandledProps","ElementType","getElementType","react_default","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","b","GridRow","columns","divided","reversed","Grid_GridRow","h","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row"],"mappings":"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","file":"component---src-pages-resume-js-8fa22525fdc9c70fd081.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Grid,\n  Container,\n  Dimmer,\n  Loader,\n  Icon,\n  Button,\n} from 'semantic-ui-react'\nimport Resume from '../assets/resume.pdf'\n\nconst NoDecorationLink = {\n  textDecoration: 'none',\n  color: 'inherit',\n}\n\nclass ResumeViewer extends Component {\n  state = {\n    numPages: null,\n    pageNumber: 1,\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages })\n  }\n\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      try {\n        const reactPdf = require('react-pdf')\n        const docPdf = require('react-pdf/dist/entry.webpack')\n        this.document = docPdf.Document\n        this.page = reactPdf.Page\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    this.setState({\n      elWidth: document.getElementById('pdf-container').clientWidth,\n    })\n  }\n\n  render() {\n    const { pageNumber, numPages } = this.state\n    if (\n      typeof this.page === 'undefined' ||\n      typeof this.document === 'undefined' ||\n      !this.state.elWidth\n    ) {\n      return (\n        <Dimmer active>\n          <Loader content=\"Loading\" />\n        </Dimmer>\n      )\n    }\n\n    const Page = this.page\n    const Document = this.document\n\n    return (\n      <Container id=\"pdf-container\">\n        <Grid centered style={{ margin: '15px 0' }}>\n          <Document\n            file={Resume}\n            loading={\n              <Dimmer active>\n                <Loader content=\"Loading\" />\n              </Dimmer>\n            }\n            onLoadSuccess={this.onDocumentLoadSuccess}\n          >\n            <Page width={this.state.elWidth} pageNumber={pageNumber} />\n          </Document>\n          {pageNumber} of {numPages}\n        </Grid>\n        <p style={{textAlign: 'center'}}>\n          <Button\n            onClick={() => {\n              if (pageNumber > 1)\n                this.setState({\n                  pageNumber: pageNumber - 1,\n                })\n            }}\n            labelPosition=\"left\"\n            icon\n          >\n            Last\n            <Icon name=\"left arrow\" />\n          </Button>\n          <Button\n            onClick={() => {\n              if (pageNumber < numPages)\n                this.setState({\n                  pageNumber: pageNumber + 1,\n                })\n            }}\n            icon\n            labelPosition=\"right\"\n          >\n            Next\n            <Icon name=\"right arrow\" />\n          </Button>\n        </p>\n        <p style={{textAlign: 'center'}}>\n          <a style={NoDecorationLink} href={Resume} download=\"resume.pdf\">\n            <Button icon>\n              <Icon name=\"download\" />\n            </Button>\n          </a>\n        </p>\n        <div style={{ height: '10px' }} />\n      </Container>\n    )\n  }\n}\n\nexport default ResumeViewer\n","module.exports = __webpack_public_path__ + \"static/resume-d686034b95144ad401fe2656e4a36c3e.pdf\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}